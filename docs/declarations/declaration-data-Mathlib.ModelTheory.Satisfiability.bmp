{"name":"Mathlib.ModelTheory.Satisfiability","instances":[{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.SemanticallyEquivalent"],"name":"FirstOrder.Language.Theory.instIsReflBoundedFormulaSemanticallyEquivalent","className":"IsRefl"}],"imports":["Init","Mathlib.ModelTheory.Ultraproducts","Mathlib.ModelTheory.Bundled","Mathlib.ModelTheory.Skolem"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L681-L685","name":"Cardinal.empty_infinite_Theory_isComplete","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#Cardinal.empty_infinite_Theory_isComplete","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L677-L678","name":"Cardinal.empty_theory_categorical","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#Cardinal.empty_theory_categorical","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L656-L674","name":"Cardinal.Categorical.isComplete","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#Cardinal.Categorical.isComplete","doc":"The Łoś–Vaught Test : a criterion for categorical theories to be complete. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L651-L652","name":"Cardinal.Categorical","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#Cardinal.Categorical","doc":"A theory is `κ`-categorical if all models of size `κ` are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L626-L635","name":"FirstOrder.Language.BoundedFormula.induction_on_exists_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.induction_on_exists_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L610-L623","name":"FirstOrder.Language.BoundedFormula.induction_on_all_ex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.induction_on_all_ex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L605-L607","name":"FirstOrder.Language.BoundedFormula.semanticallyEquivalent_toPrenex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.semanticallyEquivalent_toPrenex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L592-L602","name":"FirstOrder.Language.BoundedFormula.IsQF.induction_on_inf_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.IsQF.induction_on_inf_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L581-L589","name":"FirstOrder.Language.BoundedFormula.IsQF.induction_on_sup_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.IsQF.induction_on_sup_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L572-L574","name":"FirstOrder.Language.Formula.inf_semanticallyEquivalent_not_sup_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Formula.inf_semanticallyEquivalent_not_sup_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L567-L569","name":"FirstOrder.Language.Formula.sup_semanticallyEquivalent_not_inf_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Formula.sup_semanticallyEquivalent_not_inf_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L563-L564","name":"FirstOrder.Language.Formula.imp_semanticallyEquivalent_not_sup","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Formula.imp_semanticallyEquivalent_not_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L559-L560","name":"FirstOrder.Language.Formula.semanticallyEquivalent_not_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Formula.semanticallyEquivalent_not_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L547-L550","name":"FirstOrder.Language.BoundedFormula.semanticallyEquivalent_all_liftAt","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.semanticallyEquivalent_all_liftAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L543-L544","name":"FirstOrder.Language.BoundedFormula.ex_semanticallyEquivalent_not_all_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.ex_semanticallyEquivalent_not_all_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L539-L540","name":"FirstOrder.Language.BoundedFormula.all_semanticallyEquivalent_not_ex_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.all_semanticallyEquivalent_not_ex_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L534-L536","name":"FirstOrder.Language.BoundedFormula.inf_semanticallyEquivalent_not_sup_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.inf_semanticallyEquivalent_not_sup_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L530-L531","name":"FirstOrder.Language.BoundedFormula.sup_semanticallyEquivalent_not_inf_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.sup_semanticallyEquivalent_not_inf_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L526-L527","name":"FirstOrder.Language.BoundedFormula.imp_semanticallyEquivalent_not_sup","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.imp_semanticallyEquivalent_not_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L522-L523","name":"FirstOrder.Language.BoundedFormula.semanticallyEquivalent_not_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.BoundedFormula.semanticallyEquivalent_not_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L512-L513","name":"FirstOrder.Language.completeTheory.isComplete","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.completeTheory.isComplete","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L508-L509","name":"FirstOrder.Language.completeTheory.isMaximal","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.completeTheory.isMaximal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L504-L505","name":"FirstOrder.Language.completeTheory.mem_or_not_mem","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.completeTheory.mem_or_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L500-L501","name":"FirstOrder.Language.completeTheory.isSatisfiable","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.completeTheory.isSatisfiable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L485-L490","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.imp","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L478-L482","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L471-L475","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.ex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.ex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L464-L468","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.all","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.all","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L459-L461","name":"FirstOrder.Language.Theory.semanticallyEquivalentSetoid","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.semanticallyEquivalentSetoid","doc":"Semantic equivalence forms an equivalence relation on formulas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L452-L455","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.realize_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.realize_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L446-L449","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.realize_bd_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.realize_bd_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L437-L443","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.trans","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L430-L433","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.symm","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L426-L427","name":"FirstOrder.Language.Theory.instIsReflBoundedFormulaSemanticallyEquivalent","kind":"instance","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.instIsReflBoundedFormulaSemanticallyEquivalent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L422-L423","name":"FirstOrder.Language.Theory.SemanticallyEquivalent.refl","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L417-L418","name":"FirstOrder.Language.Theory.SemanticallyEquivalent","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.SemanticallyEquivalent","doc":"Two (bounded) formulas are semantically equivalent over a theory `T` when they have the same\ninterpretation in every model of `T`. (This is also known as logical equivalence, which also has a\nproof-theoretic definition.) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L410-L411","name":"FirstOrder.Language.Theory.IsMaximal.mem_iff_models","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsMaximal.mem_iff_models","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L404-L407","name":"FirstOrder.Language.Theory.IsMaximal.mem_of_models","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsMaximal.mem_of_models","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L400-L401","name":"FirstOrder.Language.Theory.IsMaximal.mem_or_not_mem","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsMaximal.mem_or_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L396-L397","name":"FirstOrder.Language.Theory.IsMaximal.isComplete","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsMaximal.isComplete","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L392-L393","name":"FirstOrder.Language.Theory.IsMaximal","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsMaximal","doc":"A theory is maximal when it is satisfiable and contains each sentence or its negation.\nMaximal theories are complete. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L379-L385","name":"FirstOrder.Language.Theory.IsComplete.realize_sentence_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsComplete.realize_sentence_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L366-L376","name":"FirstOrder.Language.Theory.IsComplete.models_not_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsComplete.models_not_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L360-L361","name":"FirstOrder.Language.Theory.IsComplete","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsComplete","doc":"A theory is complete when it is satisfiable and models each sentence or its negation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L347-L356","name":"FirstOrder.Language.Theory.ModelsBoundedFormula.realize_sentence","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula.realize_sentence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L329-L344","name":"FirstOrder.Language.Theory.models_iff_not_satisfiable","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.models_iff_not_satisfiable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L325-L326","name":"FirstOrder.Language.Theory.models_sentence_of_mem","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.models_sentence_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L321-L322","name":"FirstOrder.Language.Theory.models_sentence_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.models_sentence_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L316-L318","name":"FirstOrder.Language.Theory.models_formula_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.models_formula_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L311-L312","name":"FirstOrder.Language.Theory.«term_⊨ᵇ_»","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.«term_⊨ᵇ_»","doc":"A theory models a (bounded) formula when any of its nonempty models realizes that formula on all\ninputs."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L305-L306","name":"FirstOrder.Language.Theory.ModelsBoundedFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula","doc":"A theory models a (bounded) formula when any of its nonempty models realizes that formula on all\ninputs."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L290-L298","name":"FirstOrder.Language.Theory.exists_model_card_eq","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.exists_model_card_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L278-L283","name":"FirstOrder.Language.exists_elementarilyEquivalent_card_eq","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.exists_elementarilyEquivalent_card_eq","doc":"A consequence of the Löwenheim–Skolem Theorem: If `κ` is a cardinal greater than the\ncardinalities of `L` and an infinite `L`-structure `M`, then there is a structure of cardinality `κ`\nelementarily equivalent to `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L263-L272","name":"FirstOrder.Language.exists_elementaryEmbedding_card_eq","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.exists_elementaryEmbedding_card_eq","doc":"The Löwenheim–Skolem Theorem: If `κ` is a cardinal greater than the cardinalities of `L`\nand an infinite `L`-structure `M`, then there is an elementary embedding in the appropriate\ndirection between then `M` and a structure of cardinality `κ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L236-L255","name":"FirstOrder.Language.exists_elementaryEmbedding_card_eq_of_ge","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.exists_elementaryEmbedding_card_eq_of_ge","doc":"The Upward Löwenheim–Skolem Theorem: If `κ` is a cardinal greater than the cardinalities of `L`\nand an infinite `L`-structure `M`, then `M` has an elementary extension of cardinality `κ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L215-L227","name":"FirstOrder.Language.exists_elementaryEmbedding_card_eq_of_le","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.exists_elementaryEmbedding_card_eq_of_le","doc":"A version of The Downward Löwenheim–Skolem theorem where the structure `N` elementarily embeds\ninto `M`, but is not by type a substructure of `M`, and thus can be chosen to belong to the universe\nof the cardinal `κ`.\n "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L192-L204","name":"FirstOrder.Language.Theory.isSatisfiable_iUnion_iff_isSatisfiable_iUnion_finset","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_iUnion_iff_isSatisfiable_iUnion_finset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L177-L189","name":"FirstOrder.Language.Theory.exists_large_model_of_infinite_model","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.exists_large_model_of_infinite_model","doc":"Any theory with an infinite model has arbitrarily large models. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L160-L173","name":"FirstOrder.Language.Theory.isSatisfiable_union_distinctConstantsTheory_of_infinite","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_union_distinctConstantsTheory_of_infinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L141-L157","name":"FirstOrder.Language.Theory.isSatisfiable_union_distinctConstantsTheory_of_card_le","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_union_distinctConstantsTheory_of_card_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L132-L138","name":"FirstOrder.Language.Theory.isSatisfiable_directed_union_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_directed_union_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L110-L129","name":"FirstOrder.Language.Theory.isSatisfiable_iff_isFinitelySatisfiable","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_iff_isFinitelySatisfiable","doc":"The Compactness Theorem of first-order logic: A theory is satisfiable if and only if it is\nfinitely satisfiable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L104-L105","name":"FirstOrder.Language.Theory.IsSatisfiable.isFinitelySatisfiable","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsSatisfiable.isFinitelySatisfiable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L96-L101","name":"FirstOrder.Language.Theory.isSatisfiable_onTheory_iff","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_onTheory_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L91-L93","name":"FirstOrder.Language.Theory.isSatisfiable_of_isSatisfiable_onTheory","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_of_isSatisfiable_onTheory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L87-L88","name":"FirstOrder.Language.Theory.isSatisfiable_empty","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.isSatisfiable_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L83-L84","name":"FirstOrder.Language.Theory.IsSatisfiable.mono","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsSatisfiable.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L78-L80","name":"FirstOrder.Language.Theory.Model.isSatisfiable","kind":"theorem","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.Model.isSatisfiable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L72-L73","name":"FirstOrder.Language.Theory.IsFinitelySatisfiable","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsFinitelySatisfiable","doc":"A theory is finitely satisfiable if all of its finite subtheories are satisfiable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Satisfiability.lean#L67-L68","name":"FirstOrder.Language.Theory.IsSatisfiable","kind":"def","docLink":"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsSatisfiable","doc":"A theory is satisfiable if a structure models it. "}]}