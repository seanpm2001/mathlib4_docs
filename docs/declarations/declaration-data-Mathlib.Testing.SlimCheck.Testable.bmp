{"name":"Mathlib.Testing.SlimCheck.Testable","instances":[{"typeNames":["SlimCheck.TestResult"],"name":"SlimCheck.instInhabitedTestResult","className":"Inhabited"},{"typeNames":["SlimCheck.Configuration"],"name":"SlimCheck.instInhabitedConfiguration","className":"Inhabited"},{"typeNames":["SlimCheck.Configuration"],"name":"SlimCheck.instToExprConfiguration","className":"Lean.ToExpr"},{"typeNames":[],"name":"SlimCheck.instPrintableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["SlimCheck.TestResult"],"name":"SlimCheck.TestResult.instToStringTestResult","className":"ToString"},{"typeNames":["And"],"name":"SlimCheck.Testable.andTestable","className":"SlimCheck.Testable"},{"typeNames":["Or"],"name":"SlimCheck.Testable.orTestable","className":"SlimCheck.Testable"},{"typeNames":["Iff"],"name":"SlimCheck.Testable.iffTestable","className":"SlimCheck.Testable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Testable.decGuardTestable","className":"SlimCheck.Testable"},{"typeNames":["SlimCheck.NamedBinder","_builtin_typeu"],"name":"SlimCheck.Testable.forallTypesTestable","className":"SlimCheck.Testable"},{"typeNames":["OptionT"],"name":"SlimCheck.Testable.instInhabitedOptionT","className":"Inhabited"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Testable.varTestable","className":"SlimCheck.Testable"},{"typeNames":["SlimCheck.NamedBinder","_builtin_prop"],"name":"SlimCheck.Testable.propVarTestable","className":"SlimCheck.Testable"},{"typeNames":["SlimCheck.NamedBinder"],"name":"SlimCheck.Testable.unusedVarTestable","className":"SlimCheck.Testable"},{"typeNames":[],"name":"SlimCheck.Testable.decidableTestable","className":"SlimCheck.Testable"},{"typeNames":["Eq"],"name":"SlimCheck.Eq.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Ne"],"name":"SlimCheck.Ne.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["LE.le"],"name":"SlimCheck.LE.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["LT.lt"],"name":"SlimCheck.LT.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["And"],"name":"SlimCheck.And.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Or"],"name":"SlimCheck.Or.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Iff"],"name":"SlimCheck.Iff.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":[],"name":"SlimCheck.Imp.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Not"],"name":"SlimCheck.Not.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["True"],"name":"SlimCheck.True.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["False"],"name":"SlimCheck.False.printableProp","className":"SlimCheck.PrintableProp"},{"typeNames":["Eq","Bool","Bool.true"],"name":"SlimCheck.Bool.printableProp","className":"SlimCheck.PrintableProp"}],"imports":["Init","Mathlib.Testing.SlimCheck.Sampleable","Lean"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L550-L550","name":"SlimCheck.«command#test_»","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.«command#test_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L536-L541","name":"SlimCheck.Testable.check","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.check","doc":"Run a test suite for `p` and throw an exception if `p` does not not hold."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L516-L530","name":"SlimCheck.Decorations.tacticMk_decorations","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Decorations.tacticMk_decorations","doc":"In a goal of the shape `⊢ DecorationsOf p`, `mk_decoration` examines\nthe syntax of `p` and adds `NamedBinder` around universal quantifications\nto improve error messages. This tool can be used in the declaration of a\nfunction as follows:\n```lean\ndef foo (p : Prop) (p' : Decorations.DecorationsOf p := by mk_decorations) [Testable p'] : ...\n```\n`p` is the parameter given by the user, `p'` is a definitionally equivalent\nproposition where the quantifiers are annotated with `NamedBinder`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L511-L511","name":"SlimCheck.Decorations.DecorationsOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Decorations.DecorationsOf","doc":"`DecorationsOf p` is used as a hint to `mk_decorations` to specify\nthat the goal should be satisfied with a proposition equivalent to `p`\nwith added annotations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L496-L505","name":"SlimCheck.Decorations.addDecorations","kind":"opaque","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Decorations.addDecorations","doc":"Traverse the syntax of a proposition to find universal quantifiers\nquantifiers and add `NamedBinder` annotations next to them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L483-L486","name":"SlimCheck.Testable.checkIO","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.checkIO","doc":"Run a test suite for `p` in `BaseIO` using the global RNG in `stdGenRef`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L479-L480","name":"SlimCheck.Testable.runSuite","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.runSuite","doc":"Try to find a counter-example of `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L464-L476","name":"SlimCheck.Testable.runSuiteAux","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.runSuiteAux","doc":"Try `n` times to find a counter-example for `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L457-L461","name":"SlimCheck.giveUp","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.giveUp","doc":"Count the number of times the test procedure gave up. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L447-L454","name":"SlimCheck.retry","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.retry","doc":"Execute `cmd` and repeat every time the result is `gave_up` (at most `n` times). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L438-L439","name":"SlimCheck.Bool.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Bool.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L435-L436","name":"SlimCheck.False.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.False.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L432-L433","name":"SlimCheck.True.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.True.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L429-L430","name":"SlimCheck.Not.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Not.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L426-L427","name":"SlimCheck.Imp.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Imp.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L423-L424","name":"SlimCheck.Iff.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Iff.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L420-L421","name":"SlimCheck.Or.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Or.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L417-L418","name":"SlimCheck.And.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.And.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L414-L415","name":"SlimCheck.LT.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.LT.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L411-L412","name":"SlimCheck.LE.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.LE.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L408-L409","name":"SlimCheck.Ne.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Ne.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L405-L406","name":"SlimCheck.Eq.printableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Eq.printableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L392-L399","name":"SlimCheck.Testable.decidableTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.decidableTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L382-L390","name":"SlimCheck.Testable.unusedVarTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.unusedVarTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L376-L380","name":"SlimCheck.Testable.propVarTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.propVarTestable","doc":"Test a universal property about propositions "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L356-L373","name":"SlimCheck.Testable.varTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.varTestable","doc":"Test a universal property by creating a sample of the right type and instantiating the\nbound variable with it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L345-L352","name":"SlimCheck.Testable.minimize","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.minimize","doc":"Once a property fails to hold on an example, look for smaller counter-examples\nto show the user. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L323-L341","name":"SlimCheck.Testable.minimizeAux","kind":"opaque","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.minimizeAux","doc":"Shrink a counter-example `x` by using `Shrinkable.shrink x`, picking the first\ncandidate that falsifies a property and recursively shrinking that one.\nThe process is guaranteed to terminate because `shrink x` produces\na proof that all the values it produces are smaller (according to `SizeOf`)\nthan `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L316-L316","name":"SlimCheck.Testable.instInhabitedOptionT","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.instInhabitedOptionT","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L312-L314","name":"SlimCheck.Testable.addShrinks","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.addShrinks","doc":"Increase the number of shrinking steps in a test result.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L298-L307","name":"SlimCheck.Testable.formatFailure","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.formatFailure","doc":"Format the counter-examples found in a test failure.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L289-L293","name":"SlimCheck.Testable.forallTypesTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.forallTypesTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L275-L287","name":"SlimCheck.Testable.decGuardTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.decGuardTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L268-L271","name":"SlimCheck.Testable.iffTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.iffTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L256-L266","name":"SlimCheck.Testable.orTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.orTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L250-L254","name":"SlimCheck.Testable.andTestable","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.andTestable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L248-L248","name":"SlimCheck.Testable.slimTrace","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.slimTrace","doc":"A `dbgTrace` with special formatting "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L245-L245","name":"SlimCheck.Testable.runProp","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.runProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L233-L237","name":"SlimCheck.Configuration.verbose","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.verbose","doc":"A configuration with all the trace options enabled, useful for debugging. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L224-L226","name":"SlimCheck.TestResult.isFailure","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.isFailure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L220-L222","name":"SlimCheck.TestResult.addVarInfo","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.addVarInfo","doc":"Add some formatting to the information recorded by `addInfo`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L212-L217","name":"SlimCheck.TestResult.addInfo","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.addInfo","doc":"When we assign a value to a universally quantified variable,\nwe record that value using this function so that our counter-examples\ncan be informative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L206-L207","name":"SlimCheck.TestResult.iff","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.iff","doc":"Test `q` by testing `p` and proving the equivalence between the two. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L198-L203","name":"SlimCheck.TestResult.imp","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.imp","doc":"If `q → p`, then `¬ p → ¬ q` which means that testing `p` can allow us\nto find counter-examples to `q`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L183-L194","name":"SlimCheck.TestResult.or","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.or","doc":"Combine the test result for properties `p` and `q` to create a test for their disjunction. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L174-L180","name":"SlimCheck.TestResult.and","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.and","doc":"Combine the test result for properties `p` and `q` to create a test for their conjunction. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L169-L171","name":"SlimCheck.TestResult.combine","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.combine","doc":"Applicative combinator proof carrying test results. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L166-L166","name":"SlimCheck.TestResult.instToStringTestResult","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.instToStringTestResult","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L160-L164","name":"SlimCheck.TestResult.toString","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.toString","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L156-L156","name":"SlimCheck.NamedBinder","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.NamedBinder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L153-L153","name":"SlimCheck.Testable.run","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.run","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L152-L152","name":"SlimCheck.Testable.mk","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L152-L153","name":"SlimCheck.Testable","kind":"class","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Testable","doc":"`Testable p` uses random examples to try to disprove `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L148-L149","name":"SlimCheck.instPrintableProp","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.instPrintableProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L144-L144","name":"SlimCheck.PrintableProp.printProp","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.PrintableProp.printProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L143-L143","name":"SlimCheck.PrintableProp.mk","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.PrintableProp.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L143-L144","name":"SlimCheck.PrintableProp","kind":"class","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.PrintableProp","doc":"`PrintableProp p` allows one to print a proposition so that\n`SlimCheck` can indicate how values relate to each other.\nIt's basically a poor man's delaborator.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L133-L136","name":"SlimCheck.elabConfig","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.elabConfig","doc":"Allow elaboration of `Configuration` arguments to tactics.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L126-L131","name":"SlimCheck.instToExprConfiguration","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.instToExprConfiguration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L123-L123","name":"SlimCheck.instInhabitedConfiguration","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.instInhabitedConfiguration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L122-L122","name":"SlimCheck.Configuration.quiet","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.quiet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L121-L121","name":"SlimCheck.Configuration.randomSeed","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.randomSeed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L120-L120","name":"SlimCheck.Configuration.traceShrinkCandidates","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.traceShrinkCandidates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L119-L119","name":"SlimCheck.Configuration.traceShrink","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.traceShrink","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L118-L118","name":"SlimCheck.Configuration.traceSuccesses","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.traceSuccesses","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L117-L117","name":"SlimCheck.Configuration.traceDiscarded","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.traceDiscarded","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L116-L116","name":"SlimCheck.Configuration.numRetries","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.numRetries","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L115-L115","name":"SlimCheck.Configuration.maxSize","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.maxSize","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L114-L114","name":"SlimCheck.Configuration.numInst","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.numInst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L113-L123","name":"SlimCheck.Configuration","kind":"structure","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration","doc":"Configuration for testing a property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L110-L110","name":"SlimCheck.instInhabitedTestResult","kind":"instance","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.instInhabitedTestResult","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L109-L109","name":"SlimCheck.TestResult.failure","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.failure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L108-L108","name":"SlimCheck.TestResult.gaveUp","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.gaveUp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L107-L107","name":"SlimCheck.TestResult.success","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult.success","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L106-L110","name":"SlimCheck.TestResult","kind":"inductive","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.TestResult","doc":"Result of trying to disprove `p`\nThe constructors are:\n*  `success : (PSum Unit p) → TestResult p`\n  succeed when we find another example satisfying `p`\n  In `success h`, `h` is an optional proof of the proposition.\n  Without the proof, all we know is that we found one example\n  where `p` holds. With a proof, the one test was sufficient to\n  prove that `p` holds and we do not need to keep finding examples.\n* `gaveUp : ℕ → TestResult p`\n  give up when a well-formed example cannot be generated.\n  `gaveUp n` tells us that `n` invalid examples were tried.\n  Above 100, we give up on the proposition and report that we\n  did not find a way to properly test it.\n* `failure : ¬ p → (List String) → ℕ → TestResult p`\n  a counter-example to `p`; the strings specify values for the relevant variables.\n  `failure h vs n` also carries a proof that `p` does not hold. This way, we can\n  guarantee that there will be no false positive. The last component, `n`,\n  is the number of times that the counter-example was shrunk.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Testable.lean#L1-L1","name":"SlimCheck.Configuration.mk","kind":"ctor","docLink":"./Mathlib/Testing/SlimCheck/Testable.html#SlimCheck.Configuration.mk","doc":""}]}