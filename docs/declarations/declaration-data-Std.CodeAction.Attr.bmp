{"name":"Std.CodeAction.Attr","instances":[{"typeNames":["Std.CodeAction.TacticCodeActionEntry"],"name":"Std.CodeAction.instInhabitedTacticCodeActionEntry","className":"Inhabited"},{"typeNames":["Std.CodeAction.TacticCodeActions"],"name":"Std.CodeAction.instInhabitedTacticCodeActions","className":"Inhabited"},{"typeNames":["Std.CodeAction.CommandCodeActionEntry"],"name":"Std.CodeAction.instInhabitedCommandCodeActionEntry","className":"Inhabited"},{"typeNames":["Std.CodeAction.CommandCodeActions"],"name":"Std.CodeAction.instInhabitedCommandCodeActions","className":"Inhabited"}],"imports":["Init","Lean.Server.CodeActions","Std.Util.TermUnsafe"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L220-L232","name":"Std.CodeAction.command_code_action","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.command_code_action","doc":"This attribute marks a code action, which is used to suggest new tactics or replace existing ones.\n\n* `@[command_code_action kind]`: This is a code action which applies to applications of the command\n`kind` (a command syntax kind), which can replace the command or insert things before or after it.\n\n* `@[command_code_action kind₁ kind₂]`: shorthand for\n`@[command_code_action kind₁, command_code_action kind₂]`.\n\n* `@[command_code_action]`: This is a command code action that applies to all commands.\nUse sparingly.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L207-L218","name":"Std.CodeAction.cmdCodeActionExt","kind":"opaque","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.cmdCodeActionExt","doc":"An extension which collects all the command code actions. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L199-L205","name":"Std.CodeAction.CommandCodeActions.insert","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActions.insert","doc":"Insert a command code action entry into the `CommandCodeActions` structure. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L196-L196","name":"Std.CodeAction.instInhabitedCommandCodeActions","kind":"instance","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.instInhabitedCommandCodeActions","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L195-L195","name":"Std.CodeAction.CommandCodeActions.onCmd","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActions.onCmd","doc":"The list of command code actions to apply when a particular command kind is highlighted. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L193-L193","name":"Std.CodeAction.CommandCodeActions.onAnyCmd","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActions.onAnyCmd","doc":"The list of command code actions to apply on any command. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L191-L196","name":"Std.CodeAction.CommandCodeActions","kind":"structure","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActions","doc":"The state of the command code actions extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L188-L188","name":"Std.CodeAction.instInhabitedCommandCodeActionEntry","kind":"instance","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.instInhabitedCommandCodeActionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L187-L187","name":"Std.CodeAction.CommandCodeActionEntry.cmdKinds","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActionEntry.cmdKinds","doc":"The command kinds that this extension supports.\nIf empty it is called on all command kinds. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L184-L184","name":"Std.CodeAction.CommandCodeActionEntry.declName","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActionEntry.declName","doc":"The declaration to tag "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L182-L188","name":"Std.CodeAction.CommandCodeActionEntry","kind":"structure","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActionEntry","doc":"An entry in the command code actions extension, containing the attribute arguments. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L177-L179","name":"Std.CodeAction.mkCommandCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.mkCommandCodeAction","doc":"Read a command code action from a declaration of the right type. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L172-L174","name":"Std.CodeAction.CommandCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeAction","doc":"A command code action extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L131-L146","name":"Std.CodeAction.tactic_code_action","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.tactic_code_action","doc":"This attribute marks a code action, which is used to suggest new tactics or replace existing ones.\n\n* `@[tactic_code_action]`: This is a code action which applies to the spaces between tactics,\nto suggest a new tactic to change the goal state.\n\n* `@[tactic_code_action kind]`: This is a code action which applies to applications of the tactic\n`kind` (a tactic syntax kind), which can replace the tactic or insert things before or after it.\n\n* `@[tactic_code_action kind₁ kind₂]`: shorthand for\n`@[tactic_code_action kind₁, tactic_code_action kind₂]`.\n\n* `@[tactic_code_action *]`: This is a tactic code action that applies to all tactics.\nUse sparingly.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L118-L129","name":"Std.CodeAction.tacticCodeActionExt","kind":"opaque","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.tacticCodeActionExt","doc":"An extension which collects all the tactic code actions. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L106-L116","name":"Std.CodeAction.tacticSeqCodeActionExt","kind":"opaque","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.tacticSeqCodeActionExt","doc":"An extension which collects all the tactic code actions. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L98-L104","name":"Std.CodeAction.TacticCodeActions.insert","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActions.insert","doc":"Insert a tactic code action entry into the `TacticCodeActions` structure. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L95-L95","name":"Std.CodeAction.instInhabitedTacticCodeActions","kind":"instance","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.instInhabitedTacticCodeActions","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L94-L94","name":"Std.CodeAction.TacticCodeActions.onTactic","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActions.onTactic","doc":"The list of tactic code actions to apply when a particular tactic kind is highlighted. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L92-L92","name":"Std.CodeAction.TacticCodeActions.onAnyTactic","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActions.onAnyTactic","doc":"The list of tactic code actions to apply on any tactic. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L90-L95","name":"Std.CodeAction.TacticCodeActions","kind":"structure","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActions","doc":"The state of the tactic code actions extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L87-L87","name":"Std.CodeAction.instInhabitedTacticCodeActionEntry","kind":"instance","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.instInhabitedTacticCodeActionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L86-L86","name":"Std.CodeAction.TacticCodeActionEntry.tacticKinds","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActionEntry.tacticKinds","doc":"The tactic kinds that this extension supports. If empty it is called on all tactic kinds. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L84-L84","name":"Std.CodeAction.TacticCodeActionEntry.declName","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActionEntry.declName","doc":"The declaration to tag "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L82-L87","name":"Std.CodeAction.TacticCodeActionEntry","kind":"structure","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActionEntry","doc":"An entry in the tactic code actions extension, containing the attribute arguments. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L77-L79","name":"Std.CodeAction.mkTacticSeqCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.mkTacticSeqCodeAction","doc":"Read a tacticSeq code action from a declaration of the right type. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L72-L74","name":"Std.CodeAction.mkTacticCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.mkTacticCodeAction","doc":"Read a tactic code action from a declaration of the right type. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L66-L69","name":"Std.CodeAction.TacticSeqCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticSeqCodeAction","doc":"A tactic code action extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L60-L63","name":"Std.CodeAction.TacticCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeAction","doc":"A tactic code action extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L35-L44","name":"Std.CodeAction.holeCodeActionExt","kind":"opaque","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.holeCodeActionExt","doc":"An extension which collects all the hole code actions. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L31-L33","name":"Std.CodeAction.mkHoleCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.mkHoleCodeAction","doc":"Read a hole code action from a declaration of the right type. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L26-L28","name":"Std.CodeAction.HoleCodeAction","kind":"def","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.HoleCodeAction","doc":"A hole code action extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L1-L1","name":"Std.CodeAction.TacticCodeActions.mk","kind":"ctor","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActions.mk","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L1-L1","name":"Std.CodeAction.CommandCodeActions.mk","kind":"ctor","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActions.mk","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L1-L1","name":"Std.CodeAction.TacticCodeActionEntry.mk","kind":"ctor","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.TacticCodeActionEntry.mk","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/CodeAction/Attr.lean#L1-L1","name":"Std.CodeAction.CommandCodeActionEntry.mk","kind":"ctor","docLink":"./Std/CodeAction/Attr.html#Std.CodeAction.CommandCodeActionEntry.mk","doc":""}]}