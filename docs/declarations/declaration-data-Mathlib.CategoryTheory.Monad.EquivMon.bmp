{"name":"Mathlib.CategoryTheory.Monad.EquivMon","instances":[],"imports":["Init","Mathlib.CategoryTheory.Monad.Basic","Mathlib.CategoryTheory.Monoidal.End","Mathlib.CategoryTheory.Monoidal.Mon_"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L110-L118","name":"CategoryTheory.Monad.monadMonEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv","doc":"Oh, monads are just monoids in the category of endofunctors (equivalence of categories). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_counitIso_inv_app_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_counitIso_inv_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_counitIso_hom_app_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_counitIso_hom_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_functor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_functor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_unitIso_inv_app_toNatTrans_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_unitIso_inv_app_toNatTrans_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_unitIso_hom_app_toNatTrans_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_unitIso_hom_app_toNatTrans_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L109-L109","name":"CategoryTheory.Monad.monadMonEquiv_inverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadMonEquiv_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L92-L105","name":"CategoryTheory.Monad.monToMonad","kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monToMonad","doc":"Passing from `Mon_ (C ⥤ C)` to `Monad C` is functorial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L91-L91","name":"CategoryTheory.Monad.monToMonad_map_toNatTrans_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monToMonad_map_toNatTrans_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L91-L91","name":"CategoryTheory.Monad.monToMonad_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monToMonad_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L86-L86","name":"CategoryTheory.Monad.ofMon_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.ofMon_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L66-L82","name":"CategoryTheory.Monad.ofMon","kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.ofMon","doc":"To every monoid object in `C ⥤ C` we associate a `Monad C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L65-L65","name":"CategoryTheory.Monad.ofMon_η","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.ofMon_η","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L65-L65","name":"CategoryTheory.Monad.ofMon_μ","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.ofMon_μ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L57-L59","name":"CategoryTheory.Monad.monadToMon","kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadToMon","doc":"Passing from `Monad C` to `Mon_ (C ⥤ C)` is functorial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L56-L56","name":"CategoryTheory.Monad.monadToMon_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadToMon_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L56-L56","name":"CategoryTheory.Monad.monadToMon_map_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.monadToMon_map_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L46-L50","name":"CategoryTheory.Monad.toMon","kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.toMon","doc":"To every `Monad C` we associated a monoid object in `C ⥤ C`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L45-L45","name":"CategoryTheory.Monad.toMon_one","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.toMon_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L45-L45","name":"CategoryTheory.Monad.toMon_X","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.toMon_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monad/EquivMon.lean#L45-L45","name":"CategoryTheory.Monad.toMon_mul","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/EquivMon.html#CategoryTheory.Monad.toMon_mul","doc":""}]}