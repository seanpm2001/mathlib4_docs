{"name":"Mathlib.Logic.Denumerable","instances":[{"typeNames":[],"name":"Denumerable.instInfinite","className":"Infinite"},{"typeNames":["Nat"],"name":"Denumerable.nat","className":"Denumerable"},{"typeNames":["Option"],"name":"Denumerable.option","className":"Denumerable"},{"typeNames":["Sum"],"name":"Denumerable.sum","className":"Denumerable"},{"typeNames":["Sigma"],"name":"Denumerable.sigma","className":"Denumerable"},{"typeNames":["Prod"],"name":"Denumerable.prod","className":"Denumerable"},{"typeNames":["Int"],"name":"Denumerable.int","className":"Denumerable"},{"typeNames":["PNat"],"name":"Denumerable.pnat","className":"Denumerable"},{"typeNames":["ULift"],"name":"Denumerable.ulift","className":"Denumerable"},{"typeNames":["PLift"],"name":"Denumerable.plift","className":"Denumerable"},{"typeNames":["Equiv"],"name":"nonempty_equiv_of_countable","className":"Nonempty"}],"imports":["Init","Mathlib.Data.Fintype.Lattice","Mathlib.Data.List.MinMax","Mathlib.Data.Nat.Order.Lemmas","Mathlib.Logic.Encodable.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L385-L389","name":"nonempty_equiv_of_countable","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#nonempty_equiv_of_countable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L381-L382","name":"nonempty_denumerable","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#nonempty_denumerable","doc":"See also `nonempty_encodable`, `nonempty_fintype`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L370-L375","name":"Denumerable.ofEncodableOfInfinite","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofEncodableOfInfinite","doc":"An infinite encodable type is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L355-L360","name":"Nat.Subtype.denumerable","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.denumerable","doc":"Any infinite set of naturals is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L317-L318","name":"Nat.Subtype.coe_comp_ofNat_range","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.coe_comp_ofNat_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L312-L313","name":"Nat.Subtype.ofNat_range","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.ofNat_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L308-L308","name":"Nat.Subtype.ofNat_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.ofNat_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L282-L305","name":"Nat.Subtype.ofNat_surjective_aux","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.ofNat_surjective_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L277-L279","name":"Nat.Subtype.ofNat","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.ofNat","doc":"Returns the `n`-th element of a set, according to the usual ordering of `ℕ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L271-L273","name":"Nat.Subtype.lt_succ_iff_le","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.lt_succ_iff_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L264-L268","name":"Nat.Subtype.lt_succ_self","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.lt_succ_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L254-L261","name":"Nat.Subtype.le_succ_of_forall_lt_le","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.le_succ_of_forall_lt_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L245-L251","name":"Nat.Subtype.succ_le_of_lt","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.succ_le_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L240-L242","name":"Nat.Subtype.succ","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.succ","doc":"Returns the next natural in a set, according to the usual ordering of `ℕ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L224-L232","name":"Nat.Subtype.exists_succ","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Nat.Subtype.exists_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L203-L204","name":"Denumerable.pair","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.pair","doc":"If `α` is denumerable, then `α × α` and `α` are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L198-L199","name":"Denumerable.plift","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.plift","doc":"The lift of a denumerable type is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L193-L194","name":"Denumerable.ulift","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ulift","doc":"The lift of a denumerable type is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L188-L189","name":"Denumerable.pnat","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.pnat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L184-L185","name":"Denumerable.int","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.int","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L181-L181","name":"Denumerable.prod_nat_ofNat","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.prod_nat_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L176-L177","name":"Denumerable.prod_ofNat_val","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.prod_ofNat_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L171-L172","name":"Denumerable.prod","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.prod","doc":"If `α` and `β` are denumerable, then so is their product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L163-L165","name":"Denumerable.sigma_ofNat_val","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.sigma_ofNat_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L158-L159","name":"Denumerable.sigma","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.sigma","doc":"A denumerable collection of denumerable types is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L145-L150","name":"Denumerable.sum","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.sum","doc":"If `α` and `β` are denumerable, then so is their sum. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L131-L140","name":"Denumerable.option","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.option","doc":"If `α` is denumerable, then so is `Option α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L126-L127","name":"Denumerable.ofNat_nat","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat_nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L121-L122","name":"Denumerable.nat","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L117-L118","name":"Denumerable.equiv₂","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.equiv₂","doc":"All denumerable types are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L107-L113","name":"Denumerable.ofEquiv_ofNat","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofEquiv_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L97-L103","name":"Denumerable.ofEquiv","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofEquiv","doc":"Denumerability is conserved by equivalences. This is transitivity of equivalence the denumerable\nway. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L88-L92","name":"Denumerable.mk'","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.mk'","doc":"A type equivalent to `ℕ` is denumerable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L84-L85","name":"Denumerable.instInfinite","kind":"instance","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.instInfinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L79-L80","name":"Denumerable.eqv","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.eqv","doc":"A denumerable type is equivalent to `ℕ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L74-L75","name":"Denumerable.ofNat_encode","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat_encode","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L68-L70","name":"Denumerable.encode_ofNat","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.encode_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L63-L64","name":"Denumerable.ofNat_of_decode","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat_of_decode","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L58-L59","name":"Denumerable.decode_eq_ofNat","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.decode_eq_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L53-L54","name":"Denumerable.ofNat","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat","doc":"Returns the `n`-th element of `α` indexed by the decoding. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L48-L49","name":"Denumerable.decode_isSome","kind":"theorem","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.decode_isSome","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L35-L35","name":"Denumerable.decode_inv","kind":"def","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.decode_inv","doc":"`decode` and `encode` are inverses. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L33-L33","name":"Denumerable.mk","kind":"ctor","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Denumerable.lean#L33-L35","name":"Denumerable","kind":"class","docLink":"./Mathlib/Logic/Denumerable.html#Denumerable","doc":"A denumerable type is (constructively) bijective with `ℕ`. Typeclass equivalent of `α ≃ ℕ`. "}]}