{"name":"Std.Lean.HashMap","instances":[{"typeNames":["Lean.HashMap","Prod"],"name":"Lean.HashMap.instForInHashMapProd","className":"ForIn"}],"imports":["Init","Lean.Data.HashMap"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/HashMap.lean#L40-L46","name":"Lean.HashMap.mergeWith","kind":"def","docLink":"./Std/Lean/HashMap.html#Lean.HashMap.mergeWith","doc":"`O(|other|)` amortized. Merge two `HashMap`s.\nThe values of keys which appear in both maps are combined using `f`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/HashMap.lean#L28-L33","name":"Lean.HashMap.mergeWithM","kind":"def","docLink":"./Std/Lean/HashMap.html#Lean.HashMap.mergeWithM","doc":"`O(|other|)` amortized. Merge two `HashMap`s.\nThe values of keys which appear in both maps are combined using the monadic function `f`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/HashMap.lean#L13-L21","name":"Lean.HashMap.instForInHashMapProd","kind":"instance","docLink":"./Std/Lean/HashMap.html#Lean.HashMap.instForInHashMapProd","doc":""}]}