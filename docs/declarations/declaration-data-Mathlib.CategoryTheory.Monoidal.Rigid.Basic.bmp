{"name":"Mathlib.CategoryTheory.Monoidal.Rigid.Basic","instances":[{"typeNames":["CategoryTheory.MonoidalCategory.tensorUnit","CategoryTheory.MonoidalCategory.tensorUnit"],"name":"CategoryTheory.exactPairingUnit","className":"CategoryTheory.ExactPairing"},{"typeNames":["CategoryTheory.MonoidalCategory.tensorUnit"],"name":"CategoryTheory.hasRightDualUnit","className":"CategoryTheory.HasRightDual"},{"typeNames":["CategoryTheory.MonoidalCategory.tensorUnit"],"name":"CategoryTheory.hasLeftDualUnit","className":"CategoryTheory.HasLeftDual"},{"typeNames":["CategoryTheory.HasLeftDual.leftDual"],"name":"CategoryTheory.hasRightDualLeftDual","className":"CategoryTheory.HasRightDual"},{"typeNames":["CategoryTheory.HasRightDual.rightDual"],"name":"CategoryTheory.hasLeftDualRightDual","className":"CategoryTheory.HasLeftDual"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.CoherenceLemmas","Mathlib.CategoryTheory.Closed.Monoidal","Mathlib.Tactic.ApplyFun"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L693-L693","name":"CategoryTheory.RigidCategory.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L693-L694","name":"CategoryTheory.RigidCategory","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory","doc":"A rigid monoidal category is a monoidal category which is left rigid and right rigid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L687-L689","name":"CategoryTheory.monoidalClosedOfLeftRigidCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.monoidalClosedOfLeftRigidCategory","doc":"Any left rigid category is monoidal closed, with the internal hom `X ⟶[C] Y = ᘁX ⊗ Y`.\nThis has to be a definition rather than an instance to avoid diamonds, for example between\n`category_theory.monoidal_closed.functor_category` and\n`category_theory.monoidal.left_rigid_functor_category`. Moreover, in concrete applications there is\noften a more useful definition of the internal hom object than `ᘁY ⊗ X`, in which case the monoidal\nclosed structure shouldn't come the rigid structure (e.g. in the category `FinVect k`, it is more\nconvenient to define the internal hom as `Y →ₗ[k] X` rather than `ᘁY ⊗ X` even though these are\nnaturally isomorphic). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L673-L673","name":"CategoryTheory.LeftRigidCategory.leftDual","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory.leftDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L672-L672","name":"CategoryTheory.LeftRigidCategory.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L672-L673","name":"CategoryTheory.LeftRigidCategory","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory","doc":"A left rigid monoidal category is one in which every object has a right dual. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L668-L668","name":"CategoryTheory.RightRigidCategory.rightDual","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory.rightDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L667-L667","name":"CategoryTheory.RightRigidCategory.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L667-L668","name":"CategoryTheory.RightRigidCategory","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory","doc":"A right rigid monoidal category is one in which every object has a right dual. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L661-L663","name":"CategoryTheory.leftDualIso_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftDualIso_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L655-L657","name":"CategoryTheory.rightDualIso_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightDualIso_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L640-L651","name":"CategoryTheory.leftDualIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftDualIso","doc":"Left duals are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L625-L636","name":"CategoryTheory.rightDualIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightDualIso","doc":"Right duals are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L618-L621","name":"CategoryTheory.exactPairingCongr","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.exactPairingCongr","doc":"Transport an exact pairing across isomorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L594-L614","name":"CategoryTheory.exactPairingCongrRight","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.exactPairingCongrRight","doc":"Transport an exact pairing across an isomorphism in the second argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L570-L590","name":"CategoryTheory.exactPairingCongrLeft","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.exactPairingCongrLeft","doc":"Transport an exact pairing across an isomorphism in the first argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L563-L566","name":"CategoryTheory.rightAdjointMate_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightAdjointMate_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L557-L560","name":"CategoryTheory.coevaluation_comp_leftAdjointMate","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.coevaluation_comp_leftAdjointMate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L551-L554","name":"CategoryTheory.leftAdjointMate_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftAdjointMate_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L545-L548","name":"CategoryTheory.coevaluation_comp_rightAdjointMate","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.coevaluation_comp_rightAdjointMate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L534-L541","name":"CategoryTheory.tensorRightHomEquiv_tensor_id_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_tensor_id_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L527-L530","name":"CategoryTheory.tensorRightHomEquiv_id_tensor_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_id_tensor_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L520-L523","name":"CategoryTheory.tensorLeftHomEquiv_tensor_id_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_tensor_id_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L509-L516","name":"CategoryTheory.tensorLeftHomEquiv_id_tensor_comp_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_id_tensor_comp_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L498-L505","name":"CategoryTheory.tensorRightHomEquiv_symm_coevaluation_comp_tensor_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_symm_coevaluation_comp_tensor_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L490-L494","name":"CategoryTheory.tensorRightHomEquiv_symm_coevaluation_comp_id_tensor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_symm_coevaluation_comp_id_tensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L482-L486","name":"CategoryTheory.tensorLeftHomEquiv_symm_coevaluation_comp_tensor_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_symm_coevaluation_comp_tensor_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L471-L478","name":"CategoryTheory.tensorLeftHomEquiv_symm_coevaluation_comp_id_tensor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_symm_coevaluation_comp_id_tensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L457-L467","name":"CategoryTheory.tensorRightHomEquiv_tensor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_tensor","doc":"`tensorRightHomEquiv` commutes with tensoring on the left "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L444-L453","name":"CategoryTheory.tensorLeftHomEquiv_tensor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_tensor","doc":"`tensorLeftHomEquiv` commutes with tensoring on the right "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L439-L440","name":"CategoryTheory.closedOfHasLeftDual","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.closedOfHasLeftDual","doc":"If `Y` has a left dual `ᘁY`, then it is a closed object, with the internal hom functor `Y ⟶[C] -`\ngiven by left tensoring by `ᘁY`.\nThis has to be a definition rather than an instance to avoid diamonds, for example between\n`category_theory.monoidal_closed.functor_closed` and\n`category_theory.monoidal.functor_has_left_dual`. Moreover, in concrete applications there is often\na more useful definition of the internal hom object than `ᘁY ⊗ X`, in which case the closed\nstructure shouldn't come from `has_left_dual` (e.g. in the category `FinVect k`, it is more\nconvenient to define the internal hom as `Y →ₗ[k] X` rather than `ᘁY ⊗ X` even though these are\nnaturally isomorphic).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L421-L425","name":"CategoryTheory.tensorRightAdjunction","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightAdjunction","doc":"If `Y Y'` have an exact pairing,\nthen the functor `tensor_right Y` is left adjoint to `tensor_right Y'`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L411-L415","name":"CategoryTheory.tensorLeftAdjunction","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftAdjunction","doc":"If `Y Y'` have an exact pairing,\nthen the functor `tensorLeft Y'` is left adjoint to `tensorLeft Y`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L400-L405","name":"CategoryTheory.tensorRightHomEquiv_symm_naturality","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_symm_naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L393-L397","name":"CategoryTheory.tensorRightHomEquiv_naturality","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv_naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L385-L390","name":"CategoryTheory.tensorLeftHomEquiv_symm_naturality","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_symm_naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L378-L382","name":"CategoryTheory.tensorLeftHomEquiv_naturality","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv_naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L343-L375","name":"CategoryTheory.tensorRightHomEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorRightHomEquiv","doc":"Given an exact pairing on `Y Y'`,\nwe get a bijection on hom-sets `(X ⊗ Y ⟶ Z) ≃ (X ⟶ Z ⊗ Y')`\nby \"pulling the string on the right\" up or down.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L304-L336","name":"CategoryTheory.tensorLeftHomEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.tensorLeftHomEquiv","doc":"Given an exact pairing on `Y Y'`,\nwe get a bijection on hom-sets `(Y' ⊗ X ⟶ Z) ≃ (X ⟶ Y ⊗ Z)`\nby \"pulling the string on the left\" up or down.\n\nThis gives the adjunction `tensorLeftAdjunction Y Y' : tensorLeft Y' ⊣ tensorLeft Y`.\n\nThis adjunction is often referred to as \"Frobenius reciprocity\" in the\nfusion categories / planar algebras / subfactors literature.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L259-L292","name":"CategoryTheory.comp_leftAdjointMate","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.comp_leftAdjointMate","doc":"The composition of left adjoint mates is the adjoint mate of the composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L258-L258","name":"CategoryTheory.comp_leftAdjointMate_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.comp_leftAdjointMate_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L221-L254","name":"CategoryTheory.comp_rightAdjointMate","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.comp_rightAdjointMate","doc":"The composition of right adjoint mates is the adjoint mate of the composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L220-L220","name":"CategoryTheory.comp_rightAdjointMate_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.comp_rightAdjointMate_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L208-L216","name":"CategoryTheory.leftAdjointMate_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftAdjointMate_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L196-L205","name":"CategoryTheory.rightAdjointMate_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightAdjointMate_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L191-L193","name":"CategoryTheory.leftAdjointMate_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftAdjointMate_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L185-L187","name":"CategoryTheory.rightAdjointMate_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightAdjointMate_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L182-L182","name":"CategoryTheory.«termᘁ__1»","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.«termᘁ__1»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L181-L181","name":"CategoryTheory.«term_ᘁ_1»","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.«term_ᘁ_1»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L177-L178","name":"CategoryTheory.leftAdjointMate","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftAdjointMate","doc":"The left adjoint mate `ᘁf : ᘁY ⟶ ᘁX` of a morphism `f : X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L172-L173","name":"CategoryTheory.rightAdjointMate","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightAdjointMate","doc":"The right adjoint mate `fᘁ : Xᘁ ⟶ Yᘁ` of a morphism `f : X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L167-L168","name":"CategoryTheory.rightDual_leftDual","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightDual_leftDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L162-L163","name":"CategoryTheory.leftDual_rightDual","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftDual_rightDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L157-L158","name":"CategoryTheory.hasLeftDualRightDual","kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.hasLeftDualRightDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L153-L154","name":"CategoryTheory.hasRightDualLeftDual","kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.hasRightDualLeftDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L149-L150","name":"CategoryTheory.hasLeftDualUnit","kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.hasLeftDualUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L145-L146","name":"CategoryTheory.hasRightDualUnit","kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.hasRightDualUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L143-L143","name":"CategoryTheory.«term_ᘁ»","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.«term_ᘁ»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L142-L142","name":"CategoryTheory.«termᘁ_»","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.«termᘁ_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L134-L134","name":"CategoryTheory.HasLeftDual.exact","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.exact","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L133-L133","name":"CategoryTheory.HasLeftDual.leftDual","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.leftDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L132-L132","name":"CategoryTheory.HasLeftDual.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L132-L134","name":"CategoryTheory.HasLeftDual","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual","doc":"A class of objects with have a left dual. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L128-L128","name":"CategoryTheory.HasRightDual.exact","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.exact","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L127-L127","name":"CategoryTheory.HasRightDual.rightDual","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.rightDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L126-L126","name":"CategoryTheory.HasRightDual.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L126-L128","name":"CategoryTheory.HasRightDual","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual","doc":"A class of objects which have a right dual. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L118-L122","name":"CategoryTheory.exactPairingUnit","kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.exactPairingUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L116-L116","name":"CategoryTheory.ExactPairing.evaluation_coevaluation_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.evaluation_coevaluation_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L115-L115","name":"CategoryTheory.ExactPairing.coevaluation_evaluation_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.coevaluation_evaluation_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L109-L111","name":"CategoryTheory.ExactPairing.evaluation_coevaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.evaluation_coevaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L105-L107","name":"CategoryTheory.ExactPairing.coevaluation_evaluation","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.coevaluation_evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L103-L103","name":"CategoryTheory.ExactPairing.termε_","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.termε_","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L102-L102","name":"CategoryTheory.ExactPairing.termη_","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.termη_","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L100-L100","name":"CategoryTheory.ExactPairing.evaluation","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.evaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L99-L99","name":"CategoryTheory.ExactPairing.coevaluation","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.coevaluation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L84-L84","name":"CategoryTheory.ExactPairing.evaluation_coevaluation'","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.evaluation_coevaluation'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L81-L81","name":"CategoryTheory.ExactPairing.coevaluation_evaluation'","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.coevaluation_evaluation'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L80-L80","name":"CategoryTheory.ExactPairing.evaluation'","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.evaluation'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L79-L79","name":"CategoryTheory.ExactPairing.coevaluation'","kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.coevaluation'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L78-L78","name":"CategoryTheory.ExactPairing.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Monoidal/Rigid/Basic.lean#L78-L86","name":"CategoryTheory.ExactPairing","kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.ExactPairing","doc":"An exact pairing is a pair of objects `X Y : C` which admit\na coevaluation and evaluation morphism which fulfill two triangle equalities. "}]}