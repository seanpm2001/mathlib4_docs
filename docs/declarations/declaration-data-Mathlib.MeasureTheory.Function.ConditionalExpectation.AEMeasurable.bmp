{"name":"Mathlib.MeasureTheory.Function.ConditionalExpectation.AEMeasurable","instances":[{"typeNames":["Subtype","MeasureTheory.AEEqFun","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","Membership.mem","AddSubgroup","MeasureTheory.AEEqFun.instAddGroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SeminormedAddCommGroup.toTopologicalAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","MeasureTheory.Lp","AddSubgroup","AddSubgroup.toAddGroup","MeasureTheory.lpMeasSubgroup","instUniformSpaceSubtype","Subtype","MeasureTheory.AEEqFun","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","Membership.mem","AddSubgroup","MeasureTheory.AEEqFun.instAddGroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SeminormedAddCommGroup.toTopologicalAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","MeasureTheory.Lp","AddSubgroup","AddSubgroup.toAddGroup","MeasureTheory.lpMeasSubgroup","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","MeasureTheory.Lp.instNormedAddCommGroup"],"name":"MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpAddSubgroupToAddGroupLpMeasSubgroupInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","className":"CompleteSpace"},{"typeNames":["Subtype","MeasureTheory.AEEqFun","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","Membership.mem","AddSubgroup","MeasureTheory.AEEqFun.instAddGroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SeminormedAddCommGroup.toTopologicalAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","MeasureTheory.Lp","Submodule","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","DenselyNormedField.toNormedField","IsROrC.toDenselyNormedField","AddSubmonoid.toAddCommMonoid","MeasureTheory.AEEqFun.instAddCommMonoid","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","TopologicalAddGroup.toContinuousAdd","AddSubgroup.toAddSubmonoid","MeasureTheory.Lp.instModule","NormedCommRing.toNormedRing","NormedField.toNormedCommRing","NormedSpace.toModule","NormedSpace.boundedSMul","Submodule.setLike","MeasureTheory.lpMeas","instUniformSpaceSubtype","Subtype","MeasureTheory.AEEqFun","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","Membership.mem","AddSubgroup","MeasureTheory.AEEqFun.instAddGroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SeminormedAddCommGroup.toTopologicalAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","MeasureTheory.Lp","Submodule","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","DenselyNormedField.toNormedField","IsROrC.toDenselyNormedField","AddSubmonoid.toAddCommMonoid","MeasureTheory.AEEqFun.instAddCommMonoid","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","TopologicalAddGroup.toContinuousAdd","AddSubgroup.toAddSubmonoid","MeasureTheory.Lp.instModule","NormedCommRing.toNormedRing","NormedField.toNormedCommRing","NormedSpace.toModule","NormedSpace.boundedSMul","Submodule.setLike","MeasureTheory.lpMeas","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","MeasureTheory.Lp.instNormedAddCommGroup"],"name":"MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpSubmoduleToSemiringToDivisionSemiringToSemifieldToFieldToNormedFieldToDenselyNormedFieldToAddCommMonoidInstAddCommMonoidToAddCommMonoidToAddCommGroupToContinuousAddToAddSubmonoidInstModuleToNormedRingToNormedCommRingToModuleBoundedSMulSetLikeLpMeasInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","className":"CompleteSpace"}],"imports":["Init","Mathlib.MeasureTheory.Function.L2Space","Mathlib.MeasureTheory.Function.StronglyMeasurable.Lp"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L686-L711","name":"MeasureTheory.Mem‚Ñíp.induction_stronglyMeasurable","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.Mem‚Ñíp.induction_stronglyMeasurable","doc":"To prove something for an arbitrary `Mem‚Ñíp` function a.e. strongly measurable with respect\nto a sub-œÉ-algebra `m` in a normed space, it suffices to show that\n* the property holds for (multiples of) characteristic functions which are measurable w.r.t. `m`;\n* is closed under addition;\n* the set of functions in the `L·µñ` space strongly measurable w.r.t. `m` for which the property\n  holds is closed.\n* the property is closed under the almost-everywhere equal relation.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L620-L674","name":"MeasureTheory.Lp.induction_stronglyMeasurable","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.Lp.induction_stronglyMeasurable","doc":"To prove something for an `Lp` function a.e. strongly measurable with respect to a\nsub-œÉ-algebra `m` in a normed space, it suffices to show that\n* the property holds for (multiples of) characteristic functions which are measurable w.r.t. `m`;\n* is closed under addition;\n* the set of functions in `Lp` strongly measurable w.r.t. `m` for which the property holds is\n  closed.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L567-L609","name":"MeasureTheory.Lp.induction_stronglyMeasurable_aux","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.Lp.induction_stronglyMeasurable_aux","doc":"Auxiliary lemma for `Lp.induction_stronglyMeasurable`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L547-L554","name":"MeasureTheory.lpMeasToLpTrimLie_symm_toLp","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrimLie_symm_toLp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L534-L544","name":"MeasureTheory.lpMeasToLpTrimLie_symm_indicator","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrimLie_symm_indicator","doc":"When applying the inverse of `lpMeasToLpTrimLie` (which takes a function in the Lp space of\nthe sub-sigma algebra and returns its version in the larger Lp space) to an indicator of the\nsub-sigma-algebra, we obtain an indicator in the Lp space of the larger sigma-algebra. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L523-L528","name":"MeasureTheory.lpMeas.ae_fin_strongly_measurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeas.ae_fin_strongly_measurable'","doc":"We do not get `ae_fin_strongly_measurable f (Œº.trim hm)`, since we don't have\n`f =·µê[Œº.trim hm] Lp_meas_to_Lp_trim F ùïú p Œº hm f` but only the weaker\n`f =·µê[Œº] Lp_meas_to_Lp_trim F ùïú p Œº hm f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L509-L511","name":"MeasureTheory.isClosed_aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.isClosed_aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L501-L506","name":"MeasureTheory.isComplete_aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.isComplete_aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L497-L499","name":"MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpSubmoduleToSemiringToDivisionSemiringToSemifieldToFieldToNormedFieldToDenselyNormedFieldToAddCommMonoidInstAddCommMonoidToAddCommMonoidToAddCommGroupToContinuousAddToAddSubmonoidInstModuleToNormedRingToNormedCommRingToModuleBoundedSMulSetLikeLpMeasInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","kind":"instance","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpSubmoduleToSemiringToDivisionSemiringToSemifieldToFieldToNormedFieldToDenselyNormedFieldToAddCommMonoidInstAddCommMonoidToAddCommMonoidToAddCommGroupToContinuousAddToAddSubmonoidInstModuleToNormedRingToNormedCommRingToModuleBoundedSMulSetLikeLpMeasInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L489-L491","name":"MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpAddSubgroupToAddGroupLpMeasSubgroupInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","kind":"instance","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.instCompleteSpaceSubtypeAEEqFunToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupMemAddSubgroupInstAddGroupToAddGroupToNormedAddGroupToTopologicalAddGroupInstMembershipInstSetLikeAddSubgroupLpAddSubgroupToAddGroupLpMeasSubgroupInstUniformSpaceSubtypeToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupInstNormedAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L476-L484","name":"MeasureTheory.lpMeasToLpTrimLie","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrimLie","doc":"`lpMeas` and `Lp F p (Œº.trim hm)` are isometric, with a linear equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L470-L472","name":"MeasureTheory.lpMeasSubgroupToLpMeasIso","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpMeasIso","doc":"`lpMeasSubgroup` and `lpMeas` are isometric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L458-L464","name":"MeasureTheory.lpMeasSubgroupToLpTrimIso","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrimIso","doc":"`lpMeasSubgroup` and `Lp F p (Œº.trim hm)` are isometric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L448-L452","name":"MeasureTheory.isometry_lpMeasSubgroupToLpTrim","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.isometry_lpMeasSubgroupToLpTrim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L441-L445","name":"MeasureTheory.lpMeasSubgroupToLpTrim_norm_map","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_norm_map","doc":"`lpMeasSubgroupToLpTrim` preserves the norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L428-L437","name":"MeasureTheory.lpMeasToLpTrim_smul","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrim_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L421-L425","name":"MeasureTheory.lpMeasSubgroupToLpTrim_sub","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L408-L418","name":"MeasureTheory.lpMeasSubgroupToLpTrim_neg","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L391-L405","name":"MeasureTheory.lpMeasSubgroupToLpTrim_add","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L382-L388","name":"MeasureTheory.lpMeasSubgroupToLpTrim_left_inv","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_left_inv","doc":"`lpTrimToLpMeasSubgroup` is a left inverse of `lpMeasSubgroupToLpTrim`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L372-L378","name":"MeasureTheory.lpMeasSubgroupToLpTrim_right_inv","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_right_inv","doc":"`lpTrimToLpMeasSubgroup` is a right inverse of `lpMeasSubgroupToLpTrim`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L365-L368","name":"MeasureTheory.lpTrimToLpMeas_ae_eq","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpTrimToLpMeas_ae_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L358-L362","name":"MeasureTheory.lpMeasToLpTrim_ae_eq","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrim_ae_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L352-L355","name":"MeasureTheory.lpTrimToLpMeasSubgroup_ae_eq","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpTrimToLpMeasSubgroup_ae_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L345-L349","name":"MeasureTheory.lpMeasSubgroupToLpTrim_ae_eq","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim_ae_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L339-L340","name":"MeasureTheory.lpTrimToLpMeas","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpTrimToLpMeas","doc":"Map from `Lp F p (Œº.trim hm)` to `lpMeas`, inverse of `Lp_meas_to_Lp_trim`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L331-L333","name":"MeasureTheory.lpTrimToLpMeasSubgroup","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpTrimToLpMeasSubgroup","doc":"Map from `Lp F p (Œº.trim hm)` to `lpMeasSubgroup`, inverse of\n`lpMeasSubgroupToLpTrim`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L321-L324","name":"MeasureTheory.lpMeasToLpTrim","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasToLpTrim","doc":"Map from `lpMeas` to `Lp F p (Œº.trim hm)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L311-L315","name":"MeasureTheory.lpMeasSubgroupToLpTrim","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroupToLpTrim","doc":"Map from `lpMeasSubgroup` to `Lp F p (Œº.trim hm)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L299-L305","name":"MeasureTheory.mem_lpMeasSubgroup_toLp_of_trim","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem_lpMeasSubgroup_toLp_of_trim","doc":"If `f` belongs to `Lp` for the measure `Œº.trim hm`, then it belongs to the subgroup\n`lpMeasSubgroup F m p Œº`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L281-L294","name":"MeasureTheory.mem‚Ñíp_trim_of_mem_lpMeasSubgroup","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem‚Ñíp_trim_of_mem_lpMeasSubgroup","doc":"If `f` belongs to `lpMeasSubgroup F m p Œº`, then the measurable function it is almost\neverywhere equal to (given by `AEMeasurable.mk`) belongs to `‚Ñíp` for the measure `Œº.trim hm`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L261-L265","name":"MeasureTheory.mem_lpMeas_indicatorConstLp","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem_lpMeas_indicatorConstLp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L256-L258","name":"MeasureTheory.lpMeas_coe","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeas_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L251-L253","name":"MeasureTheory.lpMeasSubgroup_coe","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroup_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L246-L248","name":"MeasureTheory.mem_lpMeas_self","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem_lpMeas_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L241-L243","name":"MeasureTheory.lpMeas.aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeas.aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L236-L238","name":"MeasureTheory.mem_lpMeas_iff_aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem_lpMeas_iff_aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L231-L233","name":"MeasureTheory.mem_lpMeasSubgroup_iff_aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.mem_lpMeasSubgroup_iff_aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L221-L226","name":"MeasureTheory.lpMeas","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeas","doc":"`lpMeas F ùïú m p Œº` is the subspace of `Lp F p Œº` containing functions `f` verifying\n`AEStronglyMeasurable' m f Œº`, i.e. functions which are `Œº`-a.e. equal to\nan `m`-strongly measurable function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L208-L213","name":"MeasureTheory.lpMeasSubgroup","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.lpMeasSubgroup","doc":"`lpMeasSubgroup F m p Œº` is the subspace of `Lp F p Œº` containing functions `f` verifying\n`AEStronglyMeasurable' m f Œº`, i.e. functions which are `Œº`-a.e. equal to\nan `m`-strongly measurable function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L164-L183","name":"MeasureTheory.AEStronglyMeasurable'.aeStronglyMeasurable'_of_measurableSpace_le_on","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.aeStronglyMeasurable'_of_measurableSpace_le_on","doc":"If the restriction to a set `s` of a œÉ-algebra `m` is included in the restriction to `s` of\nanother œÉ-algebra `m‚ÇÇ` (hypothesis `hs`), the set `s` is `m` measurable and a function `f` almost\neverywhere supported on `s` is `m`-ae-strongly-measurable, then `f` is also\n`m‚ÇÇ`-ae-strongly-measurable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L152-L157","name":"MeasureTheory.AEStronglyMeasurable.comp_ae_measurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable.comp_ae_measurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L143-L149","name":"MeasureTheory.ae_eq_trim_iff_of_aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.ae_eq_trim_iff_of_aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L137-L140","name":"MeasureTheory.StronglyMeasurable.aeStronglyMeasurable'","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.StronglyMeasurable.aeStronglyMeasurable'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L131-L134","name":"MeasureTheory.aeStronglyMeasurable'_of_aeStronglyMeasurable'_trim","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.aeStronglyMeasurable'_of_aeStronglyMeasurable'_trim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L122-L126","name":"MeasureTheory.AEStronglyMeasurable'.continuous_comp","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.continuous_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L118-L119","name":"MeasureTheory.AEStronglyMeasurable'.ae_eq_mk","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.ae_eq_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L113-L115","name":"MeasureTheory.AEStronglyMeasurable'.stronglyMeasurable_mk","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.stronglyMeasurable_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L109-L110","name":"MeasureTheory.AEStronglyMeasurable'.mk","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.mk","doc":"An `m`-strongly measurable function almost everywhere equal to `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L97-L105","name":"MeasureTheory.AEStronglyMeasurable'.const_inner","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.const_inner","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L90-L94","name":"MeasureTheory.AEStronglyMeasurable'.const_smul","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.const_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L81-L87","name":"MeasureTheory.AEStronglyMeasurable'.sub","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L73-L78","name":"MeasureTheory.AEStronglyMeasurable'.neg","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L66-L70","name":"MeasureTheory.AEStronglyMeasurable'.add","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L62-L63","name":"MeasureTheory.AEStronglyMeasurable'.congr","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'.congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.lean#L52-L54","name":"MeasureTheory.AEStronglyMeasurable'","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/ConditionalExpectation/AEMeasurable.html#MeasureTheory.AEStronglyMeasurable'","doc":"A function `f` verifies `AEStronglyMeasurable' m f Œº` if it is `Œº`-a.e. equal to\nan `m`-strongly measurable function. This is similar to `AEStronglyMeasurable`, but the\n`MeasurableSpace` structures used for the measurability statement and for the measure are\ndifferent. "}]}