{"name":"Mathlib.GroupTheory.GroupAction.Defs","instances":[{"typeNames":[],"name":"Add.toVAdd","className":"VAdd"},{"typeNames":[],"name":"Mul.toSMul","className":"SMul"},{"typeNames":["Add.toVAdd","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"AddAction.Regular.isPretransitive","className":"AddAction.IsPretransitive"},{"typeNames":["Mul.toSMul","MulOneClass.toMul","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid"],"name":"MulAction.Regular.isPretransitive","className":"MulAction.IsPretransitive"},{"typeNames":["AddAction.toVAdd","AddCommMonoid.toAddMonoid","AddAction.toVAdd","AddCommMonoid.toAddMonoid"],"name":"vaddCommClass_self","className":"VAddCommClass"},{"typeNames":["MulAction.toSMul","CommMonoid.toMonoid","MulAction.toSMul","CommMonoid.toMonoid"],"name":"smulCommClass_self","className":"SMulCommClass"},{"typeNames":["Add.toVAdd","AddSemigroup.toAdd","Add.toVAdd","AddSemigroup.toAdd","Add.toVAdd","AddSemigroup.toAdd"],"name":"AddSemigroup.isScalarTower","className":"VAddAssocClass"},{"typeNames":["Mul.toSMul","Semigroup.toMul","Mul.toSMul","Semigroup.toMul","Mul.toSMul","Semigroup.toMul"],"name":"Semigroup.isScalarTower","className":"IsScalarTower"},{"typeNames":["AddOpposite"],"name":"VAddCommClass.op_left","className":"VAddCommClass"},{"typeNames":["MulOpposite"],"name":"SMulCommClass.op_left","className":"SMulCommClass"},{"typeNames":["AddOpposite"],"name":"VAddCommClass.op_right","className":"VAddCommClass"},{"typeNames":["MulOpposite"],"name":"SMulCommClass.op_right","className":"SMulCommClass"},{"typeNames":["AddOpposite"],"name":"VAddAssocClass.op_left","className":"VAddAssocClass"},{"typeNames":["MulOpposite"],"name":"IsScalarTower.op_left","className":"IsScalarTower"},{"typeNames":["AddOpposite","AddOpposite.vadd"],"name":"VAddAssocClass.op_right","className":"VAddAssocClass"},{"typeNames":["MulOpposite","MulOpposite.smul"],"name":"IsScalarTower.op_right","className":"IsScalarTower"},{"typeNames":[],"name":"AddMonoid.toAddAction","className":"AddAction"},{"typeNames":[],"name":"Monoid.toMulAction","className":"MulAction"},{"typeNames":["AddAction.toVAdd","AddMonoid.toAddAction","AddAction.toVAdd","AddAction.toVAdd"],"name":"VAddAssocClass.left","className":"VAddAssocClass"},{"typeNames":["MulAction.toSMul","Monoid.toMulAction","MulAction.toSMul","MulAction.toSMul"],"name":"IsScalarTower.left","className":"IsScalarTower"},{"typeNames":["AddMonoidHom","instZeroAddMonoidHom"],"name":"AddMonoidHom.smulZeroClass","className":"SMulZeroClass"},{"typeNames":["AddMonoid.toAddZeroClass"],"name":"DistribMulAction.toDistribSMul","className":"DistribSMul"},{"typeNames":["Nat","AddMonoid.SMul","SMulZeroClass.toSMul","AddMonoid.toZero","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","DistribMulAction.toDistribSMul"],"name":"AddMonoid.nat_smulCommClass","className":"SMulCommClass"},{"typeNames":["Nat","SMulZeroClass.toSMul","AddMonoid.toZero","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","DistribMulAction.toDistribSMul","AddMonoid.SMul"],"name":"AddMonoid.nat_smulCommClass'","className":"SMulCommClass"},{"typeNames":["Int","SubNegMonoid.SMulInt","AddGroup.toSubNegMonoid","SMulZeroClass.toSMul","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","AddGroup.toSubtractionMonoid","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","DistribMulAction.toDistribSMul"],"name":"AddGroup.int_smulCommClass","className":"SMulCommClass"},{"typeNames":["Int","SMulZeroClass.toSMul","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","AddGroup.toSubtractionMonoid","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","DistribMulAction.toDistribSMul","SubNegMonoid.SMulInt","AddGroup.toSubNegMonoid"],"name":"AddGroup.int_smulCommClass'","className":"SMulCommClass"},{"typeNames":["Function.End"],"name":"instMonoidEnd","className":"Monoid"},{"typeNames":["Function.End"],"name":"instInhabitedEnd","className":"Inhabited"},{"typeNames":["Function.End","instMonoidEnd"],"name":"Function.End.applyMulAction","className":"MulAction"},{"typeNames":["Function.End","MulAction.toSMul","Function.End","instMonoidEnd","Function.End.applyMulAction"],"name":"Function.End.apply_FaithfulSMul","className":"FaithfulSMul"},{"typeNames":["AddMonoid.End","AddMonoid.toAddZeroClass","AddMonoid.End.monoid","AddMonoid.toAddZeroClass"],"name":"AddMonoid.End.applyDistribMulAction","className":"DistribMulAction"},{"typeNames":["AddMonoid.End","AddMonoid.toAddZeroClass","SMulZeroClass.toSMul","AddMonoid.End","AddMonoid.toAddZeroClass","AddMonoid.toZero","DistribSMul.toSMulZeroClass","DistribMulAction.toDistribSMul","AddMonoid.End.monoid","AddMonoid.End.applyDistribMulAction"],"name":"AddMonoid.End.applyFaithfulSMul","className":"FaithfulSMul"},{"typeNames":["Additive"],"name":"Additive.vadd","className":"VAdd"},{"typeNames":["Multiplicative"],"name":"Multiplicative.smul","className":"SMul"},{"typeNames":["Additive","Additive.addMonoid"],"name":"Additive.addAction","className":"AddAction"},{"typeNames":["Multiplicative","Multiplicative.monoid"],"name":"Multiplicative.mulAction","className":"MulAction"},{"typeNames":["Additive","Additive.vadd","MulAction.toSMul"],"name":"Additive.addAction_isPretransitive","className":"AddAction.IsPretransitive"},{"typeNames":["Multiplicative","Multiplicative.smul","AddAction.toVAdd"],"name":"Multiplicative.mulAction_isPretransitive","className":"MulAction.IsPretransitive"},{"typeNames":["Additive","Additive","Additive.vadd","Additive.vadd"],"name":"Additive.vaddCommClass","className":"VAddCommClass"},{"typeNames":["Multiplicative","Multiplicative","Multiplicative.smul","Multiplicative.smul"],"name":"Multiplicative.smulCommClass","className":"SMulCommClass"},{"typeNames":["Additive","Function.End","Additive.addMonoid","Function.End","instMonoidEnd"],"name":"AddAction.functionEnd","className":"AddAction"}],"imports":["Init","Mathlib.Algebra.Group.TypeTags","Mathlib.Algebra.Group.Commute","Mathlib.Algebra.Hom.Group","Mathlib.Algebra.Opposites","Mathlib.Logic.Embedding.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1266-L1267","name":"AddAction.ofEndHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.ofEndHom","doc":"The additive action induced by a hom to `Additive (Function.End α)`\n\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1258-L1259","name":"AddAction.toEndHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.toEndHom","doc":"The additive monoid hom representing an additive monoid action.\n\nWhen `M` is a group, see `AddAction.toPermHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1251-L1252","name":"AddAction.functionEnd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.functionEnd","doc":"The tautological additive action by `Additive (Function.End α)` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1243-L1245","name":"Multiplicative.smulCommClass","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Multiplicative.smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1238-L1240","name":"Additive.vaddCommClass","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Additive.vaddCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1233-L1235","name":"Multiplicative.mulAction_isPretransitive","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Multiplicative.mulAction_isPretransitive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1228-L1230","name":"Additive.addAction_isPretransitive","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Additive.addAction_isPretransitive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1221-L1225","name":"Multiplicative.mulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Multiplicative.mulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1215-L1218","name":"Additive.addAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Additive.addAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1210-L1211","name":"ofAdd_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#ofAdd_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1205-L1206","name":"toAdd_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#toAdd_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1200-L1201","name":"ofMul_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#ofMul_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1195-L1196","name":"toMul_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#toMul_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1190-L1191","name":"Multiplicative.smul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Multiplicative.smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1186-L1187","name":"Additive.vadd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Additive.vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1176-L1177","name":"MulAction.ofEndHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.ofEndHom","doc":"The monoid action induced by a monoid hom to `Function.End α`\n\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1166-L1169","name":"MulAction.toEndHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.toEndHom","doc":"The monoid hom representing a monoid action.\n\nWhen `M` is a group, see `MulAction.toPermHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1158-L1160","name":"AddMonoid.End.applyFaithfulSMul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.End.applyFaithfulSMul","doc":"`AddMonoid.End.applyDistribMulAction` is faithful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1153-L1154","name":"AddMonoid.End.smul_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.End.smul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1143-L1149","name":"AddMonoid.End.applyDistribMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.End.applyDistribMulAction","doc":"The tautological action by `AddMonoid.End α` on `α`.\n\nThis generalizes `Function.End.applyMulAction`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1136-L1137","name":"Function.End.apply_FaithfulSMul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.End.apply_FaithfulSMul","doc":"`Function.End.applyMulAction` is faithful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1131-L1132","name":"Function.End.smul_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.End.smul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1123-L1127","name":"Function.End.applyMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.End.applyMulAction","doc":"The tautological action by `Function.End α` on `α`.\n\nThis is generalized to bundled endomorphisms by:\n* `Equiv.Perm.applyMulAction`\n* `AddMonoid.End.applyDistribMulAction`\n* `AddAut.applyDistribMulAction`\n* `MulAut.applyMulDistribMulAction`\n* `RingHom.applyDistribMulAction`\n* `LinearEquiv.applyDistribMulAction`\n* `LinearMap.applyModule`\n* `RingHom.applyMulSemiringAction`\n* `AlgEquiv.applyMulSemiringAction`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1105-L1106","name":"instInhabitedEnd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#instInhabitedEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1098-L1103","name":"instMonoidEnd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#instMonoidEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1094-L1095","name":"Function.End","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.End","doc":"The monoid of endomorphisms.\n\nNote that this is generalized by `CategoryTheory.End` to categories other than `Type u`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1083-L1084","name":"smul_div'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1079-L1080","name":"smul_inv'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_inv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1064-L1068","name":"MulDistribMulAction.toMonoidEnd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.toMonoidEnd","doc":"Each element of the monoid defines a monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1063-L1063","name":"MulDistribMulAction.toMonoidEnd_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.toMonoidEnd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1055-L1057","name":"MulDistribMulAction.toMonoidHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.toMonoidHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1045-L1049","name":"MulDistribMulAction.toMonoidHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.toMonoidHom","doc":"Scalar multiplication by `r` as a `MonoidHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1037-L1041","name":"MulDistribMulAction.compHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.compHom","doc":"Compose a `MulDistribMulAction` with a `MonoidHom`, with action `f r' • m`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1021-L1029","name":"Function.Surjective.mulDistribMulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.mulDistribMulAction","doc":"Pushforward a multiplicative distributive multiplicative action along a surjective monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1009-L1014","name":"Function.Injective.mulDistribMulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.mulDistribMulAction","doc":"Pullback a multiplicative distributive multiplicative action along an injective monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L1001-L1002","name":"smul_mul'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_mul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L990-L990","name":"MulDistribMulAction.smul_one","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.smul_one","doc":"Multiplying `1` by a scalar gives `1` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L988-L988","name":"MulDistribMulAction.smul_mul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.smul_mul","doc":"Distributivity of `•` across `*` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L985-L985","name":"MulDistribMulAction.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L985-L990","name":"MulDistribMulAction","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction","doc":"Typeclass for multiplicative actions on multiplicative structures. This generalizes\nconjugation actions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L984-L984","name":"MulDistribMulAction.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L984-L984","name":"MulDistribMulAction.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulDistribMulAction.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L976-L977","name":"smul_sub","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L972-L973","name":"smul_neg","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L967-L968","name":"AddGroup.int_smulCommClass'","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddGroup.int_smulCommClass'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L962-L963","name":"AddGroup.int_smulCommClass","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddGroup.int_smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L952-L953","name":"AddMonoid.nat_smulCommClass'","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.nat_smulCommClass'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L946-L948","name":"AddMonoid.nat_smulCommClass","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.nat_smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L938-L942","name":"DistribMulAction.toAddMonoidEnd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.toAddMonoidEnd","doc":"Each element of the monoid defines an additive monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L937-L937","name":"DistribMulAction.toAddMonoidEnd_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.toAddMonoidEnd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L929-L930","name":"DistribMulAction.toAddMonoidHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.toAddMonoidHom","doc":"Each element of the monoid defines an additive monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L928-L928","name":"DistribMulAction.toAddMonoidHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.toAddMonoidHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L923-L924","name":"DistribMulAction.compHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.compHom","doc":"Compose a `DistribMulAction` with a `MonoidHom`, with action `f r' • m`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L912-L915","name":"Function.Surjective.distribMulActionLeft","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.distribMulActionLeft","doc":"Push forward the action of `R` on `M` along a compatible surjective map `f : R →* S`.\n\nSee also `Function.Surjective.mulActionLeft` and `Function.Surjective.moduleLeft`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L902-L904","name":"Function.Surjective.distribMulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.distribMulAction","doc":"Pushforward a distributive multiplicative action along a surjective additive monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L893-L895","name":"Function.Injective.distribMulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.distribMulAction","doc":"Pullback a distributive multiplicative action along an injective additive monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L876-L877","name":"DistribMulAction.toDistribSMul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.toDistribSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L866-L866","name":"DistribMulAction.smul_add","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.smul_add","doc":"Scalar multiplication distributes across addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L864-L864","name":"DistribMulAction.smul_zero","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.smul_zero","doc":"Multiplying `0` by a scalar gives `0` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L862-L862","name":"DistribMulAction.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L862-L866","name":"DistribMulAction","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction","doc":"Typeclass for multiplicative actions on additive structures. This generalizes group modules. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L861-L861","name":"DistribMulAction.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L861-L861","name":"DistribMulAction.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L853-L854","name":"DistribSMul.toAddMonoidHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.toAddMonoidHom","doc":"Each element of the scalars defines an additive monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L852-L852","name":"DistribSMul.toAddMonoidHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.toAddMonoidHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L845-L848","name":"DistribSMul.compFun","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.compFun","doc":"Compose a `DistribSMul` with a function, with scalar multiplication `f r' • m`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L832-L837","name":"Function.Surjective.distribSMulLeft","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.distribSMulLeft","doc":"Push forward the multiplication of `R` on `M` along a compatible surjective map `f : R → S`.\n\nSee also `Function.Surjective.distribMulActionLeft`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L817-L824","name":"Function.Surjective.distribSMul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.distribSMul","doc":"Pushforward a distributive scalar multiplication along a surjective additive monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L806-L810","name":"Function.Injective.distribSMul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.distribSMul","doc":"Pullback a distributive scalar multiplication along an injective additive monoid\nhomomorphism.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L795-L800","name":"AddMonoidHom.smulZeroClass","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoidHom.smulZeroClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L791-L792","name":"smul_add","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L782-L782","name":"DistribSMul.smul_add","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.smul_add","doc":"Scalar multiplication distributes across addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L780-L780","name":"DistribSMul.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L780-L782","name":"DistribSMul","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul","doc":"Typeclass for scalar multiplication that preserves `0` and `+` on the right.\n\nThis is exactly `DistribMulAction` without the `MulAction` part.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L779-L779","name":"DistribSMul.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L779-L779","name":"DistribSMul.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribSMul.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L766-L769","name":"SMulZeroClass.toZeroHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass.toZeroHom","doc":"Each element of the scalars defines a zero-preserving map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L765-L765","name":"SMulZeroClass.toZeroHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass.toZeroHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L758-L761","name":"SMulZeroClass.compFun","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass.compFun","doc":"Compose a `SMulZeroClass` with a function, with scalar multiplication `f r' • m`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L745-L750","name":"Function.Surjective.smulZeroClassLeft","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.smulZeroClassLeft","doc":"Push forward the multiplication of `R` on `M` along a compatible surjective map `f : R → S`.\n\nSee also `Function.Surjective.distribMulActionLeft`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L732-L737","name":"ZeroHom.smulZeroClass","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#ZeroHom.smulZeroClass","doc":"Pushforward a zero-preserving scalar multiplication along a zero-preserving map.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L722-L726","name":"Function.Injective.smulZeroClass","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.smulZeroClass","doc":"Pullback a zero-preserving scalar multiplication along an injective zero-preserving map.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L715-L716","name":"smul_zero","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L707-L707","name":"SMulZeroClass.smul_zero","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass.smul_zero","doc":"Multiplying `0` by a scalar gives `0` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L705-L705","name":"SMulZeroClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L705-L707","name":"SMulZeroClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulZeroClass","doc":"Typeclass for scalar multiplication that preserves `0` on the right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L692-L696","name":"smulOneHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smulOneHom","doc":"If the multiplicative action of `M` on `N` is compatible with multiplication on `N`, then\n`fun x => x • 1` is a monoid homomorphism from `M` to `N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L689-L689","name":"vaddZeroHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddZeroHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L689-L689","name":"smulOneHom_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smulOneHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L689-L691","name":"vaddZeroHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddZeroHom","doc":"If the additive action of `M` on `N` is compatible with addition on `N`, then\n`fun x => x +ᵥ 0` is an additive monoid homomorphism from `M` to `N`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L689-L691","name":"vaddZeroHom.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddZeroHom.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L689-L691","name":"vaddZeroHom.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddZeroHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L681-L683","name":"SMulCommClass.of_mul_smul_one","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.of_mul_smul_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L680-L680","name":"VAddCommClass.of_add_vadd_zero","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.of_add_vadd_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L674-L676","name":"IsScalarTower.of_smul_one_mul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.of_smul_one_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L673-L673","name":"VAddAssocClass.of_vadd_zero_add","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.of_vadd_zero_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L668-L669","name":"mul_smul_one","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#mul_smul_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L667-L667","name":"add_vadd_zero","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#add_vadd_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L662-L663","name":"smul_one_mul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_one_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L661-L661","name":"vadd_zero_add","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_zero_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L655-L657","name":"smul_one_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_one_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L654-L654","name":"vadd_zero_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_zero_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L632-L638","name":"MulAction.compHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.compHom","doc":"A multiplicative action of `M` on `α` and a monoid homomorphism `N → M` induce\na multiplicative action of `N` on `α`.\n\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L631-L631","name":"AddAction.compHom.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.compHom.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L631-L631","name":"AddAction.compHom","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.compHom","doc":"An additive action of `M` on `α` and an additive monoid homomorphism `N → M` induce\nan additive action of `N` on `α`.\n\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L631-L631","name":"AddAction.compHom.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.compHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L620-L621","name":"MulAction.toFun_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.toFun_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L619-L619","name":"AddAction.toFun_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.toFun_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L609-L610","name":"MulAction.toFun","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.toFun","doc":"Embedding of `α` into functions `M → α` induced by a multiplicative action of `M` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L608-L608","name":"AddAction.toFun","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.toFun","doc":"Embedding of `α` into functions `M → α` induced by an additive action of `M` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L608-L608","name":"AddAction.toFun.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.toFun.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L595-L597","name":"smul_mul_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_mul_smul","doc":"Note that the `IsScalarTower M α α` and `SMulCommClass M α α` typeclass arguments are\nusually satisfied by `Algebra M α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L594-L594","name":"vadd_add_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_add_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L585-L586","name":"IsScalarTower.left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L584-L584","name":"VAddAssocClass.left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L584-L584","name":"VAddAssocClass.left.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.left.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L571-L575","name":"Monoid.toMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Monoid.toMulAction","doc":"The regular action of a monoid on itself by left multiplication.\n\nThis is promoted to a module by `Semiring.toModule`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L570-L570","name":"AddMonoid.toAddAction.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.toAddAction.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L570-L570","name":"AddMonoid.toAddAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddMonoid.toAddAction","doc":"The regular action of a monoid on itself by left addition.\n\nThis is promoted to an `AddTorsor` by `addGroup_is_addTorsor`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L552-L558","name":"Function.Surjective.mulActionLeft","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.mulActionLeft","doc":"Push forward the action of `R` on `M` along a compatible surjective map `f : R →* S`.\n\nSee also `Function.Surjective.distribMulActionLeft` and `Function.Surjective.moduleLeft`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L550-L551","name":"Function.Surjective.addActionLeft.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addActionLeft.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L550-L551","name":"Function.Surjective.addActionLeft","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addActionLeft","doc":"Push forward the action of `R` on `M` along a compatible surjective map `f : R →+ S`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L550-L551","name":"Function.Surjective.addActionLeft.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addActionLeft.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L533-L542","name":"Function.Surjective.mulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.mulAction","doc":"Pushforward a multiplicative action along a surjective map respecting `•`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L531-L532","name":"Function.Surjective.addAction.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addAction.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L531-L532","name":"Function.Surjective.addAction.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addAction.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L531-L532","name":"Function.Surjective.addAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.addAction","doc":"Pushforward an additive action along a surjective map respecting `+ᵥ`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L520-L525","name":"Function.Injective.mulAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.mulAction","doc":"Pullback a multiplicative action along an injective map respecting `•`.\nSee note [reducible non-instances]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L518-L519","name":"Function.Injective.addAction.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.addAction.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L518-L519","name":"Function.Injective.addAction.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.addAction.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L518-L519","name":"Function.Injective.addAction","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.addAction","doc":"Pullback an additive action along an injective map respecting `+ᵥ`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L509-L510","name":"comp_smul_left","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#comp_smul_left","doc":"`SMul` version of `comp_mul_left` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L508-L508","name":"comp_vadd_left","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#comp_vadd_left","doc":"`VAdd` version of `comp_add_left`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L502-L503","name":"one_smul_eq_id","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#one_smul_eq_id","doc":"`SMul` version of `one_mul_eq_id` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L501-L501","name":"zero_vadd_eq_id","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#zero_vadd_eq_id","doc":"`VAdd` version of `zero_add_eq_id`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L495-L496","name":"one_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#one_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L494-L494","name":"zero_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#zero_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L487-L488","name":"smul_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L486-L486","name":"vadd_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L475-L476","name":"smul_ite","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L474-L474","name":"vadd_ite","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L469-L470","name":"ite_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#ite_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L468-L468","name":"ite_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#ite_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L456-L458","name":"Commute.smul_left","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Commute.smul_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L455-L455","name":"AddCommute.vadd_left","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddCommute.vadd_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L449-L451","name":"Commute.smul_right","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Commute.smul_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L448-L448","name":"AddCommute.vadd_right","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddCommute.vadd_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L439-L442","name":"smul_smul_smul_comm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_smul_smul_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L438-L438","name":"vadd_vadd_vadd_comm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_vadd_vadd_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L432-L434","name":"smul_mul_assoc","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_mul_assoc","doc":"Note that the `IsScalarTower α β β` typeclass argument is usually satisfied by `Algebra α β`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L431-L431","name":"vadd_add_assoc","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_add_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L423-L425","name":"mul_smul_comm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#mul_smul_comm","doc":"Note that the `SMulCommClass α β β` typeclass argument is usually satisfied by `Algebra α β`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L422-L422","name":"add_vadd_comm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#add_vadd_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L408-L412","name":"SMul.comp.smulCommClass'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMul.comp.smulCommClass'","doc":"This cannot be an instance because it can cause infinite loops whenever the `SMul` arguments\nare still metavariables.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L405-L407","name":"VAdd.comp.vaddCommClass'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAdd.comp.vaddCommClass'","doc":"This cannot be an instance because it can cause infinite loops whenever the `VAdd` arguments\nare still metavariables."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L394-L398","name":"SMul.comp.smulCommClass","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMul.comp.smulCommClass","doc":"This cannot be an instance because it can cause infinite loops whenever the `SMul` arguments\nare still metavariables.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L391-L393","name":"VAdd.comp.vaddCommClass","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAdd.comp.vaddCommClass","doc":"This cannot be an instance because it can cause infinite loops whenever the `VAdd` arguments\nare still metavariables."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L381-L384","name":"SMul.comp.isScalarTower","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMul.comp.isScalarTower","doc":"Given a tower of scalar actions `M → α → β`, if we use `SMul.comp`\nto pull back both of `M`'s actions by a map `g : N → M`, then we obtain a new\ntower of scalar actions `N → α → β`.\n\nThis cannot be an instance because it can cause infinite loops whenever the `SMul` arguments\nare still metavariables.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L375-L380","name":"VAdd.comp.isScalarTower","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAdd.comp.isScalarTower","doc":"Given a tower of additive actions `M → α → β`, if we use `SMul.comp` to pull back both of\n`M`'s actions by a map `g : N → M`, then we obtain a new tower of scalar actions `N → α → β`.\n\nThis cannot be an instance because it can cause infinite loops whenever the `SMul` arguments\nare still metavariables."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L362-L362","name":"SMul.comp","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMul.comp","doc":"An action of `M` on `α` and a function `N → M` induces an action of `N` on `α`.\n\nSee note [reducible non-instances]. Since this is reducible, we make sure to go via\n`SMul.comp.smul` to prevent typeclass inference unfolding too far. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L359-L361","name":"VAdd.comp","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAdd.comp","doc":"An additive action of `M` on `α` and a function `N → M` induces\nan additive action of `N` on `α` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L348-L349","name":"SMul.comp.smul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMul.comp.smul","doc":"Auxiliary definition for `SMul.comp`, `MulAction.compHom`,\n`DistribMulAction.compHom`, `Module.compHom`, etc. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L347-L347","name":"VAdd.comp.vadd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAdd.comp.vadd","doc":"Auxiliary definition for `VAdd.comp`, `AddAction.compHom`, etc. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L334-L337","name":"IsScalarTower.op_right","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.op_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L333-L333","name":"VAddAssocClass.op_right","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.op_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L333-L333","name":"VAddAssocClass.op_right.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.op_right.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L326-L329","name":"IsScalarTower.op_left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.op_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L325-L325","name":"VAddAssocClass.op_left.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.op_left.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L325-L325","name":"VAddAssocClass.op_left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.op_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L319-L321","name":"SMulCommClass.op_right","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.op_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L318-L318","name":"VAddCommClass.op_right","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.op_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L318-L318","name":"VAddCommClass.op_right.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.op_right.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L312-L314","name":"SMulCommClass.op_left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.op_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L311-L311","name":"VAddCommClass.op_left.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.op_left.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L311-L311","name":"VAddCommClass.op_left","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.op_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L299-L302","name":"IsCentralScalar.unop_smul_eq_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar.unop_smul_eq_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L298-L298","name":"IsCentralVAdd.unop_vadd_eq_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralVAdd.unop_vadd_eq_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L293-L293","name":"IsCentralScalar.op_smul_eq_smul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar.op_smul_eq_smul","doc":"The right and left actions of `M` on `α` are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L291-L291","name":"IsCentralScalar.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L291-L293","name":"IsCentralScalar","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar","doc":"A typeclass indicating that the right (aka `MulOpposite`) and left actions by `M` on `α` are\nequal, that is that `M` acts centrally on `α`. This can be thought of as a version of commutativity\nfor `•`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L284-L284","name":"IsCentralVAdd.op_vadd_eq_vadd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralVAdd.op_vadd_eq_vadd","doc":"The right and left actions of `M` on `α` are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L282-L282","name":"IsCentralVAdd.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralVAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L282-L284","name":"IsCentralVAdd","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralVAdd","doc":"A typeclass indicating that the right (aka `AddOpposite`) and left actions by `M` on `α` are\nequal, that is that `M` acts centrally on `α`. This can be thought of as a version of commutativity\nfor `+ᵥ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L274-L275","name":"Semigroup.isScalarTower","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Semigroup.isScalarTower","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L273-L273","name":"AddSemigroup.isScalarTower.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddSemigroup.isScalarTower.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L273-L273","name":"AddSemigroup.isScalarTower","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddSemigroup.isScalarTower","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L267-L269","name":"smul_assoc","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L266-L266","name":"vadd_assoc","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L263-L263","name":"IsScalarTower.smul_assoc","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.smul_assoc","doc":"Associativity of `•` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L261-L261","name":"IsScalarTower.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L261-L263","name":"IsScalarTower","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower","doc":"An instance of `IsScalarTower M N α` states that the multiplicative\naction of `M` on `α` is determined by the multiplicative actions of `M` on `N`\nand `N` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L254-L254","name":"VAddAssocClass.vadd_assoc","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.vadd_assoc","doc":"Associativity of `+ᵥ` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L252-L252","name":"VAddAssocClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L252-L254","name":"VAddAssocClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddAssocClass","doc":"An instance of `VAddAssocClass M N α` states that the additive action of `M` on `α` is\ndetermined by the additive actions of `M` on `N` and `N` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L245-L246","name":"smulCommClass_self","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smulCommClass_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L244-L244","name":"vaddCommClass_self","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddCommClass_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L244-L244","name":"vaddCommClass_self.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vaddCommClass_self.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L238-L242","name":"Function.Surjective.smulCommClass","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Surjective.smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L232-L236","name":"Function.Injective.smulCommClass","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Function.Injective.smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L222-L224","name":"SMulCommClass.symm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.symm","doc":"Commutativity of actions is a symmetric relation. This lemma can't be an instance because this\nwould cause a loop in the instance search graph. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L221-L221","name":"VAddCommClass.symm","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.symm","doc":"Commutativity of additive actions is a symmetric relation. This lemma can't be an instance\nbecause this would cause a loop in the instance search graph. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L190-L190","name":"SMulCommClass.smul_comm","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.smul_comm","doc":"`•` is left commutative "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L188-L188","name":"SMulCommClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L188-L190","name":"SMulCommClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass","doc":"A typeclass mixin saying that two multiplicative actions on the same space commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L183-L183","name":"VAddCommClass.vadd_comm","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.vadd_comm","doc":"`+ᵥ` is left commutative "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L181-L181","name":"VAddCommClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L181-L183","name":"VAddCommClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#VAddCommClass","doc":"A typeclass mixin saying that two additive actions on the same space commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L168-L169","name":"MulAction.Regular.isPretransitive","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.Regular.isPretransitive","doc":"The regular action of a group on itself is transitive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L167-L167","name":"AddAction.Regular.isPretransitive.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.Regular.isPretransitive.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L167-L167","name":"AddAction.Regular.isPretransitive","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.Regular.isPretransitive","doc":"The regular action of a group on itself is transitive."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L161-L162","name":"MulAction.surjective_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.surjective_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L160-L160","name":"AddAction.surjective_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.surjective_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L155-L156","name":"MulAction.exists_smul_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.exists_smul_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L154-L154","name":"AddAction.exists_vadd_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.exists_vadd_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L147-L147","name":"MulAction.IsPretransitive.exists_smul_eq","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive.exists_smul_eq","doc":"There is `g` such that `g • x = y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L145-L145","name":"MulAction.IsPretransitive.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L145-L147","name":"MulAction.IsPretransitive","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive","doc":"`M` acts pretransitively on `α` if for any `x y` there is `g` such that `g • x = y`.\nA transitive action should furthermore have `α` nonempty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L139-L139","name":"AddAction.IsPretransitive.exists_vadd_eq","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.IsPretransitive.exists_vadd_eq","doc":"There is `g` such that `g +ᵥ x = y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L137-L137","name":"AddAction.IsPretransitive.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.IsPretransitive.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L137-L139","name":"AddAction.IsPretransitive","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.IsPretransitive","doc":"`M` acts pretransitively on `α` if for any `x y` there is `g` such that `g +ᵥ x = y`.\nA transitive action should furthermore have `α` nonempty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L115-L115","name":"MulAction.mul_smul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.mul_smul","doc":"Associativity of `•` and `*` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L113-L113","name":"MulAction.one_smul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.one_smul","doc":"One is the neutral element for `•` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L111-L111","name":"MulAction.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L111-L115","name":"MulAction","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction","doc":"Typeclass for multiplicative actions by monoids. This generalizes group actions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L110-L110","name":"MulAction.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L110-L110","name":"MulAction.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L110-L110","name":"AddAction.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L110-L110","name":"AddAction.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L106-L106","name":"AddAction.add_vadd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.add_vadd","doc":"Associativity of `+` and `+ᵥ` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L104-L104","name":"AddAction.zero_vadd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.zero_vadd","doc":"Zero is a neutral element for `+ᵥ` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L102-L102","name":"AddAction.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L102-L106","name":"AddAction","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction","doc":"Type class for additive monoid actions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L96-L97","name":"smul_eq_mul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_eq_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L95-L95","name":"vadd_eq_add","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_eq_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L90-L91","name":"Mul.toSMul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Mul.toSMul","doc":"See also `Monoid.toMulAction` and `MulZeroClass.toSMulWithZero`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L89-L89","name":"Add.toVAdd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#Add.toVAdd","doc":"See also `AddMonoid.toAddAction`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L81-L83","name":"smul_left_injective'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#smul_left_injective'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L80-L80","name":"vadd_left_injective'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#vadd_left_injective'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L73-L73","name":"FaithfulSMul.eq_of_smul_eq_smul","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulSMul.eq_of_smul_eq_smul","doc":"Two elements `m₁` and `m₂` are equal whenever they act in the same way on all points. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L71-L71","name":"FaithfulSMul.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulSMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L71-L73","name":"FaithfulSMul","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulSMul","doc":"Typeclass for faithful actions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L66-L66","name":"FaithfulVAdd.eq_of_vadd_eq_vadd","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulVAdd.eq_of_vadd_eq_vadd","doc":"Two elements `g₁` and `g₂` are equal whenever they act in the same way on all points. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L64-L64","name":"FaithfulVAdd.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulVAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/Defs.lean#L64-L66","name":"FaithfulVAdd","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/Defs.html#FaithfulVAdd","doc":"Typeclass for faithful actions. "}]}