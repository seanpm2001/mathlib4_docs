{"name":"Mathlib.Algebra.Homology.Homotopy","instances":[{"typeNames":["HomotopyEquiv"],"name":"HomotopyEquiv.instInhabitedHomotopyEquiv","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Homology.Additive","Mathlib.Tactic.Abel"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L814-L823","name":"CategoryTheory.Functor.mapHomotopyEquiv","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopyEquiv","doc":"An additive functor preserves homotopy equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L813-L813","name":"CategoryTheory.Functor.mapHomotopyEquiv_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopyEquiv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L813-L813","name":"CategoryTheory.Functor.mapHomotopyEquiv_homotopyInvHomId","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopyEquiv_homotopyInvHomId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L813-L813","name":"CategoryTheory.Functor.mapHomotopyEquiv_homotopyHomInvId","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopyEquiv_homotopyHomInvId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L813-L813","name":"CategoryTheory.Functor.mapHomotopyEquiv_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopyEquiv_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L802-L809","name":"CategoryTheory.Functor.mapHomotopy","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopy","doc":"An additive functor takes homotopies to homotopies. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L801-L801","name":"CategoryTheory.Functor.mapHomotopy_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#CategoryTheory.Functor.mapHomotopy_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L782-L791","name":"homologyObjIsoOfHomotopyEquiv","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#homologyObjIsoOfHomotopyEquiv","doc":"Homotopy equivalent complexes have isomorphic homologies. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L763-L778","name":"homology_map_eq_of_homotopy","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#homology_map_eq_of_homotopy","doc":"Homotopic maps induce the same map on homology.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L752-L754","name":"HomotopyEquiv.ofIso","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.ofIso","doc":"An isomorphism of complexes induces a homotopy equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L741-L748","name":"HomotopyEquiv.trans","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.trans","doc":"Homotopy equivalence is a transitive relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L732-L736","name":"HomotopyEquiv.symm","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.symm","doc":"Being homotopy equivalent is a symmetric relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L727-L728","name":"HomotopyEquiv.instInhabitedHomotopyEquiv","kind":"instance","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.instInhabitedHomotopyEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L720-L724","name":"HomotopyEquiv.refl","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.refl","doc":"Any complex is homotopy equivalent to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L713-L713","name":"HomotopyEquiv.homotopyInvHomId","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.homotopyInvHomId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L712-L712","name":"HomotopyEquiv.homotopyHomInvId","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.homotopyHomInvId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L711-L711","name":"HomotopyEquiv.inv","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L710-L710","name":"HomotopyEquiv.hom","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L709-L709","name":"HomotopyEquiv.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L709-L713","name":"HomotopyEquiv","kind":"structure","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv","doc":"A homotopy equivalence between two chain complexes consists of a chain map each way,\nand homotopies from the compositions to the identity chain maps.\n\nNote that this contains data;\narguably it might be more useful for many applications if we truncated it to a Prop.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L671-L694","name":"Homotopy.mkCoinductive","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkCoinductive","doc":"A constructor for a `Homotopy e 0`, for `e` a chain map between `ℕ`-indexed cochain complexes,\nworking by induction.\n\nYou need to provide the components of the homotopy in degrees 0 and 1,\nshow that these satisfy the homotopy condition,\nand then give a construction of each component,\nand the fact that it satisfies the homotopy condition,\nusing as an inductive hypothesis the data and homotopy condition for the previous two components.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L655-L659","name":"Homotopy.mkCoinductiveAux₃","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkCoinductiveAux₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L647-L652","name":"Homotopy.mkCoinductiveAux₂","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkCoinductiveAux₂","doc":"An auxiliary construction for `mkInductive`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L631-L639","name":"Homotopy.mkCoinductiveAux₁","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkCoinductiveAux₁","doc":"An auxiliary construction for `mkCoinductive`.\n\nHere we build by induction a family of diagrams,\nbut don't require at the type level that these successive diagrams actually agree.\nThey do in fact agree, and we then capture that at the type level (i.e. by constructing a homotopy)\nin `mkCoinductive`.\n\nAt this stage, we don't check the homotopy condition in degree 0,\nbecause it \"falls off the end\", and is easier to treat using `xNext` and `xPrev`,\nwhich we do in `mkInductiveAux₂`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L603-L606","name":"Homotopy.prevD_zero_cochainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.prevD_zero_cochainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L595-L599","name":"Homotopy.prevD_succ_cochainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.prevD_succ_cochainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L587-L591","name":"Homotopy.dNext_cochainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.dNext_cochainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L547-L569","name":"Homotopy.mkInductive","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkInductive","doc":"A constructor for a `Homotopy e 0`, for `e` a chain map between `ℕ`-indexed chain complexes,\nworking by induction.\n\nYou need to provide the components of the homotopy in degrees 0 and 1,\nshow that these satisfy the homotopy condition,\nand then give a construction of each component,\nand the fact that it satisfies the homotopy condition,\nusing as an inductive hypothesis the data and homotopy condition for the previous two components.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L531-L535","name":"Homotopy.mkInductiveAux₃","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkInductiveAux₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L522-L528","name":"Homotopy.mkInductiveAux₂","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkInductiveAux₂","doc":"An auxiliary construction for `mkInductive`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L506-L514","name":"Homotopy.mkInductiveAux₁","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mkInductiveAux₁","doc":"An auxiliary construction for `mkInductive`.\n\nHere we build by induction a family of diagrams,\nbut don't require at the type level that these successive diagrams actually agree.\nThey do in fact agree, and we then capture that at the type level (i.e. by constructing a homotopy)\nin `mkInductive`.\n\nAt this stage, we don't check the homotopy condition in degree 0,\nbecause it \"falls off the end\", and is easier to treat using `xNext` and `xPrev`,\nwhich we do in `mkInductiveAux₂`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L478-L481","name":"Homotopy.dNext_zero_chainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.dNext_zero_chainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L470-L474","name":"Homotopy.dNext_succ_chainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.dNext_succ_chainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L462-L466","name":"Homotopy.prevD_chainComplex","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.prevD_chainComplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L435-L439","name":"Homotopy.nullHomotopicMap'_f_eq_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'_f_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L427-L431","name":"Homotopy.nullHomotopicMap_f_eq_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap_f_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L416-L423","name":"Homotopy.nullHomotopicMap'_f_of_not_rel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'_f_of_not_rel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L407-L412","name":"Homotopy.nullHomotopicMap_f_of_not_rel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap_f_of_not_rel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L396-L403","name":"Homotopy.nullHomotopicMap'_f_of_not_rel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'_f_of_not_rel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L387-L392","name":"Homotopy.nullHomotopicMap_f_of_not_rel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap_f_of_not_rel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L376-L383","name":"Homotopy.nullHomotopicMap'_f","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'_f","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L368-L372","name":"Homotopy.nullHomotopicMap_f","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap_f","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L352-L359","name":"Homotopy.nullHomotopy'","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopy'","doc":"Homotopy to zero for maps constructed with `nullHomotopicMap'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L351-L351","name":"Homotopy.nullHomotopy'_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopy'_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L340-L347","name":"Homotopy.nullHomotopy","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopy","doc":"Tautological construction of the `Homotopy` to zero for maps constructed by\n`nullHomotopicMap`, at least when we have the `zero` condition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L339-L339","name":"Homotopy.nullHomotopy_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopy_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L324-L334","name":"Homotopy.map_nullHomotopicMap'","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.map_nullHomotopicMap'","doc":"Compatibility of `nullHomotopicMap'` with the application of additive functors "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L314-L320","name":"Homotopy.map_nullHomotopicMap","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.map_nullHomotopicMap","doc":"Compatibility of `nullHomotopicMap` with the application of additive functors "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L302-L310","name":"Homotopy.comp_nullHomotopicMap'","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.comp_nullHomotopicMap'","doc":"Compatibility of `nullHomotopicMap'` with the precomposition by a morphism\nof complexes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L293-L297","name":"Homotopy.comp_nullHomotopicMap","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.comp_nullHomotopicMap","doc":"Compatibility of `nullHomotopicMap` with the precomposition by a morphism\nof complexes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L280-L288","name":"Homotopy.nullHomotopicMap'_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'_comp","doc":"Compatibility of `nullHomotopicMap'` with the postcomposition by a morphism\nof complexes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L271-L275","name":"Homotopy.nullHomotopicMap_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap_comp","doc":"Compatibility of `nullHomotopicMap` with the postcomposition by a morphism\nof complexes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L265-L266","name":"Homotopy.nullHomotopicMap'","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap'","doc":"Variant of `nullHomotopicMap` where the input consists only of the\nrelevant maps `C_i ⟶ D_j` such that `c.Rel j i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L251-L260","name":"Homotopy.nullHomotopicMap","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.nullHomotopicMap","doc":"The null homotopic map associated to a family `hom` of morphisms `C_i ⟶ D_j`.\nThis is the same datum as for the field `hom` in the structure `Homotopy`. For\nthis definition, we do not need the field `zero` of that structure\nas this definition uses only the maps `C_i ⟶ C_j` when `c.Rel j i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L235-L236","name":"Homotopy.compLeftId","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compLeftId","doc":"a variant of `Homotopy.compLeft` useful for dealing with homotopy equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L234-L234","name":"Homotopy.compLeftId_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compLeftId_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L229-L230","name":"Homotopy.compRightId","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compRightId","doc":"a variant of `Homotopy.compRight` useful for dealing with homotopy equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L228-L228","name":"Homotopy.compRightId_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compRightId_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L222-L224","name":"Homotopy.comp","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.comp","doc":"homotopy is closed under composition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L221-L221","name":"Homotopy.comp_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L213-L217","name":"Homotopy.compLeft","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compLeft","doc":"homotopy is closed under composition (on the left) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L212-L212","name":"Homotopy.compLeft_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compLeft_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L204-L208","name":"Homotopy.compRight","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compRight","doc":"homotopy is closed under composition (on the right) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L203-L203","name":"Homotopy.compRight_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.compRight_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L193-L199","name":"Homotopy.add","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.add","doc":"the sum of two homotopies is a homotopy between the sum of the respective morphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L192-L192","name":"Homotopy.add_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.add_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L183-L188","name":"Homotopy.trans","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.trans","doc":"homotopy is a transitive relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L182-L182","name":"Homotopy.trans_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.trans_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L173-L178","name":"Homotopy.symm","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.symm","doc":"`f` is homotopic to `g` iff `g` is homotopic to `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L172-L172","name":"Homotopy.symm_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.symm_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L167-L168","name":"Homotopy.refl","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.refl","doc":"Every chain map is homotopic to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L166-L166","name":"Homotopy.refl_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.refl_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L160-L162","name":"Homotopy.ofEq","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ofEq","doc":"Equal chain maps are homotopic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L159-L159","name":"Homotopy.ofEq_hom","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ofEq_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L145-L155","name":"Homotopy.equivSubZero","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.equivSubZero","doc":"`f` is homotopic to `g` iff `f - g` is homotopic to `0`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L136-L136","name":"Homotopy.comm","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L135-L135","name":"Homotopy.zero","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L134-L134","name":"Homotopy.hom","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L133-L133","name":"Homotopy.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L133-L136","name":"Homotopy","kind":"structure","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy","doc":"A homotopy `h` between chain maps `f` and `g` consists of components `h i j : C.X i ⟶ D.X j`\nwhich are zero unless `c.Rel j i`, satisfying the homotopy condition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L132-L132","name":"Homotopy.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L132-L132","name":"Homotopy.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L119-L125","name":"prevD_nat","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD_nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L110-L116","name":"dNext_nat","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext_nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L104-L107","name":"prevD_comp_right","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD_comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L98-L100","name":"prevD_comp_left","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD_comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L91-L94","name":"prevD_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L86-L88","name":"prevD_eq_toPrev_dTo","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD_eq_toPrev_dTo","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L81-L82","name":"toPrev","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#toPrev","doc":"`f j (c.prev j)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L75-L77","name":"prevD","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#prevD","doc":"The composition `f j (c.prev j) ≫ D.d (c.prev j) j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L69-L71","name":"dNext_comp_right","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext_comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L63-L65","name":"dNext_comp_left","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext_comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L56-L59","name":"dNext_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L51-L53","name":"dNext_eq_dFrom_fromNext","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext_eq_dFrom_fromNext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L46-L47","name":"fromNext","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#fromNext","doc":"`f (c.next i) i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/Homotopy.lean#L40-L42","name":"dNext","kind":"def","docLink":"./Mathlib/Algebra/Homology/Homotopy.html#dNext","doc":"The composition of `C.d i (c.next i) ≫ f (c.next i) i`. "}]}