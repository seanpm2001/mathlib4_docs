{"name":"Std.Tactic.Instances","instances":[],"imports":["Init","Lean.Elab.Command","Lean.PrettyPrinter"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Instances.lean#L63-L64","name":"Std.Tactic.Instances.«command#instances__:_»","kind":"def","docLink":"./Std/Tactic/Instances.html#Std.Tactic.Instances.«command#instances__:_»","doc":"`#instances term` prints all the instances for the given class.\nFor example, `#instances Add _` gives all `Add` instances, and `#instances Add Nat` gives the\n`Nat` instance. The `term` can be any type that can appear in `[...]` binders.\n\nTrailing underscores can be omitted, and `#instances Add` and `#instances Add _` are equivalent;\nthe command adds metavariables until the argument is no longer a function.\n\nThe `#instances` command is closely related to `#synth`, but `#synth` does the full\ninstance synthesis algorithm and `#instances` does the first step of finding potential instances. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Instances.lean#L20-L60","name":"Std.Tactic.Instances.instancesCmd","kind":"def","docLink":"./Std/Tactic/Instances.html#Std.Tactic.Instances.instancesCmd","doc":"`#instances term` prints all the instances for the given class.\nFor example, `#instances Add _` gives all `Add` instances, and `#instances Add Nat` gives the\n`Nat` instance. The `term` can be any type that can appear in `[...]` binders.\n\nTrailing underscores can be omitted, and `#instances Add` and `#instances Add _` are equivalent;\nthe command adds metavariables until the argument is no longer a function.\n\nThe `#instances` command is closely related to `#synth`, but `#synth` does the full\ninstance synthesis algorithm and `#instances` does the first step of finding potential instances. "}]}