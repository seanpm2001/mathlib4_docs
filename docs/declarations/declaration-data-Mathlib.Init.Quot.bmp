{"name":"Mathlib.Init.Quot","instances":[],"imports":["Init","Mathlib.Mathport.Rename"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Quot.lean#L30-L37","name":"Quot.recOnSubsingleton'","kind":"def","docLink":"./Mathlib/Init/Quot.html#Quot.recOnSubsingleton'","doc":"Version of `Quot.recOnSubsingleton` tagged with `elab_as_elim` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Quot.lean#L19-L24","name":"Quot.recOn'","kind":"def","docLink":"./Mathlib/Init/Quot.html#Quot.recOn'","doc":"Dependent recursion principle for `Quot`. This constructor can be tricky to use,\nso you should consider the simpler versions if they apply:\n* `Quot.lift`, for nondependent functions\n* `Quot.ind`, for theorems / proofs of propositions about quotients\n* `Quot.recOnSubsingleton`, when the target type is a `Subsingleton`\n* `Quot.hrecOn`, which uses `HEq (f a) (f b)` instead of a `sound p â–¸ f a = f b` assummption\n"}]}