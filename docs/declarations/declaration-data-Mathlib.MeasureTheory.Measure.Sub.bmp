{"name":"Mathlib.MeasureTheory.Measure.Sub","instances":[{"typeNames":["MeasureTheory.Measure"],"name":"MeasureTheory.Measure.instSub","className":"Sub"},{"typeNames":["HSub.hSub","MeasureTheory.Measure","instHSub","MeasureTheory.Measure.instSub"],"name":"MeasureTheory.Measure.isFiniteMeasure_sub","className":"MeasureTheory.IsFiniteMeasure"}],"imports":["Init","Mathlib.MeasureTheory.Measure.MeasureSpace"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L144-L145","name":"MeasureTheory.Measure.isFiniteMeasure_sub","kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.isFiniteMeasure_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L139-L141","name":"MeasureTheory.Measure.sub_apply_eq_zero_of_restrict_le_restrict","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_apply_eq_zero_of_restrict_le_restrict","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L107-L136","name":"MeasureTheory.Measure.restrict_sub_eq_restrict_sub_restrict","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.restrict_sub_eq_restrict_sub_restrict","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L102-L104","name":"MeasureTheory.Measure.sub_add_cancel_of_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_add_cancel_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L74-L99","name":"MeasureTheory.Measure.sub_apply","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_apply","doc":"This application lemma only works in special circumstances. Given knowledge of\nwhen `μ ≤ ν` and `ν ≤ μ`, a more general application lemma can be written. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L68-L69","name":"MeasureTheory.Measure.sub_self","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L63-L64","name":"MeasureTheory.Measure.zero_sub","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.zero_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L58-L59","name":"MeasureTheory.Measure.sub_top","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L53-L54","name":"MeasureTheory.Measure.sub_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L49-L50","name":"MeasureTheory.Measure.sub_eq_zero_of_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_eq_zero_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L45-L46","name":"MeasureTheory.Measure.sub_le_of_le_add","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_le_of_le_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L42-L42","name":"MeasureTheory.Measure.sub_def","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.sub_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Measure/Sub.lean#L36-L37","name":"MeasureTheory.Measure.instSub","kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Sub.html#MeasureTheory.Measure.instSub","doc":"The measure `μ - ν` is defined to be the least measure `τ` such that `μ ≤ τ + ν`.\nIt is the equivalent of `(μ - ν) ⊔ 0` if `μ` and `ν` were signed measures.\nCompare with `ENNReal.instSub`.\nSpecifically, note that if you have `α = {1,2}`, and `μ {1} = 2`, `μ {2} = 0`, and\n`ν {2} = 2`, `ν {1} = 0`, then `(μ - ν) {1, 2} = 2`. However, if `μ ≤ ν`, and\n`ν univ ≠ ∞`, then `(μ - ν) + ν = μ`. "}]}