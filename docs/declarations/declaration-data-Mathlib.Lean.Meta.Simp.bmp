{"name":"Mathlib.Lean.Meta.Simp","instances":[{"typeNames":["Lean.Meta.SimpTheorems"],"name":"Lean.Meta.Simp.instToFormatSimpTheorems","className":"Std.ToFormat"}],"imports":["Init","Lean","Std.Tactic.OpenPrivate"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L246-L251","name":"Lean.Meta.getAllSimpAttrs","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.getAllSimpAttrs","doc":"Gets all simp-attributes given to declaration `decl`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L238-L243","name":"Lean.Meta.getAllSimpDecls","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.getAllSimpDecls","doc":"Returns all declarations with the `simp`-attribute `simpAttr`.\nNote: this also returns many auxiliary declarations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L232-L234","name":"Lean.Meta.isInSimpSet","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.isInSimpSet","doc":"Tests whether `decl` has `simp`-attribute `simpAttr`. Returns `false` is `simpAttr` is not a\nvalid simp-attribute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L227-L228","name":"Lean.Meta.SimpTheorems.contains","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.SimpTheorems.contains","doc":"Checks whether `declName` is in `SimpTheorems` as either a lemma or definition to unfold. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L213-L224","name":"Lean.Meta.simpEq","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.simpEq","doc":"Independently simplify both the left-hand side and the right-hand side\nof an equality. The equality is allowed to be under binders.\nReturns the simplified equality and a proof of it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L204-L208","name":"Lean.Meta.simpType","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.simpType","doc":"Given a simplifier `S : Expr â†’ MetaM Simp.Result`,\nand an expression `e : Expr`, run `S` on the type of `e`, and then\nconvert `e` into that simplified type, using a combination of type hints and `Eq.mp`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L195-L197","name":"Lean.Meta.simpOnlyNames","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.simpOnlyNames","doc":"Simplify an expression using only a list of lemmas specified by name. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L188-L192","name":"Lean.Meta.Simp.Context.ofNames","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.Context.ofNames","doc":"Construct a `Simp.Context` from a list of names. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L175-L181","name":"Lean.Meta.simpTheoremsOfNames","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.simpTheoremsOfNames","doc":"Construct a `SimpTheorems` from a list of names. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L166-L170","name":"Lean.Meta.Simp.addSimpAttrFromSyntax","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.addSimpAttrFromSyntax","doc":"Similar to `AttributeImpl.add` in `mkSimpAttr` except that it returns an array of all\nauto-generated lemmas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L141-L162","name":"Lean.Meta.Simp.addSimpAttr","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.addSimpAttr","doc":"Similar to `AttributeImpl.add` in `mkSimpAttr` except that it doesn't require syntax,\nand returns an array of all auto-generated lemmas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L132-L137","name":"Lean.Meta.Simp.addSimpTheorem'","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.addSimpTheorem'","doc":"Similar to `addSimpTheorem` except that it returns an array of all auto-generated\nsimp-theorems. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L110-L128","name":"Lean.Meta.Simp.mkSimpTheoremsFromConst'","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.mkSimpTheoremsFromConst'","doc":"Similar to `mkSimpTheoremsFromConst` except that it also returns the names of the generated\nlemmas.\nRemark: either the length of the arrays is the same,\nor the length of the first one is 0 and the length of the second one is 1. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L74-L101","name":"Lean.Meta.Simp.mkSimpContext'","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.mkSimpContext'","doc":"If `ctx == false`, the config argument is assumed to have type `Meta.Simp.Config`,\nand `Meta.Simp.ConfigCtx` otherwise.\nIf `ctx == false`, the `discharge` option must be none\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L58-L64","name":"Lean.Meta.Simp.getPropHyps","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.getPropHyps","doc":"Return all propositions in the local context. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L54-L55","name":"Lean.Meta.Simp.mkCast","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.mkCast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L48-L52","name":"Lean.Meta.Simp.mkEqSymm","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.mkEqSymm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L36-L46","name":"Lean.Meta.Simp.instToFormatSimpTheorems","kind":"instance","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.Simp.instToFormatSimpTheorems","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L28-L29","name":"Lean.Meta.DiscrTree.getElements","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.DiscrTree.getElements","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L24-L26","name":"Lean.Meta.DiscrTree.Trie.getElements","kind":"opaque","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.Meta.DiscrTree.Trie.getElements","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Lean/Meta/Simp.lean#L17-L18","name":"Lean.PHashSet.toList","kind":"def","docLink":"./Mathlib/Lean/Meta/Simp.html#Lean.PHashSet.toList","doc":""}]}