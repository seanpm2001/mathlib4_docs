{"name":"Mathlib.Data.PFunctor.Multivariate.M","instances":[{"typeNames":["MvPFunctor.M.Path"],"name":"MvPFunctor.M.Path.inhabited","className":"Inhabited"},{"typeNames":["MvPFunctor.M"],"name":"MvPFunctor.mvfunctorM","className":"MvFunctor"},{"typeNames":["MvPFunctor.M"],"name":"MvPFunctor.inhabitedM","className":"Inhabited"}],"imports":["Init","Mathlib.Data.PFunctor.Multivariate.Basic","Mathlib.Data.PFunctor.Univariate.M"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L381-L386","name":"MvPFunctor.M.map_dest","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.map_dest","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L370-L376","name":"MvPFunctor.M.dest_map","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L352-L365","name":"MvPFunctor.M.bisim'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.bisim'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L318-L347","name":"MvPFunctor.M.bisim₀","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.bisim₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L282-L313","name":"MvPFunctor.M.bisim","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.bisim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L267-L277","name":"MvPFunctor.M.bisim_lemma","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.bisim_lemma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L254-L262","name":"MvPFunctor.M.dest_corec","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest_corec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L246-L249","name":"MvPFunctor.M.dest_corec'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest_corec'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L238-L241","name":"MvPFunctor.M.dest_eq_dest'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest_eq_dest'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L230-L233","name":"MvPFunctor.M.dest'_eq_dest'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest'_eq_dest'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L224-L225","name":"MvPFunctor.M.mk","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.mk","doc":"Constructor for M-types "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L217-L218","name":"MvPFunctor.M.dest","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest","doc":"Destructor for M-types "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L209-L211","name":"MvPFunctor.M.dest'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.dest'","doc":"Destructor for M-type of `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L201-L203","name":"MvPFunctor.M.pathDestRight","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.pathDestRight","doc":"Implementation of destructor for M-type of `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L193-L195","name":"MvPFunctor.M.pathDestLeft","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.pathDestLeft","doc":"Implementation of destructor for M-type of `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L186-L187","name":"MvPFunctor.M.corec","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.corec","doc":"Corecursor for M-type of `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L178-L180","name":"MvPFunctor.M.corec'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.corec'","doc":"Corecursor for M-type of `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L148-L172","name":"MvPFunctor.M.corecContents","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.corecContents","doc":"Using corecursion, construct the contents of an M-type "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L142-L142","name":"MvPFunctor.castLastB","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.castLastB","doc":"Proof of type equality as a function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L136-L136","name":"MvPFunctor.castDropB","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.castDropB","doc":"Proof of type equality as an arrow "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L128-L130","name":"MvPFunctor.M.corecShape","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.corecShape","doc":"construct through corecursion the shape of an M-type\nwithout its contents "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L119-L121","name":"MvPFunctor.inhabitedM","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.inhabitedM","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L114-L114","name":"MvPFunctor.mvfunctorM","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.mvfunctorM","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L108-L109","name":"MvPFunctor.M","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M","doc":"`n`-ary M-type for `P` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L100-L102","name":"MvPFunctor.mp","kind":"def","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.mp","doc":"Polynomial functor of the M-type of `P`. `A` is a data-less\npossibly infinite tree whereas, for a given `a : A`, `B a` is a valid\npath in tree `a` so that `mp.Obj α` is made of a tree and a function\nfrom its valid paths to the values it contains "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L82-L91","name":"MvPFunctor.M.Path.inhabited","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.Path.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L71-L77","name":"MvPFunctor.M.Path.child","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.Path.child","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L65-L70","name":"MvPFunctor.M.Path.root","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.Path.root","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Multivariate/M.lean#L64-L77","name":"MvPFunctor.M.Path","kind":"inductive","docLink":"./Mathlib/Data/PFunctor/Multivariate/M.html#MvPFunctor.M.Path","doc":"A path from the root of a tree to one of its node "}]}