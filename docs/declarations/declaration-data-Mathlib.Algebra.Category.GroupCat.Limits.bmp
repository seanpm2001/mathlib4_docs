{"name":"Mathlib.Algebra.Category.GroupCat.Limits","instances":[{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.comp","AddGroupCatMax","instAddGroupCatLargeCategory","CategoryTheory.forget","AddGroupCat","AddGroupCat.concreteCategory"],"name":"AddGroupCat.addGroupObj","className":"AddGroup"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.comp","GroupCatMax","instGroupCatLargeCategory","CategoryTheory.forget","GroupCat","GroupCat.concreteCategory"],"name":"GroupCat.groupObj","className":"Group"},{"typeNames":["CategoryTheory.Limits.Cone.pt","TypeMax","CategoryTheory.types","CategoryTheory.Functor.comp","AddGroupCatMax","instAddGroupCatLargeCategory","CategoryTheory.forget","AddGroupCat","AddGroupCat.concreteCategory","CategoryTheory.Limits.Types.limitCone"],"name":"AddGroupCat.limitAddGroup","className":"AddGroup"},{"typeNames":["CategoryTheory.Limits.Cone.pt","TypeMax","CategoryTheory.types","CategoryTheory.Functor.comp","GroupCatMax","instGroupCatLargeCategory","CategoryTheory.forget","GroupCat","GroupCat.concreteCategory","CategoryTheory.Limits.Types.limitCone"],"name":"GroupCat.limitGroup","className":"Group"},{"typeNames":["AddGroupCatMax","instAddGroupCatLargeCategory"],"name":"AddGroupCat.hasLimitsOfSize","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["GroupCatMax","instGroupCatLargeCategory"],"name":"GroupCat.hasLimitsOfSize","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["AddGroupCat","instAddGroupCatLargeCategory"],"name":"AddGroupCat.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["GroupCat","instGroupCatLargeCategory"],"name":"GroupCat.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["AddGroupCatMax","instAddGroupCatLargeCategory","AddMonCat","instAddMonCatLargeCategory","CategoryTheory.forget₂","AddGroupCatMax","AddMonCat","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory","instAddMonCatLargeCategory","AddMonCat.concreteCategory","AddGroupCat.hasForgetToAddMonCat"],"name":"AddGroupCat.forget₂AddMonPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["GroupCatMax","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.forget₂","GroupCatMax","MonCat","instGroupCatLargeCategory","GroupCat.concreteCategory","instMonCatLargeCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat"],"name":"GroupCat.forget₂MonPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddGroupCat","instAddGroupCatLargeCategory","AddMonCat","instAddMonCatLargeCategory","CategoryTheory.forget₂","AddGroupCat","AddMonCat","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory","instAddMonCatLargeCategory","AddMonCat.concreteCategory","AddGroupCat.hasForgetToAddMonCat"],"name":"AddGroupCat.forget₂MonPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["GroupCat","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.forget₂","GroupCat","MonCat","instGroupCatLargeCategory","GroupCat.concreteCategory","instMonCatLargeCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat"],"name":"GroupCat.forget₂MonPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddGroupCatMax","instAddGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","AddGroupCatMax","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory"],"name":"AddGroupCat.forgetPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["GroupCatMax","instGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","GroupCatMax","instGroupCatLargeCategory","GroupCat.concreteCategory"],"name":"GroupCat.forgetPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddGroupCat","instAddGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","AddGroupCat","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory"],"name":"AddGroupCat.forgetPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["GroupCat","instGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","GroupCat","instGroupCatLargeCategory","GroupCat.concreteCategory"],"name":"GroupCat.forgetPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.comp","AddCommGroupCatMax","instAddCommGroupCatLargeCategory","CategoryTheory.forget","AddCommGroupCat.concreteCategory"],"name":"AddCommGroupCat.addCommGroupObj","className":"AddCommGroup"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.comp","CommGroupCatMax","instCommGroupCatLargeCategory","CategoryTheory.forget","CommGroupCat.concreteCategory"],"name":"CommGroupCat.commGroupObj","className":"CommGroup"},{"typeNames":["CategoryTheory.Limits.Cone.pt","TypeMax","CategoryTheory.types","CategoryTheory.Functor.comp","AddCommGroupCat","instAddCommGroupCatLargeCategory","CategoryTheory.forget","AddCommGroupCatMax","AddCommGroupCat.concreteCategory","CategoryTheory.Limits.Types.limitCone"],"name":"AddCommGroupCat.limitAddCommGroup","className":"AddCommGroup"},{"typeNames":["CategoryTheory.Limits.Cone.pt","TypeMax","CategoryTheory.types","CategoryTheory.Functor.comp","CommGroupCat","instCommGroupCatLargeCategory","CategoryTheory.forget","CommGroupCatMax","CommGroupCat.concreteCategory","CategoryTheory.Limits.Types.limitCone"],"name":"CommGroupCat.limitCommGroup","className":"CommGroup"},{"typeNames":["AddCommGroupCatMax","instAddCommGroupCatLargeCategory","AddGroupCatMax","instAddGroupCatLargeCategory","CategoryTheory.forget₂","AddCommGroupCat","AddGroupCatMax","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory","AddCommGroupCat.hasForgetToAddGroup"],"name":"AddCommGroupCat.Forget₂.createsLimit","className":"CategoryTheory.CreatesLimit"},{"typeNames":["CommGroupCatMax","instCommGroupCatLargeCategory","GroupCatMax","instGroupCatLargeCategory","CategoryTheory.forget₂","CommGroupCat","GroupCatMax","instCommGroupCatLargeCategory","CommGroupCat.concreteCategory","instGroupCatLargeCategory","GroupCat.concreteCategory","CommGroupCat.hasForgetToGroup"],"name":"CommGroupCat.Forget₂.createsLimit","className":"CategoryTheory.CreatesLimit"},{"typeNames":["AddCommGroupCat","instAddCommGroupCatLargeCategory"],"name":"AddCommGroupCat.hasLimitsOfSize","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CommGroupCat","instCommGroupCatLargeCategory"],"name":"CommGroupCat.hasLimitsOfSize","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["AddCommGroupCat","instAddCommGroupCatLargeCategory"],"name":"AddCommGroupCat.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CommGroupCat","instCommGroupCatLargeCategory"],"name":"CommGroupCat.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["AddCommGroupCatMax","instAddCommGroupCatLargeCategory","AddGroupCatMax","instAddGroupCatLargeCategory","CategoryTheory.forget₂","AddCommGroupCatMax","AddGroupCatMax","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory","AddCommGroupCat.hasForgetToAddGroup"],"name":"AddCommGroupCat.forget₂AddGroupPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CommGroupCatMax","instCommGroupCatLargeCategory","GroupCatMax","instGroupCatLargeCategory","CategoryTheory.forget₂","CommGroupCatMax","GroupCatMax","instCommGroupCatLargeCategory","CommGroupCat.concreteCategory","instGroupCatLargeCategory","GroupCat.concreteCategory","CommGroupCat.hasForgetToGroup"],"name":"CommGroupCat.forget₂GroupPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddCommGroupCat","instAddCommGroupCatLargeCategory","AddGroupCat","instAddGroupCatLargeCategory","CategoryTheory.forget₂","AddCommGroupCat","AddGroupCat","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory","instAddGroupCatLargeCategory","AddGroupCat.concreteCategory","AddCommGroupCat.hasForgetToAddGroup"],"name":"AddCommGroupCat.forget₂AddGroupPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CommGroupCat","instCommGroupCatLargeCategory","GroupCat","instGroupCatLargeCategory","CategoryTheory.forget₂","CommGroupCat","GroupCat","instCommGroupCatLargeCategory","CommGroupCat.concreteCategory","instGroupCatLargeCategory","GroupCat.concreteCategory","CommGroupCat.hasForgetToGroup"],"name":"CommGroupCat.forget₂GroupPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddCommGroupCat","instAddCommGroupCatLargeCategory","AddCommMonCat","instAddCommMonCatLargeCategory","CategoryTheory.forget₂","AddCommGroupCat","AddCommMonCat","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory","instAddCommMonCatLargeCategory","AddCommMonCat.concreteCategory","AddCommGroupCat.hasForgetToAddCommMonCat"],"name":"AddCommGroupCat.forget₂AddCommMonPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CommGroupCat","instCommGroupCatLargeCategory","CommMonCat","instCommMonCatLargeCategory","CategoryTheory.forget₂","CommGroupCat","CommMonCat","instCommGroupCatLargeCategory","CommGroupCat.concreteCategory","instCommMonCatLargeCategory","CommMonCat.concreteCategory","CommGroupCat.hasForgetToCommMonCat"],"name":"CommGroupCat.forget₂CommMonPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddCommGroupCatMax","instAddCommGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","AddCommGroupCatMax","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory"],"name":"AddCommGroupCat.forgetPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CommGroupCatMax","instCommGroupCatLargeCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","CommGroupCatMax","instCommGroupCatLargeCategory","CommGroupCat.concreteCategory"],"name":"CommGroupCat.forgetPreservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"}],"imports":["Init","Mathlib.Algebra.Category.MonCat.Limits","Mathlib.Algebra.Category.GroupCat.Preadditive","Mathlib.CategoryTheory.Over","Mathlib.GroupTheory.Subgroup.Basic","Mathlib.CategoryTheory.ConcreteCategory.Elementwise","Mathlib.CategoryTheory.ConcreteCategory.ReflectsIso"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L474-L476","name":"AddCommGroupCat.kernelIsoKerOver","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKerOver","doc":"The categorical kernel inclusion for `f : G ⟶ H`, as an object over `G`,\nagrees with the `subtype` map.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L473-L473","name":"AddCommGroupCat.kernelIsoKerOver_hom_left_apply_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKerOver_hom_left_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L473-L473","name":"AddCommGroupCat.kernelIsoKerOver_inv_left_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKerOver_inv_left_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L461-L464","name":"AddCommGroupCat.kernelIsoKer_inv_comp_ι","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKer_inv_comp_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L455-L456","name":"AddCommGroupCat.kernelIsoKer_hom_comp_subtype","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKer_hom_comp_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L416-L450","name":"AddCommGroupCat.kernelIsoKer","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.kernelIsoKer","doc":"The categorical kernel of a morphism in `AddCommGroupCat`\nagrees with the usual group-theoretical kernel.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L391-L400","name":"CommGroupCat.forgetPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.forgetPreservesLimitsOfSize","doc":"The forgetful functor from commutative groups to types preserves all limits. (That is, the\nunderlying types could have been computed instead as limits in the category of types.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L387-L390","name":"AddCommGroupCat.forgetPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forgetPreservesLimits","doc":"The forgetful functor from additive commutative groups to types preserves all limits.\n(That is, the underlying types could have been computed instead as limits in the category of\ntypes.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L387-L390","name":"AddCommGroupCat.forgetPreservesLimits.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forgetPreservesLimits.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L373-L378","name":"CommGroupCat.forget₂CommMonPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.forget₂CommMonPreservesLimitsOfSize","doc":"The forgetful functor from commutative groups to commutative monoids preserves all limits.\n(That is, the underlying commutative monoids could have been computed instead as limits\nin the category of commutative monoids.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L369-L372","name":"AddCommGroupCat.forget₂AddCommMonPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forget₂AddCommMonPreservesLimits","doc":"The forgetful functor from additive commutative groups to additive commutative monoids\npreserves all limits. (That is, the underlying additive commutative monoids could have been\ncomputed instead as limits in the category of additive commutative monoids.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L357-L359","name":"CommGroupCat.forget₂CommMonPreservesLimitsAux","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.forget₂CommMonPreservesLimitsAux","doc":"An auxiliary declaration to speed up typechecking.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L355-L356","name":"AddCommGroupCat.forget₂AddCommMonPreservesLimitsAux","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forget₂AddCommMonPreservesLimitsAux","doc":"An auxiliary declaration to speed up typechecking."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L345-L347","name":"CommGroupCat.forget₂GroupPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.forget₂GroupPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L344-L344","name":"AddCommGroupCat.forget₂AddGroupPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forget₂AddGroupPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L336-L338","name":"CommGroupCat.forget₂GroupPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.forget₂GroupPreservesLimitsOfSize","doc":"The forgetful functor from commutative groups to groups preserves all limits.\n(That is, the underlying group could have been computed instead as limits in the category\nof groups.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L332-L335","name":"AddCommGroupCat.forget₂AddGroupPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forget₂AddGroupPreservesLimitsOfSize","doc":"The forgetful functor from additive commutative groups to groups preserves all limits.\n(That is, the underlying group could have been computed instead as limits in the category\n  of additive groups.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L332-L335","name":"AddCommGroupCat.forget₂AddGroupPreservesLimitsOfSize.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.forget₂AddGroupPreservesLimitsOfSize.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L321-L322","name":"CommGroupCat.hasLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.hasLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L320-L320","name":"AddCommGroupCat.hasLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.hasLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L311-L314","name":"CommGroupCat.hasLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.hasLimitsOfSize","doc":"The category of commutative groups has all limits. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L310-L310","name":"AddCommGroupCat.hasLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.hasLimitsOfSize","doc":"The category of additive commutative groups has all limits."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L310-L310","name":"AddCommGroupCat.hasLimitsOfSize.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.hasLimitsOfSize.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L301-L303","name":"CommGroupCat.limitConeIsLimit","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.limitConeIsLimit","doc":"The chosen cone is a limit cone.\n(Generally, you'll just want to use `limit.cone F`.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L298-L300","name":"AddCommGroupCat.limitConeIsLimit","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.limitConeIsLimit","doc":"The chosen cone is a limit cone.\n(Generally, you'll just want to use `limit.cone F`.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L288-L289","name":"CommGroupCat.limitCone","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.limitCone","doc":"A choice of limit cone for a functor into `CommGroupCat`.\n(Generally, you'll just want to use `limit F`.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L285-L287","name":"AddCommGroupCat.limitCone","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.limitCone","doc":"A choice of limit cone for a functor into `AddCommGroupCat`.\n(Generally, you'll just want to use `limit F`.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L285-L287","name":"AddCommGroupCat.limitCone.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.limitCone.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L262-L276","name":"CommGroupCat.Forget₂.createsLimit","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.Forget₂.createsLimit","doc":"We show that the forgetful functor `CommGroupCat ⥤ GroupCat` creates limits.\n\nAll we need to do is notice that the limit point has a `CommGroup` instance available,\nand then reuse the existing limit.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L258-L261","name":"AddCommGroupCat.Forget₂.createsLimit.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.Forget₂.createsLimit.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L258-L261","name":"AddCommGroupCat.Forget₂.createsLimit.proof_3","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.Forget₂.createsLimit.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L258-L261","name":"AddCommGroupCat.Forget₂.createsLimit","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.Forget₂.createsLimit","doc":"We show that the forgetful functor `AddCommGroupCat ⥤ AddGroupCat` creates limits.\n\nAll we need to do is notice that the limit point has an `AddCommGroup` instance available,\nand then reuse the existing limit."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L258-L261","name":"AddCommGroupCat.Forget₂.createsLimit.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.Forget₂.createsLimit.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L243-L247","name":"CommGroupCat.limitCommGroup","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.limitCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L242-L242","name":"AddCommGroupCat.limitAddCommGroup","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.limitAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L233-L236","name":"CommGroupCat.commGroupObj","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCat.commGroupObj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L232-L232","name":"AddCommGroupCat.addCommGroupObj","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCat.addCommGroupObj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L228-L228","name":"CommGroupCatMax","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#CommGroupCatMax","doc":"An alias for `CommGroupCat.{max u v}`, to deal around unification issues. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L226-L227","name":"AddCommGroupCatMax","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddCommGroupCatMax","doc":"An alias for `AddCommGroupCat.{max u v}`, to deal around unification issues."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L215-L216","name":"GroupCat.forgetPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.forgetPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L214-L214","name":"AddGroupCat.forgetPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forgetPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L197-L208","name":"GroupCat.forgetPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.forgetPreservesLimitsOfSize","doc":"The forgetful functor from groups to types preserves all limits.\n\nThis means the underlying type of a limit can be computed as a limit in the category of types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L193-L196","name":"AddGroupCat.forgetPreservesLimitsOfSize.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forgetPreservesLimitsOfSize.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L193-L196","name":"AddGroupCat.forgetPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forgetPreservesLimitsOfSize","doc":"The forgetful functor from additive groups to types preserves all limits.\n\nThis means the underlying type of a limit can be computed as a limit in the category of types."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L182-L184","name":"GroupCat.forget₂MonPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.forget₂MonPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L181-L181","name":"AddGroupCat.forget₂MonPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forget₂MonPreservesLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L169-L175","name":"GroupCat.forget₂MonPreservesLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.forget₂MonPreservesLimitsOfSize","doc":"The forgetful functor from groups to monoids preserves all limits.\n\nThis means the underlying monoid of a limit can be computed as a limit in the category of monoids.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L164-L168","name":"AddGroupCat.forget₂AddMonPreservesLimits.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forget₂AddMonPreservesLimits.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L164-L168","name":"AddGroupCat.forget₂AddMonPreservesLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.forget₂AddMonPreservesLimits","doc":"The forgetful functor from additive groups to additive monoids preserves all limits.\n\nThis means the underlying additive monoid of a limit can be computed as a limit in the category of\nadditive monoids."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L153-L154","name":"GroupCat.hasLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.hasLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L152-L152","name":"AddGroupCat.hasLimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.hasLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L140-L146","name":"GroupCat.hasLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.hasLimitsOfSize","doc":"The category of groups has all limits. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L139-L139","name":"AddGroupCat.hasLimitsOfSize.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.hasLimitsOfSize.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L139-L139","name":"AddGroupCat.hasLimitsOfSize","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.hasLimitsOfSize","doc":"The category of additive groups has all limits."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L131-L132","name":"GroupCat.limitConeIsLimit","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.limitConeIsLimit","doc":"The chosen cone is a limit cone.\n(Generally, you'll just want to use `limit.cone F`.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L129-L130","name":"AddGroupCat.limitConeIsLimit","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.limitConeIsLimit","doc":"The chosen cone is a limit cone.\n(Generally, you'll just want to use `limit.cone F`.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L115-L120","name":"GroupCat.limitCone","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.limitCone","doc":"A choice of limit cone for a functor into `GroupCat`.\n(Generally, you'll just want to use `limit F`.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L113-L114","name":"AddGroupCat.limitCone","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.limitCone","doc":"A choice of limit cone for a functor into `GroupCat`.\n(Generally, you'll just want to use `limit F`.)"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L113-L114","name":"AddGroupCat.limitCone.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.limitCone.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L83-L86","name":"AddGroupCat.Forget₂.createsLimit.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.Forget₂.createsLimit.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L83-L86","name":"AddGroupCat.Forget₂.createsLimit.proof_3","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.Forget₂.createsLimit.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L83-L86","name":"AddGroupCat.Forget₂.createsLimit.proof_4","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.Forget₂.createsLimit.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L83-L86","name":"AddGroupCat.Forget₂.createsLimit.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.Forget₂.createsLimit.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L83-L86","name":"AddGroupCat.Forget₂.createsLimit.proof_5","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.Forget₂.createsLimit.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L70-L73","name":"GroupCat.limitGroup","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.limitGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L69-L69","name":"AddGroupCat.limitAddGroup","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.limitAddGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L57-L63","name":"GroupCat.sectionsSubgroup","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.sectionsSubgroup","doc":"The flat sections of a functor into `GroupCat` form a subgroup of all sections.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L55-L56","name":"AddGroupCat.sectionsAddSubgroup.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.sectionsAddSubgroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L55-L56","name":"AddGroupCat.sectionsAddSubgroup.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.sectionsAddSubgroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L55-L56","name":"AddGroupCat.sectionsAddSubgroup","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.sectionsAddSubgroup","doc":"The flat sections of a functor into `AddGroupCat` form an additive subgroup of all sections."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L45-L47","name":"GroupCat.groupObj","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCat.groupObj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L44-L44","name":"AddGroupCat.addGroupObj","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCat.addGroupObj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L39-L39","name":"GroupCatMax","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#GroupCatMax","doc":"An alias for `GroupCat.{max u v}`, to deal around unification issues. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Limits.lean#L37-L38","name":"AddGroupCatMax","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Limits.html#AddGroupCatMax","doc":"An alias for `AddGroupCat.{max u v}`, to deal around unification issues."}]}