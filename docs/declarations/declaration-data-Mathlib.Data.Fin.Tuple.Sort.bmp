{"name":"Mathlib.Data.Fin.Tuple.Sort","instances":[],"imports":["Init","Mathlib.Data.Finset.Sort","Mathlib.Data.List.FinRange","Mathlib.Data.Prod.Lex","Mathlib.GroupTheory.Perm.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L182-L183","name":"Tuple.antitone_pair_of_not_sorted","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.antitone_pair_of_not_sorted","doc":"If the tuple `f` is not the same as `f ∘ sort f`, then `f` has a pair of strictly decreasing\nentries. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L174-L177","name":"Tuple.antitone_pair_of_not_sorted'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.antitone_pair_of_not_sorted'","doc":"If a permutation `f ∘ σ` of the tuple `f` is not the same as `f ∘ sort f`, then `f ∘ σ`\nhas a pair of strictly decreasing entries. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L167-L169","name":"Tuple.comp_perm_comp_sort_eq_comp_sort","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.comp_perm_comp_sort_eq_comp_sort","doc":"The sorted versions of a tuple `f` and of any permutation of `f` agree. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L162-L163","name":"Tuple.comp_sort_eq_comp_iff_monotone","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.comp_sort_eq_comp_iff_monotone","doc":"A permutation of a tuple `f` is `f` sorted if and only if it is monotone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L155-L158","name":"Tuple.sort_eq_refl_iff_monotone","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.sort_eq_refl_iff_monotone","doc":"The permutation that sorts `f` is the identity if and only if `f` is monotone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L145-L151","name":"Tuple.eq_sort_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.eq_sort_iff","doc":"A permutation `σ` equals `sort f` if and only if `f ∘ σ` is monotone and whenever `i < j`\nand `f (σ i) = f (σ j)`, then `σ i < σ j`. This means that `sort f` is the lexicographically\nsmallest permutation `σ` such that `f ∘ σ` is monotone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L133-L139","name":"Tuple.eq_sort_iff'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.eq_sort_iff'","doc":"A permutation `σ` equals `sort f` if and only if the map `i ↦ (f (σ i), σ i)` is\nstrictly monotone (w.r.t. the lexicographic ordering on the target). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L122-L126","name":"Tuple.unique_monotone","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.unique_monotone","doc":"If two permutations of a tuple `f` are both monotone, then they are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L108-L110","name":"Tuple.monotone_sort","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.monotone_sort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L102-L105","name":"Tuple.monotone_proj","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.monotone_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L98-L99","name":"Tuple.self_comp_sort","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.self_comp_sort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L93-L95","name":"Tuple.graphEquiv₂_apply","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graphEquiv₂_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L89-L90","name":"Tuple.sort","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.sort","doc":"`sort f` is the permutation that orders `Fin n` according to the order of the outputs of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L84-L85","name":"Tuple.graphEquiv₂","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graphEquiv₂","doc":"`graphEquiv₂ f` is an equivalence between `Fin n` and `graph f` that respects the order.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L78-L79","name":"Tuple.proj_equiv₁'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.proj_equiv₁'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L65-L74","name":"Tuple.graphEquiv₁","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graphEquiv₁","doc":"`graphEquiv₁ f` is the natural equivalence between `Fin n` and `graph f`,\nmapping `i` to `(f i, i)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L53-L60","name":"Tuple.graph.card","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graph.card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L49-L49","name":"Tuple.graph.proj","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graph.proj","doc":"Given `p : α ×ₗ (Fin n) := (f i, i)` with `p ∈ graph f`,\n`graph.proj p` is defined to be `f i`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Sort.lean#L42-L43","name":"Tuple.graph","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Sort.html#Tuple.graph","doc":"`graph f` produces the finset of pairs `(f i, i)`\nequipped with the lexicographic order.\n"}]}