{"name":"Mathlib.Topology.VectorBundle.Basic","instances":[{"typeNames":["Trivialization.toPretrivialization","Bundle.TotalSpace","Bundle.TotalSpace.proj"],"name":"Trivialization.toPretrivialization.isLinear","className":"Pretrivialization.IsLinear"},{"typeNames":["DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NontriviallyNormedField.toNormedField","NormedAddCommGroup.toSeminormedAddCommGroup"],"name":"trivialization_linear","className":"Trivialization.IsLinear"},{"typeNames":["VectorBundleCore"],"name":"instInhabitedVectorBundleCore","className":"Inhabited"},{"typeNames":["VectorBundleCore.Fiber"],"name":"VectorBundleCore.topologicalSpaceFiber","className":"TopologicalSpace"},{"typeNames":["VectorBundleCore.Fiber"],"name":"VectorBundleCore.addCommGroupFiber","className":"AddCommGroup"},{"typeNames":["VectorBundleCore.Fiber","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","VectorBundleCore.Fiber","VectorBundleCore.addCommGroupFiber"],"name":"VectorBundleCore.moduleFiber","className":"Module"},{"typeNames":["VectorBundleCore.TotalSpace"],"name":"VectorBundleCore.toTopologicalSpace","className":"TopologicalSpace"},{"typeNames":["VectorBundleCore.Fiber","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","VectorBundleCore.toTopologicalSpace","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NontriviallyNormedField.toNormedField","NormedAddCommGroup.toSeminormedAddCommGroup","AddCommGroup.toAddCommMonoid","VectorBundleCore.Fiber","VectorBundleCore.addCommGroupFiber","VectorBundleCore.moduleFiber","VectorBundleCore.localTriv"],"name":"VectorBundleCore.localTriv.isLinear","className":"Trivialization.IsLinear"},{"typeNames":["UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","VectorBundleCore.Fiber","VectorBundleCore.toTopologicalSpace","VectorBundleCore.topologicalSpaceFiber"],"name":"VectorBundleCore.fiberBundle","className":"FiberBundle"},{"typeNames":["VectorBundleCore.Fiber","AddCommGroup.toAddCommMonoid","VectorBundleCore.Fiber","VectorBundleCore.addCommGroupFiber","VectorBundleCore.moduleFiber","VectorBundleCore.toTopologicalSpace","VectorBundleCore.topologicalSpaceFiber","VectorBundleCore.fiberBundle"],"name":"VectorBundleCore.vectorBundle","className":"VectorBundle"}],"imports":["Init","Mathlib.Analysis.NormedSpace.BoundedLinearMaps","Mathlib.Topology.FiberBundle.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L1051-L1058","name":"VectorBundleCore.inCoordinates_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.inCoordinates_eq","doc":"Rewrite `ContinuousLinearMap.inCoordinates` in a `VectorBundleCore`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L1039-L1047","name":"ContinuousLinearMap.inCoordinates_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#ContinuousLinearMap.inCoordinates_eq","doc":"Rewrite `ContinuousLinearMap.inCoordinates` using continuous linear equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L1031-L1033","name":"ContinuousLinearMap.inCoordinates","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#ContinuousLinearMap.inCoordinates","doc":"When `ϕ` is a continuous (semi)linear map between the fibers `E x` and `E' y` of two vector\nbundles `E` and `E'`, `ContinuousLinearMap.inCoordinates F E F' E' x₀ x y₀ y ϕ` is a coordinate\nchange of this continuous linear map w.r.t. the chart around `x₀` and the chart around `y₀`.\n\nIt is defined by composing `ϕ` with appropriate coordinate changes given by the vector bundles\n`E` and `E'`.\nWe use the operations `Trivialization.continuousLinearMapAt` and `Trivialization.symmL` in the\ndefinition, instead of `Trivialization.continuousLinearEquivAt`, so that\n`ContinuousLinearMap.inCoordinates` is defined everywhere (but see\n`ContinuousLinearMap.inCoordinates_eq`).\n\nThis is the (second component of the) underlying function of a trivialization of the hom-bundle\n(see `hom_trivialization_at_apply`). However, note that `ContinuousLinearMap.inCoordinates` is\ndefined even when `x` and `y` live in different base sets.\nTherefore, it is is also convenient when working with the hom-bundle between pulled back bundles.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L976-L991","name":"VectorPrebundle.toVectorBundle","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.toVectorBundle","doc":"Make a `VectorBundle` from a `VectorPrebundle`.  Concretely this means\nthat, given a `VectorPrebundle` structure for a sigma-type `E` -- which consists of a\nnumber of \"pretrivializations\" identifying parts of `E` with product spaces `U × F` -- one\nestablishes that for the topology constructed on the sigma-type using\n`VectorPrebundle.totalSpaceTopology`, these \"pretrivializations\" are actually\n\"trivializations\" (i.e., homeomorphisms with respect to the constructed topology). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L966-L967","name":"VectorPrebundle.toFiberBundle","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.toFiberBundle","doc":"Make a `FiberBundle` from a `VectorPrebundle`; auxiliary construction for\n`VectorPrebundle.toVectorBundle`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L959-L961","name":"VectorPrebundle.continuous_totalSpaceMk","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.continuous_totalSpaceMk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L953-L955","name":"VectorPrebundle.totalSpaceMk_preimage_source","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.totalSpaceMk_preimage_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L947-L949","name":"VectorPrebundle.mem_trivialization_at_source","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.mem_trivialization_at_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L937-L942","name":"VectorPrebundle.linear_trivializationOfMemPretrivializationAtlas","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.linear_trivializationOfMemPretrivializationAtlas","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L931-L934","name":"VectorPrebundle.trivializationOfMemPretrivializationAtlas","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.trivializationOfMemPretrivializationAtlas","doc":"Promotion from a `Pretrivialization` in the `pretrivializationAtlas` of a\n`VectorPrebundle` to a `Trivialization`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L925-L926","name":"VectorPrebundle.totalSpaceTopology","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.totalSpaceTopology","doc":"Topology on the total space that will make the prebundle into a bundle. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L910-L921","name":"VectorPrebundle.toFiberPrebundle","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.toFiberPrebundle","doc":"Natural identification of `VectorPrebundle` as a `FiberPrebundle`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L898-L906","name":"VectorPrebundle.mk_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.mk_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L891-L895","name":"VectorPrebundle.coordChange_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.coordChange_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L885-L888","name":"VectorPrebundle.continuousOn_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.continuousOn_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L880-L882","name":"VectorPrebundle.coordChange","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.coordChange","doc":"A randomly chosen coordinate change on a `VectorPrebundle`, given by\nthe field `exists_coordChange`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L871-L871","name":"VectorPrebundle.totalSpaceMk_inducing","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.totalSpaceMk_inducing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L868-L868","name":"VectorPrebundle.exists_coordChange","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.exists_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L867-L867","name":"VectorPrebundle.pretrivialization_mem_atlas","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.pretrivialization_mem_atlas","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L866-L866","name":"VectorPrebundle.mem_base_pretrivializationAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.mem_base_pretrivializationAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L865-L865","name":"VectorPrebundle.pretrivializationAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.pretrivializationAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L864-L864","name":"VectorPrebundle.pretrivialization_linear'","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.pretrivialization_linear'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L863-L863","name":"VectorPrebundle.pretrivializationAtlas","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.pretrivializationAtlas","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L862-L871","name":"VectorPrebundle","kind":"structure","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle","doc":"This structure permits to define a vector bundle when trivializations are given as local\nequivalences but there is not yet a topology on the total space or the fibers.\nThe total space is hence given a topology in such a way that there is a fiber bundle structure for\nwhich the local equivalences are also local homeomorphisms and hence vector bundle trivializations.\nThe topology on the fibers is induced from the one on the total space.\n\nThe field `exists_coordChange` is stated as an existential statement (instead of 3 separate\nfields), since it depends on propositional information (namely `e e' ∈ pretrivializationAtlas`).\nThis makes it inconvenient to explicitly define a `coordChange` function when constructing a\n`VectorPrebundle`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L828-L833","name":"VectorBundleCore.trivializationAt_coordChange_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.trivializationAt_coordChange_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L821-L823","name":"VectorBundleCore.trivializationAt_symmL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.trivializationAt_symmL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L812-L816","name":"VectorBundleCore.localTriv_symmL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_symmL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L804-L808","name":"VectorBundleCore.trivializationAt_continuousLinearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.trivializationAt_continuousLinearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L796-L800","name":"VectorBundleCore.localTriv_continuousLinearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_continuousLinearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L789-L790","name":"VectorBundleCore.isOpenMap_proj","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.isOpenMap_proj","doc":"The projection on the base of a vector bundle created from core is an open map "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L784-L785","name":"VectorBundleCore.continuous_proj","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.continuous_proj","doc":"The projection on the base of a vector bundle created from core is continuous "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L771-L779","name":"VectorBundleCore.vectorBundle","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.vectorBundle","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L767-L768","name":"VectorBundleCore.fiberBundle","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.fiberBundle","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L763-L764","name":"VectorBundleCore.mem_localTrivAt_baseSet","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_localTrivAt_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L758-L759","name":"VectorBundleCore.localTrivAt_apply_mk","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTrivAt_apply_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L753-L754","name":"VectorBundleCore.localTrivAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTrivAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L747-L749","name":"VectorBundleCore.mem_source_at","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_source_at","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L742-L743","name":"VectorBundleCore.localTrivAt_def","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTrivAt_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L737-L738","name":"VectorBundleCore.localTrivAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTrivAt","doc":"Preferred local trivialization of a vector bundle constructed from core, at a given point, as\na bundle trivialization "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L729-L732","name":"VectorBundleCore.localTriv_coordChange_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_coordChange_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L723-L725","name":"VectorBundleCore.localTriv_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L717-L719","name":"VectorBundleCore.localTriv_symm_fst","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_symm_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L711-L713","name":"VectorBundleCore.mem_localTriv_target","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_localTriv_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L706-L707","name":"VectorBundleCore.baseSet_at","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.baseSet_at","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L701-L702","name":"VectorBundleCore.mem_localTriv_source","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_localTriv_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L692-L695","name":"VectorBundleCore.localTriv.isLinear","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv.isLinear","doc":"The standard local trivializations of a vector bundle constructed from core are linear. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L686-L688","name":"VectorBundleCore.localTriv_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L680-L681","name":"VectorBundleCore.localTriv","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.localTriv","doc":"One of the standard local trivializations of a vector bundle constructed from core, taken by\nconsidering this in particular as a fiber bundle constructed from core. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L674-L675","name":"VectorBundleCore.coe_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.coe_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L667-L668","name":"VectorBundleCore.toTopologicalSpace","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.toTopologicalSpace","doc":"Topological structure on the total space of a vector bundle created from core, designed so\nthat all the local trivialization are continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L660-L662","name":"VectorBundleCore.mem_trivChange_source","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_trivChange_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L655-L656","name":"VectorBundleCore.trivChange","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.trivChange","doc":"Local homeomorphism version of the trivialization change. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L650-L651","name":"VectorBundleCore.TotalSpace","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.TotalSpace","doc":"The total space of the vector bundle, as a convenience function for dot notation.\nIt is by definition equal to `Bundle.TotalSpace Z.fiber`, a.k.a. `Σ x, Z.fiber x` but with a\ndifferent name for typeclass inference. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L642-L643","name":"VectorBundleCore.proj","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.proj","doc":"The projection from the total space of a fiber bundle core, on its base. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L636-L637","name":"VectorBundleCore.moduleFiber","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.moduleFiber","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L632-L633","name":"VectorBundleCore.addCommGroupFiber","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.addCommGroupFiber","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L627-L628","name":"VectorBundleCore.topologicalSpaceFiber","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.topologicalSpaceFiber","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L623-L624","name":"VectorBundleCore.Fiber","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.Fiber","doc":"The fiber of a vector bundle core, as a convenience function for dot notation and\ntypeclass inference "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L617-L617","name":"VectorBundleCore.Base","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.Base","doc":"The base space of a vector bundle core, as a convenience function for dot notation"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L612-L612","name":"VectorBundleCore.Index","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.Index","doc":"The index set of a vector bundle core, as a convenience function for dot notation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L602-L607","name":"VectorBundleCore.coordChange_linear_comp","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.coordChange_linear_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L589-L594","name":"VectorBundleCore.toFiberBundleCore","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.toFiberBundleCore","doc":"Natural identification to a `FiberBundleCore`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L588-L588","name":"VectorBundleCore.toFiberBundleCore_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.toFiberBundleCore_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L588-L588","name":"VectorBundleCore.toFiberBundleCore_indexAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.toFiberBundleCore_indexAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L588-L588","name":"VectorBundleCore.toFiberBundleCore_baseSet","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.toFiberBundleCore_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L579-L580","name":"instInhabitedVectorBundleCore","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#instInhabitedVectorBundleCore","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L568-L576","name":"trivialVectorBundleCore","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#trivialVectorBundleCore","doc":"The trivial vector bundle core, in which all the changes of coordinates are the\nidentity. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L562-L562","name":"VectorBundleCore.coordChange_comp","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.coordChange_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L561-L561","name":"VectorBundleCore.continuousOn_coordChange","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.continuousOn_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L560-L560","name":"VectorBundleCore.coordChange_self","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.coordChange_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L559-L559","name":"VectorBundleCore.coordChange","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L558-L558","name":"VectorBundleCore.mem_baseSet_at","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mem_baseSet_at","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L557-L557","name":"VectorBundleCore.indexAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.indexAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L556-L556","name":"VectorBundleCore.isOpen_baseSet","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.isOpen_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L555-L555","name":"VectorBundleCore.baseSet","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L554-L554","name":"VectorBundleCore.mk","kind":"ctor","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L554-L563","name":"VectorBundleCore","kind":"structure","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundleCore","doc":"Analogous construction of `FiberBundleCore` for vector bundles. This\nconstruction gives a way to construct vector bundles from a structure registering how\ntrivialization changes act on fibers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L536-L542","name":"Trivialization.comp_continuousLinearEquivAt_eq_coord_change","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.comp_continuousLinearEquivAt_eq_coord_change","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L523-L533","name":"Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symm","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L516-L518","name":"Trivialization.zeroSection","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.zeroSection","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L507-L513","name":"Trivialization.apply_eq_prod_continuousLinearEquivAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.apply_eq_prod_continuousLinearEquivAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L500-L502","name":"Trivialization.continuousLinearEquivAt_apply'","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearEquivAt_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L494-L496","name":"Trivialization.symm_continuousLinearEquivAt_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symm_continuousLinearEquivAt_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L488-L491","name":"Trivialization.coe_continuousLinearEquivAt_eq","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_continuousLinearEquivAt_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L476-L483","name":"Trivialization.continuousLinearEquivAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearEquivAt","doc":"In a vector bundle, a trivialization in the fiber (which is a priori only linear)\nis in fact a continuous linear equiv between the fibers and the model fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L475-L475","name":"Trivialization.continuousLinearEquivAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearEquivAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L475-L475","name":"Trivialization.continuousLinearEquivAt_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearEquivAt_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L465-L467","name":"Trivialization.continuousLinearMapAt_symmL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearMapAt_symmL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L459-L461","name":"Trivialization.symmL_continuousLinearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symmL_continuousLinearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L445-L453","name":"Trivialization.symmL","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symmL","doc":"Backwards map of `Trivialization.continuousLinearEquivAt`, defined everywhere. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L444-L444","name":"Trivialization.symmL_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symmL_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L432-L440","name":"Trivialization.continuousLinearMapAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearMapAt","doc":"Forward map of `Trivialization.continuousLinearEquivAt` (only propositionally equal),\ndefined everywhere (`0` outside domain). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L431-L431","name":"Trivialization.continuousLinearMapAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.continuousLinearMapAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L420-L424","name":"continuousOn_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#continuousOn_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L415-L417","name":"trivialization_linear","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#trivialization_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L407-L407","name":"VectorBundle.continuousOn_coordChange'","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle.continuousOn_coordChange'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L406-L406","name":"VectorBundle.trivialization_linear'","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle.trivialization_linear'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L405-L410","name":"VectorBundle","kind":"class","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle","doc":"The space `Bundle.TotalSpace E` (for `E : B → Type _` such that each `E x` is a topological\nvector space) has a topological vector space structure with fiber `F` (denoted with\n`VectorBundle R F E`) if around every point there is a fiber bundle trivialization which is linear\nin the fibers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L389-L390","name":"Bundle.zeroSection_snd","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Bundle.zeroSection_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L384-L385","name":"Bundle.zeroSection_proj","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Bundle.zeroSection_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L380-L380","name":"Bundle.zeroSection","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Bundle.zeroSection","doc":"The zero section of a vector bundle "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L363-L367","name":"Trivialization.coordChangeL_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coordChangeL_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L356-L359","name":"Trivialization.coordChangeL_apply'","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coordChangeL_apply'","doc":"A version of `Trivialization.coordChangeL_apply` that fully unfolds `coordChange`. The\nright-hand side is ugly, but has good definitional properties for specifically defined\ntrivializations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L346-L349","name":"Trivialization.apply_symm_apply_eq_coordChangeL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.apply_symm_apply_eq_coordChangeL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L335-L342","name":"Trivialization.mk_coordChangeL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.mk_coordChangeL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L328-L331","name":"Trivialization.coordChangeL_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coordChangeL_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L320-L324","name":"Trivialization.symm_coordChangeL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symm_coordChangeL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L312-L316","name":"Trivialization.coe_coordChangeL'","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_coordChangeL'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L305-L308","name":"Trivialization.coe_coordChangeL","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_coordChangeL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L277-L299","name":"Trivialization.coordChangeL","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coordChangeL","doc":"A coordinate change function between two trivializations, as a continuous linear equivalence.\nDefined to be the identity when `b` does not lie in the base set of both trivializations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L267-L269","name":"Trivialization.linearMapAt_symmₗ","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearMapAt_symmₗ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L262-L264","name":"Trivialization.symmₗ_linearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symmₗ_linearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L257-L259","name":"Trivialization.linearMapAt_def_of_not_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearMapAt_def_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L252-L254","name":"Trivialization.linearMapAt_def_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearMapAt_def_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L247-L249","name":"Trivialization.linearMapAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearMapAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L242-L244","name":"Trivialization.coe_linearMapAt_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_linearMapAt_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L237-L239","name":"Trivialization.coe_linearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_linearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L231-L232","name":"Trivialization.linearMapAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearMapAt","doc":"A fiberwise linear map equal to `e` on `e.baseSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L224-L225","name":"Trivialization.coe_symmₗ","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.coe_symmₗ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L218-L219","name":"Trivialization.symmₗ","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.symmₗ","doc":"A fiberwise linear inverse to `e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L210-L212","name":"Trivialization.linearEquivAt_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearEquivAt_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L204-L206","name":"Trivialization.linearEquivAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearEquivAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L196-L198","name":"Trivialization.linearEquivAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linearEquivAt","doc":"A trivialization for a vector bundle defines linear equivalences between the\nfibers and the model space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L187-L189","name":"Trivialization.toPretrivialization.isLinear","kind":"instance","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.toPretrivialization.isLinear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L181-L184","name":"Trivialization.linear","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L174-L174","name":"Trivialization.IsLinear.linear","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.IsLinear.linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L172-L173","name":"Trivialization.IsLinear.mk","kind":"ctor","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.IsLinear.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L172-L174","name":"Trivialization.IsLinear","kind":"class","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Trivialization.IsLinear","doc":"A mixin class for `Trivialization`, stating that a trivialization is fiberwise linear with\nrespect to given module structures on its fibers and the model fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L160-L163","name":"Pretrivialization.linearMapAt_symmₗ","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt_symmₗ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L154-L157","name":"Pretrivialization.symmₗ_linearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.symmₗ_linearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L149-L151","name":"Pretrivialization.linearMapAt_eq_zero","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L144-L146","name":"Pretrivialization.linearMapAt_def_of_not_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt_def_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L139-L141","name":"Pretrivialization.linearMapAt_def_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt_def_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L134-L136","name":"Pretrivialization.linearMapAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L129-L131","name":"Pretrivialization.coe_linearMapAt_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.coe_linearMapAt_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L123-L126","name":"Pretrivialization.coe_linearMapAt","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.coe_linearMapAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L117-L118","name":"Pretrivialization.linearMapAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearMapAt","doc":"A fiberwise linear map equal to `e` on `e.baseSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L106-L113","name":"Pretrivialization.linearEquivAt","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearEquivAt","doc":"A pretrivialization for a vector bundle defines linear equivalences between the\nfibers and the model space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L105-L105","name":"Pretrivialization.linearEquivAt_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearEquivAt_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L105-L105","name":"Pretrivialization.linearEquivAt_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linearEquivAt_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L94-L100","name":"Pretrivialization.symmₗ","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.symmₗ","doc":"A fiberwise linear inverse to `e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L93-L93","name":"Pretrivialization.symmₗ_apply","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.symmₗ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L84-L87","name":"Pretrivialization.linear","kind":"theorem","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L77-L77","name":"Pretrivialization.IsLinear.linear","kind":"def","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.IsLinear.linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L75-L76","name":"Pretrivialization.IsLinear.mk","kind":"ctor","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.IsLinear.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L75-L77","name":"Pretrivialization.IsLinear","kind":"class","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#Pretrivialization.IsLinear","doc":"A mixin class for `Pretrivialization`, stating that a pretrivialization is fiberwise linear with\nrespect to given module structures on its fibers and the model fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L1-L1","name":"VectorPrebundle.mk","kind":"ctor","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorPrebundle.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/VectorBundle/Basic.lean#L1-L1","name":"VectorBundle.mk","kind":"ctor","docLink":"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle.mk","doc":""}]}