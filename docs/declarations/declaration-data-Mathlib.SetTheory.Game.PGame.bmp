{"name":"Mathlib.SetTheory.Game.PGame","instances":[{"typeNames":["PGame","PGame.Subsequent"],"name":"PGame.instIsTransPGameSubsequent","className":"IsTrans"},{"typeNames":["PGame"],"name":"PGame.instWellFoundedRelationPGame","className":"WellFoundedRelation"},{"typeNames":["PGame"],"name":"PGame.instZeroPGame","className":"Zero"},{"typeNames":["PGame.LeftMoves","OfNat.ofNat","PGame","Zero.toOfNat0","PGame.instZeroPGame"],"name":"PGame.isEmpty_zero_leftMoves","className":"IsEmpty"},{"typeNames":["PGame.RightMoves","OfNat.ofNat","PGame","Zero.toOfNat0","PGame.instZeroPGame"],"name":"PGame.isEmpty_zero_rightMoves","className":"IsEmpty"},{"typeNames":["PGame"],"name":"PGame.instInhabitedPGame","className":"Inhabited"},{"typeNames":["PGame"],"name":"PGame.instOnePGame","className":"One"},{"typeNames":["PGame.LeftMoves","OfNat.ofNat","PGame","One.toOfNat1","PGame.instOnePGame"],"name":"PGame.uniqueOneLeftMoves","className":"Unique"},{"typeNames":["PGame.RightMoves","OfNat.ofNat","PGame","One.toOfNat1","PGame.instOnePGame"],"name":"PGame.isEmpty_one_rightMoves","className":"IsEmpty"},{"typeNames":["PGame"],"name":"PGame.le","className":"LE"},{"typeNames":["PGame"],"name":"PGame.instPreorderPGame","className":"Preorder"},{"typeNames":["PGame","PGame","PGame.Lf"],"name":"PGame.instIsIrreflPGameLf","className":"IsIrrefl"},{"typeNames":["PGame","PGame","PGame","PGame","LE.le","PGame.le","PGame","PGame.Lf","PGame","PGame.Lf"],"name":"PGame.instTransPGameLeLf","className":"Trans"},{"typeNames":["PGame","PGame","PGame","PGame","PGame.Lf","PGame","LE.le","PGame.le","PGame","PGame.Lf"],"name":"PGame.instTransPGameLfLeLe","className":"Trans"},{"typeNames":["PGame","PGame.Equiv"],"name":"PGame.instIsEquivPGameEquiv","className":"IsEquiv"},{"typeNames":["PGame"],"name":"PGame.setoid","className":"Setoid"},{"typeNames":["PGame","PGame","PGame","PGame","LE.le","PGame.le","PGame","HasEquiv.Equiv","instHasEquiv","PGame.setoid","PGame","LE.le","PGame.le"],"name":"PGame.instTransPGameLeLeEquivInstHasEquivSetoid","className":"Trans"},{"typeNames":["PGame","PGame","PGame","PGame","HasEquiv.Equiv","instHasEquiv","PGame.setoid","PGame","LE.le","PGame.le","PGame","LE.le","PGame.le"],"name":"PGame.instTransPGameEquivInstHasEquivSetoidLeLe","className":"Trans"},{"typeNames":["PGame","PGame","PGame","PGame","HasEquiv.Equiv","instHasEquiv","PGame.setoid","PGame","LT.lt","Preorder.toLT","PGame.instPreorderPGame","PGame","LT.lt","Preorder.toLT","PGame.instPreorderPGame"],"name":"PGame.instTransPGameEquivInstHasEquivSetoidLtToLTInstPreorderPGame","className":"Trans"},{"typeNames":["PGame","PGame","PGame.Fuzzy"],"name":"PGame.instIsSymmPGameFuzzy","className":"IsSymm"},{"typeNames":["PGame","PGame","PGame.Fuzzy"],"name":"PGame.instIsIrreflPGameFuzzy","className":"IsIrrefl"},{"typeNames":["PGame.Relabelling"],"name":"PGame.Relabelling.instInhabitedRelabelling","className":"Inhabited"},{"typeNames":["PGame.Relabelling","HasEquiv.Equiv","PGame","instHasEquiv","PGame.setoid"],"name":"PGame.instCoeRelabellingEquivPGameInstHasEquivSetoid","className":"Coe"},{"typeNames":["PGame"],"name":"PGame.instNegPGame","className":"Neg"},{"typeNames":["PGame"],"name":"PGame.instInvolutiveNegPGame","className":"InvolutiveNeg"},{"typeNames":["PGame"],"name":"PGame.instNegZeroClassPGame","className":"NegZeroClass"},{"typeNames":["PGame"],"name":"PGame.instAddPGame","className":"Add"},{"typeNames":["PGame"],"name":"PGame.instNatCastPGame","className":"NatCast"},{"typeNames":["PGame.LeftMoves","HAdd.hAdd","PGame","instHAdd","PGame.instAddPGame"],"name":"PGame.isEmpty_leftMoves_add","className":"IsEmpty"},{"typeNames":["PGame.RightMoves","HAdd.hAdd","PGame","instHAdd","PGame.instAddPGame"],"name":"PGame.isEmpty_rightMoves_add","className":"IsEmpty"},{"typeNames":["PGame.RightMoves","Nat.cast","PGame","PGame.instNatCastPGame"],"name":"PGame.isEmpty_nat_rightMoves","className":"IsEmpty"},{"typeNames":["PGame"],"name":"PGame.instSubPGame","className":"Sub"},{"typeNames":["PGame","PGame","Function.swap","PGame","HAdd.hAdd","instHAdd","PGame.instAddPGame","PGame","LE.le","PGame.le"],"name":"PGame.covariantClass_swap_add_le","className":"CovariantClass"},{"typeNames":["PGame","PGame","PGame","HAdd.hAdd","instHAdd","PGame.instAddPGame","PGame","LE.le","PGame.le"],"name":"PGame.covariantClass_add_le","className":"CovariantClass"},{"typeNames":["PGame","PGame","Function.swap","PGame","HAdd.hAdd","instHAdd","PGame.instAddPGame","PGame","LT.lt","Preorder.toLT","PGame.instPreorderPGame"],"name":"PGame.covariantClass_swap_add_lt","className":"CovariantClass"},{"typeNames":["PGame","PGame","PGame","HAdd.hAdd","instHAdd","PGame.instAddPGame","PGame","LT.lt","Preorder.toLT","PGame.instPreorderPGame"],"name":"PGame.covariantClass_add_lt","className":"CovariantClass"},{"typeNames":["PGame.LeftMoves","PGame.star"],"name":"PGame.uniqueStarLeftMoves","className":"Unique"},{"typeNames":["PGame.RightMoves","PGame.star"],"name":"PGame.uniqueStarRightMoves","className":"Unique"},{"typeNames":["PGame","PGame.instZeroPGame","PGame.instOnePGame","PGame.le"],"name":"PGame.instZeroLEOneClassPGameInstZeroPGameInstOnePGameLe","className":"ZeroLEOneClass"}],"imports":["Init","Mathlib.Data.Fin.Basic","Mathlib.Data.List.Basic","Mathlib.Logic.Relation","Mathlib.Order.GameAdd"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1920-L1921","name":"PGame.zero_lf_one","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lf_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1916-L1917","name":"PGame.instZeroLEOneClassPGameInstZeroPGameInstOnePGameLe","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instZeroLEOneClassPGameInstZeroPGameInstOnePGameLe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1912-L1913","name":"PGame.zero_lt_one","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lt_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1908-L1908","name":"PGame.neg_star","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1896-L1904","name":"PGame.star_fuzzy_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star_fuzzy_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1892-L1893","name":"PGame.uniqueStarRightMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.uniqueStarRightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1888-L1889","name":"PGame.uniqueStarLeftMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.uniqueStarLeftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1884-L1885","name":"PGame.star_moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star_moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1879-L1880","name":"PGame.star_moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star_moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1874-L1875","name":"PGame.star_rightMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1869-L1870","name":"PGame.star_leftMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star_leftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1864-L1865","name":"PGame.star","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.star","doc":"The pre-game `star`, which is fuzzy with zero. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1849-L1857","name":"PGame.lt_iff_sub_pos","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_iff_sub_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1838-L1846","name":"PGame.lf_iff_sub_zero_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_iff_sub_zero_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1827-L1835","name":"PGame.le_iff_sub_nonneg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_iff_sub_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1823-L1824","name":"PGame.sub_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.sub_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1819-L1820","name":"PGame.sub_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.sub_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1815-L1816","name":"PGame.sub_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.sub_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1811-L1812","name":"PGame.add_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1807-L1808","name":"PGame.add_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1802-L1804","name":"PGame.add_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1798-L1799","name":"PGame.add_lf_add_of_le_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_lf_add_of_le_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1794-L1795","name":"PGame.add_lf_add_of_lf_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_lf_add_of_lf_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1790-L1791","name":"PGame.covariantClass_add_lt","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.covariantClass_add_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1786-L1787","name":"PGame.covariantClass_swap_add_lt","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.covariantClass_swap_add_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1781-L1783","name":"PGame.add_lf_add_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_lf_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1765-L1777","name":"PGame.add_lf_add_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_lf_add_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1761-L1762","name":"PGame.covariantClass_add_le","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.covariantClass_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1757-L1758","name":"PGame.covariantClass_swap_add_le","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.covariantClass_swap_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1732-L1733","name":"PGame.sub_self_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.sub_self_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1728-L1729","name":"PGame.add_right_neg_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_right_neg_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1724-L1725","name":"PGame.zero_le_add_right_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le_add_right_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1720-L1721","name":"PGame.add_right_neg_le_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_right_neg_le_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1716-L1717","name":"PGame.add_left_neg_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_left_neg_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1711-L1713","name":"PGame.zero_le_add_left_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le_add_left_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1696-L1708","name":"PGame.add_left_neg_le_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_left_neg_le_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1692-L1693","name":"PGame.add_assoc_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_assoc_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1678-L1689","name":"PGame.addAssocRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.addAssocRelabelling","doc":"`(x + y) + z` has exactly the same moves as `x + (y + z)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1673-L1674","name":"PGame.add_comm_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_comm_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1669-L1670","name":"PGame.add_comm_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_comm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1661-L1666","name":"PGame.addCommRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.addCommRelabelling","doc":"`x + y` has exactly the same moves as `y + x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1656-L1657","name":"PGame.neg_add_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1646-L1653","name":"PGame.negAddRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.negAddRelabelling","doc":"`-(x + y)` has exactly the same moves as `-x + -y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1641-L1642","name":"PGame.Relabelling.subCongr","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.subCongr","doc":"If `w` has the same moves as `x` and `y` has the same moves as `z`,\nthen `w - y` has the same moves as `x - z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1635-L1636","name":"PGame.sub_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.sub_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1631-L1632","name":"PGame.instSubPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instSubPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1618-L1628","name":"PGame.Relabelling.addCongr","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.addCongr","doc":"If `w` has the same moves as `x` and `y` has the same moves as `z`,\nthen `w + y` has the same moves as `x + z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1608-L1613","name":"PGame.isEmpty_nat_rightMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_nat_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1599-L1605","name":"PGame.rightMoves_add_cases","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightMoves_add_cases","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1590-L1596","name":"PGame.leftMoves_add_cases","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftMoves_add_cases","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1583-L1587","name":"PGame.add_moveRight_inr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_moveRight_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1576-L1579","name":"PGame.mk_add_moveRight_inr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_add_moveRight_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1568-L1572","name":"PGame.add_moveLeft_inr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_moveLeft_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1561-L1564","name":"PGame.mk_add_moveLeft_inr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_add_moveLeft_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1553-L1557","name":"PGame.add_moveRight_inl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_moveRight_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1546-L1549","name":"PGame.mk_add_moveRight_inl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_add_moveRight_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1538-L1542","name":"PGame.add_moveLeft_inl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_moveLeft_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1531-L1534","name":"PGame.mk_add_moveLeft_inl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_add_moveLeft_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1526-L1527","name":"PGame.toRightMovesAdd","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toRightMovesAdd","doc":"Converts a right move for `x` or `y` into a right move for `x + y` and vice versa.\n\nEven though these types are the same (not definitionally so), this is the preferred way to convert\nbetween them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1518-L1519","name":"PGame.toLeftMovesAdd","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toLeftMovesAdd","doc":"Converts a left move for `x` or `y` into a left move for `x + y` and vice versa.\n\nEven though these types are the same (not definitionally so), this is the preferred way to convert\nbetween them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1510-L1511","name":"PGame.rightMoves_add","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightMoves_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1506-L1507","name":"PGame.leftMoves_add","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftMoves_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1502-L1503","name":"PGame.zero_add_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_add_equiv","doc":"`0 + x` is equivalent to `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1495-L1498","name":"PGame.zeroAddRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zeroAddRelabelling","doc":"`0 + x` has exactly the same moves as `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1490-L1491","name":"PGame.add_zero_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.add_zero_equiv","doc":"`x + 0` is equivalent to `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1482-L1486","name":"PGame.addZeroRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.addZeroRelabelling","doc":"`x + 0` has exactly the same moves as `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1473-L1478","name":"PGame.isEmpty_rightMoves_add","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_rightMoves_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1465-L1470","name":"PGame.isEmpty_leftMoves_add","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_leftMoves_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1461-L1462","name":"PGame.nat_succ","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.nat_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1457-L1458","name":"PGame.instNatCastPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instNatCastPGame","doc":"The pre-game `((0+1)+⋯)+1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1445-L1454","name":"PGame.instAddPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instAddPGame","doc":"The sum of `x = {xL | xR}` and `y = {yL | yR}` is `{xL + y, x + yL | xR + y, x + yR}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1439-L1439","name":"PGame.zero_fuzzy_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_fuzzy_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1435-L1435","name":"PGame.zero_equiv_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_equiv_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1431-L1431","name":"PGame.neg_fuzzy_zero_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_fuzzy_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1427-L1427","name":"PGame.neg_equiv_zero_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_equiv_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1423-L1423","name":"PGame.zero_lt_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lt_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1419-L1419","name":"PGame.neg_lt_zero_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lt_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1415-L1415","name":"PGame.zero_lf_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lf_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1411-L1411","name":"PGame.neg_lf_zero_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lf_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1407-L1407","name":"PGame.zero_le_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1403-L1403","name":"PGame.neg_le_zero_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_le_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1399-L1399","name":"PGame.lt_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1396-L1396","name":"PGame.lf_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1393-L1393","name":"PGame.le_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1389-L1390","name":"PGame.neg_fuzzy_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_fuzzy_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1385-L1386","name":"PGame.neg_equiv_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_equiv_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1382-L1382","name":"PGame.neg_lt_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lt_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1379-L1379","name":"PGame.neg_lf_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lf_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1376-L1376","name":"PGame.neg_le_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1372-L1373","name":"PGame.neg_fuzzy_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_fuzzy_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1366-L1368","name":"PGame.neg_equiv_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_equiv_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1361-L1362","name":"PGame.neg_lt_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lt_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1356-L1357","name":"PGame.neg_lf_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_lf_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1351-L1352","name":"PGame.neg_le_neg_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_le_neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1335-L1337","name":"PGame.Relabelling.negCongr","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.negCongr","doc":"If `x` has the same moves as `y`, then `-x` has the same moves as `-y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1330-L1331","name":"PGame.moveRight_neg_symm'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight_neg_symm'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1326-L1327","name":"PGame.moveRight_neg_symm","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight_neg_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1322-L1323","name":"PGame.moveLeft_neg_symm'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_neg_symm'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1318-L1319","name":"PGame.moveLeft_neg_symm","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_neg_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1312-L1315","name":"PGame.moveRight_neg'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight_neg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1306-L1308","name":"PGame.moveRight_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1301-L1303","name":"PGame.moveLeft_neg'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_neg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1295-L1297","name":"PGame.moveLeft_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1291-L1292","name":"PGame.toRightMovesNeg","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toRightMovesNeg","doc":"Turns a left move for `x` into a right move for `-x` and vice versa.\n\nEven though these types are the same (not definitionally so), this is the preferred way to convert\nbetween them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1283-L1284","name":"PGame.toLeftMovesNeg","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toLeftMovesNeg","doc":"Turns a right move for `x` into a left move for `-x` and vice versa.\n\nEven though these types are the same (not definitionally so), this is the preferred way to convert\nbetween them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1275-L1276","name":"PGame.rightMoves_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightMoves_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1271-L1272","name":"PGame.leftMoves_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftMoves_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1267-L1268","name":"PGame.isOption_neg_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isOption_neg_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1256-L1263","name":"PGame.isOption_neg","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isOption_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1235-L1253","name":"PGame.neg_ofLists","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_ofLists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1228-L1232","name":"PGame.instNegZeroClassPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instNegZeroClassPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1222-L1226","name":"PGame.instInvolutiveNegPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instInvolutiveNegPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1218-L1219","name":"PGame.neg_def","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1214-L1215","name":"PGame.instNegPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instNegPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1210-L1211","name":"PGame.neg","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.neg","doc":"The negation of `{L | R}` is `{-R | -L}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1200-L1203","name":"PGame.relabelRelabelling","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabelRelabelling","doc":"The game obtained by relabelling the next moves is a relabelling of the original game. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1195-L1196","name":"PGame.relabel_moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabel_moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1190-L1192","name":"PGame.relabel_moveRight'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabel_moveRight'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1185-L1186","name":"PGame.relabel_moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabel_moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1180-L1182","name":"PGame.relabel_moveLeft'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabel_moveLeft'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1175-L1176","name":"PGame.relabel","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.relabel","doc":"Replace the types indexing the next moves for Left and Right by equivalent types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1171-L1172","name":"PGame.instCoeRelabellingEquivPGameInstHasEquivSetoid","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instCoeRelabellingEquivPGameInstHasEquivSetoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1167-L1168","name":"PGame.Equiv.isEmpty","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.isEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1161-L1162","name":"PGame.Relabelling.isEmpty","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.isEmpty","doc":"Any game without left or right moves is a relabelling of 0. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1155-L1157","name":"PGame.Relabelling.trans","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.trans","doc":"Transitivity of relabelling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1149-L1150","name":"PGame.Relabelling.equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.equiv","doc":"A relabelling lets us prove equivalence of games. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1144-L1145","name":"PGame.Relabelling.ge","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1137-L1141","name":"PGame.Relabelling.le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1133-L1134","name":"PGame.Relabelling.symm","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.symm","doc":"Flip a relabelling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1128-L1129","name":"PGame.Relabelling.instInhabitedRelabelling","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.instInhabitedRelabelling","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1123-L1125","name":"PGame.Relabelling.refl","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.refl","doc":"The identity relabelling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1116-L1118","name":"PGame.Relabelling.moveRightSymm","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.moveRightSymm","doc":"A right move of `y` is a relabelling of a right move of `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1110-L1112","name":"PGame.Relabelling.moveRight","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.moveRight","doc":"A right move of `x` is a relabelling of a right move of `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1104-L1106","name":"PGame.Relabelling.moveLeftSymm","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.moveLeftSymm","doc":"A left move of `y` is a relabelling of a left move of `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1099-L1100","name":"PGame.Relabelling.moveLeft","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.moveLeft","doc":"A left move of `x` is a relabelling of a left move of `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1093-L1095","name":"PGame.Relabelling.mk'_rightMovesEquiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk'_rightMovesEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1088-L1089","name":"PGame.Relabelling.mk_rightMovesEquiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk_rightMovesEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1083-L1084","name":"PGame.Relabelling.rightMovesEquiv","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.rightMovesEquiv","doc":"The equivalence between right moves of `x` and `y` given by the relabelling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1077-L1079","name":"PGame.Relabelling.mk'_leftMovesEquiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk'_leftMovesEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1072-L1073","name":"PGame.Relabelling.mk_leftMovesEquiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk_leftMovesEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1067-L1068","name":"PGame.Relabelling.leftMovesEquiv","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.leftMovesEquiv","doc":"The equivalence between left moves of `x` and `y` given by the relabelling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1060-L1063","name":"PGame.Relabelling.mk'","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk'","doc":"A constructor for relabellings swapping the equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1052-L1053","name":"PGame.«term_≡r_»","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.«term_≡r_»","doc":"`Relabelling x y` says that `x` and `y` are really the same game, just dressed up differently.\nSpecifically, there is a bijection between the moves for Left in `x` and in `y`, and similarly\nfor Right, and under these bijections we inductively have `Relabelling`s for the consequent games.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1045-L1049","name":"PGame.Relabelling.mk","kind":"ctor","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1044-L1049","name":"PGame.Relabelling","kind":"inductive","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Relabelling","doc":"`Relabelling x y` says that `x` and `y` are really the same game, just dressed up differently.\nSpecifically, there is a bijection between the moves for Left in `x` and in `y`, and similarly\nfor Right, and under these bijections we inductively have `Relabelling`s for the consequent games.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1032-L1034","name":"PGame.lt_or_equiv_or_gf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_or_equiv_or_gf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1015-L1029","name":"PGame.lt_or_equiv_or_gt_or_fuzzy","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_or_equiv_or_gt_or_fuzzy","doc":"Exactly one of the following is true (although we don't prove this here). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1010-L1011","name":"PGame.fuzzy_of_equiv_of_fuzzy","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_of_equiv_of_fuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1005-L1006","name":"PGame.fuzzy_of_fuzzy_of_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_of_fuzzy_of_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L1000-L1001","name":"PGame.fuzzy_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L996-L997","name":"PGame.fuzzy_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L992-L993","name":"PGame.fuzzy_congr_imp","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_congr_imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L988-L989","name":"PGame.fuzzy_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L984-L985","name":"PGame.Equiv.not_fuzzy'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.not_fuzzy'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L980-L981","name":"PGame.Equiv.not_fuzzy","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.not_fuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L977-L977","name":"PGame.not_fuzzy_of_ge","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.not_fuzzy_of_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L974-L974","name":"PGame.not_fuzzy_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.not_fuzzy_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L971-L971","name":"PGame.Fuzzy.not_equiv'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy.not_equiv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L968-L968","name":"PGame.Fuzzy.not_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy.not_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L964-L965","name":"PGame.lt_or_fuzzy_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_or_fuzzy_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L961-L961","name":"PGame.Fuzzy.lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy.lf","doc":"**Alias** of `PGame.lf_of_fuzzy`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L957-L958","name":"PGame.lf_of_fuzzy","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_fuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L952-L954","name":"PGame.lf_iff_lt_or_fuzzy","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_iff_lt_or_fuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L949-L950","name":"PGame.instIsIrreflPGameFuzzy","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instIsIrreflPGameFuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L946-L946","name":"PGame.fuzzy_irrefl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.fuzzy_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L942-L943","name":"PGame.Fuzzy.swap_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy.swap_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L939-L940","name":"PGame.instIsSymmPGameFuzzy","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instIsSymmPGameFuzzy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L935-L936","name":"PGame.Fuzzy.swap","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L931-L932","name":"PGame.«term_‖_»","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.«term_‖_»","doc":"The fuzzy, confused, or incomparable relation on pre-games.\n\nIf `x ‖ 0`, then the first player can always win `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L927-L928","name":"PGame.Fuzzy","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Fuzzy","doc":"The fuzzy, confused, or incomparable relation on pre-games.\n\nIf `x ‖ 0`, then the first player can always win `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L916-L921","name":"PGame.equiv_of_mk_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_of_mk_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L911-L913","name":"PGame.equiv_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L906-L908","name":"PGame.equiv_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L897-L903","name":"PGame.lf_or_equiv_or_gf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_or_equiv_or_gf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L893-L894","name":"PGame.lt_or_equiv_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_or_equiv_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L889-L890","name":"PGame.lt_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L885-L886","name":"PGame.lt_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L881-L882","name":"PGame.lt_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L877-L878","name":"PGame.lt_congr_imp","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_congr_imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L871-L875","name":"PGame.instTransPGameEquivInstHasEquivSetoidLtToLTInstPreorderPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instTransPGameEquivInstHasEquivSetoidLtToLTInstPreorderPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L867-L868","name":"PGame.lt_of_equiv_of_lt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_of_equiv_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L862-L863","name":"PGame.lt_of_lt_of_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_of_lt_of_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L857-L858","name":"PGame.lf_of_equiv_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_equiv_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L852-L853","name":"PGame.lf_of_lf_of_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_lf_of_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L847-L848","name":"PGame.lf_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L843-L844","name":"PGame.lf_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L839-L840","name":"PGame.lf_congr_imp","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_congr_imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L835-L836","name":"PGame.lf_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L831-L832","name":"PGame.le_congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L827-L828","name":"PGame.le_congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L823-L824","name":"PGame.le_congr","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L819-L820","name":"PGame.le_congr_imp","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_congr_imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L816-L816","name":"PGame.Lf.not_gt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.not_gt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L813-L813","name":"PGame.Lf.not_equiv'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.not_equiv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L810-L810","name":"PGame.Lf.not_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.not_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L804-L808","name":"PGame.instTransPGameEquivInstHasEquivSetoidLeLe","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instTransPGameEquivInstHasEquivSetoidLeLe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L800-L801","name":"PGame.le_of_equiv_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_of_equiv_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L793-L797","name":"PGame.instTransPGameLeLeEquivInstHasEquivSetoid","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instTransPGameLeLeEquivInstHasEquivSetoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L789-L790","name":"PGame.le_of_le_of_equiv","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_of_le_of_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L785-L785","name":"PGame.equiv_of_eq","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_of_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L781-L782","name":"PGame.equiv_comm","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L777-L778","name":"PGame.Equiv.trans","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L772-L773","name":"PGame.Equiv.symm","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L767-L768","name":"PGame.equiv_refl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L763-L764","name":"PGame.equiv_rfl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.equiv_rfl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L758-L759","name":"PGame.Equiv.ge","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L754-L755","name":"PGame.Equiv.le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv.le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L750-L751","name":"PGame.setoid","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.setoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L743-L746","name":"PGame.instIsEquivPGameEquiv","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instIsEquivPGameEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L736-L737","name":"PGame.Equiv","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Equiv","doc":"The equivalence relation on pre-games. Two pre-games `x`, `y` are equivalent if `x ≤ y` and\n`y ≤ x`.\n\nIf `x ≈ 0`, then the second player can always win `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L727-L729","name":"PGame.leftResponse_spec","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftResponse_spec","doc":"Show that the response for left provided by `leftResponse` preserves the left-player-wins\ncondition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L720-L722","name":"PGame.leftResponse","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftResponse","doc":"Given a game won by the left player when they play second, provide a response to any move by\nright. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L713-L715","name":"PGame.rightResponse_spec","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightResponse_spec","doc":"Show that the response for right provided by `rightResponse` preserves the right-player-wins\ncondition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L706-L708","name":"PGame.rightResponse","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightResponse","doc":"Given a game won by the right player when they play second, provide a response to any move by\nleft. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L700-L701","name":"PGame.le_zero_of_isEmpty_leftMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_zero_of_isEmpty_leftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L695-L696","name":"PGame.zero_le_of_isEmpty_rightMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le_of_isEmpty_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L689-L691","name":"PGame.lf_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_zero","doc":"The definition of `x ⧏ 0` on pre-games, in terms of `⧏ 0` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L683-L685","name":"PGame.zero_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lf","doc":"The definition of `0 ⧏ x` on pre-games, in terms of `0 ⧏` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L677-L679","name":"PGame.le_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_zero","doc":"The definition of `x ≤ 0` on pre-games, in terms of `≤ 0` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L671-L673","name":"PGame.zero_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le","doc":"The definition of `0 ≤ x` on pre-games, in terms of `0 ≤` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L665-L667","name":"PGame.lf_zero_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_zero_le","doc":"The definition of `x ⧏ 0` on pre-games, in terms of `≤ 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L659-L661","name":"PGame.zero_lf_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_lf_le","doc":"The definition of `0 ⧏ x` on pre-games, in terms of `0 ≤`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L653-L655","name":"PGame.le_zero_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_zero_lf","doc":"The definition of `x ≤ 0` on pre-games, in terms of `⧏ 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L647-L649","name":"PGame.zero_le_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_le_lf","doc":"The definition of `0 ≤ x` on pre-games, in terms of `0 ⧏`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L636-L643","name":"PGame.lf_def","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_def","doc":"The definition of `x ⧏ y` on pre-games, in terms of `⧏` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L625-L632","name":"PGame.le_def","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_def","doc":"The definition of `x ≤ y` on pre-games, in terms of `≤` two moves later. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L619-L621","name":"PGame.le_of_forall_lt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_of_forall_lt","doc":"This special case of `PGame.le_of_forall_lf` is useful when dealing with surreals, where `<` is\npreferred over `⧏`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L613-L614","name":"PGame.mk_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L609-L610","name":"PGame.lf_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L605-L606","name":"PGame.lf_moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L601-L602","name":"PGame.moveLeft_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L598-L598","name":"PGame.Lf.trans_lt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.trans_lt","doc":"**Alias** of `PGame.lf_of_lf_of_lt`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L595-L595","name":"LT.lt.trans_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LT.lt.trans_lf","doc":"**Alias** of `PGame.lf_of_lt_of_lf`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L591-L592","name":"PGame.lf_of_lf_of_lt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_lf_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L586-L587","name":"PGame.lf_of_lt_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_lt_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L582-L582","name":"PGame.Lf.trans_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.trans_le","doc":"**Alias** of `PGame.lf_of_lf_of_le`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L579-L579","name":"LE.le.trans_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LE.le.trans_lf","doc":"**Alias** of `PGame.lf_of_le_of_lf`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L577-L577","name":"PGame.instTransPGameLfLeLe","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instTransPGameLfLeLe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L571-L573","name":"PGame.lf_of_lf_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_lf_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L568-L568","name":"PGame.instTransPGameLeLf","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instTransPGameLeLf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L562-L564","name":"PGame.lf_of_le_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_le_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L558-L559","name":"PGame.instIsIrreflPGameLf","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instIsIrreflPGameLf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L554-L555","name":"PGame.lf_irrefl","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L551-L551","name":"LT.lt.lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LT.lt.lf","doc":"**Alias** of `PGame.lf_of_lt`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L547-L548","name":"PGame.lf_of_lt","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L543-L544","name":"PGame.lt_of_le_of_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_of_le_of_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L539-L540","name":"PGame.lt_iff_le_and_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lt_iff_le_and_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L518-L537","name":"PGame.instPreorderPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instPreorderPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L505-L506","name":"PGame.lf_mk_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_mk_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L501-L502","name":"PGame.mk_lf_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_lf_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L497-L498","name":"PGame.lf_of_mk_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_mk_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L493-L494","name":"PGame.lf_of_le_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_le_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L489-L490","name":"PGame.lf_of_le_moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_le_moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L485-L486","name":"PGame.lf_of_moveRight_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_of_moveRight_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L482-L482","name":"LE.le.lf_moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LE.le.lf_moveRight","doc":"**Alias** of `PGame.lf_moveRight_of_le`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L478-L479","name":"PGame.lf_moveRight_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_moveRight_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L475-L475","name":"LE.le.moveLeft_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LE.le.moveLeft_lf","doc":"**Alias** of `PGame.moveLeft_lf_of_le`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L471-L472","name":"PGame.moveLeft_lf_of_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_lf_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L466-L468","name":"PGame.le_or_gf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_or_gf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L461-L463","name":"PGame.mk_lf_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_lf_mk","doc":"Definition of `x ⧏ y` on pre-games built using the constructor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L453-L456","name":"PGame.lf_iff_exists_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.lf_iff_exists_le","doc":"Definition of `x ⧏ y` on pre-games, in terms of `≤`.\n\nThe ordering here is chosen so that `or.inl` refer to moves by Left, and `or.inr` refer to\nmoves by Right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L444-L446","name":"PGame.le_of_forall_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_of_forall_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L439-L441","name":"PGame.mk_le_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk_le_mk","doc":"Definition of `x ≤ y` on pre-games built using the constructor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L429-L434","name":"PGame.le_iff_forall_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le_iff_forall_lf","doc":"Definition of `x ≤ y` on pre-games, in terms of `⧏`.\n\nThe ordering here is chosen so that `And.left` refer to moves by Left, and `And.right` refer to\nmoves by Right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L421-L422","name":"PGame.Lf.not_ge","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf.not_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L417-L418","name":"LE.le.not_gf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#LE.le.not_gf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L413-L414","name":"PGame.not_lf","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.not_lf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L408-L409","name":"PGame.not_le","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.not_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L404-L405","name":"PGame.«term_⧏_»","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.«term_⧏_»","doc":"The less or fuzzy relation on pre-games.\n\nIf `0 ⧏ x`, then Left can win `x` as the first player. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L400-L401","name":"PGame.Lf","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Lf","doc":"The less or fuzzy relation on pre-games.\n\nIf `0 ⧏ x`, then Left can win `x` as the first player. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L392-L395","name":"PGame.le","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.le","doc":"The less or equal relation on pre-games.\n\nIf `0 ≤ x`, then Left can win `x` as the second player. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L382-L383","name":"PGame.isEmpty_one_rightMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_one_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L378-L379","name":"PGame.uniqueOneLeftMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.uniqueOneLeftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L374-L375","name":"PGame.one_rightMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.one_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L369-L370","name":"PGame.one_moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.one_moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L364-L365","name":"PGame.one_leftMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.one_leftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L360-L361","name":"PGame.instOnePGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instOnePGame","doc":"The pre-game `One` is defined by `1 = { 0 | }`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L356-L357","name":"PGame.instInhabitedPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instInhabitedPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L352-L353","name":"PGame.isEmpty_zero_rightMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_zero_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L348-L349","name":"PGame.isEmpty_zero_leftMoves","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.isEmpty_zero_leftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L344-L345","name":"PGame.zero_rightMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_rightMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L339-L340","name":"PGame.zero_leftMoves","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.zero_leftMoves","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L335-L336","name":"PGame.instZeroPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instZeroPGame","doc":"The pre-game `Zero` is defined by `0 = { | }`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L323-L325","name":"PGame.Subsequent.moveLeft_mk_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveLeft_mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L319-L321","name":"PGame.Subsequent.moveLeft_mk_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveLeft_mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L315-L317","name":"PGame.Subsequent.moveRight_mk_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveRight_mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L311-L313","name":"PGame.Subsequent.moveRight_mk_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveRight_mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L307-L309","name":"PGame.Subsequent.mk_right'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.mk_right'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L295-L299","name":"PGame.tacticPgame_wf_tac","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.tacticPgame_wf_tac","doc":"Discharges proof obligations of the form `⊢ Subsequent ..` arising in termination proofs\nof definitions using well-founded recursion on `PGame`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L286-L288","name":"PGame.Subsequent.mk_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L280-L282","name":"PGame.Subsequent.mk_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L275-L276","name":"PGame.Subsequent.moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L270-L271","name":"PGame.Subsequent.moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L266-L267","name":"PGame.instWellFoundedRelationPGame","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instWellFoundedRelationPGame","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L262-L263","name":"PGame.wf_subsequent","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.wf_subsequent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L258-L259","name":"PGame.Subsequent.trans","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L254-L255","name":"PGame.instIsTransPGameSubsequent","kind":"instance","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.instIsTransPGameSubsequent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L250-L251","name":"PGame.Subsequent","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.Subsequent","doc":"`Subsequent x y` says that `x` can be obtained by playing some nonempty sequence of moves from\n`y`. It is the transitive closure of `IsOption`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L239-L245","name":"PGame.wf_isOption","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.wf_isOption","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L234-L236","name":"PGame.IsOption.mk_right","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption.mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L229-L231","name":"PGame.IsOption.mk_left","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption.mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L226-L226","name":"PGame.IsOption.moveRight","kind":"ctor","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption.moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L225-L225","name":"PGame.IsOption.moveLeft","kind":"ctor","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption.moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L224-L226","name":"PGame.IsOption","kind":"inductive","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption","doc":"`IsOption x y` means that `x` is either a left or right option for `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L223-L223","name":"PGame.IsOption_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.IsOption_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L217-L219","name":"PGame.moveRecOn","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRecOn","doc":"A variant of `PGame.recOn` expressed in terms of `PGame.moveLeft` and `PGame.moveRight`.\n\nBoth this and `PGame.recOn` describe Conway induction on games. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L207-L210","name":"PGame.ofLists_moveRight'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.ofLists_moveRight'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L201-L203","name":"PGame.ofLists_moveRight","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.ofLists_moveRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L195-L198","name":"PGame.ofLists_moveLeft'","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.ofLists_moveLeft'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L189-L191","name":"PGame.ofLists_moveLeft","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.ofLists_moveLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L185-L186","name":"PGame.toOfListsRightMoves","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toOfListsRightMoves","doc":"Converts a number into a right move for `ofLists`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L180-L181","name":"PGame.toOfListsLeftMoves","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.toOfListsLeftMoves","doc":"Converts a number into a left move for `ofLists`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L175-L176","name":"PGame.rightMoves_ofLists","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightMoves_ofLists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L171-L172","name":"PGame.leftMoves_ofLists","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftMoves_ofLists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L166-L168","name":"PGame.ofLists","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.ofLists","doc":"Construct a pre-game from list of pre-games describing the available moves for Left and Right.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L159-L160","name":"PGame.moveRight_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L154-L155","name":"PGame.rightMoves_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.rightMoves_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L149-L150","name":"PGame.moveLeft_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L144-L145","name":"PGame.leftMoves_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.leftMoves_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L139-L140","name":"PGame.moveRight","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveRight","doc":"The new game after Right makes an allowed move. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L134-L135","name":"PGame.moveLeft","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.moveLeft","doc":"The new game after Left makes an allowed move. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L129-L130","name":"PGame.RightMoves","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.RightMoves","doc":"The indexing type for allowable moves by Right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L124-L125","name":"PGame.LeftMoves","kind":"def","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.LeftMoves","doc":"The indexing type for allowable moves by Left. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L117-L117","name":"PGame.mk","kind":"ctor","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/Game/PGame.lean#L116-L117","name":"PGame","kind":"inductive","docLink":"./Mathlib/SetTheory/Game/PGame.html#PGame","doc":"The type of pre-games, before we have quotiented\nby equivalence (`PGame.Setoid`). In ZFC, a combinatorial game is constructed from\ntwo sets of combinatorial games that have been constructed at an earlier\nstage. To do this in type theory, we say that a pre-game is built\ninductively from two families of pre-games indexed over any type\nin Type u. The resulting type `PGame.{u}` lives in `Type (u+1)`,\nreflecting that it is a proper class in ZFC. "}]}