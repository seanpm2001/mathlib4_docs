{"name":"Mathlib.Topology.MetricSpace.Polish","instances":[{"typeNames":["UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","MetricSpace.toPseudoMetricSpace"],"name":"polishSpace_of_complete_second_countable","className":"PolishSpace"},{"typeNames":[],"name":"PolishSpace.t2Space","className":"T2Space"},{"typeNames":["Pi.topologicalSpace"],"name":"PolishSpace.pi_countable","className":"PolishSpace"},{"typeNames":["Nat","Pi.topologicalSpace","Nat"],"name":"PolishSpace.nat_fun","className":"PolishSpace"},{"typeNames":["Sigma","instTopologicalSpaceSigma"],"name":"PolishSpace.sigma","className":"PolishSpace"},{"typeNames":["Sum","instTopologicalSpaceSum"],"name":"PolishSpace.sum","className":"PolishSpace"},{"typeNames":["TopologicalSpace.Opens.CompleteCopy"],"name":"TopologicalSpace.Opens.CompleteCopy.instDist","className":"Dist"},{"typeNames":["TopologicalSpace.Opens.CompleteCopy"],"name":"TopologicalSpace.Opens.CompleteCopy.instTopologicalSpaceCompleteCopy","className":"TopologicalSpace"},{"typeNames":["TopologicalSpace.Opens.CompleteCopy","TopologicalSpace.Opens.CompleteCopy.instTopologicalSpaceCompleteCopy"],"name":"TopologicalSpace.Opens.CompleteCopy.instT0SpaceCompleteCopyInstTopologicalSpaceCompleteCopy","className":"T0Space"},{"typeNames":["TopologicalSpace.Opens.CompleteCopy"],"name":"TopologicalSpace.Opens.CompleteCopy.instMetricSpace","className":"MetricSpace"},{"typeNames":["TopologicalSpace.Opens.CompleteCopy","PseudoMetricSpace.toUniformSpace","TopologicalSpace.Opens.CompleteCopy","MetricSpace.toPseudoMetricSpace","TopologicalSpace.Opens.CompleteCopy.instMetricSpace"],"name":"TopologicalSpace.Opens.CompleteCopy.instCompleteSpace","className":"CompleteSpace"}],"imports":["Init","Mathlib.Topology.MetricSpace.PiNat","Mathlib.Topology.MetricSpace.Isometry","Mathlib.Topology.MetricSpace.Gluing","Mathlib.Topology.Sets.Opens","Mathlib.Analysis.Normed.Field.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L412-L426","name":"PolishSpace.IsClopenable.iUnion","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.IsClopenable.iUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L406-L408","name":"IsOpen.isClopenable","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#IsOpen.isClopenable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L400-L403","name":"PolishSpace.IsClopenable.compl","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.IsClopenable.compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L379-L397","name":"IsClosed.isClopenable","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#IsClosed.isClopenable","doc":"Given a closed set `s` in a Polish space, one can construct a finer Polish topology for\nwhich `s` is both open and closed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L373-L374","name":"PolishSpace.IsClopenable","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.IsClopenable","doc":"A set in a topological space is clopenable if there exists a finer Polish topology for which\nthis set is open and closed. It turns out that this notion is equivalent to being Borel-measurable,\nbut this is nontrivial (see `isClopenable_iff_measurableSet`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L354-L359","name":"IsOpen.polishSpace","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#IsOpen.polishSpace","doc":"An open subset of a Polish space is also Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L322-L350","name":"TopologicalSpace.Opens.CompleteCopy.instCompleteSpace","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.instCompleteSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L292-L316","name":"TopologicalSpace.Opens.CompleteCopy.instMetricSpace","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.instMetricSpace","doc":"A metric space structure on a subset `s` of a metric space, designed to make it complete\nif `s` is open. It is given by `dist' x y = dist x y + |1 / dist x sᶜ - 1 / dist y sᶜ|`, where the\nsecond term blows up close to the boundary to ensure that Cauchy sequences for `dist'` remain well\ninside `s`.\n\nPorting note: the definition changed to ensure that the `TopologicalSpace` structure on\n`TopologicalSpace.Opens.CompleteCopy s` is definitionally equal to the original one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L282-L282","name":"TopologicalSpace.Opens.CompleteCopy.instT0SpaceCompleteCopyInstTopologicalSpaceCompleteCopy","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.instT0SpaceCompleteCopyInstTopologicalSpaceCompleteCopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L281-L281","name":"TopologicalSpace.Opens.CompleteCopy.instTopologicalSpaceCompleteCopy","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.instTopologicalSpaceCompleteCopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L277-L278","name":"TopologicalSpace.Opens.CompleteCopy.dist_val_le_dist","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.dist_val_le_dist","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L272-L274","name":"TopologicalSpace.Opens.CompleteCopy.dist_eq","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.dist_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L268-L269","name":"TopologicalSpace.Opens.CompleteCopy.instDist","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy.instDist","doc":"A distance on an open subset `s` of a metric space, designed to make it complete.  It is given\nby `dist' x y = dist x y + |1 / dist x sᶜ - 1 / dist y sᶜ|`, where the second term blows up close to\nthe boundary to ensure that Cauchy sequences for `dist'` remain well inside `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L259-L259","name":"TopologicalSpace.Opens.CompleteCopy","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#TopologicalSpace.Opens.CompleteCopy","doc":"A type synonym for a subset `s` of a metric space, on which we will construct another metric\nfor which it will be complete. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L188-L233","name":"PolishSpace.exists_polishSpace_forall_le","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.exists_polishSpace_forall_le","doc":"Given a Polish space, and countably many finer Polish topologies, there exists another Polish\ntopology which is finer than all of them.\n\nPorting note: TODO: the topology `t'` is `t ⊓ ⨅ i, m i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L181-L181","name":"PolishSpace.AuxCopy","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.AuxCopy","doc":"A sequence of type synonyms of a given type `α`, useful in the proof of\n`exists_polishSpace_forall_le` to endow each copy with a different topology. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L173-L175","name":"IsClosed.polishSpace","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#IsClosed.polishSpace","doc":"A closed subset of a Polish space is also Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L166-L169","name":"Equiv.polishSpace_induced","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#Equiv.polishSpace_induced","doc":"Pulling back a Polish topology under an equiv gives again a Polish topology. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L154-L162","name":"ClosedEmbedding.polishSpace","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#ClosedEmbedding.polishSpace","doc":"Given a closed embedding into a Polish space, the source space is also Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L147-L150","name":"PolishSpace.exists_nat_nat_continuous_surjective","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.exists_nat_nat_continuous_surjective","doc":"Any nonempty Polish space is the continuous image of the fundamental space `ℕ → ℕ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L138-L143","name":"PolishSpace.sum","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.sum","doc":"The disjoint union of two Polish spaces is Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L129-L134","name":"PolishSpace.sigma","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.sigma","doc":"A countable disjoint union of Polish spaces is Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L125-L125","name":"PolishSpace.nat_fun","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.nat_fun","doc":"Without this instance, Lean 3 was unable to find `PolishSpace (ℕ → ℕ)` by typeclass inference.\nPorting note: TODO: test with Lean 4. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L115-L120","name":"PolishSpace.pi_countable","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.pi_countable","doc":"A countable product of Polish spaces is Polish. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L108-L111","name":"PolishSpace.t2Space","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.t2Space","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L100-L103","name":"upgradePolishSpace","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#upgradePolishSpace","doc":"This definition endows a Polish space with a complete metric. Use it as:\n`letI := upgradePolishSpace α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L92-L95","name":"complete_polishSpaceMetric","kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#complete_polishSpaceMetric","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L88-L89","name":"polishSpaceMetric","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#polishSpaceMetric","doc":"Construct on a Polish space a metric (compatible with the topology) which is complete. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L81-L84","name":"polishSpace_of_complete_second_countable","kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#polishSpace_of_complete_second_countable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L77-L77","name":"UpgradedPolishSpace.mk","kind":"ctor","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#UpgradedPolishSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L77-L78","name":"UpgradedPolishSpace","kind":"class","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#UpgradedPolishSpace","doc":"A convenience class, for a Polish space endowed with a complete metric. No instance of this\nclass should be registered: It should be used as `letI := upgradePolishSpace α` to endow a Polish\nspace with a complete metric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L70-L70","name":"PolishSpace.complete","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.complete","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L69-L69","name":"PolishSpace.secondCountableTopology","kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.secondCountableTopology","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L68-L68","name":"PolishSpace.mk","kind":"ctor","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/MetricSpace/Polish.lean#L68-L71","name":"PolishSpace","kind":"class","docLink":"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace","doc":"A Polish space is a topological space with second countable topology, that can be endowed\nwith a metric for which it is complete.\nWe register an instance from complete second countable metric space to polish space, and not the\nother way around as this is the most common use case.\n\nTo endow a Polish space with a complete metric space structure, do `letI := upgradePolishSpace α`.\n"}]}