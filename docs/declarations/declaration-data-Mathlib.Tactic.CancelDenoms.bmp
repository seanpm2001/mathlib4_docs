{"name":"Mathlib.Tactic.CancelDenoms","instances":[],"imports":["Init","Mathlib.Tactic.NormNum","Mathlib.Util.SynthesizeUsing","Mathlib.Data.Tree","Mathlib.Util.Qq"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L303-L305","name":"tacticCancel_denoms_","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#tacticCancel_denoms_","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L299-L301","name":"cancelDenominators","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#cancelDenominators","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L295-L297","name":"cancelDenominatorsTarget","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#cancelDenominatorsTarget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L288-L293","name":"cancelDenominatorsAt","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#cancelDenominatorsAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L268-L284","name":"cancelDenoms","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#cancelDenoms","doc":"`cancel_denoms` attempts to remove numerals from the denominators of fractions.\nIt works on propositions that are field-valued inequalities.\n\n```lean\nvariable [LinearOrderedField α] (a b c : α)\n\nexample (h : a / 5 + b / 4 < c) : 4*a + 5*b < 20*c := by\n  cancel_denoms at h\n  exact h\n\nexample (h : a > 0) : a / 5 > 0 := by\n  cancel_denoms\n  exact h\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L237-L264","name":"CancelDenoms.cancelDenominatorsInType","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancelDenominatorsInType","doc":"`cancelDenominatorsInType h` assumes that `h` is of the form `lhs R rhs`,\nwhere `R ∈ {<, ≤, =, ≠, ≥, >}`.\nIt produces an Expression `h'` of the form `lhs' R rhs'` and a proof that `h = h'`.\nNumeric denominators have been canceled in `lhs'` and `rhs'`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L221-L229","name":"CancelDenoms.findCompLemma","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.findCompLemma","doc":"`findCompLemma e` arranges `e` in the form `lhs R rhs`, where `R ∈ {<, ≤, =, ≠}`, and returns\n`lhs`, `rhs`, the `cancel_factors` lemma corresponding to `R`, and a boolean indicating whether\n`R` involves the order (i.e. `<` and `≤`) or not (i.e. `=` and `≠`).\nIn the case of `LT`, `LE`, `GE`, and `GT` an order on the type is needed, in the last case\nit is not, the final component of the return value tracks this.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L195-L212","name":"CancelDenoms.derive","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.derive","doc":"Given `e`, a term with rational division, produces a natural number `n` and a proof of `n*e = e'`,\nwhere `e'` has no division. Assumes \"well-behaved\" division.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L189-L189","name":"CancelDenoms.derive_trans","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.derive_trans","doc":"Helper lemma to chain together a `simp` proof and the result of `mkProdPrf`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L185-L186","name":"CancelDenoms.deriveThms","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.deriveThms","doc":"Theorems to get expression into a form that `findCancelFactor` and `mkProdPrf`\ncan more easily handle. These are important for dividing by rationals and negative integers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L143-L181","name":"CancelDenoms.mkProdPrf","kind":"opaque","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.mkProdPrf","doc":"`mkProdPrf α sα v tr e` produces a proof of `v*e = e'`, where numeric denominators have been\ncanceled in `e'`, distributing `v` proportionally according to the tree `tr` computed\nby `findCancelFactor`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L132-L136","name":"CancelDenoms.synthesizeUsingNormNum","kind":"def","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.synthesizeUsingNormNum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L109-L130","name":"CancelDenoms.findCancelFactor","kind":"opaque","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.findCancelFactor","doc":"`findCancelFactor e` produces a natural number `n`, such that multiplying `e` by `n` will\nbe able to cancel all the numeric denominators in `e`. The returned `Tree` describes how to\ndistribute the value `n` over products inside `e`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L96-L100","name":"CancelDenoms.cancel_factors_ne","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancel_factors_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L80-L93","name":"CancelDenoms.cancel_factors_eq","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancel_factors_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L72-L77","name":"CancelDenoms.cancel_factors_le","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancel_factors_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L64-L69","name":"CancelDenoms.cancel_factors_lt","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancel_factors_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L61-L61","name":"CancelDenoms.neg_subst","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.neg_subst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L57-L58","name":"CancelDenoms.sub_subst","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.sub_subst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L53-L54","name":"CancelDenoms.add_subst","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.add_subst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L48-L50","name":"CancelDenoms.cancel_factors_eq_div","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.cancel_factors_eq_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L43-L45","name":"CancelDenoms.div_subst","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.div_subst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CancelDenoms.lean#L37-L40","name":"CancelDenoms.mul_subst","kind":"theorem","docLink":"./Mathlib/Tactic/CancelDenoms.html#CancelDenoms.mul_subst","doc":""}]}