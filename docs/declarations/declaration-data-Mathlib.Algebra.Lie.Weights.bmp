{"name":"Mathlib.Algebra.Lie.Weights","instances":[{"typeNames":["Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","LieModule.weightSpace","OfNat.ofNat","Zero.toOfNat0","Pi.instZero","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","Submodule.addCommGroup","CommRing.toRing","LieSubmodule.toSubmodule","LieModule.weightSpace","OfNat.ofNat","Zero.toOfNat0","Pi.instZero","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","CommRing.toCommSemiring","LieSubmodule.instModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommMonoid","LieModule.weightSpace","OfNat.ofNat","Zero.toOfNat0","Pi.instZero","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","CommRing.toCommSemiring","LieSubmodule.instLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","LieModule.weightSpace","OfNat.ofNat","Zero.toOfNat0","Pi.instZero","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","CommRing.toCommSemiring"],"name":"LieModule.instIsNilpotentSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleWeightSpaceOfNatForAllToOfNat0InstZeroToZeroToCommMonoidWithZeroAddCommGroupToRingInstModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommMonoidInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","className":"LieModule.IsNilpotent"}],"imports":["Init","Mathlib.Algebra.Lie.Nilpotent","Mathlib.Algebra.Lie.TensorProduct","Mathlib.Algebra.Lie.Character","Mathlib.Algebra.Lie.Engel","Mathlib.Algebra.Lie.CartanSubalgebra","Mathlib.LinearAlgebra.Eigenspace.Basic","Mathlib.RingTheory.TensorProduct"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L513-L513","name":"LieModule.coe_weightSpace'","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.coe_weightSpace'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L502-L509","name":"LieModule.weightSpace'","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.weightSpace'","doc":"A priori, weight spaces are Lie submodules over the Lie subalgebra `H` used to define them.\nHowever they are naturally Lie submodules over the (in general larger) Lie subalgebra\n`zeroRootSubalgebra R L H`. Even though it is often the case that\n`zeroRootSubalgebra R L H = H`, it is likely to be useful to have the flexibility not to have\nto invoke this equality (as well as to work more generally). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L484-L486","name":"LieAlgebra.zeroRootSubalgebra_eq_iff_is_cartan","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.zeroRootSubalgebra_eq_iff_is_cartan","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L476-L481","name":"LieAlgebra.zeroRootSubalgebra_eq_of_is_cartan","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.zeroRootSubalgebra_eq_of_is_cartan","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L469-L472","name":"LieAlgebra.is_cartan_of_zeroRootSubalgebra_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.is_cartan_of_zeroRootSubalgebra_eq","doc":"If the zero root subalgebra of a nilpotent Lie subalgebra `H` is just `H` then `H` is a Cartan\nsubalgebra.\n\nWhen `L` is Noetherian, it follows from Engel's theorem that the converse holds. See\n`LieAlgebra.zeroRootSubalgebra_eq_iff_is_cartan` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L448-L461","name":"LieAlgebra.zeroRootSubalgebra_normalizer_eq_self","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.zeroRootSubalgebra_normalizer_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L441-L444","name":"LieAlgebra.le_zeroRootSubalgebra","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.le_zeroRootSubalgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L417-L438","name":"LieAlgebra.toLieSubmodule_le_rootSpace_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.toLieSubmodule_le_rootSpace_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L408-L414","name":"LieAlgebra.mem_zeroRootSubalgebra","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.mem_zeroRootSubalgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L405-L405","name":"LieAlgebra.coe_zeroRootSubalgebra","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.coe_zeroRootSubalgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L395-L401","name":"LieAlgebra.zeroRootSubalgebra","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.zeroRootSubalgebra","doc":"Given a nilpotent Lie subalgebra `H ⊆ L`, the root space of the zero map `0 : H → R` is a Lie\nsubalgebra of `L`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L388-L390","name":"LieAlgebra.rootSpaceProduct_tmul","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpaceProduct_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L385-L385","name":"LieAlgebra.rootSpaceProduct_def","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpaceProduct_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L379-L381","name":"LieAlgebra.rootSpaceProduct","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpaceProduct","doc":"Given a nilpotent Lie subalgebra `H ⊆ L` together with `χ₁ χ₂ : H → R`, there is a natural\n`R`-bilinear product of root vectors, compatible with the actions of `H`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L369-L374","name":"LieAlgebra.coe_rootSpaceWeightSpaceProduct_tmul","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.coe_rootSpaceWeightSpaceProduct_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L357-L365","name":"LieAlgebra.rootSpaceWeightSpaceProduct","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpaceWeightSpaceProduct","doc":"Given a nilpotent Lie subalgebra `H ⊆ L` together with `χ₁ χ₂ : H → R`, there is a natural\n`R`-bilinear product of root vectors and weight vectors, compatible with the actions of `H`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L331-L350","name":"LieAlgebra.rootSpaceWeightSpaceProductAux","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpaceWeightSpaceProductAux","doc":"Auxiliary definition for `rootSpaceWeightSpaceProduct`,\nwhich is close to the deterministic timeout limit.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L316-L323","name":"LieAlgebra.lie_mem_weightSpace_of_mem_weightSpace","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.lie_mem_weightSpace_of_mem_weightSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L293-L311","name":"LieAlgebra.rootSpace_comap_eq_weightSpace","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpace_comap_eq_weightSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L288-L289","name":"LieAlgebra.IsRoot","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.IsRoot","doc":"A root of a Lie algebra `L` with respect to a nilpotent subalgebra `H ⊆ L` is a weight of `L`,\nregarded as a module of `H` via the adjoint action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L281-L283","name":"LieAlgebra.zero_rootSpace_eq_top_of_nilpotent","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.zero_rootSpace_eq_top_of_nilpotent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L276-L277","name":"LieAlgebra.rootSpace","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieAlgebra.rootSpace","doc":"Given a nilpotent Lie subalgebra `H ⊆ L`, the root space of a map `χ : H → R` is the weight\nspace of `L` regarded as a module of `H` via the adjoint action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L260-L262","name":"LieModule.instIsNilpotentSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleWeightSpaceOfNatForAllToOfNat0InstZeroToZeroToCommMonoidWithZeroAddCommGroupToRingInstModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommMonoidInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","kind":"instance","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.instIsNilpotentSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleWeightSpaceOfNatForAllToOfNat0InstZeroToZeroToCommMonoidWithZeroAddCommGroupToRingInstModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommMonoidInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","doc":"By Engel's theorem, when the Lie algebra is Noetherian, the zero weight space of a Noetherian\nLie module is nilpotent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L247-L255","name":"LieModule.isNilpotent_toEndomorphism_weightSpace_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.isNilpotent_toEndomorphism_weightSpace_zero","doc":"A (nilpotent) Lie algebra acts nilpotently on the zero weight space of a Noetherian Lie\nmodule. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L240-L242","name":"LieModule.isWeight_zero_of_nilpotent","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.isWeight_zero_of_nilpotent","doc":"For a non-trivial nilpotent Lie module over a nilpotent Lie algebra, the zero character is a\nweight with respect to the `⊤` Lie subalgebra. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L234-L235","name":"LieModule.IsWeight","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.IsWeight","doc":"Given a Lie module `M` of a Lie algebra `L`, a weight of `M` with respect to a nilpotent\nsubalgebra `H ⊆ L` is a Lie character whose corresponding weight space is non-empty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L222-L229","name":"LieModule.zero_weightSpace_eq_top_of_nilpotent","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.zero_weightSpace_eq_top_of_nilpotent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L211-L218","name":"LieModule.coe_weightSpace_of_top","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.coe_weightSpace_of_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L205-L208","name":"LieModule.zero_weightSpace_eq_top_of_nilpotent'","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.zero_weightSpace_eq_top_of_nilpotent'","doc":"See also the more useful form `LieModule.zero_weightSpace_eq_top_of_nilpotent`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L199-L200","name":"LieModule.mem_weightSpace","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.mem_weightSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L189-L196","name":"LieModule.weightSpace","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.weightSpace","doc":"If a Lie algebra is nilpotent, then pre-weight spaces are Lie submodules. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L176-L183","name":"LieModule.lie_mem_preWeightSpace_of_mem_preWeightSpace","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.lie_mem_preWeightSpace_of_mem_preWeightSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L102-L171","name":"LieModule.weight_vector_multiplication","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.weight_vector_multiplication","doc":"See also `bourbaki1975b` Chapter VII §1.1, Proposition 2 (ii). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L92-L96","name":"LieModule.exists_preWeightSpace_zero_le_ker_of_isNoetherian","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.exists_preWeightSpace_zero_le_ker_of_isNoetherian","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L84-L87","name":"LieModule.mem_preWeightSpace","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.mem_preWeightSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Weights.lean#L80-L81","name":"LieModule.preWeightSpace","kind":"def","docLink":"./Mathlib/Algebra/Lie/Weights.html#LieModule.preWeightSpace","doc":"Given a Lie module `M` over a Lie algebra `L`, the pre-weight space of `M` with respect to a\nmap `χ : L → R` is the simultaneous generalized eigenspace of the action of all `x : L` on `M`,\nwith eigenvalues `χ x`.\n\nSee also `LieModule.weightSpace`. "}]}