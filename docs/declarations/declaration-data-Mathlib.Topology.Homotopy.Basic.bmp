{"name":"Mathlib.Topology.Homotopy.Basic","instances":[{"typeNames":["ContinuousMap.Homotopy"],"name":"ContinuousMap.Homotopy.instHomotopyLikeHomotopy","className":"ContinuousMap.HomotopyLike"},{"typeNames":["ContinuousMap.Homotopy","ContinuousMap.id"],"name":"ContinuousMap.Homotopy.instInhabitedHomotopyId","className":"Inhabited"},{"typeNames":["ContinuousMap.HomotopyWith"],"name":"ContinuousMap.HomotopyWith.instHomotopyLikeHomotopyWith","className":"ContinuousMap.HomotopyLike"},{"typeNames":["ContinuousMap.HomotopyWith","ContinuousMap.id","ContinuousMap","True"],"name":"ContinuousMap.HomotopyWith.instInhabitedHomotopyWithIdContinuousMapTrue","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Algebra.Order.ProjIcc","Mathlib.Topology.ContinuousFunction.Ordered","Mathlib.Topology.CompactOpen","Mathlib.Topology.UnitInterval"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L706-L707","name":"ContinuousMap.homotopicRel_empty","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.homotopicRel_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L700-L701","name":"ContinuousMap.HomotopicRel.equivalence","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel.equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L695-L697","name":"ContinuousMap.HomotopicRel.trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L690-L691","name":"ContinuousMap.HomotopicRel.symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L685-L686","name":"ContinuousMap.HomotopicRel.refl","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L681-L682","name":"ContinuousMap.HomotopicRel.homotopic","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel.homotopic","doc":"If two maps are homotopic relative to a set, then they are homotopic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L672-L673","name":"ContinuousMap.HomotopicRel","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicRel","doc":"Given continuous maps `f₀` and `f₁`, we say `f₀` and `f₁` are homotopic relative to a set `S` if\nthere exists a `HomotopyRel f₀ f₁ S`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L661-L664","name":"ContinuousMap.HomotopyRel.cast","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.cast","doc":"Casting a `HomotopyRel f₀ f₁ S` to a `HomotopyRel g₀ g₁ S` where `f₀ = g₀` and `f₁ = g₁`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L660-L660","name":"ContinuousMap.HomotopyRel.cast_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.cast_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L660-L660","name":"ContinuousMap.HomotopyRel.cast_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.cast_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L653-L655","name":"ContinuousMap.HomotopyRel.symm_trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.symm_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L644-L650","name":"ContinuousMap.HomotopyRel.trans_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L634-L641","name":"ContinuousMap.HomotopyRel.trans","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.trans","doc":"Given `HomotopyRel f₀ f₁ S` and `HomotopyRel f₁ f₂ S`, we can define a `HomotopyRel f₀ f₂ S`\nby putting the first homotopy on `[0, 1/2]` and the second on `[1/2, 1]`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L627-L628","name":"ContinuousMap.HomotopyRel.symm_symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.symm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L621-L623","name":"ContinuousMap.HomotopyRel.symm","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.symm","doc":"Given a `HomotopyRel f₀ f₁ S`, we can define a `HomotopyRel f₁ f₀ S` by reversing the homotopy.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L620-L620","name":"ContinuousMap.HomotopyRel.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L620-L620","name":"ContinuousMap.HomotopyRel.symm_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.symm_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L613-L614","name":"ContinuousMap.HomotopyRel.refl","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.refl","doc":"Given a map `f : C(X, Y)` and a set `S`, we can define a `HomotopyRel f f S` by setting\n`F (t, x) = f x` for all `t`. This is defined using `HomotopyWith.refl`, but with the proof\nfilled in.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L612-L612","name":"ContinuousMap.HomotopyRel.refl_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L612-L612","name":"ContinuousMap.HomotopyRel.refl_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.refl_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L600-L601","name":"ContinuousMap.HomotopyRel.fst_eq_snd","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.fst_eq_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L596-L597","name":"ContinuousMap.HomotopyRel.eq_snd","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.eq_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L592-L593","name":"ContinuousMap.HomotopyRel.eq_fst","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel.eq_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L582-L583","name":"ContinuousMap.HomotopyRel","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel","doc":"A `HomotopyRel f₀ f₁ S` is a homotopy between `f₀` and `f₁` which is fixed on the points in `S`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L572-L574","name":"ContinuousMap.HomotopicWith.trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicWith.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L567-L568","name":"ContinuousMap.HomotopicWith.symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicWith.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L562-L563","name":"ContinuousMap.HomotopicWith.refl","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicWith.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L553-L554","name":"ContinuousMap.HomotopicWith","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopicWith","doc":"Given continuous maps `f₀` and `f₁`, we say `f₀` and `f₁` are homotopic with respect to the\npredicate `P` if there exists a `HomotopyWith f₀ f₁ P`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L542-L545","name":"ContinuousMap.HomotopyWith.cast","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.cast","doc":"Casting a `HomotopyWith f₀ f₁ P` to a `HomotopyWith g₀ g₁ P` where `f₀ = g₀` and `f₁ = g₁`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L541-L541","name":"ContinuousMap.HomotopyWith.cast_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.cast_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L541-L541","name":"ContinuousMap.HomotopyWith.cast_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.cast_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L534-L536","name":"ContinuousMap.HomotopyWith.symm_trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.symm_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L524-L531","name":"ContinuousMap.HomotopyWith.trans_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L513-L521","name":"ContinuousMap.HomotopyWith.trans","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.trans","doc":"Given `HomotopyWith f₀ f₁ P` and `HomotopyWith f₁ f₂ P`, we can define a `HomotopyWith f₀ f₂ P`\nby putting the first homotopy on `[0, 1/2]` and the second on `[1/2, 1]`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L505-L506","name":"ContinuousMap.HomotopyWith.symm_symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.symm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L499-L501","name":"ContinuousMap.HomotopyWith.symm","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.symm","doc":"Given a `HomotopyWith f₀ f₁ P`, we can define a `HomotopyWith f₁ f₀ P` by reversing the homotopy.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L498-L498","name":"ContinuousMap.HomotopyWith.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L498-L498","name":"ContinuousMap.HomotopyWith.symm_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.symm_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L492-L493","name":"ContinuousMap.HomotopyWith.instInhabitedHomotopyWithIdContinuousMapTrue","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.instInhabitedHomotopyWithIdContinuousMapTrue","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L487-L489","name":"ContinuousMap.HomotopyWith.refl","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.refl","doc":"Given a continuous function `f`, and a proof `h : P f`, we can define a `HomotopyWith f f P` by\n`F (t, x) = f x`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L486-L486","name":"ContinuousMap.HomotopyWith.refl_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L486-L486","name":"ContinuousMap.HomotopyWith.refl_toFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.refl_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L476-L476","name":"ContinuousMap.HomotopyWith.extendProp","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.extendProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L473-L473","name":"ContinuousMap.HomotopyWith.prop","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L469-L470","name":"ContinuousMap.HomotopyWith.coe_toHomotopy","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.coe_toHomotopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L464-L465","name":"ContinuousMap.HomotopyWith.coe_toContinuousMap","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.coe_toContinuousMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L459-L460","name":"ContinuousMap.HomotopyWith.apply_one","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.apply_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L454-L455","name":"ContinuousMap.HomotopyWith.apply_zero","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.apply_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L449-L450","name":"ContinuousMap.HomotopyWith.continuous","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L442-L442","name":"ContinuousMap.HomotopyWith.Simps.apply","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.Simps.apply","doc":"See Note [custom simps projection]. We need to specify this projection explicitly in this case,\nbecause it is a composition of multiple projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L437-L437","name":"ContinuousMap.HomotopyWith.ext","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L432-L433","name":"ContinuousMap.HomotopyWith.coeFn_injective","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.coeFn_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L424-L430","name":"ContinuousMap.HomotopyWith.instHomotopyLikeHomotopyWith","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.instHomotopyLikeHomotopyWith","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L414-L414","name":"ContinuousMap.HomotopyWith.prop'","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.prop'","doc":"the intermediate maps of the homotopy satisfy the property "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L411-L411","name":"ContinuousMap.HomotopyWith.mk","kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L411-L415","name":"ContinuousMap.HomotopyWith","kind":"structure","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyWith","doc":"The type of homotopies between `f₀ f₁ : C(X, Y)`, where the intermediate maps satisfy the predicate\n`P : C(X, Y) → Prop`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L400-L403","name":"ContinuousMap.Homotopic.piMap","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.piMap","doc":"If each `f₀ i : C(X, Y i)` is homotopic to `f₁ i : C(X, Y i)`, then `ContinuousMap.pi f₀` is\nhomotopic to `ContinuousMap.pi f₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L393-L396","name":"ContinuousMap.Homotopic.pi","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.pi","doc":"If each `f₀ i : C(X, Y i)` is homotopic to `f₁ i : C(X, Y i)`, then `ContinuousMap.pi f₀` is\nhomotopic to `ContinuousMap.pi f₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L387-L389","name":"ContinuousMap.Homotopic.prodMap","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.prodMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L383-L385","name":"ContinuousMap.Homotopic.prodMk","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.prodMk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L379-L380","name":"ContinuousMap.Homotopic.equivalence","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L374-L376","name":"ContinuousMap.Homotopic.hcomp","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.hcomp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L370-L371","name":"ContinuousMap.Homotopic.trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L365-L366","name":"ContinuousMap.Homotopic.symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L360-L361","name":"ContinuousMap.Homotopic.refl","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L353-L354","name":"ContinuousMap.Homotopic","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic","doc":"Given continuous maps `f₀` and `f₁`, we say `f₀` and `f₁` are homotopic if there exists a\n`Homotopy f₀ f₁`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L343-L346","name":"ContinuousMap.Homotopy.piMap","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.piMap","doc":"Given a family of homotopies `F i` between `f₀ i : C(X i, Y i)` and `f₁ i : C(X i, Y i)`,\nreturns a homotopy between `ContinuousMap.piMap f₀` and `ContinuousMap.piMap f₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L334-L339","name":"ContinuousMap.Homotopy.pi","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.pi","doc":"Given a family of homotopies `F i` between `f₀ i : C(X, Y i)` and `f₁ i : C(X, Y i)`, returns a\nhomotopy between `ContinuousMap.pi f₀` and `ContinuousMap.pi f₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L328-L330","name":"ContinuousMap.Homotopy.prodMap","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.prodMap","doc":"Let `F` be a homotopy between `f₀ : C(X, Y)` and `f₁ : C(X, Y)`. Let `G` be a homotopy between\n`g₀ : C(Z, Z')` and `g₁ : C(Z, Z')`. Then `F.prodMap G` is the homotopy between `f₀.prodMap g₀` and\n`f₁.prodMap g₁` that sends `(t, x, z)` to `(F (t, x), G (t, z))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L319-L323","name":"ContinuousMap.Homotopy.prodMk","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.prodMk","doc":"Let `F` be a homotopy between `f₀ : C(X, Y)` and `f₁ : C(X, Y)`. Let `G` be a homotopy between\n`g₀ : C(X, Z)` and `g₁ : C(X, Z)`. Then `F.prodMk G` is the homotopy between `f₀.prodMk g₀` and\n`f₁.prodMk g₁` that sends `p` to `(F p, G p)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L309-L313","name":"ContinuousMap.Homotopy.hcomp","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.hcomp","doc":"If we have a `Homotopy f₀ f₁` and a `Homotopy g₀ g₁`, then we can compose them and get a\n`Homotopy (g₀.comp f₀) (g₁.comp f₁)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L308-L308","name":"ContinuousMap.Homotopy.hcomp_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.hcomp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L299-L303","name":"ContinuousMap.Homotopy.compContinuousMap","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.compContinuousMap","doc":"Composition of a `Homotopy g₀ g₁` and `f : C(X, Y)` as a homotopy between `g₀.comp f` and\n`g₁.comp f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L298-L298","name":"ContinuousMap.Homotopy.compContinuousMap_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.compContinuousMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L289-L293","name":"ContinuousMap.Homotopy.cast","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.cast","doc":"Casting a `Homotopy f₀ f₁` to a `Homotopy g₀ g₁` where `f₀ = g₀` and `f₁ = g₁`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L288-L288","name":"ContinuousMap.Homotopy.cast_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.cast_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L265-L283","name":"ContinuousMap.Homotopy.symm_trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.symm_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L253-L262","name":"ContinuousMap.Homotopy.trans_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L239-L250","name":"ContinuousMap.Homotopy.trans","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.trans","doc":"Given `Homotopy f₀ f₁` and `Homotopy f₁ f₂`, we can define a `Homotopy f₀ f₂` by putting the first\nhomotopy on `[0, 1/2]` and the second on `[1/2, 1]`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L230-L232","name":"ContinuousMap.Homotopy.symm_symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.symm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L223-L226","name":"ContinuousMap.Homotopy.symm","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.symm","doc":"Given a `Homotopy f₀ f₁`, we can define a `Homotopy f₁ f₀` by reversing the homotopy.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L222-L222","name":"ContinuousMap.Homotopy.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L217-L218","name":"ContinuousMap.Homotopy.instInhabitedHomotopyId","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.instInhabitedHomotopyId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L211-L214","name":"ContinuousMap.Homotopy.refl","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.refl","doc":"Given a continuous function `f`, we can define a `Homotopy f f` by `F (t, x) = f x`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L210-L210","name":"ContinuousMap.Homotopy.refl_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L202-L203","name":"ContinuousMap.Homotopy.congr_arg","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.congr_arg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L198-L199","name":"ContinuousMap.Homotopy.congr_fun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.congr_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L192-L194","name":"ContinuousMap.Homotopy.extend_apply_of_mem_I","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.extend_apply_of_mem_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L187-L188","name":"ContinuousMap.Homotopy.extend_apply_coe","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.extend_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L180-L183","name":"ContinuousMap.Homotopy.extend_apply_of_one_le","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.extend_apply_of_one_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L174-L177","name":"ContinuousMap.Homotopy.extend_apply_of_le_zero","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.extend_apply_of_le_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L170-L171","name":"ContinuousMap.Homotopy.extend","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.extend","doc":"Continuously extending a curried homotopy to a function from `ℝ` to `C(X, Y)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L164-L165","name":"ContinuousMap.Homotopy.curry_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.curry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L159-L160","name":"ContinuousMap.Homotopy.curry","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.curry","doc":"Currying a homotopy to a continuous function from `I` to `C(X, Y)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L153-L154","name":"ContinuousMap.Homotopy.coe_toContinuousMap","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.coe_toContinuousMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L148-L149","name":"ContinuousMap.Homotopy.apply_one","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.apply_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L143-L144","name":"ContinuousMap.Homotopy.apply_zero","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.apply_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L138-L139","name":"ContinuousMap.Homotopy.continuous","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.continuous","doc":"Deprecated. Use `map_continuous` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L131-L132","name":"ContinuousMap.Homotopy.Simps.apply","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.Simps.apply","doc":"See Note [custom simps projection]. We need to specify this projection explicitly in this case,\nbecause it is a composition of multiple projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L125-L126","name":"ContinuousMap.Homotopy.ext","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L108-L116","name":"ContinuousMap.Homotopy.instHomotopyLikeHomotopy","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.instHomotopyLikeHomotopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L97-L97","name":"ContinuousMap.HomotopyLike.map_one_left","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyLike.map_one_left","doc":"value of the homotopy at 1 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L95-L95","name":"ContinuousMap.HomotopyLike.map_zero_left","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyLike.map_zero_left","doc":"value of the homotopy at 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L92-L93","name":"ContinuousMap.HomotopyLike.mk","kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyLike.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L92-L97","name":"ContinuousMap.HomotopyLike","kind":"class","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyLike","doc":"`ContinuousMap.HomotopyLike F f₀ f₁` states that `F` is a type of homotopies between `f₀` and\n`f₁`.\n\nYou should extend this class when you extend `ContinuousMap.Homotopy`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L83-L83","name":"ContinuousMap.Homotopy.map_one_left","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.map_one_left","doc":"value of the homotopy at 1 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L81-L81","name":"ContinuousMap.Homotopy.map_zero_left","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.map_zero_left","doc":"value of the homotopy at 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L79-L79","name":"ContinuousMap.Homotopy.mk","kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Basic.lean#L79-L83","name":"ContinuousMap.Homotopy","kind":"structure","docLink":"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy","doc":"`ContinuousMap.Homotopy f₀ f₁` is the type of homotopies from `f₀` to `f₁`.\n\nWhen possible, instead of parametrizing results over `(f : Homotopy f₀ f₁)`,\nyou should parametrize over `{F : Type*} [HomotopyLike F f₀ f₁] (f : F)`.\n\nWhen you extend this structure, make sure to extend `ContinuousMap.HomotopyLike`. "}]}