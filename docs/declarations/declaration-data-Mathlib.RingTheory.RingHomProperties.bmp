{"name":"Mathlib.RingTheory.RingHomProperties","instances":[],"imports":["Init","Mathlib.Algebra.Category.Ring.Constructions","Mathlib.Algebra.Category.Ring.Colimits","Mathlib.CategoryTheory.Iso","Mathlib.RingTheory.Localization.Away.Basic","Mathlib.RingTheory.IsTensorProduct"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L173-L185","name":"RingHom.StableUnderBaseChange.pushout_inl","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange.pushout_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L137-L168","name":"RingHom.StableUnderBaseChange.mk","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L130-L134","name":"RingHom.StableUnderBaseChange","kind":"def","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange","doc":"A morphism property `P` is `StableUnderBaseChange` if `P(S →+* A)` implies\n`P(B →+* A ⊗[S] B)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L110-L121","name":"RingHom.StableUnderComposition.respectsIso","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition.respectsIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L103-L105","name":"RingHom.StableUnderComposition","kind":"def","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition","doc":"A property is `StableUnderComposition` if the composition of two such morphisms\nstill falls in the class. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L68-L94","name":"RingHom.RespectsIso.is_localization_away_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso.is_localization_away_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L60-L65","name":"RingHom.RespectsIso.cancel_right_isIso","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso.cancel_right_isIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L53-L57","name":"RingHom.RespectsIso.cancel_left_isIso","kind":"theorem","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso.cancel_left_isIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/RingHomProperties.lean#L44-L48","name":"RingHom.RespectsIso","kind":"def","docLink":"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso","doc":"A property `RespectsIso` if it still holds when composed with an isomorphism "}]}