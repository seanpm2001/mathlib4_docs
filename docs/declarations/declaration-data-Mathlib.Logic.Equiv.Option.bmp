{"name":"Mathlib.Logic.Equiv.Option","instances":[],"imports":["Init","Mathlib.Control.EquivFunctor","Mathlib.Data.Option.Basic","Mathlib.Data.Subtype","Mathlib.Logic.Equiv.Defs"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L264-L268","name":"Equiv.optionSubtype_symm_apply_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_symm_apply_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L256-L260","name":"Equiv.optionSubtype_symm_apply_apply_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_symm_apply_apply_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L247-L252","name":"Equiv.optionSubtype_symm_apply_apply_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_symm_apply_apply_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L241-L243","name":"Equiv.optionSubtype_symm_apply_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_symm_apply_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L232-L237","name":"Equiv.optionSubtype_apply_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_apply_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L225-L228","name":"Equiv.coe_optionSubtype_apply_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.coe_optionSubtype_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L217-L221","name":"Equiv.optionSubtype_apply_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L174-L213","name":"Equiv.optionSubtype","kind":"def","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionSubtype","doc":"Equivalences between `Option α` and `β` that send `none` to `x` are equivalent to\nequivalences between `α` and `{y : β // y ≠ x}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L168-L169","name":"Equiv.optionCongr_injective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L162-L163","name":"Equiv.removeNone_optionCongr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_optionCongr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L150-L158","name":"Equiv.some_removeNone_iff","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.some_removeNone_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L146-L147","name":"Equiv.option_symm_apply_none_iff","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.option_symm_apply_none_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L141-L142","name":"Equiv.removeNone_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L136-L138","name":"Equiv.removeNone_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L132-L133","name":"Equiv.removeNone_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L124-L128","name":"Equiv.removeNone","kind":"def","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone","doc":"Given an equivalence between two `Option` types, eliminate `none` from that equivalence by\nmapping `e.symm none` to `e none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L102-L118","name":"Equiv.removeNone_aux_inv","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_aux_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L96-L98","name":"Equiv.removeNone_aux_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_aux_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L90-L92","name":"Equiv.removeNone_aux_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_aux_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L78-L86","name":"Equiv.removeNone_aux","kind":"def","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone_aux","doc":"If we have a value on one side of an `Equiv` of `Option`\nwe also have a value on the other side of the equivalence\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L64-L66","name":"Equiv.optionCongr_eq_equivFunctor_mapEquiv","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_eq_equivFunctor_mapEquiv","doc":"When `α` and `β` are in the same universe, this is the same as the result of\n`EquivFunctor.mapEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L57-L59","name":"Equiv.optionCongr_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L52-L53","name":"Equiv.optionCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L47-L48","name":"Equiv.optionCongr_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L38-L42","name":"Equiv.optionCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr","doc":"A universe-polymorphic version of `EquivFunctor.mapEquiv Option e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Option.lean#L37-L37","name":"Equiv.optionCongr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr_apply","doc":""}]}