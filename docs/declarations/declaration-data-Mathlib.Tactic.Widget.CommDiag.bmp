{"name":"Mathlib.Tactic.Widget.CommDiag","instances":[],"imports":["Init","Mathlib.CategoryTheory.Category.Basic","ProofWidgets.Component.PenroseDiagram","ProofWidgets.Presentation.Expr","ProofWidgets.Component.SelectionPanel"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L133-L139","name":"Mathlib.Tactic.Widget.commutativeSquarePresenter","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeSquarePresenter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L121-L130","name":"Mathlib.Tactic.Widget.commSquareM?","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commSquareM?","doc":"Given a commutative square `f ≫ g = i ≫ h`, return a square diagram. Otherwise `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L118-L118","name":"Mathlib.Tactic.Widget.subSquare","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subSquare","doc":"Square with `homs = [f,g,h,i]` and `objs = [A,B,C,D]`\n```\nA f B\ni   g\nD h C\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L100-L106","name":"Mathlib.Tactic.Widget.commutativeTrianglePresenter","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeTrianglePresenter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L83-L97","name":"Mathlib.Tactic.Widget.commTriangleM?","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commTriangleM?","doc":"Given a commutative triangle `f ≫ g = h` or `e ≡ h = f ≫ g`, return a triangle diagram.\nOtherwise `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L79-L79","name":"Mathlib.Tactic.Widget.subTriangle","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subTriangle","doc":"Triangle with `homs = [f,g,h]` and `objs = [A,B,C]`\n```\nA f B\n  h g\n    C\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L59-L67","name":"Mathlib.Tactic.Widget.mkCommDiag","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.mkCommDiag","doc":"Construct a commutative diagram from a Penrose `sub`stance program and expressions `embeds` to\ndisplay as labels in the diagram. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L52-L52","name":"Mathlib.Tactic.Widget.ExprEmbeds","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.ExprEmbeds","doc":"Expressions to display as labels in a diagram. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L47-L49","name":"Mathlib.Tactic.Widget.homComp?","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homComp?","doc":"Given composed homs `g ≫ h`, return `(g, h)`. Otherwise `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L42-L44","name":"Mathlib.Tactic.Widget.homType?","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homType?","doc":"Given a Hom type `α ⟶ β`, return `(α, β)`. Otherwise `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Widget/CommDiag.lean#L19-L32","name":"Lean.Expr.app7?","kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Lean.Expr.app7?","doc":"If the expression is a function application of `fName` with 7 arguments, return those arguments.\nOtherwise return `none`. "}]}