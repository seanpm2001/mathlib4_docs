{"name":"Mathlib.CategoryTheory.Limits.Shapes.KernelPair","instances":[{"typeNames":["CategoryTheory.IsKernelPair"],"name":"CategoryTheory.IsKernelPair.instSubsingletonIsKernelPair","className":"Subsingleton"},{"typeNames":["CategoryTheory.IsKernelPair","CategoryTheory.CategoryStruct.id","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.IsKernelPair.instInhabitedIsKernelPairIdToCategoryStruct","className":"Inhabited"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Equalizers","Mathlib.CategoryTheory.Limits.Shapes.CommSq","Mathlib.CategoryTheory.Limits.Shapes.RegularMono"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L217-L220","name":"CategoryTheory.IsKernelPair.of_isIso_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.of_isIso_of_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L208-L214","name":"CategoryTheory.IsKernelPair.isIso_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.isIso_of_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L198-L205","name":"CategoryTheory.IsKernelPair.mono_of_isIso_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.mono_of_isIso_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L176-L195","name":"CategoryTheory.IsKernelPair.pullback","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.pullback","doc":"If `a‚ÇÅ a‚ÇÇ : A ‚ü∂ Y` is a kernel pair for `g : Y ‚ü∂ Z`, then `a‚ÇÅ √ó[Z] X` and `a‚ÇÇ √ó[Z] X`\n(`A √ó[Z] X ‚ü∂ Y √ó[Z] X`) is a kernel pair for `Y √ó[Z] X ‚ü∂ X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L161-L171","name":"CategoryTheory.IsKernelPair.toCoequalizer","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.toCoequalizer","doc":"If `(a,b)` is the kernel pair of `f`, and `f` is a coequalizer morphism for some parallel pair, then\n`f` is a coequalizer morphism of `a` and `b`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L143-L154","name":"CategoryTheory.IsKernelPair.comp_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.comp_of_mono","doc":"If `(a,b)` is a kernel pair for `f‚ÇÅ` and `f‚ÇÇ` is mono, then `(a,b)` is a kernel pair for `f‚ÇÅ ‚â´ f‚ÇÇ`.\nThe converse of `cancel_right_of_mono`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L134-L136","name":"CategoryTheory.IsKernelPair.cancel_right_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.cancel_right_of_mono","doc":"If `(a,b)` is a kernel pair for `f‚ÇÅ ‚â´ f‚ÇÇ` and `f‚ÇÇ` is mono, then `(a,b)` is a kernel pair for\njust `f‚ÇÅ`.\nThe converse of `comp_of_mono`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L114-L127","name":"CategoryTheory.IsKernelPair.cancel_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.cancel_right","doc":"If `(a,b)` is a kernel pair for `f‚ÇÅ ‚â´ f‚ÇÇ` and `a ‚â´ f‚ÇÅ = b ‚â´ f‚ÇÅ`, then `(a,b)` is a kernel pair for\njust `f‚ÇÅ`.\nThat is, to show that `(a,b)` is a kernel pair for `f‚ÇÅ` it suffices to only show the square\ncommutes, rather than to additionally show it's a pullback.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L103-L105","name":"CategoryTheory.IsKernelPair.lift'","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift'","doc":"Given a pair of morphisms `p`, `q` to `X` which factor through `f`, they factor through any kernel\npair of `f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L95-L97","name":"CategoryTheory.IsKernelPair.lift_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L94-L94","name":"CategoryTheory.IsKernelPair.lift_snd_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift_snd_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L90-L92","name":"CategoryTheory.IsKernelPair.lift_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L89-L89","name":"CategoryTheory.IsKernelPair.lift_fst_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift_fst_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L85-L87","name":"CategoryTheory.IsKernelPair.lift","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.lift","doc":"Given a pair of morphisms `p`, `q` to `X` which factor through `f`, they factor through any kernel\npair of `f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L75-L76","name":"CategoryTheory.IsKernelPair.instInhabitedIsKernelPairIdToCategoryStruct","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.instInhabitedIsKernelPairIdToCategoryStruct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L71-L72","name":"CategoryTheory.IsKernelPair.id_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.id_of_mono","doc":"If `f` is a monomorphism, then `(ùüô _, ùüô _)`  is a kernel pair for `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L64-L68","name":"CategoryTheory.IsKernelPair.instSubsingletonIsKernelPair","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair.instSubsingletonIsKernelPair","doc":"The data expressing that `(a, b)` is a kernel pair is subsingleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/KernelPair.lean#L57-L58","name":"CategoryTheory.IsKernelPair","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/KernelPair.html#CategoryTheory.IsKernelPair","doc":"`IsKernelPair f a b` expresses that `(a, b)` is a kernel pair for `f`, i.e. `a ‚â´ f = b ‚â´ f`\nand the square\n  R ‚Üí X\n  ‚Üì   ‚Üì\n  X ‚Üí Y\nis a pullback square.\nThis is just an abbreviation for `IsPullback a b f f`.\n"}]}