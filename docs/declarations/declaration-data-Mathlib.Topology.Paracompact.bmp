{"name":"Mathlib.Topology.Paracompact","instances":[{"typeNames":["Prod","instTopologicalSpaceProd"],"name":"instParacompactSpaceProdInstTopologicalSpaceProd","className":"ParacompactSpace"},{"typeNames":["Prod","instTopologicalSpaceProd"],"name":"instParacompactSpaceProdInstTopologicalSpaceProd_1","className":"ParacompactSpace"},{"typeNames":[],"name":"paracompact_of_compact","className":"ParacompactSpace"},{"typeNames":[],"name":"paracompact_of_locallyCompact_sigmaCompact","className":"ParacompactSpace"}],"imports":["Init","Mathlib.Topology.Homeomorph","Mathlib.Data.Option.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L297-L321","name":"normal_of_paracompact_t2","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#normal_of_paracompact_t2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L284-L292","name":"paracompact_of_locallyCompact_sigmaCompact","kind":"instance","docLink":"./Mathlib/Topology/Paracompact.html#paracompact_of_locallyCompact_sigmaCompact","doc":"A locally compact sigma compact Hausdorff space is paracompact. See also\n`refinement_of_locallyCompact_sigmaCompact_of_nhds_basis` for a more precise statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L271-L278","name":"refinement_of_locallyCompact_sigmaCompact_of_nhds_basis","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#refinement_of_locallyCompact_sigmaCompact_of_nhds_basis","doc":"Let `X` be a locally compact sigma compact Hausdorff topological space. Suppose that for each\n`x` the sets `B x : Œπ x ‚Üí Set X` with the predicate `p x : Œπ x ‚Üí Prop` form a basis of the filter\n`ùìù x`. Then there exists a locally finite covering `fun i ‚Ü¶ B (c i) (r i)` of `X` such that each\n`r i` satisfies `p (c i)`.\n\nThe notation is inspired by the case `B x r = Metric.ball x r` but the theorem applies to\n`nhds_basis_opens` as well. If the covering must be subordinate to some open covering of `s`, then\nthe user should use a basis obtained by `Filter.HasBasis.restrict_subset` or a similar lemma, see\nthe proof of `paracompact_of_locallyCompact_sigmaCompact` for an example.\n\nThe formalization is based on two [ncatlab](https://ncatlab.org/) proofs:\n* [locally compact and sigma compact spaces are paracompact](https://ncatlab.org/nlab/show/locally+compact+and+sigma-compact+spaces+are+paracompact);\n* [open cover of smooth manifold admits locally finite refinement by closed balls](https://ncatlab.org/nlab/show/partition+of+unity#ExistenceOnSmoothManifolds).\n\nSee also `refinement_of_locallyCompact_sigmaCompact_of_nhds_basis_set` for a version of this lemma\ndealing with a covering of a closed set.\n\nIn most cases (namely, if `B c r ‚à™ B c r'` is again a set of the form `B c r''`) it is possible\nto choose `Œ± = X`. This fact is not yet formalized in `mathlib`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L199-L249","name":"refinement_of_locallyCompact_sigmaCompact_of_nhds_basis_set","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#refinement_of_locallyCompact_sigmaCompact_of_nhds_basis_set","doc":"Let `X` be a locally compact sigma compact Hausdorff topological space, let `s` be a closed set\nin `X`. Suppose that for each `x ‚àà s` the sets `B x : Œπ x ‚Üí Set X` with the predicate\n`p x : Œπ x ‚Üí Prop` form a basis of the filter `ùìù x`. Then there exists a locally finite covering\n`fun i ‚Ü¶ B (c i) (r i)` of `s` such that all ‚Äúcenters‚Äù `c i` belong to `s` and each `r i` satisfies\n`p (c i)`.\n\nThe notation is inspired by the case `B x r = Metric.ball x r` but the theorem applies to\n`nhds_basis_opens` as well. If the covering must be subordinate to some open covering of `s`, then\nthe user should use a basis obtained by `Filter.HasBasis.restrict_subset` or a similar lemma, see\nthe proof of `paracompact_of_locallyCompact_sigmaCompact` for an example.\n\nThe formalization is based on two [ncatlab](https://ncatlab.org/) proofs:\n* [locally compact and sigma compact spaces are paracompact](https://ncatlab.org/nlab/show/locally+compact+and+sigma-compact+spaces+are+paracompact);\n* [open cover of smooth manifold admits locally finite refinement by closed balls](https://ncatlab.org/nlab/show/partition+of+unity#ExistenceOnSmoothManifolds).\n\nSee also `refinement_of_locallyCompact_sigmaCompact_of_nhds_basis` for a version of this lemma\ndealing with a covering of the whole space.\n\nIn most cases (namely, if `B c r ‚à™ B c r'` is again a set of the form `B c r''`) it is possible\nto choose `Œ± = X`. This fact is not yet formalized in `mathlib`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L170-L176","name":"paracompact_of_compact","kind":"instance","docLink":"./Mathlib/Topology/Paracompact.html#paracompact_of_compact","doc":"A compact space is paracompact. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L165-L166","name":"instParacompactSpaceProdInstTopologicalSpaceProd_1","kind":"instance","docLink":"./Mathlib/Topology/Paracompact.html#instParacompactSpaceProdInstTopologicalSpaceProd_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L139-L163","name":"instParacompactSpaceProdInstTopologicalSpaceProd","kind":"instance","docLink":"./Mathlib/Topology/Paracompact.html#instParacompactSpaceProdInstTopologicalSpaceProd","doc":"The product of a compact space and a paracompact space is a paracompact space. The formalization\nis based on https://dantopology.wordpress.com/2009/10/24/compact-x-paracompact-is-paracompact/\nwith some minor modifications.\n\nThis version assumes that `X` in `X √ó Y` is compact and `Y` is paracompact, see next lemma for the\nother case. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L130-L131","name":"Homeomorph.paracompactSpace_iff","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#Homeomorph.paracompactSpace_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L118-L128","name":"ClosedEmbedding.paracompactSpace","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#ClosedEmbedding.paracompactSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L102-L115","name":"precise_refinement_set","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#precise_refinement_set","doc":"In a paracompact space, every open covering of a closed set admits a locally finite refinement\nindexed by the same type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L76-L97","name":"precise_refinement","kind":"theorem","docLink":"./Mathlib/Topology/Paracompact.html#precise_refinement","doc":"Any open cover of a paracompact space has a locally finite *precise* refinement, that is,\none indexed on the same type with each open set contained in the corresponding original one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L66-L66","name":"ParacompactSpace.locallyFinite_refinement","kind":"def","docLink":"./Mathlib/Topology/Paracompact.html#ParacompactSpace.locallyFinite_refinement","doc":"Every open cover of a paracompact space assumes a locally finite refinement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L64-L64","name":"ParacompactSpace.mk","kind":"ctor","docLink":"./Mathlib/Topology/Paracompact.html#ParacompactSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Paracompact.lean#L64-L69","name":"ParacompactSpace","kind":"class","docLink":"./Mathlib/Topology/Paracompact.html#ParacompactSpace","doc":"A topological space is called paracompact, if every open covering of this space admits a locally\nfinite refinement. We use the same universe for all types in the definition to avoid creating a\nclass like `ParacompactSpace.{u v}`. Due to lemma `precise_refinement` below, every open covering\n`s : Œ± ‚Üí Set X` indexed on `Œ± : Type v` has a *precise* locally finite refinement, i.e., a locally\nfinite refinement `t : Œ± ‚Üí Set X` indexed on the same type such that each `‚àÄ i, t i ‚äÜ s i`. "}]}