{"name":"Mathlib.Tactic.HigherOrder","instances":[],"imports":["Init","Lean.Elab.Term","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Assumption","Lean.Elab.DeclarationRange","Mathlib.Control.SimpSet"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/HigherOrder.lean#L106-L120","name":"Tactic.higherOrderAttr","kind":"opaque","docLink":"./Mathlib/Tactic/HigherOrder.html#Tactic.higherOrderAttr","doc":"The `higher_order` attribute. From a lemma of the shape `∀ x, f (g x) = h x` derive an\nauxiliary lemma of the form `f ∘ g = h` for reasoning about higher-order functions.\n\nSyntax: `[higher_order]` or `[higher_order name]` where the given name is used for the\ngenerated theorem. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/HigherOrder.lean#L66-L104","name":"Tactic.higherOrderGetParam","kind":"def","docLink":"./Mathlib/Tactic/HigherOrder.html#Tactic.higherOrderGetParam","doc":"A user attribute that applies to lemmas of the shape `∀ x, f (g x) = h x`.\nIt derives an auxiliary lemma of the form `f ∘ g = h` for reasoning about higher-order functions.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/HigherOrder.lean#L51-L61","name":"Tactic.mkHigherOrderType","kind":"opaque","docLink":"./Mathlib/Tactic/HigherOrder.html#Tactic.mkHigherOrderType","doc":"From a lemma of the shape `∀ x, f (g x) = h x`\nderive an auxiliary lemma of the form `f ∘ g = h`\nfor reasoning about higher-order functions.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/HigherOrder.lean#L32-L44","name":"Tactic.mkComp","kind":"def","docLink":"./Mathlib/Tactic/HigherOrder.html#Tactic.mkComp","doc":"`mkComp v e` checks whether `e` is a sequence of nested applications `f (g (h v))`, and if so,\nreturns the expression `f ∘ g ∘ h`. If `e = v` it returns `id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/HigherOrder.lean#L24-L24","name":"Lean.Parser.Attr.higherOrder","kind":"def","docLink":"./Mathlib/Tactic/HigherOrder.html#Lean.Parser.Attr.higherOrder","doc":""}]}