{"name":"Mathlib.CategoryTheory.Limits.Preserves.Shapes.Terminal","instances":[{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.terminal","CategoryTheory.Limits.terminal","CategoryTheory.Limits.terminalComparison"],"name":"CategoryTheory.Limits.instIsIsoObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorTerminalTerminalTerminalComparison","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Limits.initial","Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.initial","CategoryTheory.Limits.initialComparison"],"name":"CategoryTheory.Limits.instIsIsoInitialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInitialInitialComparison","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Terminal","Mathlib.CategoryTheory.Limits.Preserves.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L220-L222","name":"CategoryTheory.Limits.instIsIsoInitialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInitialInitialComparison","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.instIsIsoInitialObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorInitialInitialComparison","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L216-L217","name":"CategoryTheory.Limits.PreservesInitial.iso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesInitial.iso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L211-L212","name":"CategoryTheory.Limits.PreservesInitial.iso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesInitial.iso","doc":"If `G` preserves initial objects, then the initial comparison map for `G` is an isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L204-L205","name":"CategoryTheory.Limits.preservesInitialOfIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesInitialOfIso","doc":"If there is any isomorphism `⊥ ≅ G.obj ⊥ `, then `G` preserves initial objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L197-L200","name":"CategoryTheory.Limits.preservesInitialOfIsIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesInitialOfIsIso","doc":"If there is any isomorphism `⊥ ⟶ G.obj ⊥`, then `G` preserves initial objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L189-L193","name":"CategoryTheory.Limits.PreservesInitial.ofIsoComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesInitial.ofIsoComparison","doc":"If the initial comparison map for `G` is an isomorphism, then `G` preserves initial objects.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L178-L182","name":"CategoryTheory.Limits.hasInitial_of_hasInitial_of_preservesColimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.hasInitial_of_hasInitial_of_preservesColimit","doc":"If `C` has an initial object and `G` preserves initial objects, then `D` has an initial object\nalso.\nNote this property is somewhat unique to colimits of the empty diagram: for general `J`, if `C`\nhas colimits of shape `J` and `G` preserves them, then `D` does not necessarily have colimits of\nshape `J`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L167-L169","name":"CategoryTheory.Limits.isColimitOfHasInitialOfPreservesColimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.isColimitOfHasInitialOfPreservesColimit","doc":"If `G` preserves the initial object and `C` has an initial object, then the image of the initial\nobject is initial.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L156-L159","name":"CategoryTheory.Limits.preservesColimitsOfShapePemptyOfPreservesInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesColimitsOfShapePemptyOfPreservesInitial","doc":"Preserving the initial object implies preserving all colimits of the empty diagram. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L150-L152","name":"CategoryTheory.Limits.IsInitial.isInitialOfObj","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.isInitialOfObj","doc":"The property of reflecting initial objects expressed in terms of `IsInitial`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L144-L146","name":"CategoryTheory.Limits.IsInitial.isInitialObj","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.isInitialObj","doc":"The property of preserving initial objects expressed in terms of `IsInitial`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L138-L140","name":"CategoryTheory.Limits.isColimitMapCoconeEmptyCoconeEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.isColimitMapCoconeEmptyCoconeEquiv","doc":"The map of an empty cocone is a colimit iff the mapped object is initial.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L128-L130","name":"CategoryTheory.Limits.instIsIsoObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorTerminalTerminalTerminalComparison","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.instIsIsoObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorTerminalTerminalTerminalComparison","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L124-L125","name":"CategoryTheory.Limits.PreservesTerminal.iso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesTerminal.iso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L119-L120","name":"CategoryTheory.Limits.PreservesTerminal.iso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesTerminal.iso","doc":"If `G` preserves terminal objects, then the terminal comparison map for `G` is an isomorphism.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L111-L112","name":"CategoryTheory.Limits.preservesTerminalOfIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesTerminalOfIso","doc":"If there is any isomorphism `G.obj ⊤ ≅ ⊤`, then `G` preserves terminal objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L104-L107","name":"CategoryTheory.Limits.preservesTerminalOfIsIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesTerminalOfIsIso","doc":"If there is any isomorphism `G.obj ⊤ ⟶ ⊤`, then `G` preserves terminal objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L96-L100","name":"CategoryTheory.Limits.PreservesTerminal.ofIsoComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.PreservesTerminal.ofIsoComparison","doc":"If the terminal comparison map for `G` is an isomorphism, then `G` preserves terminal objects.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L86-L89","name":"CategoryTheory.Limits.hasTerminal_of_hasTerminal_of_preservesLimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminal_of_hasTerminal_of_preservesLimit","doc":"If `C` has a terminal object and `G` preserves terminal objects, then `D` has a terminal object\nalso.\nNote this property is somewhat unique to (co)limits of the empty diagram: for general `J`, if `C`\nhas limits of shape `J` and `G` preserves them, then `D` does not necessarily have limits of shape\n`J`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L75-L77","name":"CategoryTheory.Limits.isLimitOfHasTerminalOfPreservesLimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.isLimitOfHasTerminalOfPreservesLimit","doc":"If `G` preserves the terminal object and `C` has a terminal object, then the image of the terminal\nobject is terminal.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L63-L66","name":"CategoryTheory.Limits.preservesLimitsOfShapePemptyOfPreservesTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.preservesLimitsOfShapePemptyOfPreservesTerminal","doc":"Preserving the terminal object implies preserving all limits of the empty diagram. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L57-L59","name":"CategoryTheory.Limits.IsTerminal.isTerminalOfObj","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.isTerminalOfObj","doc":"The property of reflecting terminal objects expressed in terms of `IsTerminal`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L51-L53","name":"CategoryTheory.Limits.IsTerminal.isTerminalObj","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.isTerminalObj","doc":"The property of preserving terminal objects expressed in terms of `IsTerminal`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.lean#L45-L47","name":"CategoryTheory.Limits.isLimitMapConeEmptyConeEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Terminal.html#CategoryTheory.Limits.isLimitMapConeEmptyConeEquiv","doc":"The map of an empty cone is a limit iff the mapped object is terminal.\n"}]}