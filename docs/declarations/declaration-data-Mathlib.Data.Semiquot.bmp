{"name":"Mathlib.Data.Semiquot","instances":[{"typeNames":["Semiquot"],"name":"Semiquot.instMembershipSemiquot","className":"Membership"},{"typeNames":["Semiquot"],"name":"Semiquot.instMonadSemiquot","className":"Monad"},{"typeNames":["Semiquot","Semiquot.instMonadSemiquot"],"name":"Semiquot.instLawfulMonadSemiquotInstMonadSemiquot","className":"LawfulMonad"},{"typeNames":["Semiquot"],"name":"Semiquot.instLESemiquot","className":"LE"},{"typeNames":["Semiquot"],"name":"Semiquot.partialOrder","className":"PartialOrder"},{"typeNames":["Semiquot"],"name":"Semiquot.instSemilatticeSupSemiquot","className":"SemilatticeSup"},{"typeNames":["Semiquot"],"name":"Semiquot.instInhabitedSemiquot","className":"Inhabited"},{"typeNames":["Semiquot","Semiquot.instLESemiquot"],"name":"Semiquot.instOrderTopSemiquotInstLESemiquot","className":"OrderTop"}],"imports":["Init","Mathlib.Data.Set.Lattice"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L278-L280","name":"Semiquot.instOrderTopSemiquotInstLESemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instOrderTopSemiquotInstLESemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L274-L275","name":"Semiquot.isPure_univ","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.isPure_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L269-L270","name":"Semiquot.univ_unique","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.univ_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L264-L265","name":"Semiquot.mem_univ","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L260-L261","name":"Semiquot.instInhabitedSemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instInhabitedSemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L256-L257","name":"Semiquot.univ","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.univ","doc":"`univ : Semiquot α` represents an unspecified element of `univ : Set α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L251-L252","name":"Semiquot.isPure_of_subsingleton","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.isPure_of_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L244-L248","name":"Semiquot.IsPure.min","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.IsPure.min","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L240-L241","name":"Semiquot.IsPure.mono","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.IsPure.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L236-L237","name":"Semiquot.isPure_iff","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.isPure_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L230-L233","name":"Semiquot.pure_isPure","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.pure_isPure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L225-L226","name":"Semiquot.eq_pure","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.eq_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L220-L222","name":"Semiquot.get_mem","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.get_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L216-L217","name":"Semiquot.get","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.get","doc":"Extract the value from an `IsPure` semiquotient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L211-L212","name":"Semiquot.IsPure","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.IsPure","doc":"Assert that a `Semiquot` contains only one possible value. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L204-L205","name":"Semiquot.pure_le","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.pure_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L196-L201","name":"Semiquot.instSemilatticeSupSemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instSemilatticeSupSemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L190-L194","name":"Semiquot.partialOrder","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.partialOrder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L187-L188","name":"Semiquot.instLESemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instLESemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L176-L185","name":"Semiquot.instLawfulMonadSemiquotInstMonadSemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instLawfulMonadSemiquotInstMonadSemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L172-L173","name":"Semiquot.pure_inj","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.pure_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L167-L168","name":"Semiquot.mem_pure_self","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_pure_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L163-L164","name":"Semiquot.mem_pure","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L158-L159","name":"Semiquot.bind_def","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.bind_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L153-L154","name":"Semiquot.map_def","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.map_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L147-L150","name":"Semiquot.instMonadSemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instMonadSemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L143-L144","name":"Semiquot.mem_bind","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L138-L139","name":"Semiquot.bind","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.bind","doc":"Apply a function returning a `Semiquot` to a `Semiquot`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L133-L134","name":"Semiquot.mem_map","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L128-L129","name":"Semiquot.map","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.map","doc":"Apply a function to the unknown value stored in a `Semiquot α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L122-L124","name":"Semiquot.liftOn_ofMem","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.liftOn_ofMem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L116-L117","name":"Semiquot.liftOn","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.liftOn","doc":"If `f` is a constant on `q.s`, then `q.liftOn f` is the value of `f`\nat any point of `q`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L108-L109","name":"Semiquot.toTrunc","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.toTrunc","doc":"Convert a `Semiquot α` to a `Trunc α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L103-L104","name":"Semiquot.ofTrunc","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.ofTrunc","doc":"Convert a `Trunc α` to a `Semiquot α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L98-L99","name":"Semiquot.mem_blur'","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_blur'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L93-L94","name":"Semiquot.blur_eq_blur'","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.blur_eq_blur'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L89-L90","name":"Semiquot.blur","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.blur","doc":"Replace `s` in a `q : Semiquot α` with a union `s ∪ q.s` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L84-L85","name":"Semiquot.blur'","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.blur'","doc":"Replace `s` in a `Semiquot` with a superset. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L79-L80","name":"Semiquot.mem_pure'","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mem_pure'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L74-L75","name":"Semiquot.pure","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.pure","doc":"`pure a` is `a` reinterpreted as an unspecified element of `{a}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L69-L70","name":"Semiquot.nonempty","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L65-L66","name":"Semiquot.eq_mk_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.eq_mk_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L60-L62","name":"Semiquot.exists_mem","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.exists_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L56-L57","name":"Semiquot.ext","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L50-L53","name":"Semiquot.ext_s","kind":"theorem","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.ext_s","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L46-L47","name":"Semiquot.mk","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mk","doc":"Construct a `Semiquot α` from `h : a ∈ s` where `s : Set α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L42-L43","name":"Semiquot.instMembershipSemiquot","kind":"instance","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.instMembershipSemiquot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L35-L35","name":"Semiquot.val","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.val","doc":"Assertion of non-emptiness via `Trunc`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L33-L33","name":"Semiquot.s","kind":"def","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.s","doc":"Set containing some element of `α`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L31-L31","name":"Semiquot.mk'","kind":"ctor","docLink":"./Mathlib/Data/Semiquot.html#Semiquot.mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Semiquot.lean#L31-L35","name":"Semiquot","kind":"structure","docLink":"./Mathlib/Data/Semiquot.html#Semiquot","doc":"A member of `Semiquot α` is classically a nonempty `Set α`,\nand in the VM is represented by an element of `α`; the relation\nbetween these is that the VM element is required to be a member\nof the set `s`. The specific element of `s` that the VM computes\nis hidden by a quotient construction, allowing for the representation\nof nondeterministic functions. "}]}