{"name":"Std.Data.Array.Init.Basic","instances":[],"imports":["Init","Std.Tactic.NoMatch","Std.Data.List.Init.Lemmas"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/Array/Init/Basic.lean#L28-L29","name":"Array.ofFn.go","kind":"def","docLink":"./Std/Data/Array/Init/Basic.html#Array.ofFn.go","doc":"Auxiliary for `ofFn`. `ofFn.go f i acc = acc ++ #[f i, ..., f(n - 1)]` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/Array/Init/Basic.lean#L26-L30","name":"Array.ofFn","kind":"def","docLink":"./Std/Data/Array/Init/Basic.html#Array.ofFn","doc":"`ofFn f` with `f : Fin n → α` returns the list whose ith element is `f i`.\n```\nofFn f = #[f 0, f 1, ... , f(n - 1)]\n``` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/Array/Init/Basic.lean#L18-L19","name":"Array.toListAppend","kind":"def","docLink":"./Std/Data/Array/Init/Basic.html#Array.toListAppend","doc":"Like `as.toList ++ l`, but in a single pass. "}]}