{"name":"Mathlib.Combinatorics.Young.YoungDiagram","instances":[{"typeNames":["YoungDiagram","Prod","Nat"],"name":"YoungDiagram.instSetLikeYoungDiagramProdNat","className":"SetLike"},{"typeNames":["Prod","Nat","Membership.mem","YoungDiagram","SetLike.instMembership","YoungDiagram.instSetLikeYoungDiagramProdNat"],"name":"YoungDiagram.decidableMem","className":"Decidable"},{"typeNames":["YoungDiagram"],"name":"YoungDiagram.instSupYoungDiagram","className":"Sup"},{"typeNames":["YoungDiagram"],"name":"YoungDiagram.instInfYoungDiagram","className":"Inf"},{"typeNames":["YoungDiagram","Preorder.toLE","YoungDiagram","PartialOrder.toPreorder","SetLike.instPartialOrder","Prod","Nat","YoungDiagram.instSetLikeYoungDiagramProdNat"],"name":"YoungDiagram.instOrderBotYoungDiagramToLEToPreorderInstPartialOrderProdNatInstSetLikeYoungDiagramProdNat","className":"OrderBot"},{"typeNames":["YoungDiagram"],"name":"YoungDiagram.instInhabitedYoungDiagram","className":"Inhabited"},{"typeNames":["YoungDiagram"],"name":"YoungDiagram.instDistribLatticeYoungDiagram","className":"DistribLattice"}],"imports":["Init","Mathlib.Order.UpperLower.Basic","Mathlib.Data.Finset.Preimage"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L533-L538","name":"YoungDiagram.equivListRowLens","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.equivListRowLens","doc":"Equivalence between Young diagrams and weakly decreasing lists of positive natural numbers.\nA Young diagram `Î¼` is equivalent to a list of row lengths. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L532-L532","name":"YoungDiagram.equivListRowLens_apply_coe","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.equivListRowLens_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L532-L532","name":"YoungDiagram.equivListRowLens_symm_apply","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.equivListRowLens_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L523-L527","name":"YoungDiagram.rowLens_ofRowLens_eq_self","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLens_ofRowLens_eq_self","doc":"The right_inv direction of the equivalence "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L516-L519","name":"YoungDiagram.ofRowLens_to_rowLens_eq_self","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.ofRowLens_to_rowLens_eq_self","doc":"The left_inv direction of the equivalence "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L510-L512","name":"YoungDiagram.rowLen_ofRowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLen_ofRowLens","doc":"The length of the `i`th row in `ofRowLens w hw` is the `i`th entry of `w` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L501-L505","name":"YoungDiagram.rowLens_length_ofRowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLens_length_ofRowLens","doc":"The number of rows in `ofRowLens w hw` is the length of `w` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L495-L497","name":"YoungDiagram.mem_ofRowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_ofRowLens","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L477-L491","name":"YoungDiagram.ofRowLens","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.ofRowLens","doc":"Young diagram from a sorted list "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L465-L472","name":"YoungDiagram.mem_cellsOfRowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_cellsOfRowLens","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L456-L461","name":"YoungDiagram.cellsOfRowLens","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cellsOfRowLens","doc":"The cells making up a `YoungDiagram` from a list of row lengths "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L433-L436","name":"YoungDiagram.pos_of_mem_rowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.pos_of_mem_rowLens","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L429-L430","name":"YoungDiagram.rowLens_sorted","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLens_sorted","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L425-L426","name":"YoungDiagram.length_rowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.length_rowLens","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L420-L421","name":"YoungDiagram.get_rowLens","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.get_rowLens","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L414-L415","name":"YoungDiagram.rowLens","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLens","doc":"List of row lengths of a Young diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L396-L397","name":"YoungDiagram.colLen_anti","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.colLen_anti","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L391-L392","name":"YoungDiagram.colLen_eq_card","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.colLen_eq_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L383-L388","name":"YoungDiagram.col_eq_prod","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.col_eq_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L378-L380","name":"YoungDiagram.mem_iff_lt_colLen","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_iff_lt_colLen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L374-L375","name":"YoungDiagram.rowLen_transpose","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLen_transpose","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L369-L370","name":"YoungDiagram.colLen_transpose","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.colLen_transpose","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L364-L365","name":"YoungDiagram.colLen","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.colLen","doc":"Length of a column of a Young diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L358-L360","name":"YoungDiagram.exists_not_mem_col","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.exists_not_mem_col","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L355-L355","name":"YoungDiagram.mk_mem_col_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mk_mem_col_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L351-L352","name":"YoungDiagram.mem_col_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_col_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L347-L348","name":"YoungDiagram.col","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.col","doc":"The `j`-th column of a Young diagram consists of the cells whose second coordinate is `j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L330-L334","name":"YoungDiagram.rowLen_anti","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLen_anti","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L325-L326","name":"YoungDiagram.rowLen_eq_card","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLen_eq_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L317-L322","name":"YoungDiagram.row_eq_prod","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.row_eq_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L311-L314","name":"YoungDiagram.mem_iff_lt_rowLen","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_iff_lt_rowLen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L307-L308","name":"YoungDiagram.rowLen","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.rowLen","doc":"Length of a row of a Young diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L296-L303","name":"YoungDiagram.exists_not_mem_row","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.exists_not_mem_row","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L293-L293","name":"YoungDiagram.mk_mem_row_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mk_mem_row_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L289-L290","name":"YoungDiagram.mem_row_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_row_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L285-L286","name":"YoungDiagram.row","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.row","doc":"The `i`-th row of a Young diagram consists of the cells whose first coordinate is `i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L264-L265","name":"YoungDiagram.transposeOrderIso","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transposeOrderIso","doc":"Transposing Young diagrams is an `OrderIso`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L263-L263","name":"YoungDiagram.transposeOrderIso_apply","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transposeOrderIso_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L263-L263","name":"YoungDiagram.transposeOrderIso_symm_apply","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transposeOrderIso_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L258-L259","name":"YoungDiagram.transpose_mono","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L249-L254","name":"YoungDiagram.transpose_le_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose_le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L241-L245","name":"YoungDiagram.le_of_transpose_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.le_of_transpose_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L235-L237","name":"YoungDiagram.transpose_eq_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L228-L231","name":"YoungDiagram.transpose_eq_iff_eq_transpose","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose_eq_iff_eq_transpose","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L223-L225","name":"YoungDiagram.transpose_transpose","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose_transpose","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L218-L219","name":"YoungDiagram.mem_transpose","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_transpose","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L208-L214","name":"YoungDiagram.transpose","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.transpose","doc":"The `transpose` of a Young diagram is obtained by swapping i's with j's. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L201-L202","name":"YoungDiagram.card","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.card","doc":"Cardinality of a Young diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L193-L195","name":"YoungDiagram.instDistribLatticeYoungDiagram","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instDistribLatticeYoungDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L190-L191","name":"YoungDiagram.instInhabitedYoungDiagram","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instInhabitedYoungDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L186-L187","name":"YoungDiagram.not_mem_bot","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.not_mem_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L178-L182","name":"YoungDiagram.coe_bot","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.coe_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L171-L172","name":"YoungDiagram.cells_bot","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L159-L168","name":"YoungDiagram.instOrderBotYoungDiagramToLEToPreorderInstPartialOrderProdNatInstSetLikeYoungDiagramProdNat","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instOrderBotYoungDiagramToLEToPreorderInstPartialOrderProdNatInstSetLikeYoungDiagramProdNat","doc":"The empty Young diagram is (â¥ : young_diagram). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L154-L155","name":"YoungDiagram.mem_inf","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L149-L150","name":"YoungDiagram.coe_inf","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.coe_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L144-L145","name":"YoungDiagram.cells_inf","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L136-L141","name":"YoungDiagram.instInfYoungDiagram","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instInfYoungDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L132-L133","name":"YoungDiagram.mem_sup","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L127-L128","name":"YoungDiagram.coe_sup","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.coe_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L122-L123","name":"YoungDiagram.cells_sup","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L114-L119","name":"YoungDiagram.instSupYoungDiagram","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instSupYoungDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L110-L111","name":"YoungDiagram.cells_ssubset_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells_ssubset_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L105-L106","name":"YoungDiagram.cells_subset_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells_subset_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L97-L99","name":"YoungDiagram.up_left_mem","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.up_left_mem","doc":"In \"English notation\", a Young diagram is drawn so that (i1, j1) â¤ (i2, j2)\nmeans (i1, j1) is weakly up-and-left of (i2, j2). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L91-L92","name":"YoungDiagram.decidableMem","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.decidableMem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L86-L88","name":"YoungDiagram.mem_mk","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L81-L82","name":"YoungDiagram.mem_cells","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mem_cells","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L74-L78","name":"YoungDiagram.instSetLikeYoungDiagramProdNat","kind":"instance","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.instSetLikeYoungDiagramProdNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L69-L69","name":"YoungDiagram.isLowerSet","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.isLowerSet","doc":"Cells are up-left justified, witnessed by the fact that `cells` is a lower set in `â Ã â`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L67-L67","name":"YoungDiagram.cells","kind":"def","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.cells","doc":"A finite set which represents a finite collection of cells on the `â Ã â` grid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L65-L69","name":"YoungDiagram","kind":"structure","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram","doc":"A Young diagram is a finite collection of cells on the `â Ã â` grid such that whenever\na cell is present, so are all the ones above and to the left of it. Like matrices, an `(i, j)` cell\nis a cell in row `i` and column `j`, where rows are enumerated downward and columns rightward.\n\nYoung diagrams are modeled as finite sets in `â Ã â` that are lower sets with respect to the\nstandard order on products. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L64-L64","name":"YoungDiagram.ext_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L64-L64","name":"YoungDiagram.ext","kind":"theorem","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Young/YoungDiagram.lean#L1-L1","name":"YoungDiagram.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Young/YoungDiagram.html#YoungDiagram.mk","doc":""}]}