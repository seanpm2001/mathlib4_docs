{"name":"Mathlib.Logic.Nonempty","instances":[{"typeNames":[],"name":"Zero.nonempty","className":"Nonempty"},{"typeNames":[],"name":"One.nonempty","className":"Nonempty"},{"typeNames":["Prod"],"name":"Prod.Nonempty","className":"Nonempty"},{"typeNames":[],"name":"Pi.Nonempty","className":"Nonempty"}],"imports":["Init","Mathlib.Init.ZeroOne","Mathlib.Logic.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L174-L178","name":"Function.Surjective.nonempty","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Function.Surjective.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L170-L171","name":"subsingleton_of_not_nonempty","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#subsingleton_of_not_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L166-L167","name":"Classical.nonempty_pi","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Classical.nonempty_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L162-L164","name":"Pi.Nonempty","kind":"instance","docLink":"./Mathlib/Logic/Nonempty.html#Pi.Nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L159-L160","name":"Prod.Nonempty","kind":"instance","docLink":"./Mathlib/Logic/Nonempty.html#Prod.Nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L154-L156","name":"Nonempty.elim_to_inhabited","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.elim_to_inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L150-L151","name":"Nonempty.congr","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L145-L147","name":"Nonempty.map2","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.map2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L141-L142","name":"Nonempty.map","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.map","doc":"Given `f : α → β`, if `α` is nonempty then `β` is also nonempty.\n`Nonempty` cannot be a `functor`, because `Functor` is restricted to `Type`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L135-L136","name":"Classical.arbitrary","kind":"def","docLink":"./Mathlib/Logic/Nonempty.html#Classical.arbitrary","doc":"Using `Classical.choice`, extracts a term from a `Nonempty` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L129-L130","name":"Nonempty.some","kind":"def","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.some","doc":"Using `Classical.choice`, extracts a term from a `Nonempty` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L123-L124","name":"Classical.inhabited_of_nonempty'","kind":"def","docLink":"./Mathlib/Logic/Nonempty.html#Classical.inhabited_of_nonempty'","doc":"Using `Classical.choice`, lifts a (`Prop`-valued) `Nonempty` instance to a (`Type`-valued)\n`Inhabited` instance. `Classical.inhabited_of_nonempty` already exists, in\n`Init/Classical.lean`, but the assumption is not a type class argument,\nwhich makes it unsuitable for some applications. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L115-L116","name":"Nonempty.exists","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.exists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L110-L111","name":"Nonempty.forall","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#Nonempty.forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L105-L106","name":"nonempty_plift","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_plift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L100-L101","name":"nonempty_ulift","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_ulift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L87-L96","name":"nonempty_psum","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_psum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L74-L83","name":"nonempty_sum","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L69-L70","name":"nonempty_pprod","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_pprod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L64-L65","name":"nonempty_prod","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L59-L60","name":"nonempty_subtype","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L54-L55","name":"nonempty_psigma","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_psigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L49-L50","name":"nonempty_sigma","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_sigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L44-L45","name":"not_nonempty_iff_imp_false","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#not_nonempty_iff_imp_false","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L40-L41","name":"nonempty_Prop","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#nonempty_Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L35-L36","name":"exists_true_iff_nonempty","kind":"theorem","docLink":"./Mathlib/Logic/Nonempty.html#exists_true_iff_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L32-L33","name":"One.nonempty","kind":"instance","docLink":"./Mathlib/Logic/Nonempty.html#One.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Nonempty.lean#L29-L30","name":"Zero.nonempty","kind":"instance","docLink":"./Mathlib/Logic/Nonempty.html#Zero.nonempty","doc":""}]}