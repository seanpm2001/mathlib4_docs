{"name":"Mathlib.Algebra.Module.Bimodule","instances":[],"imports":["Init","Mathlib.RingTheory.TensorProduct"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L151-L152","name":"Subbimodule.toSubbimoduleNat","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubbimoduleNat","doc":"A `Submodule` over `R ⊗[ℤ] S` is naturally also a `Submodule` over the canonically-isomorphic\nring `R ⊗[ℕ] S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L150-L150","name":"Subbimodule.toSubbimoduleNat_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubbimoduleNat_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L144-L145","name":"Subbimodule.toSubbimoduleInt","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubbimoduleInt","doc":"A `Submodule` over `R ⊗[ℕ] S` is naturally also a `Submodule` over the canonically-isomorphic\nring `R ⊗[ℤ] S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L143-L143","name":"Subbimodule.toSubbimoduleInt_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubbimoduleInt_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L127-L130","name":"Subbimodule.toSubmodule'","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubmodule'","doc":"Forgetting the `A` action, a `Submodule` over `A ⊗[R] B` is just a `Submodule` over `B`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L126-L126","name":"Subbimodule.toSubmodule'_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubmodule'_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L119-L122","name":"Subbimodule.toSubmodule","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubmodule","doc":"Forgetting the `B` action, a `Submodule` over `A ⊗[R] B` is just a `Submodule` over `A`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L118-L118","name":"Subbimodule.toSubmodule_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.toSubmodule_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L111-L114","name":"Subbimodule.baseChange","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.baseChange","doc":"If `A` and `B` are also `Algebra`s over yet another set of scalars `S` then we may \"base change\"\nfrom `R` to `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L110-L110","name":"Subbimodule.baseChange_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.baseChange_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L103-L105","name":"Subbimodule.smul_mem'","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.smul_mem'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L98-L100","name":"Subbimodule.smul_mem","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.smul_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L88-L95","name":"Subbimodule.mk","kind":"def","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.mk","doc":"A constructor for a subbimodule which demands closure under the two sets of scalars\nindividually, rather than jointly via their tensor product.\n\nNote that `R` plays no role but it is convenient to make this generalisation to support the cases\n`R = ℕ` and `R = ℤ` which both show up naturally. See also `Subbimodule.baseChange`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Bimodule.lean#L87-L87","name":"Subbimodule.mk_carrier","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Bimodule.html#Subbimodule.mk_carrier","doc":""}]}