{"name":"Mathlib.Probability.Process.Filtration","instances":[{"typeNames":["MeasureTheory.Filtration","MeasureTheory.Filtration","MeasurableSpace"],"name":"MeasureTheory.instCoeFunFiltrationForAllMeasurableSpace","className":"CoeFun"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instInhabitedFiltration","className":"Inhabited"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instLEFiltration","className":"LE"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instBotFiltration","className":"Bot"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instTopFiltration","className":"Top"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instSupFiltration","className":"Sup"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instInfFiltration","className":"Inf"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instSupSetFiltration","className":"SupSet"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instInfSetFiltration","className":"InfSet"},{"typeNames":["MeasureTheory.Filtration"],"name":"MeasureTheory.Filtration.instCompleteLattice","className":"CompleteLattice"},{"typeNames":["MeasureTheory.Filtration.seq","MeasureTheory.Measure.trim","MeasureTheory.Filtration.seq","MeasureTheory.Filtration.le"],"name":"MeasureTheory.sigmaFinite_of_sigmaFiniteFiltration","className":"MeasureTheory.SigmaFinite"},{"typeNames":[],"name":"MeasureTheory.IsFiniteMeasure.sigmaFiniteFiltration","className":"MeasureTheory.SigmaFiniteFiltration"}],"imports":["Init","Mathlib.MeasureTheory.Function.ConditionalExpectation.Real"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L341-L352","name":"MeasureTheory.Filtration.memℒp_limitProcess_of_snorm_bdd","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.memℒp_limitProcess_of_snorm_bdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L337-L338","name":"MeasureTheory.Filtration.stronglyMeasurable_limit_process'","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.stronglyMeasurable_limit_process'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L331-L334","name":"MeasureTheory.Filtration.stronglyMeasurable_limitProcess","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.stronglyMeasurable_limitProcess","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L324-L328","name":"MeasureTheory.Filtration.limitProcess","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.limitProcess","doc":"Given a process `f` and a filtration `ℱ`, if `f` converges to some `g` almost everywhere and\n`g` is `⨆ n, ℱ n`-measurable, then `limitProcess f ℱ μ` chooses said `g`, else it returns 0.\n\nThis definition is used to phrase the a.e. martingale convergence theorem\n`Submartingale.ae_tendsto_limitProcess` where an L¹-bounded submartingale `f` adapted to `ℱ`\nconverges to `limitProcess f ℱ μ` `μ`-almost everywhere. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L284-L308","name":"MeasureTheory.Filtration.filtrationOfSet_eq_natural","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.filtrationOfSet_eq_natural","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L271-L277","name":"MeasureTheory.Filtration.natural","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.natural","doc":"Given a sequence of functions, the natural filtration is the smallest sequence\nof σ-algebras such that that sequence of functions is measurable with respect to\nthe filtration. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L256-L258","name":"MeasureTheory.measurableSet_filtrationOfSet'","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.measurableSet_filtrationOfSet'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L251-L253","name":"MeasureTheory.measurableSet_filtrationOfSet","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.measurableSet_filtrationOfSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L245-L248","name":"MeasureTheory.filtrationOfSet","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.filtrationOfSet","doc":"Given a sequence of measurable sets `(sₙ)`, `filtrationOfSet` is the smallest filtration\nsuch that `sₙ` is measurable with respect to the `n`-th sub-σ-algebra in `filtrationOfSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L233-L236","name":"MeasureTheory.Integrable.uniformIntegrable_condexp_filtration","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Integrable.uniformIntegrable_condexp_filtration","doc":"Given a integrable function `g`, the conditional expectations of `g` with respect to a\nfiltration is uniformly integrable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L226-L228","name":"MeasureTheory.IsFiniteMeasure.sigmaFiniteFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.IsFiniteMeasure.sigmaFiniteFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L221-L223","name":"MeasureTheory.sigmaFinite_of_sigmaFiniteFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.sigmaFinite_of_sigmaFiniteFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L218-L218","name":"MeasureTheory.SigmaFiniteFiltration.SigmaFinite","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.SigmaFiniteFiltration.SigmaFinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L217-L217","name":"MeasureTheory.SigmaFiniteFiltration.mk","kind":"ctor","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.SigmaFiniteFiltration.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L217-L218","name":"MeasureTheory.SigmaFiniteFiltration","kind":"class","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.SigmaFiniteFiltration","doc":"A measure is σ-finite with respect to filtration if it is σ-finite with respect\nto all the sub-σ-algebra of the filtration. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L210-L212","name":"MeasureTheory.measurableSet_of_filtration","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.measurableSet_of_filtration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L172-L206","name":"MeasureTheory.Filtration.instCompleteLattice","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instCompleteLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L167-L169","name":"MeasureTheory.Filtration.sInf_def","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.sInf_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L149-L165","name":"MeasureTheory.Filtration.instInfSetFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instInfSetFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L144-L146","name":"MeasureTheory.Filtration.sSup_def","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.sSup_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L126-L142","name":"MeasureTheory.Filtration.instSupSetFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instSupSetFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L122-L123","name":"MeasureTheory.Filtration.coeFn_inf","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.coeFn_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L114-L119","name":"MeasureTheory.Filtration.instInfFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instInfFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L110-L111","name":"MeasureTheory.Filtration.coeFn_sup","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.coeFn_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L102-L107","name":"MeasureTheory.Filtration.instSupFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instSupFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L99-L100","name":"MeasureTheory.Filtration.instTopFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instTopFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L96-L97","name":"MeasureTheory.Filtration.instBotFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instBotFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L93-L94","name":"MeasureTheory.Filtration.instLEFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instLEFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L90-L91","name":"MeasureTheory.Filtration.instInhabitedFiltration","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.instInhabitedFiltration","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L86-L87","name":"MeasureTheory.Filtration.const_apply","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.const_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L79-L80","name":"MeasureTheory.Filtration.const","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.const","doc":"The constant filtration which is equal to `m` for all `i : ι`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L72-L73","name":"MeasureTheory.Filtration.ext","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L67-L68","name":"MeasureTheory.Filtration.le","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L63-L64","name":"MeasureTheory.Filtration.mono","kind":"theorem","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L56-L57","name":"MeasureTheory.instCoeFunFiltrationForAllMeasurableSpace","kind":"instance","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.instCoeFunFiltrationForAllMeasurableSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L49-L49","name":"MeasureTheory.Filtration.le'","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.le'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L48-L48","name":"MeasureTheory.Filtration.mono'","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.mono'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L47-L47","name":"MeasureTheory.Filtration.seq","kind":"def","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.seq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L46-L46","name":"MeasureTheory.Filtration.mk","kind":"ctor","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Probability/Process/Filtration.lean#L46-L49","name":"MeasureTheory.Filtration","kind":"structure","docLink":"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration","doc":"A `Filtration` on a measurable space `Ω` with σ-algebra `m` is a monotone\nsequence of sub-σ-algebras of `m`. "}]}