{"name":"Mathlib.CategoryTheory.Limits.Shapes.Kernels","instances":[{"typeNames":["CategoryTheory.Limits.kernel","CategoryTheory.Limits.kernel.lift"],"name":"CategoryTheory.Limits.kernel.lift_mono","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Limits.kernel","OfNat.ofNat","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Zero.toOfNat0","CategoryTheory.Limits.HasZeroMorphisms.Zero","CategoryTheory.Limits.hasEqualizer_of_self","CategoryTheory.Limits.kernel.ι","OfNat.ofNat","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Zero.toOfNat0","CategoryTheory.Limits.HasZeroMorphisms.Zero","CategoryTheory.Limits.hasEqualizer_of_self"],"name":"CategoryTheory.Limits.kernel.ι_zero_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.Limits.hasKernel_comp_mono","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.Limits.hasKernel_iso_comp","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.Limits.cokernel","CategoryTheory.Limits.cokernel.desc"],"name":"CategoryTheory.Limits.cokernel.desc_epi","className":"CategoryTheory.Epi"},{"typeNames":["CategoryTheory.Limits.cokernel","OfNat.ofNat","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Zero.toOfNat0","CategoryTheory.Limits.HasZeroMorphisms.Zero","CategoryTheory.Limits.hasCoequalizer_of_self","CategoryTheory.Limits.cokernel.π","OfNat.ofNat","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Zero.toOfNat0","CategoryTheory.Limits.HasZeroMorphisms.Zero","CategoryTheory.Limits.hasCoequalizer_of_self"],"name":"CategoryTheory.Limits.cokernel.π_zero_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.Limits.hasCokernel_comp_iso","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.Limits.hasCokernel_epi_comp","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.Limits.kernel","CategoryTheory.Limits.cokernel","CategoryTheory.Limits.cokernel.π","CategoryTheory.Limits.kernel.ι","CategoryTheory.Limits.cokernel","CategoryTheory.Limits.cokernel.π"],"name":"CategoryTheory.Limits.kernel.of_cokernel_of_epi","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Limits.cokernel","CategoryTheory.Limits.kernel","CategoryTheory.Limits.kernel.ι","CategoryTheory.Limits.cokernel.π","CategoryTheory.Limits.kernel","CategoryTheory.Limits.kernel.ι"],"name":"CategoryTheory.Limits.cokernel.of_kernel_of_mono","className":"CategoryTheory.IsIso"},{"typeNames":[],"name":"CategoryTheory.Limits.hasKernels_of_hasEqualizers","className":"CategoryTheory.Limits.HasKernels"},{"typeNames":[],"name":"CategoryTheory.Limits.hasCokernels_of_hasCoequalizers","className":"CategoryTheory.Limits.HasCokernels"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Preserves.Shapes.Zero"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1173-L1174","name":"CategoryTheory.Limits.hasCokernels_of_hasCoequalizers","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasCokernels_of_hasCoequalizers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1170-L1170","name":"CategoryTheory.Limits.hasKernels_of_hasEqualizers","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasKernels_of_hasEqualizers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1165-L1165","name":"CategoryTheory.Limits.HasCokernels.has_colimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasCokernels.has_colimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1164-L1165","name":"CategoryTheory.Limits.HasCokernels","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasCokernels","doc":"`HasCokernels` represents the existence of cokernels for every morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1160-L1160","name":"CategoryTheory.Limits.HasKernels.has_limit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasKernels.has_limit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1159-L1160","name":"CategoryTheory.Limits.HasKernels","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasKernels","doc":"`HasKernels` represents the existence of kernels for every morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1137-L1145","name":"CategoryTheory.Limits.cokernel_map_comp_cokernelComparison","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel_map_comp_cokernelComparison","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1136-L1136","name":"CategoryTheory.Limits.cokernel_map_comp_cokernelComparison_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel_map_comp_cokernelComparison_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1129-L1133","name":"CategoryTheory.Limits.cokernelComparison_map_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelComparison_map_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1128-L1128","name":"CategoryTheory.Limits.cokernelComparison_map_desc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelComparison_map_desc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1123-L1125","name":"CategoryTheory.Limits.π_comp_cokernelComparison","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelComparison","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1122-L1122","name":"CategoryTheory.Limits.π_comp_cokernelComparison_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelComparison_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1116-L1119","name":"CategoryTheory.Limits.cokernelComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelComparison","doc":"The comparison morphism for the cokernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1104-L1112","name":"CategoryTheory.Limits.kernelComparison_comp_kernel_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelComparison_comp_kernel_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1103-L1103","name":"CategoryTheory.Limits.kernelComparison_comp_kernel_map_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelComparison_comp_kernel_map_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1096-L1100","name":"CategoryTheory.Limits.map_lift_kernelComparison","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.map_lift_kernelComparison","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1095-L1095","name":"CategoryTheory.Limits.map_lift_kernelComparison_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.map_lift_kernelComparison_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1090-L1092","name":"CategoryTheory.Limits.kernelComparison_comp_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelComparison_comp_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1089-L1089","name":"CategoryTheory.Limits.kernelComparison_comp_ι_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelComparison_comp_ι_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1084-L1086","name":"CategoryTheory.Limits.kernelComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelComparison","doc":"The comparison morphism for the kernel of `f`.\nThis is an isomorphism iff `G` preserves the kernel of `f`; see\n`CategoryTheory/Limits/Preserves/Shapes/Kernels.lean`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1066-L1069","name":"CategoryTheory.Limits.cokernel.cokernelIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.cokernelIso","doc":"If `i` is an isomorphism such that `cokernel.π f ≫ i.hom = l`, then `l` is a cokernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1055-L1062","name":"CategoryTheory.Limits.IsCokernel.cokernelIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.IsCokernel.cokernelIso","doc":"If `s` is any colimit cokernel cocone over `f` and `i` is an isomorphism such that\n`s.π ≫ i.hom = l`, then `l` is a cokernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1046-L1050","name":"CategoryTheory.Limits.cokernel.ofIsoComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.ofIsoComp","doc":"If `i` is an isomorphism such that `i.hom ≫ l = f`, then the cokernel of `f` is a cokernel of\n`l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1034-L1041","name":"CategoryTheory.Limits.IsCokernel.ofIsoComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.IsCokernel.ofIsoComp","doc":"If `i` is an isomorphism such that `i.hom ≫ l = f`, then any cokernel of `f` is a cokernel of\n`l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1020-L1025","name":"CategoryTheory.Limits.zeroCokernelOfZeroCancel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.zeroCokernelOfZeroCancel","doc":"If `f ≫ g = 0` implies `g = 0` for all `g`, then `0 : Y ⟶ 0` is a cokernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1014-L1016","name":"CategoryTheory.Limits.cokernel.of_kernel_of_mono","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.of_kernel_of_mono","doc":"The cokernel of the kernel of a monomorphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1008-L1010","name":"CategoryTheory.Limits.kernel.of_cokernel_of_epi","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.of_cokernel_of_epi","doc":"The kernel of the cokernel of an epimorphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L995-L996","name":"CategoryTheory.Limits.cokernel.π_of_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π_of_zero","doc":"The cokernel of a zero morphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L965-L985","name":"CategoryTheory.Limits.cokernelImageι","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelImageι","doc":"The cokernel of the image inclusion of a morphism `f` is isomorphic to the cokernel of `f`.\n\n(This result requires that the factorisation through the image is an epimorphism.\nThis holds in any category with equalizers.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L964-L964","name":"CategoryTheory.Limits.cokernelImageι_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelImageι_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L964-L964","name":"CategoryTheory.Limits.cokernelImageι_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelImageι_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L950-L952","name":"CategoryTheory.Limits.MonoFactorisation.kernel_ι_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.MonoFactorisation.kernel_ι_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L939-L940","name":"CategoryTheory.Limits.cokernel.π_of_epi","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π_of_epi","doc":"The cokernel morphism of an epimorphism is a zero morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L932-L935","name":"CategoryTheory.Limits.cokernel.ofEpi","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.ofEpi","doc":"The cokernel of an epimorphism is isomorphic to the zero object "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L922-L928","name":"CategoryTheory.Limits.cokernel.isColimitCoconeZeroCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.isColimitCoconeZeroCocone","doc":"The morphism to the zero object is a cokernel of an epimorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L915-L918","name":"CategoryTheory.Limits.cokernel.zeroCokernelCofork","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.zeroCokernelCofork","doc":"The morphism to the zero object determines a cocone on a cokernel diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L896-L903","name":"CategoryTheory.Limits.cokernelEpiComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelEpiComp","doc":"When `f` is an epimorphism, the cokernel of `f ≫ g` is isomorphic to the cokernel of `g`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L895-L895","name":"CategoryTheory.Limits.cokernelEpiComp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelEpiComp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L895-L895","name":"CategoryTheory.Limits.cokernelEpiComp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelEpiComp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L887-L890","name":"CategoryTheory.Limits.hasCokernel_epi_comp","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasCokernel_epi_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L881-L884","name":"CategoryTheory.Limits.cokernelCompIsIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelCompIsIso","doc":"When `g` is an isomorphism, the cokernel of `f ≫ g` is isomorphic to the cokernel of `f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L880-L880","name":"CategoryTheory.Limits.cokernelCompIsIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelCompIsIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L880-L880","name":"CategoryTheory.Limits.cokernelCompIsIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelCompIsIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L864-L875","name":"CategoryTheory.Limits.hasCokernel_comp_iso","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasCokernel_comp_iso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L857-L860","name":"CategoryTheory.Limits.cokernel_not_iso_of_nonzero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel_not_iso_of_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L853-L854","name":"CategoryTheory.Limits.cokernel_not_mono_of_nonzero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel_not_mono_of_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L845-L848","name":"CategoryTheory.Limits.cokernelIsoOfEq_trans","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L838-L841","name":"CategoryTheory.Limits.cokernelIsoOfEq_inv_comp_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_inv_comp_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L837-L837","name":"CategoryTheory.Limits.cokernelIsoOfEq_inv_comp_desc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_inv_comp_desc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L831-L834","name":"CategoryTheory.Limits.cokernelIsoOfEq_hom_comp_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_hom_comp_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L830-L830","name":"CategoryTheory.Limits.cokernelIsoOfEq_hom_comp_desc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_hom_comp_desc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L825-L827","name":"CategoryTheory.Limits.π_comp_cokernelIsoOfEq_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelIsoOfEq_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L824-L824","name":"CategoryTheory.Limits.π_comp_cokernelIsoOfEq_inv_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelIsoOfEq_inv_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L819-L821","name":"CategoryTheory.Limits.π_comp_cokernelIsoOfEq_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelIsoOfEq_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L818-L818","name":"CategoryTheory.Limits.π_comp_cokernelIsoOfEq_hom_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.π_comp_cokernelIsoOfEq_hom_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L814-L815","name":"CategoryTheory.Limits.cokernelIsoOfEq_refl","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L808-L810","name":"CategoryTheory.Limits.cokernelIsoOfEq","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsoOfEq","doc":"If two morphisms are known to be equal, then their cokernels are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L803-L804","name":"CategoryTheory.Limits.cokernelZeroIsoTarget_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelZeroIsoTarget_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L797-L799","name":"CategoryTheory.Limits.cokernelZeroIsoTarget_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelZeroIsoTarget_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L792-L793","name":"CategoryTheory.Limits.cokernelZeroIsoTarget","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelZeroIsoTarget","doc":"The cokernel of a zero morphism is isomorphic to the target. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L787-L788","name":"CategoryTheory.Limits.eq_zero_of_mono_cokernel","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.eq_zero_of_mono_cokernel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L783-L784","name":"CategoryTheory.Limits.cokernel.π_zero_isIso","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π_zero_isIso","doc":"The cokernel of the zero morphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L774-L779","name":"CategoryTheory.Limits.cokernel.mapIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.mapIso","doc":"A commuting square of isomorphisms induces an isomorphism of cokernels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L773-L773","name":"CategoryTheory.Limits.cokernel.mapIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.mapIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L773-L773","name":"CategoryTheory.Limits.cokernel.mapIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.mapIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L765-L769","name":"CategoryTheory.Limits.cokernel.map_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.map_desc","doc":"Given a commutative diagram\n    X --f--> Y --g--> Z\n    |        |        |\n    |        |        |\n    v        v        v\n    X' -f'-> Y' -g'-> Z'\nwith horizontal arrows composing to zero,\nthen we obtain a commutative square\n   cokernel f ---> Z\n   |               |\n   | cokernel.map  |\n   |               |\n   v               v\n   cokernel f' --> Z'\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L741-L747","name":"CategoryTheory.Limits.cokernel.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.map","doc":"A commuting square induces a morphism of cokernels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L735-L737","name":"CategoryTheory.Limits.cokernel.desc'","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.desc'","doc":"Any morphism `k : Y ⟶ W` satisfying `f ≫ k = 0` induces `l : cokernel f ⟶ W` such that\n`cokernel.π f ≫ l = k`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L725-L730","name":"CategoryTheory.Limits.cokernel.desc_epi","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.desc_epi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L721-L722","name":"CategoryTheory.Limits.cokernel.desc_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.desc_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L714-L718","name":"CategoryTheory.Limits.colimit_ι_zero_cokernel_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.colimit_ι_zero_cokernel_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L713-L713","name":"CategoryTheory.Limits.colimit_ι_zero_cokernel_desc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.colimit_ι_zero_cokernel_desc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L707-L709","name":"CategoryTheory.Limits.cokernel.π_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L706-L706","name":"CategoryTheory.Limits.cokernel.π_desc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π_desc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L702-L703","name":"CategoryTheory.Limits.cokernel.desc","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.desc","doc":"Given any morphism `k : Y ⟶ W` such that `f ≫ k = 0`, `k` factors through `cokernel.π f`\nvia `cokernel.desc : cokernel f ⟶ W`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L695-L697","name":"CategoryTheory.Limits.cokernelIsCokernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernelIsCokernel","doc":"The cokernel built from `cokernel.π f` is colimiting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L690-L691","name":"CategoryTheory.Limits.cokernel.condition","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.condition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L689-L689","name":"CategoryTheory.Limits.cokernel.condition_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.condition_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L685-L686","name":"CategoryTheory.Limits.coequalizer_as_cokernel","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.coequalizer_as_cokernel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L680-L681","name":"CategoryTheory.Limits.cokernel.π","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π","doc":"The map from the target of `f` to `cokernel f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L675-L676","name":"CategoryTheory.Limits.cokernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel","doc":"The cokernel of a morphism, expressed as the coequalizer with the 0 morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L657-L666","name":"CategoryTheory.Limits.CokernelCofork.IsColimit.isIso_π","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.IsColimit.isIso_π","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L652-L655","name":"CategoryTheory.Limits.CokernelCofork.IsColimit.ofEpiOfIsZero","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.IsColimit.ofEpiOfIsZero","doc":"Any zero object identifies to the cokernel of a given epimorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L646-L649","name":"CategoryTheory.Limits.CokernelCofork.IsColimit.ofId","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.IsColimit.ofId","doc":"`Y` identifies to the cokernel of a zero map `X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L637-L642","name":"CategoryTheory.Limits.isCokernelOfComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isCokernelOfComp","doc":"Every cokernel of `g ≫ f` is also a cokernel of `f`, as long as `f ≫ c.π` vanishes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L625-L633","name":"CategoryTheory.Limits.isCokernelEpiComp_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isCokernelEpiComp_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L609-L621","name":"CategoryTheory.Limits.isCokernelEpiComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isCokernelEpiComp","doc":"Every cokernel of `f` induces a cokernel of `g ≫ f` if `g` is epi. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L598-L605","name":"CategoryTheory.Limits.CokernelCofork.IsColimit.ofπ","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.IsColimit.ofπ","doc":"This is a more convenient formulation to show that a `CokernelCofork` constructed using\n`CokernelCofork.ofπ` is a limit cone.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L583-L592","name":"CategoryTheory.Limits.isColimitAux","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isColimitAux","doc":"This is a slightly more convenient method to verify that a cokernel cofork is a colimit cocone.\nIt only asks for a proof of facts that carry any mathematical content "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L576-L578","name":"CategoryTheory.Limits.CokernelCofork.IsColimit.desc'","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.IsColimit.desc'","doc":"If `s` is a colimit cokernel cofork, then every `k : Y ⟶ W` satisfying `f ≫ k = 0` induces\n`l : s.X ⟶ W` such that `cofork.π s ≫ l = k`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L569-L571","name":"CategoryTheory.Limits.ofπCongr","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.ofπCongr","doc":"If `π = π'`, then `CokernelCofork.of_π π _` and `CokernelCofork.of_π π' _` are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L564-L565","name":"CategoryTheory.Limits.isoOfπ","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isoOfπ","doc":"Every cokernel cofork `s` is isomorphic (actually, equal) to `cofork.ofπ (cofork.π s) _`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L558-L560","name":"CategoryTheory.Limits.CokernelCofork.π_ofπ","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.π_ofπ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L553-L554","name":"CategoryTheory.Limits.CokernelCofork.ofπ","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.ofπ","doc":"A morphism `π` satisfying `f ≫ π = 0` determines a cokernel cofork on `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L548-L549","name":"CategoryTheory.Limits.CokernelCofork.π_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.π_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L543-L544","name":"CategoryTheory.Limits.CokernelCofork.condition","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.condition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L542-L542","name":"CategoryTheory.Limits.CokernelCofork.condition_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork.condition_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L536-L537","name":"CategoryTheory.Limits.CokernelCofork","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork","doc":"A cokernel cofork is just a cofork where the second morphism is a zero morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L527-L528","name":"CategoryTheory.Limits.kernel.ι_of_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ι_of_zero","doc":"The kernel morphism of a zero morphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L514-L517","name":"CategoryTheory.Limits.kernel.isoKernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.isoKernel","doc":"If `i` is an isomorphism such that `i.hom ≫ kernel.ι f = l`, then `l` is a kernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L504-L510","name":"CategoryTheory.Limits.IsKernel.isoKernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.IsKernel.isoKernel","doc":"If `s` is any limit kernel cone over `f` and if  `i` is an isomorphism such that\n`i.hom ≫ s.ι  = l`, then `l` is a kernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L496-L499","name":"CategoryTheory.Limits.kernel.ofCompIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ofCompIso","doc":"If `i` is an isomorphism such that `l ≫ i.hom = f`, then the kernel of `f` is a kernel of `l`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L485-L492","name":"CategoryTheory.Limits.IsKernel.ofCompIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.IsKernel.ofCompIso","doc":"If `i` is an isomorphism such that `l ≫ i.hom = f`, then any kernel of `f` is a kernel of `l`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L473-L477","name":"CategoryTheory.Limits.zeroKernelOfCancelZero","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.zeroKernelOfCancelZero","doc":"If `g ≫ f = 0` implies `g = 0` for all `g`, then `0 : 0 ⟶ X` is a kernel of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L468-L469","name":"CategoryTheory.Limits.kernel.ι_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ι_of_mono","doc":"The kernel morphism of a monomorphism is a zero morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L462-L464","name":"CategoryTheory.Limits.kernel.ofMono","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ofMono","doc":"The kernel of a monomorphism is isomorphic to the zero object "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L452-L458","name":"CategoryTheory.Limits.kernel.isLimitConeZeroCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.isLimitConeZeroCone","doc":"The map from the zero object is a kernel of a monomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L446-L448","name":"CategoryTheory.Limits.kernel.zeroKernelFork","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.zeroKernelFork","doc":"The morphism from the zero object determines a cone on a kernel diagram "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L431-L434","name":"CategoryTheory.Limits.kernelIsIsoComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsIsoComp","doc":"When `f` is an isomorphism, the kernel of `f ≫ g` is isomorphic to the kernel of `g`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L430-L430","name":"CategoryTheory.Limits.kernelIsIsoComp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsIsoComp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L430-L430","name":"CategoryTheory.Limits.kernelIsIsoComp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsIsoComp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L417-L425","name":"CategoryTheory.Limits.hasKernel_iso_comp","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasKernel_iso_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L407-L414","name":"CategoryTheory.Limits.kernelCompMono","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelCompMono","doc":"When `g` is a monomorphism, the kernel of `f ≫ g` is isomorphic to the kernel of `f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L406-L406","name":"CategoryTheory.Limits.kernelCompMono_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelCompMono_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L406-L406","name":"CategoryTheory.Limits.kernelCompMono_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelCompMono_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L398-L401","name":"CategoryTheory.Limits.hasKernel_comp_mono","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.hasKernel_comp_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L392-L395","name":"CategoryTheory.Limits.kernel_not_iso_of_nonzero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel_not_iso_of_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L388-L389","name":"CategoryTheory.Limits.kernel_not_epi_of_nonzero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel_not_epi_of_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L381-L383","name":"CategoryTheory.Limits.kernelIsoOfEq_trans","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L374-L377","name":"CategoryTheory.Limits.lift_comp_kernelIsoOfEq_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.lift_comp_kernelIsoOfEq_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L373-L373","name":"CategoryTheory.Limits.lift_comp_kernelIsoOfEq_inv_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.lift_comp_kernelIsoOfEq_inv_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L367-L370","name":"CategoryTheory.Limits.lift_comp_kernelIsoOfEq_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.lift_comp_kernelIsoOfEq_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L366-L366","name":"CategoryTheory.Limits.lift_comp_kernelIsoOfEq_hom_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.lift_comp_kernelIsoOfEq_hom_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L361-L363","name":"CategoryTheory.Limits.kernelIsoOfEq_inv_comp_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_inv_comp_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L360-L360","name":"CategoryTheory.Limits.kernelIsoOfEq_inv_comp_ι_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_inv_comp_ι_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L355-L357","name":"CategoryTheory.Limits.kernelIsoOfEq_hom_comp_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_hom_comp_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L354-L354","name":"CategoryTheory.Limits.kernelIsoOfEq_hom_comp_ι_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_hom_comp_ι_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L348-L350","name":"CategoryTheory.Limits.kernelIsoOfEq_refl","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L343-L344","name":"CategoryTheory.Limits.kernelIsoOfEq","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsoOfEq","doc":"If two morphisms are known to be equal, then their kernels are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L336-L339","name":"CategoryTheory.Limits.kernelZeroIsoSource_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelZeroIsoSource_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L332-L332","name":"CategoryTheory.Limits.kernelZeroIsoSource_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelZeroIsoSource_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L327-L328","name":"CategoryTheory.Limits.kernelZeroIsoSource","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelZeroIsoSource","doc":"The kernel of a zero morphism is isomorphic to the source. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L322-L323","name":"CategoryTheory.Limits.eq_zero_of_epi_kernel","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.eq_zero_of_epi_kernel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L318-L319","name":"CategoryTheory.Limits.kernel.ι_zero_isIso","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ι_zero_isIso","doc":"Every kernel of the zero morphism is an isomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L307-L314","name":"CategoryTheory.Limits.kernel.mapIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.mapIso","doc":"A commuting square of isomorphisms induces an isomorphism of kernels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L306-L306","name":"CategoryTheory.Limits.kernel.mapIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.mapIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L306-L306","name":"CategoryTheory.Limits.kernel.mapIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.mapIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L298-L302","name":"CategoryTheory.Limits.kernel.lift_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift_map","doc":"Given a commutative diagram\n    X --f--> Y --g--> Z\n    |        |        |\n    |        |        |\n    v        v        v\n    X' -f'-> Y' -g'-> Z'\nwith horizontal arrows composing to zero,\nthen we obtain a commutative square\n   X ---> kernel g\n   |         |\n   |         | kernel.map\n   |         |\n   v         v\n   X' --> kernel g'\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L278-L280","name":"CategoryTheory.Limits.kernel.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.map","doc":"A commuting square induces a morphism of kernels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L273-L274","name":"CategoryTheory.Limits.kernel.lift'","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift'","doc":"Any morphism `k : W ⟶ X` satisfying `k ≫ f = 0` induces a morphism `l : W ⟶ kernel f` such that\n`l ≫ kernel.ι f = k`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L264-L268","name":"CategoryTheory.Limits.kernel.lift_mono","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L260-L261","name":"CategoryTheory.Limits.kernel.lift_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L255-L256","name":"CategoryTheory.Limits.kernel.lift_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L254-L254","name":"CategoryTheory.Limits.kernel.lift_ι_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift_ι_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L250-L251","name":"CategoryTheory.Limits.kernel.lift","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.lift","doc":"Given any morphism `k : W ⟶ X` satisfying `k ≫ f = 0`, `k` factors through `kernel.ι f`\nvia `kernel.lift : W ⟶ kernel f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L244-L245","name":"CategoryTheory.Limits.kernelIsKernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernelIsKernel","doc":"The kernel built from `kernel.ι f` is limiting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L239-L240","name":"CategoryTheory.Limits.kernel.condition","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.condition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L238-L238","name":"CategoryTheory.Limits.kernel.condition_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.condition_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L235-L235","name":"CategoryTheory.Limits.equalizer_as_kernel","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.equalizer_as_kernel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L230-L231","name":"CategoryTheory.Limits.kernel.ι","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel.ι","doc":"The map from `kernel f` into the source of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L225-L226","name":"CategoryTheory.Limits.kernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.kernel","doc":"The kernel of a morphism, expressed as the equalizer with the 0 morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L208-L216","name":"CategoryTheory.Limits.KernelFork.IsLimit.isIso_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.IsLimit.isIso_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L203-L206","name":"CategoryTheory.Limits.KernelFork.IsLimit.ofMonoOfIsZero","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.IsLimit.ofMonoOfIsZero","doc":"Any zero object identifies to the kernel of a given monomorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L197-L200","name":"CategoryTheory.Limits.KernelFork.IsLimit.ofId","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.IsLimit.ofId","doc":"`X` identifies to the kernel of a zero map `X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L189-L193","name":"CategoryTheory.Limits.isKernelOfComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isKernelOfComp","doc":"Every kernel of `f ≫ g` is also a kernel of `f`, as long as `c.ι ≫ f` vanishes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L181-L185","name":"CategoryTheory.Limits.isKernelCompMono_lift","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isKernelCompMono_lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L172-L178","name":"CategoryTheory.Limits.isKernelCompMono","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isKernelCompMono","doc":"Every kernel of `f` induces a kernel of `f ≫ g` if `g` is mono. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L161-L168","name":"CategoryTheory.Limits.KernelFork.IsLimit.ofι","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.IsLimit.ofι","doc":"This is a more convenient formulation to show that a `KernelFork` constructed using\n`KernelFork.ofι` is a limit cone.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L147-L155","name":"CategoryTheory.Limits.isLimitAux","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isLimitAux","doc":"This is a slightly more convenient method to verify that a kernel fork is a limit cone. It\nonly asks for a proof of facts that carry any mathematical content "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L140-L142","name":"CategoryTheory.Limits.KernelFork.IsLimit.lift'","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.IsLimit.lift'","doc":"If `s` is a limit kernel fork and `k : W ⟶ X` satisfies `k ≫ f = 0`, then there is some\n`l : W ⟶ s.X` such that `l ≫ fork.ι s = k`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L126-L133","name":"CategoryTheory.Limits.compNatIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.compNatIso","doc":"If `F` is an equivalence, then applying `F` to a diagram indexing a (co)kernel of `f` yields\nthe diagram indexing the (co)kernel of `F.map f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L119-L121","name":"CategoryTheory.Limits.ofιCongr","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.ofιCongr","doc":"If `ι = ι'`, then `fork.ofι ι _` and `fork.ofι ι' _` are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L114-L115","name":"CategoryTheory.Limits.isoOfι","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.isoOfι","doc":"Every kernel fork `s` is isomorphic (actually, equal) to `fork.ofι (fork.ι s) _`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L105-L106","name":"CategoryTheory.Limits.KernelFork.ι_ofι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.ι_ofι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L100-L101","name":"CategoryTheory.Limits.KernelFork.ofι","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.ofι","doc":"A morphism `ι` satisfying `ι ≫ f = 0` determines a kernel fork over `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L95-L96","name":"CategoryTheory.Limits.KernelFork.app_one","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.app_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L90-L91","name":"CategoryTheory.Limits.KernelFork.condition","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.condition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L89-L89","name":"CategoryTheory.Limits.KernelFork.condition_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork.condition_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L83-L84","name":"CategoryTheory.Limits.KernelFork","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork","doc":"A kernel fork is just a fork where the second morphism is a zero morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L74-L75","name":"CategoryTheory.Limits.HasCokernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasCokernel","doc":"A morphism `f` has a cokernel if the functor `ParallelPair f 0` has a colimit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L69-L70","name":"CategoryTheory.Limits.HasKernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasKernel","doc":"A morphism `f` has a kernel if the functor `ParallelPair f 0` has a limit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1-L1","name":"CategoryTheory.Limits.HasCokernels.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasCokernels.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Kernels.lean#L1-L1","name":"CategoryTheory.Limits.HasKernels.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasKernels.mk","doc":""}]}