{"name":"Mathlib.MeasureTheory.Function.SimpleFuncDense","instances":[],"imports":["Init","Mathlib.MeasureTheory.Function.SimpleFunc"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L182-L189","name":"MeasureTheory.SimpleFunc.edist_approxOn_y0_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.edist_approxOn_y0_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L177-L179","name":"MeasureTheory.SimpleFunc.edist_approxOn_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.edist_approxOn_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L170-L174","name":"MeasureTheory.SimpleFunc.edist_approxOn_mono","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.edist_approxOn_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L157-L167","name":"MeasureTheory.SimpleFunc.tendsto_approxOn","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.tendsto_approxOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L151-L154","name":"MeasureTheory.SimpleFunc.approxOn_comp","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.approxOn_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L142-L147","name":"MeasureTheory.SimpleFunc.approxOn_mem","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.approxOn_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L137-L139","name":"MeasureTheory.SimpleFunc.approxOn_zero","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.approxOn_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L130-L133","name":"MeasureTheory.SimpleFunc.approxOn","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.approxOn","doc":"Approximate a measurable function by a sequence of simple functions `F n` such that\n`F n x âˆˆ s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L118-L123","name":"MeasureTheory.SimpleFunc.tendsto_nearestPt","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.tendsto_nearestPt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L104-L115","name":"MeasureTheory.SimpleFunc.edist_nearestPt_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.edist_nearestPt_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L97-L101","name":"MeasureTheory.SimpleFunc.nearestPtInd_le","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPtInd_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L89-L94","name":"MeasureTheory.SimpleFunc.nearestPtInd_succ","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPtInd_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L85-L86","name":"MeasureTheory.SimpleFunc.nearestPt_zero","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPt_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L80-L81","name":"MeasureTheory.SimpleFunc.nearestPtInd_zero","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPtInd_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L75-L76","name":"MeasureTheory.SimpleFunc.nearestPt","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPt","doc":"`nearestPt e N x` is the nearest point to `x` among the points `e 0`, ..., `e N`. If more than\none point are at the same distance from `x`, then `nearestPt e N x` returns the point with the\nleast possible index. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Function/SimpleFuncDense.lean#L62-L69","name":"MeasureTheory.SimpleFunc.nearestPtInd","kind":"def","docLink":"./Mathlib/MeasureTheory/Function/SimpleFuncDense.html#MeasureTheory.SimpleFunc.nearestPtInd","doc":"`nearestPtInd e N x` is the index `k` such that `e k` is the nearest point to `x` among the\npoints `e 0`, ..., `e N`. If more than one point are at the same distance from `x`, then\n`nearestPtInd e N x` returns the least of their indexes. "}]}