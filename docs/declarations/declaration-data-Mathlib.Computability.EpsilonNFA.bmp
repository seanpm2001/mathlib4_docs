{"name":"Mathlib.Computability.EpsilonNFA","instances":[{"typeNames":["εNFA"],"name":"εNFA.instZeroεNFA","className":"Zero"},{"typeNames":["εNFA"],"name":"εNFA.instOneεNFA","className":"One"},{"typeNames":["εNFA"],"name":"εNFA.instInhabitedεNFA","className":"Inhabited"}],"imports":["Init","Mathlib.Computability.NFA"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L259-L260","name":"εNFA.accept_one","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.accept_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L254-L255","name":"εNFA.accept_zero","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.accept_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L249-L250","name":"εNFA.start_one","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.start_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L244-L245","name":"εNFA.start_zero","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.start_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L239-L240","name":"εNFA.step_one","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.step_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L234-L235","name":"εNFA.step_zero","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.step_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L228-L229","name":"εNFA.instInhabitedεNFA","kind":"instance","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.instInhabitedεNFA","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L225-L226","name":"εNFA.instOneεNFA","kind":"instance","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.instOneεNFA","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L222-L223","name":"εNFA.instZeroεNFA","kind":"instance","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.instZeroεNFA","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L210-L212","name":"NFA.toεNFA_correct","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#NFA.toεNFA_correct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L196-L206","name":"NFA.toεNFA_evalFrom_match","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#NFA.toεNFA_evalFrom_match","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L187-L192","name":"NFA.toεNFA_εClosure","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#NFA.toεNFA_εClosure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L180-L183","name":"NFA.toεNFA","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#NFA.toεNFA","doc":"`M.toεNFA` is an `εNFA` constructed from an `NFA` `M` by using the same start and accept\nstates and transition functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L167-L171","name":"εNFA.pumping_lemma","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.pumping_lemma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L163-L164","name":"εNFA.toNFA_correct","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.toNFA_correct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L157-L159","name":"εNFA.toNFA_evalFrom_match","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.toNFA_evalFrom_match","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L150-L153","name":"εNFA.toNFA","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.toNFA","doc":"`M.toNFA` is an `NFA` constructed from an `εNFA` `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L142-L143","name":"εNFA.accepts","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.accepts","doc":"`M.accepts` is the language of `x` such that there is an accept state in `M.eval x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L137-L138","name":"εNFA.eval_append_singleton","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.eval_append_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L132-L133","name":"εNFA.eval_singleton","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.eval_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L127-L128","name":"εNFA.eval_nil","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.eval_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L122-L123","name":"εNFA.eval","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.eval","doc":"`M.eval x` computes all possible paths through `M` with input `x` starting at an element of\n`M.start`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L114-L117","name":"εNFA.evalFrom_empty","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.evalFrom_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L108-L110","name":"εNFA.evalFrom_append_singleton","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.evalFrom_append_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L103-L104","name":"εNFA.evalFrom_singleton","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.evalFrom_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L98-L99","name":"εNFA.evalFrom_nil","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.evalFrom_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L93-L94","name":"εNFA.evalFrom","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.evalFrom","doc":"`M.evalFrom S x` computes all possible paths through `M` with input `x` starting at an element\nof `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L85-L86","name":"εNFA.stepSet_empty","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.stepSet_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L80-L81","name":"εNFA.mem_stepSet_iff","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.mem_stepSet_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L73-L74","name":"εNFA.stepSet","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.stepSet","doc":"`M.stepSet S a` is the union of the ε-closure of `M.step s a` for all `s ∈ S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L68-L69","name":"εNFA.εClosure_univ","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.εClosure_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L63-L64","name":"εNFA.εClosure_empty","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.εClosure_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L58-L59","name":"εNFA.subset_εClosure","kind":"theorem","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.subset_εClosure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L54-L54","name":"εNFA.εClosure.step","kind":"ctor","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.εClosure.step","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L53-L53","name":"εNFA.εClosure.base","kind":"ctor","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.εClosure.base","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L52-L54","name":"εNFA.εClosure","kind":"inductive","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.εClosure","doc":"The `εClosure` of a set is the set of states which can be reached by taking a finite string of\nε-transitions from an element of the set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L43-L43","name":"εNFA.accept","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.accept","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L42-L42","name":"εNFA.start","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.start","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L41-L41","name":"εNFA.step","kind":"def","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.step","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L40-L40","name":"εNFA.mk","kind":"ctor","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/EpsilonNFA.lean#L40-L43","name":"εNFA","kind":"structure","docLink":"./Mathlib/Computability/EpsilonNFA.html#εNFA","doc":"An `εNFA` is a set of states (`σ`), a transition function from state to state labelled by the\nalphabet (`step`), a starting state (`start`) and a set of acceptance states (`accept`).\nNote the transition function sends a state to a `Set` of states and can make ε-transitions by\ninputing `none`.\nSince this definition allows for Automata with infinite states, a `Fintype` instance must be\nsupplied for true `εNFA`'s. "}]}