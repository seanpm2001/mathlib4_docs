{"name":"Std.Classes.Cast","instances":[{"typeNames":["Nat"],"name":"instNatCastNat","className":"NatCast"},{"typeNames":["Int"],"name":"instNatCastInt","className":"NatCast"},{"typeNames":["Nat"],"name":"instCoeTailNat","className":"CoeTail"},{"typeNames":["Nat"],"name":"instCoeHTCTNat","className":"CoeHTCT"},{"typeNames":["Nat","Int"],"name":"instCoeNatInt_1","className":"Coe"},{"typeNames":["Int"],"name":"instIntCastInt","className":"IntCast"},{"typeNames":["Int"],"name":"instCoeTailInt","className":"CoeTail"},{"typeNames":["Int"],"name":"instCoeHTCTInt","className":"CoeHTCT"}],"imports":["Init","Std.Tactic.CoeExt","Std.Util.LibraryNote"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L47-L47","name":"instCoeHTCTInt","kind":"instance","docLink":"./Std/Classes/Cast.html#instCoeHTCTInt","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L44-L44","name":"instCoeTailInt","kind":"instance","docLink":"./Std/Classes/Cast.html#instCoeTailInt","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L40-L41","name":"Int.cast","kind":"def","docLink":"./Std/Classes/Cast.html#Int.cast","doc":"Canonical homomorphism from `Int` to a additive group `R` with a `1`.\nThis is just the bare function in order to aid in creating instances of `AddGroupWithOne`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L36-L36","name":"instIntCastInt","kind":"instance","docLink":"./Std/Classes/Cast.html#instIntCastInt","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L34-L34","name":"IntCast.intCast","kind":"def","docLink":"./Std/Classes/Cast.html#IntCast.intCast","doc":"The canonical map `Int → R`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L32-L32","name":"IntCast.mk","kind":"ctor","docLink":"./Std/Classes/Cast.html#IntCast.mk","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L32-L34","name":"IntCast","kind":"class","docLink":"./Std/Classes/Cast.html#IntCast","doc":"Type class for the canonical homomorphism `Int → R`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L29-L29","name":"instCoeNatInt_1","kind":"instance","docLink":"./Std/Classes/Cast.html#instCoeNatInt_1","doc":"This instance is needed to ensure that `instCoeNatInt` from core is not used. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L26-L26","name":"instCoeHTCTNat","kind":"instance","docLink":"./Std/Classes/Cast.html#instCoeHTCTNat","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L23-L23","name":"instCoeTailNat","kind":"instance","docLink":"./Std/Classes/Cast.html#instCoeTailNat","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L19-L20","name":"Nat.cast","kind":"def","docLink":"./Std/Classes/Cast.html#Nat.cast","doc":"Canonical homomorphism from `Nat` to a additive monoid `R` with a `1`.\nThis is just the bare function in order to aid in creating instances of `AddMonoidWithOne`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L15-L15","name":"instNatCastInt","kind":"instance","docLink":"./Std/Classes/Cast.html#instNatCastInt","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L14-L14","name":"instNatCastNat","kind":"instance","docLink":"./Std/Classes/Cast.html#instNatCastNat","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L12-L12","name":"NatCast.natCast","kind":"def","docLink":"./Std/Classes/Cast.html#NatCast.natCast","doc":"The canonical map `Nat → R`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L10-L10","name":"NatCast.mk","kind":"ctor","docLink":"./Std/Classes/Cast.html#NatCast.mk","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Classes/Cast.lean#L10-L12","name":"NatCast","kind":"class","docLink":"./Std/Classes/Cast.html#NatCast","doc":"Type class for the canonical homomorphism `Nat → R`. "}]}