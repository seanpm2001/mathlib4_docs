{"name":"Std.Linter.UnnecessarySeqFocus","instances":[],"imports":["Init","Lean.Elab.Command","Lean.Linter.Util","Std.Lean.AttributeExtra"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L151-L170","name":"Std.Linter.UnnecessarySeqFocus.unnecessarySeqFocusLinter","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.unnecessarySeqFocusLinter","doc":"The main entry point to the unused tactic linter. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L119-L146","name":"Std.Linter.UnnecessarySeqFocus.markUsedTactics","kind":"opaque","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.markUsedTactics","doc":"Search for tactic executions in the info tree and remove executed tactic syntaxes. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L115-L116","name":"Std.Linter.UnnecessarySeqFocus.markUsedTacticsList","kind":"opaque","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.markUsedTacticsList","doc":"Search for tactic executions in the info tree and remove executed tactic syntaxes. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L105-L110","name":"Std.Linter.UnnecessarySeqFocus.getPath","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.getPath","doc":"Traverse the info tree down a given path.\nEach `(n, i)` means that the array must have length `n` and we will descend into the `i`'th child.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L93-L99","name":"Std.Linter.UnnecessarySeqFocus.getTactics","kind":"opaque","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.getTactics","doc":"Accumulates the set of tactic syntaxes that should be evaluated at least once. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L89-L90","name":"Std.Linter.UnnecessarySeqFocus.isSeqFocus","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.isSeqFocus","doc":"True if this is a `<;>` node in either `tactic` or `conv` classes. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L86-L86","name":"Std.Linter.UnnecessarySeqFocus.M","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.M","doc":"The monad for collecting used tactic syntaxes. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L83-L83","name":"Std.Linter.UnnecessarySeqFocus.Entry.used","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.Entry.used","doc":"* `true`: this `<;>` has been used unnecessarily at least once\n* `false`: it has never been executed\n* If it has been used properly at least once, the entry is removed from the table.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L77-L77","name":"Std.Linter.UnnecessarySeqFocus.Entry.stx","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.Entry.stx","doc":"The `<;>` node itself. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L75-L83","name":"Std.Linter.UnnecessarySeqFocus.Entry","kind":"structure","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.Entry","doc":"The information we record for each `<;>` node appearing in the syntax. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L50-L72","name":"Std.Linter.UnnecessarySeqFocus.multigoalAttr","kind":"opaque","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.multigoalAttr","doc":"The `multigoal` attribute keeps track of tactics that operate on multiple goals,\nmeaning that `tac` acts differently from `focus tac`. This is used by the\n'unnecessary `<;>`' linter to prevent false positives where `tac <;> tac'` cannot\nbe replaced by `(tac; tac')` because the latter would expose `tac` to a different set of goals.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L47-L48","name":"Std.Linter.UnnecessarySeqFocus.getLinterUnnecessarySeqFocus","kind":"def","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.getLinterUnnecessarySeqFocus","doc":"Gets the value of the `linter.unnecessarySeqFocus` option. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L13-L39","name":"Std.Linter.linter.unnecessarySeqFocus","kind":"opaque","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.linter.unnecessarySeqFocus","doc":"Enables the 'unnecessary `<;>`' linter. This will warn whenever the `<;>` tactic combinator\nis used when `;` would work.\n\n```\nexample : True := by apply id <;> trivial\n```\nThe `<;>` is unnecessary here because `apply id` only makes one subgoal.\nPrefer `apply id; trivial` instead.\n\nIn some cases, the `<;>` is syntactically necessary because a single tactic is expected:\n```\nexample : True := by\n  cases () with apply id <;> apply id\n  | unit => trivial\n```\nIn this case, you should use parentheses, as in `(apply id; apply id)`:\n```\nexample : True := by\n  cases () with (apply id; apply id)\n  | unit => trivial\n```\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Linter/UnnecessarySeqFocus.lean#L1-L1","name":"Std.Linter.UnnecessarySeqFocus.Entry.mk","kind":"ctor","docLink":"./Std/Linter/UnnecessarySeqFocus.html#Std.Linter.UnnecessarySeqFocus.Entry.mk","doc":""}]}