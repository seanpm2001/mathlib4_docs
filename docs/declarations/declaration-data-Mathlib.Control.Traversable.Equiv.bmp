{"name":"Mathlib.Control.Traversable.Equiv","instances":[],"imports":["Init","Mathlib.Control.Traversable.Lemmas","Mathlib.Logic.Equiv.Defs"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L176-L191","name":"Equiv.isLawfulTraversable'","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.isLawfulTraversable'","doc":"If the `Traversable t'` instance has the properties that `map`,\n`map_const`, and `traverse` are equal to the ones that come from\ncarrying the traversable functor structure from `t` over the\nequivalences, then the fact that `t` is a lawful traversable functor\ncarries over as well. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L161-L168","name":"Equiv.isLawfulTraversable","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.isLawfulTraversable","doc":"The fact that `t` is a lawful traversable functor carries over the\nequivalences to `t'`, with the traversable functor structure given by\n`Equiv.traversable`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L153-L155","name":"Equiv.naturality","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L147-L150","name":"Equiv.comp_traverse","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.comp_traverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L142-L144","name":"Equiv.traverse_eq_map_id","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.traverse_eq_map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L137-L139","name":"Equiv.id_traverse","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.id_traverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L110-L112","name":"Equiv.traversable","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.traversable","doc":"The function `Equiv.traverse` transfers a traversable functor\ninstance across the equivalences `eqv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L104-L105","name":"Equiv.traverse","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.traverse","doc":"Like `Equiv.map`, a function `t' : Type u → Type u` can be given\nthe structure of a traversable functor using a traversable functor\n`t'` and equivalences `t α ≃ t' α` for all α. See `Equiv.traversable`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L77-L86","name":"Equiv.lawfulFunctor'","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.lawfulFunctor'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L69-L74","name":"Equiv.lawfulFunctor","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.lawfulFunctor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L64-L66","name":"Equiv.comp_map","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L60-L61","name":"Equiv.id_map","kind":"theorem","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.id_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L54-L54","name":"Equiv.functor","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.functor","doc":"The function `Equiv.map` transfers the functoriality of `t` to\n`t'` using the equivalences `eqv`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Traversable/Equiv.lean#L48-L49","name":"Equiv.map","kind":"def","docLink":"./Mathlib/Control/Traversable/Equiv.html#Equiv.map","doc":"Given a functor `t`, a function `t' : Type u → Type u`, and\nequivalences `t α ≃ t' α` for all `α`, then every function `α → β` can\nbe mapped to a function `t' α → t' β` functorially (see\n`Equiv.functor`). "}]}