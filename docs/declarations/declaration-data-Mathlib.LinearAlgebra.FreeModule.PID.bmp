{"name":"Mathlib.LinearAlgebra.FreeModule.PID","instances":[],"imports":["Init","Mathlib.LinearAlgebra.Dimension","Mathlib.LinearAlgebra.FreeModule.Basic","Mathlib.RingTheory.PrincipalIdealDomain","Mathlib.RingTheory.Finiteness"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L637-L641","name":"LinearIndependent.restrict_scalars_algebras","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#LinearIndependent.restrict_scalars_algebras","doc":"A set of linearly independent vectors in a module `M` over a semiring `S` is also linearly\nindependent over a subring `R` of `K`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L618-L623","name":"Ideal.smithCoeffs_ne_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.smithCoeffs_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L612-L614","name":"Ideal.selfBasis_def","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.selfBasis_def","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L602-L603","name":"Ideal.smithCoeffs","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.smithCoeffs","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix; these are the entries of the diagonal matrix.\nSee `Ideal.ringBasis` for the basis on `S`,\nsee `Ideal.selfBasis` for the basis on `I`,\nand `Ideal.selfBasis_def` for the proof that the inclusion map forms a square diagonal matrix.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L590-L591","name":"Ideal.selfBasis","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.selfBasis","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix; this is the basis for `I`.\nSee `Ideal.ringBasis` for the basis on `S`,\nsee `Ideal.smithCoeffs` for the entries of the diagonal matrix\nand `Ideal.selfBasis_def` for the proof that the inclusion map forms a square diagonal matrix.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L578-L579","name":"Ideal.ringBasis","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.ringBasis","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix; this is the basis for `S`.\nSee `Ideal.selfBasis` for the basis on `I`,\nsee `Ideal.smithCoeffs` for the entries of the diagonal matrix\nand `Ideal.selfBasis_def` for the proof that the inclusion map forms a square diagonal matrix.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L555-L567","name":"Ideal.exists_smith_normal_form","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.exists_smith_normal_form","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix.\n\nSee also `Ideal.smithNormalForm` for a version of this theorem that returns\na `Basis.SmithNormalForm`.\n\nThe definitions `Ideal.ringBasis`, `Ideal.selfBasis`, `Ideal.smithCoeffs` are (noncomputable)\nchoices of values for this existential quantifier.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L532-L539","name":"Ideal.smithNormalForm","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Ideal.smithNormalForm","doc":"If `S` a finite-dimensional ring extension of a PID `R` which is free as an `R`-module,\nthen any nonzero `S`-ideal `I` is free as an `R`-submodule of `S`, and we can\nfind a basis for `S` and `I` such that the inclusion map is a square diagonal\nmatrix.\n\nSee `Ideal.exists_smith_normal_form` for a version of this theorem that doesn't\nneed to map `I` into a submodule of `R`.\n\nThis is a strengthening of `Submodule.basisOfPid`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L507-L515","name":"Submodule.smithNormalForm","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.smithNormalForm","doc":"If `M` is finite free over a PID `R`, then any submodule `N` is free\nand we can find a basis for `M` and `N` such that the inclusion map is a diagonal matrix\nin Smith normal form.\n\nThis is a strengthening of `Submodule.basisOfPid`.\n\nSee also `Ideal.smithNormalForm`, which moreover proves that the dimension of\nan ideal is the same as the dimension of the whole ring.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L487-L495","name":"Submodule.smithNormalFormOfLE","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.smithNormalFormOfLE","doc":"If `M` is finite free over a PID `R`, then any submodule `N` is free\nand we can find a basis for `M` and `N` such that the inclusion map is a diagonal matrix\nin Smith normal form.\n\nSee `Submodule.exists_smith_normal_form_of_le` for a version of this theorem that doesn't\nneed to map `N` into a submodule of `O`.\n\nThis is a strengthening of `Submodule.basisOfPidOfLe`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L453-L475","name":"Submodule.exists_smith_normal_form_of_le","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.exists_smith_normal_form_of_le","doc":"If `M` is finite free over a PID `R`, then any submodule `N` is free\nand we can find a basis for `M` and `N` such that the inclusion map is a diagonal matrix\nin Smith normal form.\n\nSee `Submodule.smithNormalFormOfLE` for a version of this theorem that returns\na `Basis.SmithNormalForm`.\n\nThis is a strengthening of `Submodule.basisOfPidOfLE`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L441-L441","name":"Basis.SmithNormalForm.snf","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.snf","doc":"The SNF relation between the vectors of the bases. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L439-L439","name":"Basis.SmithNormalForm.a","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.a","doc":"The (diagonal) entries of the matrix. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L437-L437","name":"Basis.SmithNormalForm.f","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.f","doc":"The mapping between the vectors of the bases. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L435-L435","name":"Basis.SmithNormalForm.bN","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.bN","doc":"The basis of N. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L433-L433","name":"Basis.SmithNormalForm.bM","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.bM","doc":"The basis of M. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L431-L431","name":"Basis.SmithNormalForm.mk","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L431-L441","name":"Basis.SmithNormalForm","kind":"structure","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Basis.SmithNormalForm","doc":"A Smith normal form basis for a submodule `N` of a module `M` consists of\nbases for `M` and `N` such that the inclusion map `N â†’ M` can be written as a\n(rectangular) matrix with `a` along the diagonal: in Smith normal form. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L419-L422","name":"Module.free_of_finite_type_torsion_free'","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Module.free_of_finite_type_torsion_free'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L414-L416","name":"Module.basisOfFiniteTypeTorsionFree'","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Module.basisOfFiniteTypeTorsionFree'","doc":"A finite type torsion free module over a PID admits a basis. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L406-L410","name":"Module.free_of_finite_type_torsion_free","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Module.free_of_finite_type_torsion_free","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L356-L403","name":"Module.basisOfFiniteTypeTorsionFree","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Module.basisOfFiniteTypeTorsionFree","doc":"A finite type torsion free module over a PID admits a basis. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L349-L352","name":"Submodule.basisOfPidOfLESpan","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.basisOfPidOfLESpan","doc":"A submodule inside the span of a linear independent family is a free `R`-module of finite rank,\nif `R` is a principal ideal domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L341-L344","name":"Submodule.basisOfPidOfLE","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.basisOfPidOfLE","doc":"A submodule inside a free `R`-submodule of finite rank is also a free `R`-module of finite rank,\nif `R` is a principal ideal domain.\n\nSee also the stronger version `Submodule.smithNormalFormOfLE`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L328-L333","name":"Submodule.basisOfPid_bot","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.basisOfPid_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L323-L325","name":"Submodule.basisOfPid","kind":"def","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.basisOfPid","doc":"A submodule of a free `R`-module of finite rank is also a free `R`-module of finite rank,\nif `R` is a principal ideal domain.\n\nSee also the stronger version `Submodule.smithNormalForm`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L300-L315","name":"Submodule.nonempty_basis_of_pid","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.nonempty_basis_of_pid","doc":"A submodule of a free `R`-module of finite rank is also a free `R`-module of finite rank,\nif `R` is a principal ideal domain.\n\nThis is a `lemma` to make the induction a bit easier. To actually access the basis,\nsee `Submodule.basisOfPid`.\n\nSee also the stronger version `Submodule.smithNormalForm`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L166-L289","name":"Submodule.basis_of_pid_aux","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#Submodule.basis_of_pid_aux","doc":"The induction hypothesis of `Submodule.basisOfPid` and `Submodule.smithNormalForm`.\n\nBasically, it says: let `N â‰¤ M` be a pair of submodules, then we can find a pair of\nsubmodules `N' â‰¤ M'` of strictly smaller rank, whose basis we can extend to get a basis\nof `N` and `M`. Moreover, if the basis for `M'` is up to scalars a basis for `N'`,\nthen the basis we find for `M` is up to scalars a basis for `N`.\n\nFor `basis_of_pid` we only need the first half and can fix `M = âŠ¤`,\nfor `smith_normal_form` we need the full statement,\nbut must also feed in a basis for `M` using `basis_of_pid` to keep the induction going.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L122-L152","name":"generator_maximal_submoduleImage_dvd","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#generator_maximal_submoduleImage_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L102-L107","name":"dvd_generator_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#dvd_generator_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L80-L89","name":"eq_bot_of_generator_maximal_submoduleImage_eq_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#eq_bot_of_generator_maximal_submoduleImage_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/FreeModule/PID.lean#L67-L77","name":"eq_bot_of_generator_maximal_map_eq_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/PID.html#eq_bot_of_generator_maximal_map_eq_zero","doc":""}]}