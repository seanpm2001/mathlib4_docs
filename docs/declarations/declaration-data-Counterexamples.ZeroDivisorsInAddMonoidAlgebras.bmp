{"name":"Counterexamples.ZeroDivisorsInAddMonoidAlgebras","instances":[{"typeNames":["Eq","Counterexample.F"],"name":"Counterexample.instDecidableEqF","className":"Decidable"},{"typeNames":["Counterexample.F"],"name":"Counterexample.instInhabitedF","className":"Inhabited"},{"typeNames":["Counterexample.F"],"name":"Counterexample.F.instZeroF","className":"Zero"},{"typeNames":["Counterexample.F"],"name":"Counterexample.F.instOneF","className":"One"},{"typeNames":["Counterexample.F"],"name":"Counterexample.F.instLinearOrderF","className":"LinearOrder"},{"typeNames":["Counterexample.F"],"name":"Counterexample.F.instAddCommMonoidF","className":"AddCommMonoid"},{"typeNames":["Counterexample.F","Counterexample.F","Counterexample.F","HAdd.hAdd","instHAdd","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","AddCommMonoid.toAddMonoid","Counterexample.F.instAddCommMonoidF","Counterexample.F","LE.le","Preorder.toLE","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice","Counterexample.F.instLinearOrderF"],"name":"Counterexample.F.covariantClass_add_le","className":"CovariantClass"}],"imports":["Init","Mathlib.Algebra.GeomSum","Mathlib.Algebra.Group.UniqueProds","Mathlib.Algebra.MonoidAlgebra.Basic","Mathlib.Data.Finsupp.Lex","Mathlib.Data.ZMod.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L233-L234","name":"Counterexample.F.f110","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.f110","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L228-L229","name":"Counterexample.F.f111","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.f111","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L223-L224","name":"Counterexample.F.f010","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.f010","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L218-L219","name":"Counterexample.F.f011","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.f011","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L214-L214","name":"Counterexample.F.f1","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.f1","doc":"A few `simp`-lemmas to take care of trivialities in the proof of the example below. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L196-L197","name":"Counterexample.F.covariantClass_add_le","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.covariantClass_add_le","doc":"The `CovariantClass`es asserting monotonicity of addition hold for `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L187-L193","name":"Counterexample.F.instAddCommMonoidF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.instAddCommMonoidF","doc":"`F` would be a `CommSemiring`, using `min` as multiplication.  Again, we do not need this. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L183-L183","name":"Counterexample.F.z01","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.z01","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L179-L180","name":"Counterexample.F.instLinearOrderF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.instLinearOrderF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L174-L176","name":"Counterexample.F.val","kind":"def","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.val","doc":"`val` maps `0 1 : F` to their counterparts in `ℕ`.\nWe use it to lift the linear order on `ℕ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L170-L170","name":"Counterexample.F.tacticBoom","kind":"def","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.tacticBoom","doc":"A tactic to prove trivial goals by enumeration. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L166-L167","name":"Counterexample.F.instOneF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.instOneF","doc":"`1` is not really needed, but it is nice to use the notation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L162-L163","name":"Counterexample.F.instZeroF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.instZeroF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L138-L154","name":"Counterexample.commandGuard_decl__","kind":"def","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.commandGuard_decl__","doc":"`guard_decl na mod` makes sure that the declaration with name `na` is in the module `mod`.\n```lean\nguard_decl Nat.nontrivial Mathlib.Data.Nat.Basic -- does nothing\n\nguard_decl Nat.nontrivial Not.In.Here\n-- the module Not.In.Here is not imported!\n```\n\nThis test makes sure that the comment referring to this example is in the file claimed in the\ndoc-module to this counterexample. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L132-L134","name":"Counterexample.List.dropUntil","kind":"def","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.List.dropUntil","doc":"The same as `List.getRest`, except that we take the \"rest\" from the first match, rather than\nfrom the beginning, returning `[]` if there is no match.  For instance,\n```lean\n#eval dropUntil [1,2] [3,1,2,4,1,2]  -- [4, 1, 2]\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L123-L123","name":"Counterexample.instInhabitedF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.instInhabitedF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L123-L123","name":"Counterexample.instDecidableEqF","kind":"instance","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.instDecidableEqF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L122-L122","name":"Counterexample.F.one","kind":"ctor","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L121-L121","name":"Counterexample.F.zero","kind":"ctor","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F.zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L120-L123","name":"Counterexample.F","kind":"inductive","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.F","doc":"`F` is the type with two elements `zero` and `one`.  We define the \"obvious\" linear order and\nabsorbing addition on it to generate our counterexample. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L86-L111","name":"Counterexample.zero_divisors_of_torsion","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.zero_divisors_of_torsion","doc":"This is a simple example showing that if `R` is a non-trivial ring and `A` is an additive\nmonoid with a non-zero element `a` of finite order `oa`, then `AddMonoidAlgebra R A` contains\nnon-zero zero-divisors.  The elements are easy to write down:\n`∑ i in Finset.range oa, [a] ^ i` and `[a] - 1` are non-zero elements of `AddMonoidAlgebra R A`\nwhose product is zero.\n\nIn particular, this applies whenever the additive monoid `A` is an additive group with a non-zero\ntorsion element. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L73-L75","name":"Counterexample.single_zero_one","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.single_zero_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/ZeroDivisorsInAddMonoidAlgebras.lean#L64-L70","name":"Counterexample.zero_divisors_of_periodic","kind":"theorem","docLink":"./Counterexamples/ZeroDivisorsInAddMonoidAlgebras.html#Counterexample.zero_divisors_of_periodic","doc":"This is a simple example showing that if `R` is a non-trivial ring and `A` is an additive\nmonoid with an element `a` satisfying `n • a = a` and `(n - 1) • a ≠ a`, for some `2 ≤ n`,\nthen `AddMonoidAlgebra R A` contains non-zero zero-divisors.  The elements are easy to write down:\n`[a]` and `[a] ^ (n - 1) - 1` are non-zero elements of `AddMonoidAlgebra R A` whose product\nis zero.\n\nObserve that such an element `a` *cannot* be invertible.  In particular, this lemma never applies\nif `A` is a group. "}]}