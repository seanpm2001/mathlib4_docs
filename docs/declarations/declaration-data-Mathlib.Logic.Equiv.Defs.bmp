{"name":"Mathlib.Logic.Equiv.Defs","instances":[{"typeNames":["Equiv"],"name":"instCoeTCEquiv","className":"CoeTC"},{"typeNames":["Equiv"],"name":"Equiv.instEquivLikeEquiv","className":"EquivLike"},{"typeNames":["Equiv"],"name":"Equiv.instFunLikeEquiv","className":"FunLike"},{"typeNames":["Equiv"],"name":"Equiv.inhabited'","className":"Inhabited"},{"typeNames":["_builtin_sortu","_builtin_sortu","_builtin_sortu","Equiv","Equiv","Equiv"],"name":"Equiv.instTransSortSortSortEquivEquivEquiv","className":"Trans"},{"typeNames":["Equiv"],"name":"Equiv.equiv_subsingleton_cod","className":"Subsingleton"},{"typeNames":["Equiv"],"name":"Equiv.equiv_subsingleton_dom","className":"Subsingleton"},{"typeNames":["Equiv.Perm"],"name":"Equiv.permUnique","className":"Unique"}],"imports":["Init","Mathlib.Data.FunLike.Equiv","Mathlib.Data.Quot","Mathlib.Init.Data.Bool.Lemmas","Mathlib.Logic.Unique"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L976-L978","name":"Quotient.congrRight","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quotient.congrRight","doc":"Quotients are congruent on equivalences under equality of their relation.\nAn alternative is just to use rewriting with `eq`, but then computational proofs get stuck. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L969-L971","name":"Quotient.congr_mk","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quotient.congr_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L964-L966","name":"Quotient.congr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quotient.congr","doc":"An equivalence `e : α ≃ β` generates an equivalence between quotient spaces,\nif `ra a₁ a₂ ↔ rb (e a₁) (e a₂)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L953-L955","name":"Quot.congrLeft","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quot.congrLeft","doc":"An equivalence `e : α ≃ β` generates an equivalence between the quotient space of `α`\nby a relation `ra` and the quotient space of `β` by the image of this relation under `e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L947-L948","name":"Quot.congrRight","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quot.congrRight","doc":"Quotients are congruent on equivalences under equality of their relation.\nAn alternative is just to use rewriting with `eq`, but then computational proofs get stuck. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L940-L942","name":"Quot.congr_mk","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quot.congr_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L930-L937","name":"Quot.congr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Quot.congr","doc":"An equivalence `e : α ≃ β` generates an equivalence between quotient spaces,\nif `ra a₁ a₂ ↔ rb (e a₁) (e a₂)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L919-L921","name":"Equiv.exists_congr_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.exists_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L915-L916","name":"Equiv.forall_congr_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L911-L912","name":"Equiv.forall_congr_left'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall_congr_left'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L904-L908","name":"Equiv.forall₃_congr'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall₃_congr'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L898-L901","name":"Equiv.forall₃_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall₃_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L893-L895","name":"Equiv.forall₂_congr'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall₂_congr'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L888-L890","name":"Equiv.forall₂_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall₂_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L876-L878","name":"Equiv.forall_congr'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall_congr'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L869-L873","name":"Equiv.forall_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.forall_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L865-L866","name":"Equiv.exists_unique_congr_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.exists_unique_congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L861-L862","name":"Equiv.exists_unique_congr_left'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.exists_unique_congr_left'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L852-L858","name":"Equiv.exists_unique_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.exists_unique_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L842-L847","name":"Equiv.sigmaAssoc","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaAssoc","doc":"Dependent product of types is associative up to an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L837-L838","name":"Equiv.sigmaEquivProdOfEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaEquivProdOfEquiv","doc":"If each fiber of a `Sigma` type is equivalent to a fixed type, then the sigma type\nis equivalent to the product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L829-L830","name":"Equiv.sigmaEquivProd","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaEquivProd","doc":"`Sigma` type with a constant fiber is equivalent to the product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L829-L829","name":"Equiv.sigmaEquivProd_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaEquivProd_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L829-L829","name":"Equiv.sigmaEquivProd_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaEquivProd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L823-L825","name":"Equiv.sigmaCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongr","doc":"Transporting a sigma type through an equivalence of the base and a family of equivalences\nof matching fibers "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L817-L818","name":"Equiv.sigmaCongrLeft'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrLeft'","doc":"Transporting a sigma type through an equivalence of the base "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L800-L812","name":"Equiv.sigmaCongrLeft","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrLeft","doc":"An equivalence `f : α₁ ≃ α₂` generates an equivalence between `Σ a, β (f a)` and `Σ a, β a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L800-L800","name":"Equiv.sigmaCongrLeft_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L792-L794","name":"Equiv.Perm.sigmaCongrRight_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.sigmaCongrRight_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L787-L789","name":"Equiv.Perm.sigmaCongrRight_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.sigmaCongrRight_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L781-L784","name":"Equiv.Perm.sigmaCongrRight_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.sigmaCongrRight_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L777-L778","name":"Equiv.Perm.sigmaCongrRight","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.sigmaCongrRight","doc":"A family of permutations `Π a, Perm (β a)` generates a permutation `Perm (Σ a, β₁ a)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L769-L771","name":"Equiv.sigmaULiftPLiftEquivSubtype","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaULiftPLiftEquivSubtype","doc":"A `Sigma` with `fun i ↦ ULift (PLift (P i))` fibers is equivalent to `{ x // P x }`.\nVariant of `sigmaPLiftEquivSubtype`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L761-L763","name":"Equiv.sigmaPLiftEquivSubtype","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaPLiftEquivSubtype","doc":"A `Sigma` with `PLift` fibers is equivalent to the subtype. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L753-L757","name":"Equiv.psigmaEquivSubtype","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSubtype","doc":"A `PSigma` with `Prop` fibers is equivalent to the subtype.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L748-L749","name":"Equiv.sigmaCongrRight_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrRight_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L743-L744","name":"Equiv.sigmaCongrRight_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrRight_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L736-L739","name":"Equiv.sigmaCongrRight_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrRight_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L727-L731","name":"Equiv.sigmaCongrRight","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrRight","doc":"A family of equivalences `Π a, β₁ a ≃ β₂ a` generates an equivalence between `Σ a, β₁ a` and\n`Σ a, β₂ a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L726-L726","name":"Equiv.sigmaCongrRight_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.sigmaCongrRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L720-L721","name":"Equiv.psigmaCongrRight_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaCongrRight_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L715-L716","name":"Equiv.psigmaCongrRight_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaCongrRight_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L708-L711","name":"Equiv.psigmaCongrRight_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaCongrRight_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L699-L703","name":"Equiv.psigmaCongrRight","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaCongrRight","doc":"A family of equivalences `Π a, β₁ a ≃ β₂ a` generates an equivalence between `Σ' a, β₁ a` and\n`Σ' a, β₂ a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L698-L698","name":"Equiv.psigmaCongrRight_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaCongrRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L687-L691","name":"Equiv.psigmaEquivSigmaPLift","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigmaPLift","doc":"A `PSigma`-type is equivalent to the corresponding `Sigma`-type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L686-L686","name":"Equiv.psigmaEquivSigmaPLift_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigmaPLift_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L686-L686","name":"Equiv.psigmaEquivSigmaPLift_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigmaPLift_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L676-L680","name":"Equiv.psigmaEquivSigma","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigma","doc":"A `PSigma`-type is equivalent to the corresponding `Sigma`-type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L675-L675","name":"Equiv.psigmaEquivSigma_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigma_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L675-L675","name":"Equiv.psigmaEquivSigma_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.psigmaEquivSigma_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L667-L667","name":"Equiv.falseArrowEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.falseArrowEquivPUnit","doc":"The sort of maps from `False` is equivalent to `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L663-L663","name":"Equiv.pemptyArrowEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.pemptyArrowEquivPUnit","doc":"The sort of maps from `PEmpty` is equivalent to `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L659-L659","name":"Equiv.emptyArrowEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.emptyArrowEquivPUnit","doc":"The sort of maps from `Empty` is equivalent to `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L651-L655","name":"Equiv.arrowPUnitOfIsEmpty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowPUnitOfIsEmpty","doc":"The sort of maps from a type that `IsEmpty` is equivalent to `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L647-L647","name":"Equiv.trueArrowEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.trueArrowEquiv","doc":"The sort of maps from `True` is equivalent to the codomain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L643-L643","name":"Equiv.punitArrowEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.punitArrowEquiv","doc":"The sort of maps from `PUnit` is equivalent to the codomain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L638-L638","name":"Equiv.funUnique","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.funUnique","doc":"If `α` has a unique term, then the type of function `α → β` is equivalent to `β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L637-L637","name":"Equiv.funUnique_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.funUnique_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L627-L631","name":"Equiv.piSubsingleton","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.piSubsingleton","doc":"If `α` is `Subsingleton` and `a : α`, then the type of dependent functions `Π (i : α), β i`\nis equivalent to `β a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L627-L627","name":"Equiv.piSubsingleton_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.piSubsingleton_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L627-L627","name":"Equiv.piSubsingleton_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.piSubsingleton_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L621-L622","name":"Equiv.arrowPUnitEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowPUnitEquivPUnit","doc":"The sort of maps to `PUnit.{v}` is equivalent to `PUnit.{w}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L611-L615","name":"Equiv.propEquivBool","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.propEquivBool","doc":"`Prop` is noncomputably equivalent to `Bool`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L606-L607","name":"Equiv.punitEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.punitEquivPUnit","doc":"`PUnit` sorts in any two universes are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L601-L602","name":"Equiv.symm_comp_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L597-L598","name":"Equiv.eq_symm_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.eq_symm_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L593-L594","name":"Equiv.comp_symm_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.comp_symm_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L589-L590","name":"Equiv.eq_comp_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.eq_comp_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L585-L586","name":"Equiv.conj_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L578-L579","name":"Equiv.conj_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L575-L575","name":"Equiv.conj_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L572-L572","name":"Equiv.conj_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L568-L568","name":"Equiv.conj","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj","doc":"Conjugate a map `f : α → α` by an equivalence `α ≃ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L568-L568","name":"Equiv.conj_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.conj_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L563-L564","name":"Equiv.arrowCongr'_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr'_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L557-L560","name":"Equiv.arrowCongr'_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr'_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L553-L554","name":"Equiv.arrowCongr'_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr'_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L548-L549","name":"Equiv.arrowCongr'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr'","doc":"A version of `Equiv.arrowCongr` in `Type`, rather than `Sort`.\n\nThe `equiv_rw` tactic is not able to use the default `Sort` level `Equiv.arrowCongr`,\nbecause Lean's universe rules will not unify `?l_1` with `imax (1 ?m_1)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L547-L547","name":"Equiv.arrowCongr'_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr'_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L537-L538","name":"Equiv.arrowCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L533-L534","name":"Equiv.arrowCongr_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L529-L530","name":"Equiv.arrowCongr_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L523-L526","name":"Equiv.arrowCongr_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L515-L519","name":"Equiv.arrowCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr","doc":"If `α₁` is equivalent to `α₂` and `β₁` is equivalent to `β₂`, then the type of maps `α₁ → β₁`\nis equivalent to the type of maps `α₂ → β₂`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L514-L514","name":"Equiv.arrowCongr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.arrowCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L508-L508","name":"Equiv.ofIff","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.ofIff","doc":"equivalence of propositions is the same as iff "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L503-L503","name":"Equiv.plift","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.plift","doc":"`PLift α` is equivalent to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L502-L502","name":"Equiv.plift_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.plift_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L496-L497","name":"Equiv.ulift","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.ulift","doc":"`ULift α` is equivalent to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L495-L495","name":"Equiv.ulift_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.ulift_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L491-L491","name":"Equiv.propEquivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.propEquivPUnit","doc":"The `Sort` of proofs of a true proposition is equivalent to `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L487-L487","name":"Equiv.equivPUnit","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivPUnit","doc":"If `α` has a unique element, then it is equivalent to any `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L479-L483","name":"Equiv.equivOfUnique","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivOfUnique","doc":"If both `α` and `β` have a unique element, then `α ≃ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L475-L475","name":"Equiv.propEquivPEmpty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.propEquivPEmpty","doc":"The `Sort` of proofs of a false proposition is equivalent to `PEmpty`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L470-L471","name":"Equiv.equivEmptyEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivEmptyEquiv","doc":"`α` is equivalent to an empty type iff `α` is empty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L466-L466","name":"Equiv.equivPEmpty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivPEmpty","doc":"If `α` is an empty type, then it is equivalent to the `PEmpty` type in any universe. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L462-L462","name":"Equiv.equivEmpty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivEmpty","doc":"If `α` is an empty type, then it is equivalent to the `Empty` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L457-L458","name":"Equiv.equivOfIsEmpty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivOfIsEmpty","doc":"Two empty types are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L449-L451","name":"Equiv.permCongr_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L445-L446","name":"Equiv.permCongr_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L442-L442","name":"Equiv.permCongr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L439-L439","name":"Equiv.permCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L435-L436","name":"Equiv.permCongr_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L432-L432","name":"Equiv.permCongr_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L429-L429","name":"Equiv.permCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permCongr","doc":"If `α` is equivalent to `β`, then `Perm α` is equivalent to `Perm β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L420-L421","name":"Equiv.equivCongr_apply_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L416-L417","name":"Equiv.equivCongr_refl_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_refl_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L412-L413","name":"Equiv.equivCongr_refl_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_refl_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L407-L409","name":"Equiv.equivCongr_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L403-L404","name":"Equiv.equivCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L399-L400","name":"Equiv.equivCongr_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L392-L396","name":"Equiv.equivCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equivCongr","doc":"If `α` is equivalent to `β` and `γ` is equivalent to `δ`, then the type of equivalences `α ≃ γ`\nis equivalent to the type of equivalences `β ≃ δ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L386-L387","name":"Equiv.comp_bijective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.comp_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L382-L383","name":"Equiv.bijective_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.bijective_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L378-L379","name":"Equiv.comp_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.comp_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L374-L375","name":"Equiv.surjective_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.surjective_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L370-L371","name":"Equiv.comp_injective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.comp_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L366-L367","name":"Equiv.injective_comp","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.injective_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L363-L363","name":"Equiv.rightInverse_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.rightInverse_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L360-L360","name":"Equiv.leftInverse_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.leftInverse_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L356-L357","name":"Equiv.trans_assoc","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L353-L353","name":"Equiv.self_trans_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.self_trans_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L350-L350","name":"Equiv.symm_trans_self","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_trans_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L347-L347","name":"Equiv.refl_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.refl_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L344-L344","name":"Equiv.refl_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.refl_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L341-L341","name":"Equiv.trans_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L338-L338","name":"Equiv.symm_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L334-L335","name":"Equiv.eq_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.eq_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L330-L331","name":"Equiv.symm_apply_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_apply_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L326-L327","name":"Equiv.cast_eq_iff_heq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast_eq_iff_heq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L321-L323","name":"Equiv.cast_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L318-L318","name":"Equiv.cast_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L315-L315","name":"Equiv.cast_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L312-L312","name":"Equiv.cast_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L307-L309","name":"Equiv.apply_eq_iff_eq_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.apply_eq_iff_eq_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L304-L304","name":"Equiv.apply_eq_iff_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.apply_eq_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L301-L301","name":"Equiv.symm_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L295-L296","name":"Equiv.symm_trans_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L292-L292","name":"Equiv.self_comp_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.self_comp_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L289-L289","name":"Equiv.symm_comp_self","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_comp_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L286-L286","name":"Equiv.symm_apply_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L283-L283","name":"Equiv.apply_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.apply_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L280-L280","name":"Equiv.trans_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L275-L275","name":"Equiv.coe_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L272-L272","name":"Equiv.refl_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L266-L267","name":"Equiv.Perm.coe_subsingleton","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.coe_subsingleton","doc":"This cannot be a `simp` lemmas as it incorrectly matches against `e : α ≃ synonym α`, when\n`synonym α` is semireducible. This makes a mess of `Multiplicative.ofAdd` etc. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L261-L261","name":"Equiv.coe_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L258-L258","name":"Equiv.coe_fn_symm_mk","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_fn_symm_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L254-L255","name":"Equiv.cast","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.cast","doc":"Equivalence between equal types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L250-L250","name":"Equiv.unique","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.unique","doc":"If `α ≃ β` and `β` is a singleton type, then so is `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L246-L246","name":"Equiv.inhabited","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.inhabited","doc":"If `α ≃ β` and `β` is inhabited, then so is `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L242-L242","name":"Equiv.nonempty","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L239-L239","name":"Equiv.nonempty_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.nonempty_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L235-L236","name":"Equiv.decidableEq","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.decidableEq","doc":"Transfer `DecidableEq` across an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L230-L231","name":"Equiv.Perm.subsingleton_eq_refl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.subsingleton_eq_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L227-L228","name":"Equiv.permUnique","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.permUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L224-L225","name":"Equiv.equiv_subsingleton_dom","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equiv_subsingleton_dom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L221-L222","name":"Equiv.equiv_subsingleton_cod","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.equiv_subsingleton_cod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L217-L218","name":"Equiv.subsingleton_congr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.subsingleton_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L213-L214","name":"Equiv.subsingleton.symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.subsingleton.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L209-L210","name":"Equiv.subsingleton","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L206-L206","name":"Equiv.bijective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L203-L203","name":"Equiv.surjective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L200-L200","name":"Equiv.injective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L197-L197","name":"Equiv.invFun_as_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.invFun_as_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L195-L195","name":"Equiv.toFun_as_coe_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun_as_coe_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L188-L188","name":"Equiv.toFun_as_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun_as_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L183-L184","name":"Equiv.instTransSortSortSortEquivEquivEquiv","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.instTransSortSortSortEquivEquivEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L182-L182","name":"Equiv.instTransSortSortSortEquivEquivEquiv_trans","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.instTransSortSortSortEquivEquivEquiv_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L176-L177","name":"Equiv.trans","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans","doc":"Composition of equivalences `e₁ : α ≃ β` and `e₂ : β ≃ γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L172-L172","name":"Equiv.right_inv'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.right_inv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L171-L171","name":"Equiv.left_inv'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.left_inv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L162-L162","name":"Equiv.Simps.symm_apply","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Simps.symm_apply","doc":"See Note [custom simps projection] "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L156-L156","name":"Equiv.symm","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm","doc":"Inverse of an equivalence `e : α ≃ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L152-L152","name":"Equiv.inhabited'","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.inhabited'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L149-L149","name":"Equiv.refl","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.refl","doc":"Any type is equivalent to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L145-L145","name":"Equiv.Perm.ext_iff","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L141-L142","name":"Equiv.Perm.congr_fun","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.congr_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L137-L138","name":"Equiv.Perm.congr_arg","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.congr_arg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L134-L134","name":"Equiv.Perm.ext","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L131-L131","name":"Equiv.ext_iff","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L127-L128","name":"Equiv.congr_fun","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.congr_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L123-L124","name":"Equiv.congr_arg","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.congr_arg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L120-L120","name":"Equiv.ext","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L116-L117","name":"Equiv.coe_inj","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L112-L113","name":"Equiv.coe_fn_injective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_fn_injective","doc":"The map `(r ≃ s) → (r → s)` is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L107-L108","name":"Equiv.coe_fn_mk","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.coe_fn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L104-L105","name":"Equiv.instFunLikeEquiv","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.instFunLikeEquiv","doc":"Helper instance when inference gets stuck on following the normal chain\n`EquivLike → EmbeddingLike → FunLike → CoeFun`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L95-L100","name":"Equiv.instEquivLikeEquiv","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.instEquivLikeEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L89-L90","name":"Equiv.Perm","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm","doc":"`Perm α` is the type of bijections from `α` to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L84-L85","name":"instCoeTCEquiv","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Defs.html#instCoeTCEquiv","doc":"Any type satisfying `EquivLike` can be cast into `Equiv` via `EquivLike.toEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L77-L81","name":"EquivLike.toEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#EquivLike.toEquiv","doc":"Turn an element of a type `F` satisfying `EquivLike F α β` into an actual\n`Equiv`. This is declared as the default coercion from `F` to `α ≃ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L72-L72","name":"«term_≃_»","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#«term_≃_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L69-L69","name":"Equiv.right_inv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.right_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L68-L68","name":"Equiv.left_inv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.left_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L67-L67","name":"Equiv.invFun","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.invFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L66-L66","name":"Equiv.toFun","kind":"def","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L65-L65","name":"Equiv.mk","kind":"ctor","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Defs.lean#L65-L69","name":"Equiv","kind":"structure","docLink":"./Mathlib/Logic/Equiv/Defs.html#Equiv","doc":"`α ≃ β` is the type of functions from `α → β` with a two-sided inverse. "}]}