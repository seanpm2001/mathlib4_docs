{"name":"Mathlib.Control.ULift","instances":[{"typeNames":["PLift"],"name":"PLift.instMonadPLift","className":"Monad"},{"typeNames":["PLift","Applicative.toFunctor","PLift","Monad.toApplicative","PLift.instMonadPLift"],"name":"PLift.instLawfulFunctorPLiftToFunctorToApplicativeInstMonadPLift","className":"LawfulFunctor"},{"typeNames":["PLift","Monad.toApplicative","PLift","PLift.instMonadPLift"],"name":"PLift.instLawfulApplicativePLiftToApplicativeInstMonadPLift","className":"LawfulApplicative"},{"typeNames":["PLift","PLift.instMonadPLift"],"name":"PLift.instLawfulMonadPLiftInstMonadPLift","className":"LawfulMonad"},{"typeNames":["ULift"],"name":"ULift.instMonadULift","className":"Monad"},{"typeNames":["ULift","Applicative.toFunctor","ULift","Monad.toApplicative","ULift.instMonadULift"],"name":"ULift.instLawfulFunctorULiftToFunctorToApplicativeInstMonadULift","className":"LawfulFunctor"},{"typeNames":["ULift","Monad.toApplicative","ULift","ULift.instMonadULift"],"name":"ULift.instLawfulApplicativeULiftToApplicativeInstMonadULift","className":"LawfulApplicative"},{"typeNames":["ULift","ULift.instMonadULift"],"name":"ULift.instLawfulMonadULiftInstMonadULift","className":"LawfulMonad"}],"imports":["Init","Mathlib.Mathport.Rename"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L160-L161","name":"ULift.rec.constant","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#ULift.rec.constant","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L153-L157","name":"ULift.instLawfulMonadULiftInstMonadULift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#ULift.instLawfulMonadULiftInstMonadULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L145-L151","name":"ULift.instLawfulApplicativeULiftToApplicativeInstMonadULift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#ULift.instLawfulApplicativeULiftToApplicativeInstMonadULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L140-L143","name":"ULift.instLawfulFunctorULiftToFunctorToApplicativeInstMonadULift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#ULift.instLawfulFunctorULiftToFunctorToApplicativeInstMonadULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L134-L138","name":"ULift.instMonadULift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#ULift.instMonadULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L130-L131","name":"ULift.bind_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#ULift.bind_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L125-L126","name":"ULift.bind","kind":"def","docLink":"./Mathlib/Control/ULift.html#ULift.bind","doc":"Monadic bind. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L120-L121","name":"ULift.seq_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#ULift.seq_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L115-L116","name":"ULift.seq","kind":"def","docLink":"./Mathlib/Control/ULift.html#ULift.seq","doc":"Applicative sequencing. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L110-L111","name":"ULift.pure","kind":"def","docLink":"./Mathlib/Control/ULift.html#ULift.pure","doc":"Embedding of pure values. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L104-L105","name":"ULift.map_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#ULift.map_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L99-L100","name":"ULift.map","kind":"def","docLink":"./Mathlib/Control/ULift.html#ULift.map","doc":"Functorial action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L88-L89","name":"PLift.rec.constant","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#PLift.rec.constant","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L81-L85","name":"PLift.instLawfulMonadPLiftInstMonadPLift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#PLift.instLawfulMonadPLiftInstMonadPLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L73-L79","name":"PLift.instLawfulApplicativePLiftToApplicativeInstMonadPLift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#PLift.instLawfulApplicativePLiftToApplicativeInstMonadPLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L68-L71","name":"PLift.instLawfulFunctorPLiftToFunctorToApplicativeInstMonadPLift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#PLift.instLawfulFunctorPLiftToFunctorToApplicativeInstMonadPLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L62-L66","name":"PLift.instMonadPLift","kind":"instance","docLink":"./Mathlib/Control/ULift.html#PLift.instMonadPLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L58-L59","name":"PLift.bind_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#PLift.bind_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L53-L54","name":"PLift.bind","kind":"def","docLink":"./Mathlib/Control/ULift.html#PLift.bind","doc":"Monadic bind. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L48-L49","name":"PLift.seq_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#PLift.seq_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L43-L44","name":"PLift.seq","kind":"def","docLink":"./Mathlib/Control/ULift.html#PLift.seq","doc":"Applicative sequencing. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L38-L39","name":"PLift.pure","kind":"def","docLink":"./Mathlib/Control/ULift.html#PLift.pure","doc":"Embedding of pure values. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L32-L33","name":"PLift.map_up","kind":"theorem","docLink":"./Mathlib/Control/ULift.html#PLift.map_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULift.lean#L27-L28","name":"PLift.map","kind":"def","docLink":"./Mathlib/Control/ULift.html#PLift.map","doc":"Functorial action. "}]}