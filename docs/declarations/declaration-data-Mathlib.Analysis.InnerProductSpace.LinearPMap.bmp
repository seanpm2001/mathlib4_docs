{"name":"Mathlib.Analysis.InnerProductSpace.LinearPMap","instances":[],"imports":["Init","Mathlib.Analysis.InnerProductSpace.Adjoint","Mathlib.Topology.Algebra.Module.LinearPMap","Mathlib.Topology.Algebra.Module.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L236-L245","name":"ContinuousLinearMap.toPMap_adjoint_eq_adjoint_toPMap_of_dense","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#ContinuousLinearMap.toPMap_adjoint_eq_adjoint_toPMap_of_dense","doc":"Restricting `A` to a dense submodule and taking the `LinearPMap.adjoint` is the same\nas taking the `continuous_linear_map.adjoint` interpreted as a `linear_pmap`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L217-L223","name":"LinearPMap.IsFormalAdjoint.le_adjoint","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.IsFormalAdjoint.le_adjoint","doc":"The adjoint is maximal in the sense that it contains every formal adjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L212-L213","name":"LinearPMap.adjoint_isFormalAdjoint","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjoint_isFormalAdjoint","doc":"The fundamental property of the adjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L206-L208","name":"LinearPMap.adjoint_apply_eq","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjoint_apply_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L201-L203","name":"LinearPMap.adjoint_apply_of_dense","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjoint_apply_of_dense","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L196-L198","name":"LinearPMap.adjoint_apply_of_not_dense","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjoint_apply_of_not_dense","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L186-L193","name":"LinearPMap.mem_adjoint_domain_of_exists","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.mem_adjoint_domain_of_exists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L180-L181","name":"LinearPMap.mem_adjoint_domain_iff","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.mem_adjoint_domain_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L178-L178","name":"LinearPMap.¬´term_‚Ä†¬ª","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.¬´term_‚Ä†¬ª","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L173-L175","name":"LinearPMap.adjoint","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjoint","doc":"The adjoint operator as a partially defined linear operator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L165-L167","name":"LinearPMap.adjointAux_unique","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointAux_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L155-L162","name":"LinearPMap.adjointAux_inner","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointAux_inner","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L134-L152","name":"LinearPMap.adjointAux","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointAux","doc":"The adjoint as a linear map from its domain to `E`.\n\nThis is an auxiliary definition needed to define the adjoint operator as a `LinearPMap` without\nthe assumption that `T.domain` is dense. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L123-L125","name":"LinearPMap.adjointDomainMkClmExtend_apply","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointDomainMkClmExtend_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L117-L119","name":"LinearPMap.adjointDomainMkClmExtend","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointDomainMkClmExtend","doc":"The unique continuous extension of the operator `adjointDomainMkClm` to `E`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L107-L109","name":"LinearPMap.adjointDomainMkClm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointDomainMkClm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L103-L104","name":"LinearPMap.adjointDomainMkClm","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointDomainMkClm","doc":"The operator `Œª x, ‚ü™y, T x‚ü´` considered as a continuous linear operator from `T.adjointDomain`\nto `ùïú`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L90-L98","name":"LinearPMap.adjointDomain","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.adjointDomain","doc":"The domain of the adjoint operator.\n\nThis definition is needed to construct the adjoint operator and the preferred version to use is\n`T.adjoint.domain` instead of `T.adjointDomain`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L79-L81","name":"LinearPMap.IsFormalAdjoint.symm","kind":"theorem","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.IsFormalAdjoint.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/InnerProductSpace/LinearPMap.lean#L73-L74","name":"LinearPMap.IsFormalAdjoint","kind":"def","docLink":"./Mathlib/Analysis/InnerProductSpace/LinearPMap.html#LinearPMap.IsFormalAdjoint","doc":"An operator `T` is a formal adjoint of `S` if for all `x` in the domain of `T` and `y` in the\ndomain of `S`, we have that `‚ü™T x, y‚ü´ = ‚ü™x, S y‚ü´`. "}]}