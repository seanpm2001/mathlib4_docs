{"name":"Mathlib.Tactic.NormNum.NatFib","instances":[],"imports":["Init","Mathlib.Data.Nat.Fib","Mathlib.Tactic.NormNum"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L106-L112","name":"Mathlib.Meta.NormNum.evalNatFib","kind":"def","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.evalNatFib","doc":"Evaluates the `Nat.fib` function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L101-L102","name":"Mathlib.Meta.NormNum.isNat_fib","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isNat_fib","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L80-L99","name":"Mathlib.Meta.NormNum.proveNatFib","kind":"def","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.proveNatFib","doc":"Given the natural number literal `ex`, returns `Nat.fib ex` as a natural number literal\nand an equality proof. Panics if `ex` isn't a natural number literal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L74-L76","name":"Mathlib.Meta.NormNum.isFibAux_two_mul_add_one_done","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_two_mul_add_one_done","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L70-L72","name":"Mathlib.Meta.NormNum.isFibAux_two_mul_done","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_two_mul_done","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L42-L68","name":"Mathlib.Meta.NormNum.proveNatFibAux","kind":"opaque","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.proveNatFibAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L36-L40","name":"Mathlib.Meta.NormNum.isFibAux_two_mul_add_one","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_two_mul_add_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L30-L34","name":"Mathlib.Meta.NormNum.isFibAux_two_mul","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_two_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L27-L28","name":"Mathlib.Meta.NormNum.isFibAux_one","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L24-L25","name":"Mathlib.Meta.NormNum.isFibAux_zero","kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.isFibAux_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/NormNum/NatFib.lean#L21-L22","name":"Mathlib.Meta.NormNum.IsFibAux","kind":"def","docLink":"./Mathlib/Tactic/NormNum/NatFib.html#Mathlib.Meta.NormNum.IsFibAux","doc":"Auxiliary definition for `proveFib` extension. "}]}