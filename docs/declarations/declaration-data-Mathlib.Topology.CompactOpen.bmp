{"name":"Mathlib.Topology.CompactOpen","instances":[{"typeNames":["ContinuousMap"],"name":"ContinuousMap.compactOpen","className":"TopologicalSpace"},{"typeNames":["ContinuousMap","ContinuousMap.compactOpen"],"name":"ContinuousMap.instT2SpaceContinuousMapCompactOpen","className":"T2Space"}],"imports":["Init","Mathlib.Topology.ContinuousFunction.Basic","Mathlib.Topology.Homeomorph","Mathlib.Topology.SubsetProperties","Mathlib.Topology.Maps"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L492-L497","name":"QuotientMap.continuous_lift_prod_right","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L478-L489","name":"QuotientMap.continuous_lift_prod_left","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L466-L468","name":"Homeomorph.continuousMapOfUnique_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L461-L462","name":"Homeomorph.continuousMapOfUnique_apply","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L447-L457","name":"Homeomorph.continuousMapOfUnique","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique","doc":"If `α` has a single element, then `β` is homeomorphic to `C(α, β)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L441-L443","name":"Homeomorph.curry","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.curry","doc":"Currying as a homeomorphism between the function spaces `C(α × β, γ)` and `C(α, C(β, γ))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L422-L423","name":"ContinuousMap.continuous_const'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_const'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L418-L419","name":"ContinuousMap.coe_const'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coe_const'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L413-L414","name":"ContinuousMap.const'","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.const'","doc":"The family of constant maps: `β → C(α, β)` as a continuous map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L405-L409","name":"ContinuousMap.continuous_uncurry","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry","doc":"The uncurrying process is a continuous map between function spaces. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L400-L401","name":"ContinuousMap.uncurry","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry","doc":"The uncurried form of a continuous map `α → C(β, γ)` as a continuous map `α × β → γ` (if `β` is\nlocally compact). If `α` is also locally compact, then this is a homeomorphism between the two\nfunction spaces, see `Homeomorph.curry`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L399-L399","name":"ContinuousMap.uncurry_apply","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L391-L393","name":"ContinuousMap.continuous_uncurry_of_continuous","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry_of_continuous","doc":"The uncurried form of a continuous map `α → C(β, γ)` is a continuous map `α × β → γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L382-L387","name":"ContinuousMap.continuous_curry","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry","doc":"The currying process is a continuous map between function spaces. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L377-L378","name":"ContinuousMap.curry_apply","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L372-L373","name":"ContinuousMap.curry","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry","doc":"The curried form of a continuous map `α × β → γ` as a continuous map `α → C(β, γ)`.\nIf `a × β` is locally compact, this is continuous. If `α` and `β` are both locally\ncompact, then this is a homeomorphism, see `Homeomorph.curry`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L364-L366","name":"ContinuousMap.continuous_of_continuous_uncurry","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_of_continuous_uncurry","doc":"To show continuity of a map `α → C(β, γ)`, it suffices to show that its uncurried form\n`α × β → γ` is continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L357-L359","name":"ContinuousMap.continuous_curry'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry'","doc":"If a map `α × β → γ` is continuous, then its curried form `α → C(β, γ)` is continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L351-L352","name":"ContinuousMap.curry'","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry'","doc":"Auxiliary definition, see `ContinuousMap.curry` and `Homeomorph.curry`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L329-L343","name":"ContinuousMap.continuous_coev","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L324-L325","name":"ContinuousMap.image_coev","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.image_coev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L318-L319","name":"ContinuousMap.coev","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev","doc":"The coevaluation map `β → C(α, β × α)` sending a point `x : β` to the continuous function\non `α` sending `y` to `(x, y)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L277-L307","name":"ContinuousMap.exists_tendsto_compactOpen_iff_forall","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.exists_tendsto_compactOpen_iff_forall","doc":"A family `F` of functions in `C(α, β)` converges in the compact-open topology, if and only if\nit converges in the compact-open topology on each compact subset of `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L268-L272","name":"ContinuousMap.tendsto_compactOpen_iff_forall","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_iff_forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L262-L265","name":"ContinuousMap.tendsto_compactOpen_restrict","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_restrict","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L256-L259","name":"ContinuousMap.nhds_compactOpen_eq_sInf_nhds_induced","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen_eq_sInf_nhds_induced","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L251-L253","name":"ContinuousMap.continuous_restrict","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_restrict","doc":"For any subset `s` of `α`, the restriction of continuous functions to `s` is continuous as a\nfunction from `C(α, β)` to `C(s, β)` with their respective compact-open topologies. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L231-L246","name":"ContinuousMap.compactOpen_eq_sInf_induced","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq_sInf_induced","doc":"The compact-open topology on `C(α, β)` is equal to the infimum of the compact-open topologies\non `C(s, β)` for `s` a compact subset of `α`.  The key point of the proof is that the union of the\ncompact subsets of `α` is equal to the union of compact subsets of the compact subsets of `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L216-L225","name":"ContinuousMap.compactOpen_le_induced","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_le_induced","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L198-L210","name":"ContinuousMap.instT2SpaceContinuousMapCompactOpen","kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT2SpaceContinuousMapCompactOpen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L194-L195","name":"ContinuousMap.continuous_coe'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coe'","doc":"See also `ContinuousMap.continuous_coe` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L188-L190","name":"ContinuousMap.continuous_eval_const'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval_const'","doc":"See also `ContinuousMap.continuous_eval_const` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L165-L184","name":"ContinuousMap.continuous_eval'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval'","doc":"The evaluation map `C(α, β) × α → β` is continuous if `α` is locally compact.\n\nSee also `ContinuousMap.continuous_eval` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L152-L155","name":"ContinuousMap.continuous.comp'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous.comp'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L130-L149","name":"ContinuousMap.continuous_comp'","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp'","doc":"Composition is a continuous map from `C(α, β) × C(β, γ)` to `C(α, γ)`, provided that `β` is\nlocally compact. This is Prop. 9 of Chap. X, §3, №. 4 of Bourbaki's *Topologie Générale*. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L122-L125","name":"ContinuousMap.continuous_comp_left","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp_left","doc":"C(-, γ) is a functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L107-L109","name":"ContinuousMap.continuous_comp","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp","doc":"C(α, -) is a functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L90-L92","name":"ContinuousMap.isOpen_gen","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isOpen_gen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L85-L87","name":"ContinuousMap.compactOpen","kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L80-L81","name":"ContinuousMap.gen_empty_right","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.gen_empty_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L75-L77","name":"ContinuousMap.gen_union","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.gen_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L69-L71","name":"ContinuousMap.gen_inter","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.gen_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L64-L65","name":"ContinuousMap.gen_univ","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.gen_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L59-L60","name":"ContinuousMap.gen_empty","kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.gen_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/CompactOpen.lean#L54-L55","name":"ContinuousMap.CompactOpen.gen","kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.CompactOpen.gen","doc":"A generating set for the compact-open topology (when `s` is compact and `u` is open). "}]}