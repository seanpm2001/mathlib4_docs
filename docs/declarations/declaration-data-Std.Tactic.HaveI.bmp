{"name":"Std.Tactic.HaveI","instances":[],"imports":["Init","Lean.Elab.ElabRules"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/HaveI.lean#L63-L63","name":"Std.Tactic.tacticLetI_","kind":"def","docLink":"./Std/Tactic/HaveI.html#Std.Tactic.tacticLetI_","doc":"`letI` behaves like `let`, but inlines the value instead of producing a `let_fun` term. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/HaveI.lean#L61-L61","name":"Std.Tactic.tacticHaveI_","kind":"def","docLink":"./Std/Tactic/HaveI.html#Std.Tactic.tacticHaveI_","doc":"`haveI` behaves like `have`, but inlines the value instead of producing a `let_fun` term. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/HaveI.lean#L23-L24","name":"Std.Tactic.letI","kind":"def","docLink":"./Std/Tactic/HaveI.html#Std.Tactic.letI","doc":"`letI` behaves like `let`, but inlines the value instead of producing a `let_fun` term. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/HaveI.lean#L20-L21","name":"Std.Tactic.haveI","kind":"def","docLink":"./Std/Tactic/HaveI.html#Std.Tactic.haveI","doc":"`haveI` behaves like `have`, but inlines the value instead of producing a `let_fun` term. "}]}