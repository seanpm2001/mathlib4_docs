{"name":"Mathlib.Combinatorics.Quiver.Path","instances":[{"typeNames":["Quiver.Path"],"name":"Quiver.Path.instInhabitedPath","className":"Inhabited"}],"imports":["Init","Mathlib.Combinatorics.Quiver.Basic","Mathlib.Logic.Lemmas"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L238-L239","name":"Prefunctor.mapPath_toPath","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath_toPath","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L231-L234","name":"Prefunctor.mapPath_comp","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L225-L227","name":"Prefunctor.mapPath_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L220-L221","name":"Prefunctor.mapPath_nil","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L214-L216","name":"Prefunctor.mapPath","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Prefunctor.mapPath","doc":"The image of a path under a prefunctor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L199-L200","name":"Quiver.Path.toList_inj","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.toList_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L188-L195","name":"Quiver.Path.toList_injective","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.toList_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L180-L183","name":"Quiver.Path.toList_chain_nonempty","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.toList_chain_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L175-L177","name":"Quiver.Path.toList_comp","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.toList_comp","doc":"`Quiver.Path.toList` is a contravariant functor. The inversion comes from `Quiver.Path` and\n`List` having different preferred directions for adding elements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L167-L169","name":"Quiver.Path.toList","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.toList","doc":"Turn a path into a list. The list contains `a` at its head, but not `b` a priori. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L161-L162","name":"Quiver.Path.comp_inj_right","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_inj_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L156-L157","name":"Quiver.Path.comp_inj_left","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_inj_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L151-L152","name":"Quiver.Path.comp_injective_right","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_injective_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L147-L148","name":"Quiver.Path.comp_injective_left","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_injective_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L141-L144","name":"Quiver.Path.comp_inj'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_inj'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L127-L138","name":"Quiver.Path.comp_inj","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L122-L124","name":"Quiver.Path.length_comp","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L115-L118","name":"Quiver.Path.comp_assoc","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L109-L111","name":"Quiver.Path.nil_comp","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.nil_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L104-L105","name":"Quiver.Path.comp_nil","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L98-L100","name":"Quiver.Path.comp_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L92-L94","name":"Quiver.Path.comp","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp","doc":"Composition of paths. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L85-L88","name":"Quiver.Path.eq_of_length_zero","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.eq_of_length_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L81-L82","name":"Quiver.Path.length_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L76-L77","name":"Quiver.Path.length_nil","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L72-L73","name":"Quiver.Path.instInhabitedPath","kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.instInhabitedPath","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L67-L69","name":"Quiver.Path.length","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length","doc":"The length of a path is the number of arrows it uses. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L62-L63","name":"Quiver.Path.hom_heq_of_cons_eq_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.hom_heq_of_cons_eq_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L58-L59","name":"Quiver.Path.heq_of_cons_eq_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.heq_of_cons_eq_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L54-L55","name":"Quiver.Path.obj_eq_of_cons_eq_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.obj_eq_of_cons_eq_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L50-L51","name":"Quiver.Path.cons_ne_nil","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.cons_ne_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L46-L47","name":"Quiver.Path.nil_ne_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.nil_ne_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L38-L39","name":"Quiver.Hom.toPath","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath","doc":"An arrow viewed as a path of length one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L31-L31","name":"Quiver.Path.cons","kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L30-L30","name":"Quiver.Path.nil","kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Path.lean#L29-L31","name":"Quiver.Path","kind":"inductive","docLink":"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path","doc":"`Path a b` is the type of paths from `a` to `b` through the arrows of `G`. "}]}