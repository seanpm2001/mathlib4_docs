{"name":"Mathlib.GroupTheory.Congruence","instances":[{"typeNames":["AddCon"],"name":"AddCon.instInhabitedCon","className":"Inhabited"},{"typeNames":["Con"],"name":"Con.instInhabitedCon","className":"Inhabited"},{"typeNames":["AddCon","_builtin_prop"],"name":"AddCon.instFunLikeConForAllProp","className":"FunLike"},{"typeNames":["Con","_builtin_prop"],"name":"Con.instFunLikeConForAllProp","className":"FunLike"},{"typeNames":["Prod","AddCon"],"name":"AddCon.instMembershipSumCon","className":"Membership"},{"typeNames":["Prod","Con"],"name":"Con.instMembershipProdCon","className":"Membership"},{"typeNames":["AddCon.Quotient"],"name":"AddCon.instCoeTCQuotient","className":"CoeTC"},{"typeNames":["Con.Quotient"],"name":"Con.instCoeTCQuotient","className":"CoeTC"},{"typeNames":["Eq","AddCon.Quotient"],"name":"AddCon.instDecidableEqQuotient","className":"Decidable"},{"typeNames":["Eq","Con.Quotient"],"name":"Con.instDecidableEqQuotient","className":"Decidable"},{"typeNames":["AddCon.Quotient"],"name":"AddCon.hasAdd","className":"Add"},{"typeNames":["Con.Quotient"],"name":"Con.hasMul","className":"Mul"},{"typeNames":["AddCon"],"name":"AddCon.instLECon","className":"LE"},{"typeNames":["Con"],"name":"Con.instLECon","className":"LE"},{"typeNames":["AddCon"],"name":"AddCon.instInfSetCon","className":"InfSet"},{"typeNames":["Con"],"name":"Con.instInfSetCon","className":"InfSet"},{"typeNames":["AddCon"],"name":"AddCon.instPartialOrderCon","className":"PartialOrder"},{"typeNames":["Con"],"name":"Con.instPartialOrderCon","className":"PartialOrder"},{"typeNames":["AddCon"],"name":"AddCon.instCompleteLatticeCon","className":"CompleteLattice"},{"typeNames":["Con"],"name":"Con.instCompleteLatticeCon","className":"CompleteLattice"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd"],"name":"AddCon.addZeroClass","className":"AddZeroClass"},{"typeNames":["Con.Quotient","MulOneClass.toMul"],"name":"Con.mulOneClass","className":"MulOneClass"},{"typeNames":["AddCon","AddZeroClass.toAdd","AddSubmonoid","Prod","Prod.instAddZeroClassSum"],"name":"AddCon.toAddSubmonoid","className":"Coe"},{"typeNames":["Con","MulOneClass.toMul","Submonoid","Prod","Prod.instMulOneClassProd"],"name":"Con.toSubmonoid","className":"Coe"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd"],"name":"AddCon.Quotient.inhabited","className":"Inhabited"},{"typeNames":["Con.Quotient","MulOneClass.toMul"],"name":"Con.Quotient.inhabited","className":"Inhabited"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd"],"name":"AddCon.instZeroQuotientToAdd","className":"Zero"},{"typeNames":["Con.Quotient","MulOneClass.toMul"],"name":"Con.instOneQuotientToMul","className":"One"},{"typeNames":["Nat","AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass"],"name":"AddCon.Quotient.nsmul","className":"SMul"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","Nat"],"name":"Con.instPowQuotientToMulToMulOneClassNat","className":"Pow"},{"typeNames":["AddCon.Quotient","AddSemigroup.toAdd"],"name":"AddCon.addSemigroup","className":"AddSemigroup"},{"typeNames":["Con.Quotient","Semigroup.toMul"],"name":"Con.semigroup","className":"Semigroup"},{"typeNames":["AddCon.Quotient","AddSemigroup.toAdd","AddCommSemigroup.toAddSemigroup"],"name":"AddCon.addCommSemigroup","className":"AddCommSemigroup"},{"typeNames":["Con.Quotient","Semigroup.toMul","CommSemigroup.toSemigroup"],"name":"Con.commSemigroup","className":"CommSemigroup"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass"],"name":"AddCon.addMonoid","className":"AddMonoid"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass"],"name":"Con.monoid","className":"Monoid"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","AddCommMonoid.toAddMonoid"],"name":"AddCon.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","CommMonoid.toMonoid"],"name":"Con.commMonoid","className":"CommMonoid"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"AddCon.hasNeg","className":"Neg"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid"],"name":"Con.hasInv","className":"Inv"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"AddCon.hasSub","className":"Sub"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid"],"name":"Con.hasDiv","className":"Div"},{"typeNames":["Int","AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"AddCon.Quotient.zsmul","className":"SMul"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid","Int"],"name":"Con.zpowinst","className":"Pow"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"AddCon.addGroup","className":"AddGroup"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid"],"name":"Con.group","className":"Group"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd"],"name":"AddCon.smulinst","className":"VAdd"},{"typeNames":["Con.Quotient","MulOneClass.toMul"],"name":"Con.smulinst","className":"SMul"},{"typeNames":["AddCon.Quotient","AddZeroClass.toAdd"],"name":"AddCon.addAction","className":"AddAction"},{"typeNames":["Con.Quotient","MulOneClass.toMul"],"name":"Con.mulAction","className":"MulAction"},{"typeNames":["Con.Quotient","MulOneClass.toMul","Monoid.toMulOneClass","Con.monoid"],"name":"Con.mulDistribMulAction","className":"MulDistribMulAction"}],"imports":["Init","Mathlib.Algebra.Group.Prod","Mathlib.Algebra.Hom.Equiv.Basic","Mathlib.Data.Setoid.Basic","Mathlib.GroupTheory.Submonoid.Operations"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1367-L1372","name":"Con.mulDistribMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mulDistribMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1358-L1363","name":"Con.mulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1357-L1357","name":"AddCon.addAction.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addAction.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1357-L1357","name":"AddCon.addAction.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addAction.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1357-L1357","name":"AddCon.addAction","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1351-L1353","name":"Con.coe_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.coe_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1350-L1350","name":"AddCon.coe_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.coe_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1345-L1346","name":"Con.smulinst","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.smulinst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1344-L1344","name":"AddCon.smulinst","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.smulinst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1344-L1344","name":"AddCon.smulinst.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.smulinst.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1332-L1336","name":"Con.induction_on_units","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.induction_on_units","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1331-L1331","name":"AddCon.induction_on_addUnits","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.induction_on_addUnits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1323-L1327","name":"Con.liftOnUnits_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.liftOnUnits_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1322-L1322","name":"AddCon.liftOnAddUnits_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1297-L1312","name":"Con.liftOnUnits","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.liftOnUnits","doc":"In order to define a function `(Con.Quotient c)ˣ → α` on the units of `Con.Quotient c`,\nwhere `c : Con M` is a multiplicative congruence on a monoid, it suffices to define a function `f`\nthat takes elements `x y : M` with proofs of `c (x * y) 1` and `c (y * x) 1`, and returns an element\nof `α` provided that `f x y _ _ = f x' y' _ _` whenever `c x x'` and `c y y'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits.proof_5","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits","doc":"In order to define a function `(Con.Quotient c)ˣ → α` on the units of `Con.Quotient c`,\nwhere `c : Con M` is a multiplicative congruence on a monoid, it suffices to define a function `f`\nthat takes elements `x y : M` with proofs of `c (x * y) 1` and `c (y * x) 1`, and returns an element\nof `α` provided that `f x y _ _ = f x' y' _ _` whenever `c x x'` and `c y y'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1296-L1296","name":"AddCon.liftOnAddUnits.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOnAddUnits.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1279-L1282","name":"Con.group","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.group","doc":"The quotient of a group by a congruence relation is a group. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_5","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_6","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup","doc":"The quotient of an `AddGroup` by an additive congruence relation is\nan `AddGroup`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_7","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_7","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1277-L1278","name":"AddCon.addGroup.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addGroup.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1272-L1273","name":"Con.zpowinst","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.zpowinst","doc":"The integer power induced on the quotient by a congruence relation on a type with a\ndivision. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1264-L1266","name":"AddCon.Quotient.zsmul","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.Quotient.zsmul","doc":"The integer scaling induced on the quotient by a congruence relation on a type with a\nsubtraction. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1257-L1258","name":"Con.hasDiv","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.hasDiv","doc":"The division induced on the quotient by a congruence relation on a type with a\ndivision. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1255-L1256","name":"AddCon.hasSub","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasSub","doc":"The subtraction induced on the quotient by an additive congruence relation on a type\nwith a subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1255-L1256","name":"AddCon.hasSub.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasSub.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1248-L1249","name":"Con.hasInv","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.hasInv","doc":"The inversion induced on the quotient by a congruence relation on a type with a\ninversion. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1246-L1247","name":"AddCon.hasNeg","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasNeg","doc":"The negation induced on the quotient by an additive congruence relation on a type\nwith a negation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1246-L1247","name":"AddCon.hasNeg.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasNeg.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1238-L1240","name":"Con.zpow","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.zpow","doc":"Multiplicative congruence relations preserve integer powers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1237-L1237","name":"AddCon.zsmul.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.zsmul.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1237-L1237","name":"AddCon.zsmul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.zsmul","doc":"Additive congruence relations preserve integer scaling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1231-L1232","name":"Con.div","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.div","doc":"Multiplicative congruence relations preserve division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1230-L1230","name":"AddCon.sub","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sub","doc":"Additive congruence relations preserve subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1224-L1225","name":"Con.inv","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.inv","doc":"Multiplicative congruence relations preserve inversion. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1223-L1223","name":"AddCon.neg","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.neg","doc":"Additive congruence relations preserve negation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1210-L1212","name":"Con.commMonoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.commMonoid","doc":"The quotient of a `CommMonoid` by a congruence relation is a `CommMonoid`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1208-L1209","name":"AddCon.addCommMonoid.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1208-L1209","name":"AddCon.addCommMonoid.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1208-L1209","name":"AddCon.addCommMonoid.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommMonoid.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1208-L1209","name":"AddCon.addCommMonoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommMonoid","doc":"The quotient of an `AddCommMonoid` by an additive congruence\nrelation is an `AddCommMonoid`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1208-L1209","name":"AddCon.addCommMonoid.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1202-L1203","name":"Con.monoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.monoid","doc":"The quotient of a monoid by a congruence relation is a monoid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1200-L1201","name":"AddCon.addMonoid.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addMonoid.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1200-L1201","name":"AddCon.addMonoid.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1200-L1201","name":"AddCon.addMonoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addMonoid","doc":"The quotient of an `AddMonoid` by an additive congruence relation is\nan `AddMonoid`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1200-L1201","name":"AddCon.addMonoid.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1200-L1201","name":"AddCon.addMonoid.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1194-L1195","name":"Con.commSemigroup","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.commSemigroup","doc":"The quotient of a commutative semigroup by a congruence relation is a semigroup. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1192-L1193","name":"AddCon.addCommSemigroup.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommSemigroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1192-L1193","name":"AddCon.addCommSemigroup.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommSemigroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1192-L1193","name":"AddCon.addCommSemigroup","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addCommSemigroup","doc":"The quotient of an `AddCommSemigroup` by an additive congruence relation is\nan `AddSemigroup`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1186-L1187","name":"Con.semigroup","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.semigroup","doc":"The quotient of a semigroup by a congruence relation is a semigroup. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1184-L1185","name":"AddCon.addSemigroup","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSemigroup","doc":"The quotient of an `AddSemigroup` by an additive congruence relation is\nan `AddSemigroup`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1184-L1185","name":"AddCon.addSemigroup.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSemigroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1184-L1185","name":"AddCon.addSemigroup.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSemigroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1180-L1181","name":"Con.instPowQuotientToMulToMulOneClassNat","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instPowQuotientToMulToMulOneClassNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1175-L1176","name":"AddCon.Quotient.nsmul","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.Quotient.nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1169-L1171","name":"Con.smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1168-L1168","name":"AddCon.vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1160-L1165","name":"Con.instOneQuotientToMul","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instOneQuotientToMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1159-L1159","name":"AddCon.instZeroQuotientToAdd","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instZeroQuotientToAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1152-L1155","name":"Con.pow","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.pow","doc":"Multiplicative congruence relations preserve natural powers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1151-L1151","name":"AddCon.nsmul.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.nsmul.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1151-L1151","name":"AddCon.nsmul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.nsmul","doc":"Additive congruence relations preserve natural scaling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1136-L1142","name":"Con.quotientQuotientEquivQuotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientQuotientEquivQuotient","doc":"The third isomorphism theorem for monoids. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1135-L1135","name":"AddCon.quotientQuotientEquivQuotient.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientQuotientEquivQuotient.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1135-L1135","name":"AddCon.quotientQuotientEquivQuotient.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientQuotientEquivQuotient.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1135-L1135","name":"AddCon.quotientQuotientEquivQuotient.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientQuotientEquivQuotient.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1135-L1135","name":"AddCon.quotientQuotientEquivQuotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientQuotientEquivQuotient","doc":"The third isomorphism theorem for `AddMonoid`s."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1128-L1130","name":"Con.comapQuotientEquiv","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.comapQuotientEquiv","doc":"The second isomorphism theorem for monoids. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1127-L1127","name":"AddCon.comapQuotientEquiv","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.comapQuotientEquiv","doc":"The second isomorphism theorem for `AddMonoid`s."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1120-L1122","name":"Con.quotientKerEquivOfSurjective","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientKerEquivOfSurjective","doc":"The first isomorphism theorem for Monoids in the case of a surjective homomorphism.\n\nFor a `computable` version, see `Con.quotientKerEquivOfRightInverse`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1115-L1119","name":"AddCon.quotientKerEquivOfSurjective.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfSurjective.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1115-L1119","name":"AddCon.quotientKerEquivOfSurjective","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfSurjective","doc":"The first isomorphism theorem for `AddMonoid`s in the case of a surjective\nhomomorphism.\n\nFor a `computable` version, see `AddCon.quotientKerEquivOfRightInverse`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1115-L1119","name":"AddCon.quotientKerEquivOfSurjective.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfSurjective.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1097-L1103","name":"Con.quotientKerEquivOfRightInverse","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientKerEquivOfRightInverse","doc":"The first isomorphism theorem for monoids in the case of a homomorphism with right inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1094","name":"Con.quotientKerEquivOfRightInverse_symm_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientKerEquivOfRightInverse_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1094","name":"AddCon.quotientKerEquivOfRightInverse_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1094","name":"Con.quotientKerEquivOfRightInverse_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientKerEquivOfRightInverse_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1094","name":"AddCon.quotientKerEquivOfRightInverse_symm_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1096","name":"AddCon.quotientKerEquivOfRightInverse.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1096","name":"AddCon.quotientKerEquivOfRightInverse.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1096","name":"AddCon.quotientKerEquivOfRightInverse.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1094-L1096","name":"AddCon.quotientKerEquivOfRightInverse","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivOfRightInverse","doc":"The first isomorphism theorem for `AddMonoid`s in the case of a homomorphism\nwith right inverse."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1079-L1089","name":"Con.quotientKerEquivRange","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quotientKerEquivRange","doc":"The first isomorphism theorem for monoids. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange","doc":"The first isomorphism theorem for `AddMonoid`s."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1078-L1078","name":"AddCon.quotientKerEquivRange.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quotientKerEquivRange.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1069-L1071","name":"Con.map_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.map_apply","doc":"Given congruence relations `c, d` on a monoid such that `d` contains `c`, the definition of\nthe homomorphism from the quotient by `c` to the quotient by `d` induced by `d`'s quotient\nmap. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1066-L1068","name":"AddCon.map_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.map_apply","doc":"Given additive congruence relations `c, d` on an `AddMonoid` such that `d`\ncontains `c`, the definition of the homomorphism from the quotient by `c` to the quotient by `d`\ninduced by `d`'s quotient map."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1058-L1059","name":"Con.map","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.map","doc":"Given congruence relations `c, d` on a monoid such that `d` contains `c`, `d`'s quotient\nmap induces a homomorphism from the quotient by `c` to the quotient by `d`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1055-L1057","name":"AddCon.map","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.map","doc":"Given additive congruence relations `c, d` on an `AddMonoid` such that `d`\ncontains `c`, `d`'s quotient map induces a homomorphism from the quotient by `c` to the quotient\nby `d`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1055-L1057","name":"AddCon.map.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.map.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1048-L1049","name":"Con.kerLift_injective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.kerLift_injective","doc":"A monoid homomorphism `f` induces an injective homomorphism on the quotient by `f`'s kernel. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1046-L1047","name":"AddCon.kerLift_injective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.kerLift_injective","doc":"An `AddMonoid` homomorphism `f` induces an injective homomorphism on the quotient\nby `f`'s kernel."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1040-L1041","name":"Con.kerLift_range_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.kerLift_range_eq","doc":"Given a monoid homomorphism `f`, the induced homomorphism on the quotient by `f`'s kernel has\nthe same image as `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1038-L1039","name":"AddCon.kerLift_range_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.kerLift_range_eq","doc":"Given an `AddMonoid` homomorphism `f`, the induced homomorphism\non the quotient by `f`'s kernel has the same image as `f`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1031-L1032","name":"Con.kerLift_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.kerLift_mk","doc":"The diagram described by the universal property for quotients of monoids, when the congruence\nrelation is the kernel of the homomorphism, commutes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1028-L1030","name":"AddCon.kerLift_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.kerLift_mk","doc":"The diagram described by the universal property for quotients\nof `AddMonoid`s, when the additive congruence relation is the kernel of the homomorphism,\ncommutes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1019-L1020","name":"Con.kerLift","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.kerLift","doc":"The homomorphism induced on the quotient of a monoid by the kernel of a monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1017-L1018","name":"AddCon.kerLift.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.kerLift.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1017-L1018","name":"AddCon.kerLift","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.kerLift","doc":"The homomorphism induced on the quotient of an `AddMonoid` by the kernel\nof an `AddMonoid` homomorphism."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1009-L1010","name":"Con.ker_eq_lift_of_injective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ker_eq_lift_of_injective","doc":"Given a monoid homomorphism `f` from `M` to `P`, the kernel of `f` is the unique congruence\nrelation on `M` whose induced map from the quotient of `M` to `P` is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L1006-L1008","name":"AddCon.ker_eq_lift_of_injective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ker_eq_lift_of_injective","doc":"Given an `AddMonoid` homomorphism `f` from `M` to `P`, the kernel of `f`\nis the unique additive congruence relation on `M` whose induced map from the quotient of `M`\nto `P` is injective."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L996-L998","name":"Con.lift_surjective_of_surjective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_surjective_of_surjective","doc":"Surjective monoid homomorphisms constant on a congruence relation `c`'s equivalence classes\ninduce a surjective homomorphism on `c`'s quotient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L994-L995","name":"AddCon.lift_surjective_of_surjective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_surjective_of_surjective","doc":"Surjective `AddMonoid` homomorphisms constant on an additive congruence\nrelation `c`'s equivalence classes induce a surjective homomorphism on `c`'s quotient."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L987-L988","name":"Con.lift_range","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_range","doc":"Given a congruence relation `c` on a monoid and a homomorphism `f` constant on `c`'s\nequivalence classes, `f` has the same image as the homomorphism that `f` induces on the\nquotient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L984-L986","name":"AddCon.lift_range.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_range.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L984-L986","name":"AddCon.lift_range","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_range","doc":"Given an additive congruence relation `c` on an `AddMonoid` and a homomorphism `f`\nconstant on `c`'s equivalence classes, `f` has the same image as the homomorphism that `f` induces\non the quotient."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L973-L977","name":"Con.lift_unique","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_unique","doc":"The uniqueness part of the universal property for quotients of monoids. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L972-L972","name":"AddCon.lift_unique","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_unique","doc":"The uniqueness part of the universal property for quotients of `AddMonoid`s."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L964-L967","name":"Con.lift_funext","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_funext","doc":"Homomorphisms on the quotient of a monoid by a congruence relation are equal if they\nare equal on elements that are coercions from the monoid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L962-L963","name":"AddCon.lift_funext","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_funext","doc":"Homomorphisms on the quotient of an `AddMonoid` by an additive congruence relation\nare equal if they are equal on elements that are coercions from the `AddMonoid`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L954-L956","name":"Con.lift_apply_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_apply_mk'","doc":"Given a homomorphism `f` from the quotient of a monoid by a congruence relation, `f` equals the\nhomomorphism on the quotient induced by `f` composed with the natural map from the monoid to\nthe quotient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L951-L953","name":"AddCon.lift_apply_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_apply_mk'","doc":"Given a homomorphism `f` from the quotient of an `AddMonoid` by an\nadditive congruence relation, `f` equals the homomorphism on the quotient induced by `f` composed\nwith the natural map from the `AddMonoid` to the quotient."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L944-L944","name":"Con.lift_comp_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_comp_mk'","doc":"The diagram describing the universal property for quotients of monoids commutes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L942-L943","name":"AddCon.lift_comp_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_comp_mk'","doc":"The diagram describing the universal property for quotients of\n`AddMonoid`s commutes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L936-L937","name":"Con.lift_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_coe","doc":"The diagram describing the universal property for quotients of monoids commutes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L934-L935","name":"AddCon.lift_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_coe","doc":"The diagram describing the universal property for quotients of\n`AddMonoid`s commutes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L928-L929","name":"Con.lift_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift_mk'","doc":"The diagram describing the universal property for quotients of monoids commutes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L926-L927","name":"AddCon.lift_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift_mk'","doc":"The diagram describing the universal property for quotients of `AddMonoid`s\ncommutes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L913-L919","name":"Con.lift","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.lift","doc":"The homomorphism on the quotient of a monoid by a congruence relation `c` induced by a\nhomomorphism constant on `c`'s equivalence classes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L911-L912","name":"AddCon.lift.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L911-L912","name":"AddCon.lift","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift","doc":"The homomorphism on the quotient of an `AddMonoid` by an additive congruence\nrelation `c` induced by a homomorphism constant on `c`'s equivalence classes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L911-L912","name":"AddCon.lift.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L911-L912","name":"AddCon.lift.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.lift.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L902-L903","name":"Con.comap_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.comap_eq","doc":"Given a monoid homomorphism `f : N → M` and a congruence relation `c` on `M`, the congruence\nrelation induced on `N` by `f` equals the kernel of `c`'s quotient homomorphism composed with\n`f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L899-L901","name":"AddCon.comap_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.comap_eq","doc":"Given an `AddMonoid` homomorphism `f : N → M` and an additive congruence relation\n`c` on `M`, the additive congruence relation induced on `N` by `f` equals the kernel of `c`'s\nquotient homomorphism composed with `f`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L889-L892","name":"Con.ker_apply_eq_preimage","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ker_apply_eq_preimage","doc":"The elements related to `x ∈ M`, `M` a monoid, by the kernel of a monoid homomorphism are\nthose in the preimage of `f(x)` under `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L887-L888","name":"AddCon.ker_apply_eq_preimage","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ker_apply_eq_preimage","doc":"The elements related to `x ∈ M`, `M` an `AddMonoid`, by the kernel of\nan `AddMonoid` homomorphism are those in the preimage of `f(x)` under `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L880-L881","name":"Con.mrange_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mrange_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L878-L878","name":"AddCon.mrange_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mrange_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L873-L874","name":"Con.coe_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.coe_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L872-L872","name":"AddCon.coe_mk'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.coe_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L867-L868","name":"Con.mk'_surjective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mk'_surjective","doc":"The natural homomorphism from a monoid to its quotient by a congruence relation is\nsurjective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L865-L866","name":"AddCon.mk'_surjective","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk'_surjective","doc":"The natural homomorphism from an `AddMonoid` to its quotient by a congruence\nrelation is surjective."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L856-L857","name":"Con.mk'_ker","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mk'_ker","doc":"The kernel of the natural homomorphism from a monoid to its quotient by a congruence\nrelation `c` equals `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L854-L855","name":"AddCon.mk'_ker","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk'_ker","doc":"The kernel of the natural homomorphism from an `AddMonoid` to its\nquotient by an additive congruence relation `c` equals `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L843-L846","name":"Con.mk'","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mk'","doc":"The natural homomorphism from a monoid to its quotient by a congruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L841-L842","name":"AddCon.mk'.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk'.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L841-L842","name":"AddCon.mk'.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk'.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L841-L842","name":"AddCon.mk'","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk'","doc":"The natural homomorphism from an `AddMonoid` to its quotient by an additive\ncongruence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L833-L834","name":"Con.Quotient.inhabited","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.Quotient.inhabited","doc":"There exists an element of the quotient of a monoid by a congruence relation (namely 1). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L831-L832","name":"AddCon.Quotient.inhabited","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.Quotient.inhabited","doc":"There exists an element of the quotient of an `AddMonoid` by a congruence relation\n(namely 0)."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L825-L826","name":"Con.ker_rel","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ker_rel","doc":"The definition of the congruence relation defined by a monoid homomorphism's kernel. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L823-L824","name":"AddCon.ker_rel","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ker_rel","doc":"The definition of the additive congruence relation defined by an\n`AddMonoid` homomorphism's kernel."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L817-L818","name":"Con.ker","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ker","doc":"The kernel of a monoid homomorphism as a congruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L816-L816","name":"AddCon.ker.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ker.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L816-L816","name":"AddCon.ker","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ker","doc":"The kernel of an `AddMonoid` homomorphism as an additive congruence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L810-L811","name":"Con.le_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L809-L809","name":"AddCon.le_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L804-L805","name":"Con.to_submonoid_inj","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.to_submonoid_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L803-L803","name":"AddCon.to_addSubmonoid_inj","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.to_addSubmonoid_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L798-L799","name":"Con.mem_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mem_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L797-L797","name":"AddCon.mem_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mem_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L792-L793","name":"Con.toSubmonoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.toSubmonoid","doc":"Coercion from a congruence relation `c` on a monoid `M` to the submonoid of `M × M` whose\nelements are `(x, y)` such that `x` is related to `y` by `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L789-L791","name":"AddCon.toAddSubmonoid","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.toAddSubmonoid","doc":"Coercion from a congruence relation `c` on an `AddMonoid` `M`\nto the `add_submonoid` of `M × M` whose elements are `(x, y)` such that `x`\nis related to `y` by `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L779-L783","name":"Con.ofSubmonoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ofSubmonoid","doc":"The congruence relation on a monoid `M` from a submonoid of `M × M` for which membership\nis an equivalence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L777-L778","name":"AddCon.ofAddSubmonoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ofAddSubmonoid","doc":"The additive congruence relation on an `AddMonoid` `M` from\nan `add_submonoid` of `M × M` for which membership is an equivalence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L777-L778","name":"AddCon.ofAddSubmonoid.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ofAddSubmonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L765-L769","name":"Con.submonoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.submonoid","doc":"The submonoid of `M × M` defined by a congruence relation on a monoid `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L763-L764","name":"AddCon.addSubmonoid.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSubmonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L763-L764","name":"AddCon.addSubmonoid.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSubmonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L763-L764","name":"AddCon.addSubmonoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addSubmonoid","doc":"The `add_submonoid` of `M × M` defined by an additive congruence\nrelation on an `AddMonoid` `M`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L754-L755","name":"Con.coe_one","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.coe_one","doc":"The 1 of the quotient of a monoid by a congruence relation is the equivalence class of the\nmonoid's 1. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L752-L753","name":"AddCon.coe_zero","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.coe_zero","doc":"The 0 of the quotient of an `AddMonoid` by an additive congruence\nrelation is the equivalence class of the `AddMonoid`'s 0."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L739-L744","name":"Con.mulOneClass","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mulOneClass","doc":"The quotient of a monoid by a congruence relation is a monoid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L737-L738","name":"AddCon.addZeroClass.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addZeroClass.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L737-L738","name":"AddCon.addZeroClass.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addZeroClass.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L737-L738","name":"AddCon.addZeroClass","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addZeroClass","doc":"The quotient of an `AddMonoid` by an additive congruence relation is\nan `AddMonoid`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L693-L724","name":"Con.correspondence","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.correspondence","doc":"Given a congruence relation `c` on a type `M` with a multiplication, the order-preserving\nbijection between the set of congruence relations containing `c` and the congruence relations\non the quotient of `M` by `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_6","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_5","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_8","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_8","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence","doc":"Given an additive congruence relation `c` on a type `M` with an addition,\nthe order-preserving bijection between the set of additive congruence relations containing `c` and\nthe additive congruence relations on the quotient of `M` by `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.match_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.match_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L690-L692","name":"AddCon.correspondence.proof_7","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.correspondence.proof_7","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L677-L679","name":"Con.comap_rel","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.comap_rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L676-L676","name":"AddCon.comap_rel","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.comap_rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L670-L672","name":"Con.comap","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.comap","doc":"Given types with multiplications `M, N` and a congruence relation `c` on `N`, a\nmultiplication-preserving map `f : M → N` induces a congruence relation on `f`'s domain\ndefined by '`x ≈ y` iff `f(x)` is related to `f(y)` by `c`.' "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L667-L669","name":"AddCon.comap","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.comap","doc":"Given types with additions `M, N` and an additive congruence relation `c` on `N`,\nan addition-preserving map `f : M → N` induces an additive congruence relation on `f`'s domain\ndefined by '`x ≈ y` iff `f(x)` is related to `f(y)` by `c`.' "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L667-L669","name":"AddCon.comap.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.comap.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L658-L660","name":"Con.mapOfSurjective_eq_mapGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mapOfSurjective_eq_mapGen","doc":"A specialization of 'the smallest congruence relation containing a congruence relation `c`\nequals `c`'. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L656-L657","name":"AddCon.mapOfSurjective_eq_mapGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mapOfSurjective_eq_mapGen","doc":"A specialization of 'the smallest additive congruence relation containing\nan additive congruence relation `c` equals `c`'."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L644-L650","name":"Con.mapOfSurjective","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mapOfSurjective","doc":"Given a surjective multiplicative-preserving function `f` whose kernel is contained in a\ncongruence relation `c`, the congruence relation on `f`'s codomain defined by '`x ≈ y` iff the\nelements of `f⁻¹(x)` are related to the elements of `f⁻¹(y)` by `c`.' "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L641-L643","name":"AddCon.mapOfSurjective.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mapOfSurjective.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L641-L643","name":"AddCon.mapOfSurjective","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mapOfSurjective","doc":"Given a surjective addition-preserving function `f` whose kernel is contained in\nan additive congruence relation `c`, the additive congruence relation on `f`'s codomain defined\nby '`x ≈ y` iff the elements of `f⁻¹(x)` are related to the elements of `f⁻¹(y)` by `c`.'"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L633-L634","name":"Con.mapGen","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mapGen","doc":"Given a function `f`, the smallest congruence relation containing the binary relation on `f`'s\nimage defined by '`x ≈ y` iff the elements of `f⁻¹(x)` are related to the elements of `f⁻¹(y)`\nby a congruence relation `c`.' "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L630-L632","name":"AddCon.mapGen","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mapGen","doc":"Given a function `f`, the smallest additive congruence relation containing the\nbinary relation on `f`'s image defined by '`x ≈ y` iff the elements of `f⁻¹(x)` are related to the\nelements of `f⁻¹(y)` by an additive congruence relation `c`.'"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L616-L621","name":"Con.gi","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.gi","doc":"There is a Galois insertion of congruence relations on a type with a multiplication `M` into\nbinary relations on `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L614-L615","name":"AddCon.gi.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.gi.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L614-L615","name":"AddCon.gi.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.gi.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L614-L615","name":"AddCon.gi","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.gi","doc":"There is a Galois insertion of additive congruence relations on a type with\nan addition `M` into binary relations on `M`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L614-L615","name":"AddCon.gi.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.gi.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L602-L606","name":"Con.sSup_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sSup_def","doc":"The supremum of a set of congruence relations is the same as the smallest congruence relation\ncontaining the supremum of the set's image under the map to the underlying binary relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L599-L601","name":"AddCon.sSup_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sSup_def","doc":"The supremum of a set of additive congruence relations is the same as the smallest\nadditive congruence relation containing the supremum of the set's image under the map to the\nunderlying binary relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L588-L593","name":"Con.sSup_eq_conGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sSup_eq_conGen","doc":"The supremum of a set of congruence relations `S` equals the smallest congruence relation\ncontaining the binary relation 'there exists `c ∈ S` such that `x` is related to `y` by\n`c`'. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L585-L587","name":"AddCon.sSup_eq_addConGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sSup_eq_addConGen","doc":"The supremum of a set of additive congruence relations `S` equals\nthe smallest additive congruence relation containing the binary relation 'there exists `c ∈ S`\nsuch that `x` is related to `y` by `c`'."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L585-L587","name":"AddCon.sSup_eq_addConGen.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sSup_eq_addConGen.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L578-L578","name":"Con.sup_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sup_def","doc":"The supremum of two congruence relations equals the smallest congruence relation containing\nthe supremum of the underlying binary operations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L576-L577","name":"AddCon.sup_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sup_def","doc":"The supremum of two additive congruence relations equals the smallest additive\ncongruence relation containing the supremum of the underlying binary operations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L567-L570","name":"Con.sup_eq_conGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sup_eq_conGen","doc":"The supremum of congruence relations `c, d` equals the smallest congruence relation containing\nthe binary relation '`x` is related to `y` by `c` or `d`'. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L564-L566","name":"AddCon.sup_eq_addConGen","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sup_eq_addConGen","doc":"The supremum of additive congruence relations `c, d` equals the\nsmallest additive congruence relation containing the binary relation '`x` is related to `y`\nby `c` or `d`'."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L557-L558","name":"Con.conGen_idem","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.conGen_idem","doc":"The map sending a binary relation to the smallest congruence relation in which it is\ncontained is idempotent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L555-L556","name":"AddCon.addConGen_idem","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addConGen_idem","doc":"The map sending a binary relation to the smallest additive\ncongruence relation in which it is contained is idempotent."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L546-L547","name":"Con.conGen_of_con","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.conGen_of_con","doc":"Congruence relations equal the smallest congruence relation in which they are contained. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L544-L545","name":"AddCon.addConGen_of_addCon","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addConGen_of_addCon","doc":"Additive congruence relations equal the smallest\nadditive congruence relation in which they are contained."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L538-L539","name":"Con.conGen_mono","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.conGen_mono","doc":"Given binary relations `r, s` with `r` contained in `s`, the smallest congruence relation\ncontaining `s` contains the smallest congruence relation containing `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L535-L537","name":"AddCon.addConGen_mono","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addConGen_mono","doc":"Given binary relations `r, s` with `r` contained in `s`, the\nsmallest additive congruence relation containing `s` contains the smallest additive congruence\nrelation containing `r`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L528-L529","name":"Con.conGen_le","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.conGen_le","doc":"The smallest congruence relation containing a binary relation `r` is contained in any\ncongruence relation containing `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L526-L527","name":"AddCon.addConGen_le","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addConGen_le","doc":"The smallest additive congruence relation containing a binary\nrelation `r` is contained in any additive congruence relation containing `r`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L510-L520","name":"Con.conGen_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.conGen_eq","doc":"The inductively defined smallest congruence relation containing a binary relation `r` equals\nthe infimum of the set of congruence relations containing `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L507-L509","name":"AddCon.addConGen_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addConGen_eq","doc":"The inductively defined smallest additive congruence relation\ncontaining a binary relation `r` equals the infimum of the set of additive congruence relations\ncontaining `r`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L500-L501","name":"Con.inf_iff_and","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.inf_iff_and","doc":"Definition of the infimum of two congruence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L499-L499","name":"AddCon.inf_iff_and","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.inf_iff_and","doc":"Definition of the infimum of two additive congruence relations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L493-L494","name":"Con.inf_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.inf_def","doc":"The infimum of two congruence relations equals the infimum of the underlying binary\noperations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L491-L492","name":"AddCon.inf_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.inf_def","doc":"The infimum of two additive congruence relations equals the infimum of the\nunderlying binary operations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L473-L487","name":"Con.instCompleteLatticeCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instCompleteLatticeCon","doc":"The complete lattice of congruence relations on a given type with a multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_12","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_12","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_6","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_11","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_11","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_13","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_13","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_5","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_8","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_8","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_7","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_7","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_9","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_9","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon","doc":"The complete lattice of additive congruence relations on a given type with\nan addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L471-L472","name":"AddCon.instCompleteLatticeCon.proof_10","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCompleteLatticeCon.proof_10","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L462-L468","name":"Con.instPartialOrderCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instPartialOrderCon","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L461-L461","name":"AddCon.instPartialOrderCon.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instPartialOrderCon.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L461-L461","name":"AddCon.instPartialOrderCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instPartialOrderCon","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L461-L461","name":"AddCon.instPartialOrderCon.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instPartialOrderCon.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L461-L461","name":"AddCon.instPartialOrderCon.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instPartialOrderCon.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L461-L461","name":"AddCon.instPartialOrderCon.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instPartialOrderCon.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L453-L457","name":"Con.sInf_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sInf_def","doc":"The infimum of a set of congruence relations is the same as the infimum of the set's image\nunder the map to the underlying binary relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L451-L452","name":"AddCon.sInf_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sInf_def","doc":"The infimum of a set of additive congruence relations is the same as the infimum\nof the set's image under the map to the underlying binary relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L443-L445","name":"Con.sInf_toSetoid","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.sInf_toSetoid","doc":"The infimum of a set of congruence relations is the same as the infimum of the set's image\nunder the map to the underlying equivalence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L441-L442","name":"AddCon.sInf_toSetoid.match_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sInf_toSetoid.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L441-L442","name":"AddCon.sInf_toSetoid","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.sInf_toSetoid","doc":"The infimum of a set of additive congruence relations is the same as the infimum of\nthe set's image under the map to the underlying equivalence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L432-L437","name":"Con.instInfSetCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instInfSetCon","doc":"The infimum of a set of congruence relations on a given type with a multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L430-L431","name":"AddCon.instInfSetCon.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instInfSetCon.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L430-L431","name":"AddCon.instInfSetCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instInfSetCon","doc":"The infimum of a set of additive congruence relations on a given type with\nan addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L430-L431","name":"AddCon.instInfSetCon.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instInfSetCon.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L424-L425","name":"Con.le_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.le_def","doc":"Definition of `≤` for congruence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L423-L423","name":"AddCon.le_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.le_def","doc":"Definition of `≤` for additive congruence relations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L419-L420","name":"Con.instLECon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instLECon","doc":"For congruence relations `c, d` on a type `M` with a multiplication, `c ≤ d` iff `∀ x y ∈ M`,\n`x` is related to `y` by `d` if `x` is related to `y` by `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L417-L418","name":"AddCon.instLECon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instLECon","doc":"For additive congruence relations `c, d` on a type `M` with an addition, `c ≤ d` iff\n`∀ x y ∈ M`, `x` is related to `y` by `d` if `x` is related to `y` by `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L408-L410","name":"Con.congr","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.congr","doc":"Makes an isomorphism of quotients by two congruence relations, given that the relations are\nequal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L406-L407","name":"AddCon.congr","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.congr","doc":"Makes an additive isomorphism of quotients by two additive congruence relations,\ngiven that the relations are equal."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L406-L407","name":"AddCon.congr.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.congr.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L406-L407","name":"AddCon.congr.proof_4","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.congr.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L406-L407","name":"AddCon.congr.proof_3","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.congr.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L406-L407","name":"AddCon.congr.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.congr.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L398-L400","name":"Con.liftOn_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.liftOn_coe","doc":"Definition of the function on the quotient by a congruence relation `c` induced by a function\nthat is constant on `c`'s equivalence classes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L396-L397","name":"AddCon.liftOn_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOn_coe","doc":"Definition of the function on the quotient by an additive congruence\nrelation `c` induced by a function that is constant on `c`'s equivalence classes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L389-L390","name":"Con.coe_mul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.coe_mul","doc":"The coercion to the quotient of a congruence relation commutes with multiplication (by\ndefinition). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L387-L388","name":"AddCon.coe_add","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.coe_add","doc":"The coercion to the quotient of an additive congruence relation\ncommutes with addition (by definition)."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L378-L379","name":"Con.mul_ker_mk_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mul_ker_mk_eq","doc":"The kernel of the quotient map induced by a congruence relation `c` equals `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L376-L377","name":"AddCon.add_ker_mk_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.add_ker_mk_eq","doc":"The kernel of the quotient map induced by an additive congruence\nrelation `c` equals `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L370-L371","name":"Con.hasMul","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.hasMul","doc":"The multiplication induced on the quotient by a congruence relation on a type with a\nmultiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L368-L369","name":"AddCon.hasAdd","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasAdd","doc":"The addition induced on the quotient by an additive congruence relation on a type\nwith an addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L368-L369","name":"AddCon.hasAdd.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hasAdd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L361-L362","name":"Con.eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.eq","doc":"Two elements are related by a congruence relation `c` iff they are represented by the same\nelement of the quotient by `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L359-L360","name":"AddCon.eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.eq","doc":"Two elements are related by an additive congruence relation `c` iff\nthey are represented by the same element of the quotient by `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L349-L351","name":"Con.induction_on₂","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.induction_on₂","doc":"A version of `Con.induction_on` for predicates which take two arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L347-L348","name":"AddCon.induction_on₂","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.induction_on₂","doc":"A version of `add_con.induction_on` for predicates which take\ntwo arguments."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L341-L342","name":"Con.induction_on","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.induction_on","doc":"The inductive principle used to prove propositions about the elements of a quotient by a\ncongruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L339-L340","name":"AddCon.induction_on","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.induction_on","doc":"The inductive principle used to prove propositions about\nthe elements of a quotient by an additive congruence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L327-L331","name":"Con.hrec_on₂_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.hrec_on₂_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L326-L326","name":"AddCon.hrec_on₂_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hrec_on₂_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L319-L322","name":"Con.hrecOn₂","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.hrecOn₂","doc":"A version of `Quotient.hrecOn₂'` for quotients by `Con`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L318-L318","name":"AddCon.hrecOn₂","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.hrecOn₂","doc":"A version of `quotient.hrec_on₂'` for quotients by `add_con`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L311-L313","name":"Con.liftOn₂","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.liftOn₂","doc":"The binary function on the quotient by a congruence relation `c` induced by a binary function\nthat is constant on `c`'s equivalence classes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L309-L310","name":"AddCon.liftOn₂","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOn₂","doc":"The binary function on the quotient by a congruence relation `c`\ninduced by a binary function that is constant on `c`'s equivalence classes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L300-L302","name":"Con.liftOn","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.liftOn","doc":"The function on the quotient by a congruence relation `c` induced by a function that is\nconstant on `c`'s equivalence classes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L298-L299","name":"AddCon.liftOn","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.liftOn","doc":"The function on the quotient by a congruence relation `c`\ninduced by a function that is constant on `c`'s equivalence classes."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L290-L291","name":"Con.quot_mk_eq_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.quot_mk_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L289-L289","name":"AddCon.quot_mk_eq_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.quot_mk_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L286-L287","name":"Con.instDecidableEqQuotient","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instDecidableEqQuotient","doc":"The quotient by a decidable congruence relation has decidable equality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L285-L285","name":"AddCon.instDecidableEqQuotient","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instDecidableEqQuotient","doc":"The quotient by a decidable additive congruence relation has decidable equality."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L280-L281","name":"Con.instCoeTCQuotient","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instCoeTCQuotient","doc":"Coercion from a type with a multiplication to its quotient by a congruence relation.\n\nSee Note [use has_coe_t]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L278-L279","name":"AddCon.instCoeTCQuotient","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instCoeTCQuotient","doc":"Coercion from a type with an addition to its quotient by an additive congruence\nrelation"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L269-L270","name":"Con.toQuotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.toQuotient","doc":"The morphism into the quotient by a congruence relation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L268-L268","name":"AddCon.toQuotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.toQuotient","doc":"The morphism into the quotient by an additive congruence relation"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L259-L260","name":"Con.Quotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.Quotient","doc":"Defining the quotient by a congruence relation of a type with a multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L257-L258","name":"AddCon.Quotient","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.Quotient","doc":"Defining the quotient by an additive congruence relation of a type with\nan addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L247-L249","name":"Con.pi","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.pi","doc":"The product of an indexed collection of congruence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L246-L246","name":"AddCon.pi.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.pi.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L246-L246","name":"AddCon.pi","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.pi","doc":"The product of an indexed collection of additive congruence relations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L246-L246","name":"AddCon.pi.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.pi.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L239-L241","name":"Con.prod","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.prod","doc":"Given types with multiplications `M, N`, the product of two congruence relations `c` on `M` and\n`d` on `N`: `(x₁, x₂), (y₁, y₂) ∈ M × N` are related by `c.prod d` iff `x₁` is related to `y₁`\nby `c` and `x₂` is related to `y₂` by `d`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L236-L238","name":"AddCon.prod.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.prod.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L236-L238","name":"AddCon.prod.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.prod.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L236-L238","name":"AddCon.prod","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.prod","doc":"Given types with additions `M, N`, the product of two congruence relations\n`c` on `M` and `d` on `N`: `(x₁, x₂), (y₁, y₂) ∈ M × N` are related by `c.prod d` iff `x₁`\nis related to `y₁` by `c` and `x₂` is related to `y₂` by `d`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L224-L229","name":"Con.mulKer","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mulKer","doc":"The kernel of a multiplication-preserving function as a congruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L223-L223","name":"AddCon.addKer","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addKer","doc":"The kernel of an addition-preserving function as an additive congruence relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L223-L223","name":"AddCon.addKer.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.addKer.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L217-L218","name":"Con.ext'_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ext'_iff","doc":"Two congruence relations are equal iff their underlying binary relations are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L215-L216","name":"AddCon.ext'_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ext'_iff","doc":"Two additive congruence relations are equal iff their underlying binary relations\nare equal."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L209-L210","name":"Con.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ext_iff","doc":"Iff version of extensionality rule for congruence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L208-L208","name":"AddCon.ext_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ext_iff","doc":"Iff version of extensionality rule for additive congruence relations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L202-L203","name":"Con.toSetoid_inj","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.toSetoid_inj","doc":"The map sending a congruence relation to its underlying equivalence relation is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L200-L201","name":"AddCon.toSetoid_inj","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.toSetoid_inj","doc":"The map sending an additive congruence relation to its underlying equivalence\nrelation is injective."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L194-L195","name":"Con.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ext","doc":"Extensionality rule for congruence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L193-L193","name":"AddCon.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ext","doc":"Extensionality rule for additive congruence relations."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L184-L188","name":"Con.ext'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.ext'","doc":"The map sending a congruence relation to its underlying binary relation is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L182-L183","name":"AddCon.ext'","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.ext'","doc":"The map sending an additive congruence relation to its underlying binary relation\nis injective."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L176-L177","name":"Con.instMembershipProdCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instMembershipProdCon","doc":"Given a type `M` with a multiplication, a congruence relation `c` on `M`, and elements of `M`\n`x, y`, `(x, y) ∈ M × M` iff `x` is related to `y` by `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L174-L175","name":"AddCon.instMembershipSumCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instMembershipSumCon","doc":"Given a type `M` with an addition, `x, y ∈ M`, and an additive congruence relation\n`c` on `M`, `(x, y) ∈ M × M` iff `x` is related to `y` by `c`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L167-L168","name":"Con.rel_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.rel_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L166-L166","name":"AddCon.rel_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.rel_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L162-L162","name":"Con.mul","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mul","doc":"Multiplicative congruence relations preserve multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L161-L161","name":"AddCon.add","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.add","doc":"Additive congruence relations preserve addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L156-L156","name":"Con.trans","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.trans","doc":"Congruence relations are transitive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L155-L155","name":"AddCon.trans","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.trans","doc":"Additive congruence relations are transitive."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L150-L150","name":"Con.symm","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.symm","doc":"Congruence relations are symmetric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L149-L149","name":"AddCon.symm","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.symm","doc":"Additive congruence relations are symmetric."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L143-L144","name":"Con.refl","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.refl","doc":"Congruence relations are reflexive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L142-L142","name":"AddCon.refl","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.refl","doc":"Additive congruence relations are reflexive."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L136-L137","name":"Con.rel_eq_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.rel_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L135-L135","name":"AddCon.rel_eq_coe","kind":"theorem","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.rel_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L127-L133","name":"Con.instFunLikeConForAllProp","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instFunLikeConForAllProp","doc":"A coercion from a congruence relation to its underlying binary relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L126-L126","name":"AddCon.instFunLikeConForAllProp.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instFunLikeConForAllProp.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L126-L126","name":"AddCon.instFunLikeConForAllProp","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instFunLikeConForAllProp","doc":"A coercion from an additive congruence relation to its underlying binary relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L121-L122","name":"Con.instInhabitedCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.instInhabitedCon","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L120-L120","name":"AddCon.instInhabitedCon","kind":"instance","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.instInhabitedCon","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L109-L110","name":"conGen","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#conGen","doc":"The inductively defined smallest multiplicative congruence relation containing a given binary\nrelation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L107-L108","name":"addConGen.proof_2","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#addConGen.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L107-L108","name":"addConGen","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#addConGen","doc":"The inductively defined smallest additive congruence relation containing\na given binary relation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L107-L108","name":"addConGen.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#addConGen.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L102-L102","name":"ConGen.Rel.mul","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel.mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L101-L101","name":"ConGen.Rel.trans","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L100-L100","name":"ConGen.Rel.symm","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L99-L99","name":"ConGen.Rel.refl","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L98-L98","name":"ConGen.Rel.of","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel.of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L97-L102","name":"ConGen.Rel","kind":"inductive","docLink":"./Mathlib/GroupTheory/Congruence.html#ConGen.Rel","doc":"The inductively defined smallest multiplicative congruence relation containing a given binary\nrelation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L91-L91","name":"AddConGen.Rel.add","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel.add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L90-L90","name":"AddConGen.Rel.trans","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L89-L89","name":"AddConGen.Rel.symm","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L88-L88","name":"AddConGen.Rel.refl","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L87-L87","name":"AddConGen.Rel.of","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel.of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L86-L91","name":"AddConGen.Rel","kind":"inductive","docLink":"./Mathlib/GroupTheory/Congruence.html#AddConGen.Rel","doc":"The inductively defined smallest additive congruence relation containing a given binary\nrelation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L79-L80","name":"Con.toSetoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.toSetoid","doc":"The equivalence relation underlying a multiplicative congruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L76-L77","name":"AddCon.toSetoid","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.toSetoid","doc":"The equivalence relation underlying an additive congruence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L73-L73","name":"Con.mul'","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mul'","doc":"Congruence relations are closed under multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L71-L71","name":"Con.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#Con.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L71-L73","name":"Con","kind":"structure","docLink":"./Mathlib/GroupTheory/Congruence.html#Con","doc":"A congruence relation on a type with a multiplication is an equivalence relation which\npreserves multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L65-L65","name":"AddCon.add'","kind":"def","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.add'","doc":"Additive congruence relations are closed under addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L63-L63","name":"AddCon.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/Congruence.lean#L63-L65","name":"AddCon","kind":"structure","docLink":"./Mathlib/GroupTheory/Congruence.html#AddCon","doc":"A congruence relation on a type with an addition is an equivalence relation which\npreserves addition. "}]}