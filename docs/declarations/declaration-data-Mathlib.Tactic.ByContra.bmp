{"name":"Mathlib.Tactic.ByContra","instances":[],"imports":["Init","Lean","Mathlib.Tactic.PushNeg"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/ByContra.lean#L11-L34","name":"byContra'","kind":"def","docLink":"./Mathlib/Tactic/ByContra.html#byContra'","doc":"If the target of the main goal is a proposition `p`,\n`by_contra'` reduces the goal to proving `False` using the additional hypothesis `this : ¬ p`.\n`by_contra' h` can be used to name the hypothesis `h : ¬ p`.\nThe hypothesis `¬ p` will be negation normalized using `push_neg`.\nFor instance, `¬ a < b` will be changed to `b ≤ a`.\n`by_contra' h : q` will normalize negations in `¬ p`, normalize negations in `q`,\nand then check that the two normalized forms are equal.\nThe resulting hypothesis is the pre-normalized form, `q`.\nIf the name `h` is not explicitly provided, then `this` will be used as name.\nThis tactic uses classical reasoning.\nIt is a variant on the tactic `by_contra`.\nExamples:\n```lean\nexample : 1 < 2 := by\n  by_contra' h\n  -- h : 2 ≤ 1 ⊢ False\n\nexample : 1 < 2 := by\n  by_contra' h : ¬ 1 < 2\n  -- h : ¬ 1 < 2 ⊢ False\n```\n"}]}