{"name":"Mathlib.CategoryTheory.Sigma.Basic","instances":[{"typeNames":["CategoryTheory.Sigma.SigmaHom"],"name":"CategoryTheory.Sigma.SigmaHom.instInhabitedSigmaHom","className":"Inhabited"},{"typeNames":["Sigma"],"name":"CategoryTheory.Sigma.SigmaHom.instCategoryStructSigma","className":"CategoryTheory.CategoryStruct"},{"typeNames":["Sigma"],"name":"CategoryTheory.Sigma.sigma","className":"CategoryTheory.Category"},{"typeNames":["Sigma","CategoryTheory.Sigma.sigma","CategoryTheory.Sigma.incl"],"name":"CategoryTheory.Sigma.instFullSigmaSigmaIncl","className":"CategoryTheory.Full"},{"typeNames":["Sigma","CategoryTheory.Sigma.sigma","CategoryTheory.Sigma.incl"],"name":"CategoryTheory.Sigma.instFaithfulSigmaSigmaIncl","className":"CategoryTheory.Faithful"}],"imports":["Init","Mathlib.CategoryTheory.Whiskering","Mathlib.CategoryTheory.Functor.FullyFaithful","Mathlib.CategoryTheory.NatIso"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L277-L282","name":"CategoryTheory.Sigma.natTrans.sigma","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natTrans.sigma","doc":"Assemble an `I`-indexed family of natural transformations into a single natural transformation.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L263-L264","name":"CategoryTheory.Sigma.Functor.sigma","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.Functor.sigma","doc":"Assemble an `I`-indexed family of functors into a functor between the sigma types.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L248-L250","name":"CategoryTheory.Sigma.mapComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapComp","doc":"The functor `Sigma.map` applied to a composition is a composition of functors. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L247-L247","name":"CategoryTheory.Sigma.mapComp_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapComp_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L247-L247","name":"CategoryTheory.Sigma.mapComp_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapComp_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L238-L239","name":"CategoryTheory.Sigma.mapId","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapId","doc":"The functor `Sigma.map` applied to the identity function is just the identity functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L237-L237","name":"CategoryTheory.Sigma.mapId_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapId_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L237-L237","name":"CategoryTheory.Sigma.mapId_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.mapId_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L230-L231","name":"CategoryTheory.Sigma.inclCompMap","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclCompMap","doc":"The functor `Sigma.map C g` restricted to the subcategory `C j` acts as the inclusion of `g j`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L229-L229","name":"CategoryTheory.Sigma.inclCompMap_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclCompMap_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L229-L229","name":"CategoryTheory.Sigma.inclCompMap_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclCompMap_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L222-L224","name":"CategoryTheory.Sigma.map_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.map_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L217-L218","name":"CategoryTheory.Sigma.map_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.map_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L212-L213","name":"CategoryTheory.Sigma.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.map","doc":"A function `J → I` induces a functor `Σ j, C (g j) ⥤ Σ i, C i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L200-L202","name":"CategoryTheory.Sigma.natIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natIso","doc":"If `q₁` and `q₂` when restricted to each subcategory `C i` agree, then `q₁` and `q₂` are isomorphic.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L199-L199","name":"CategoryTheory.Sigma.natIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L199-L199","name":"CategoryTheory.Sigma.natIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L191-L193","name":"CategoryTheory.Sigma.descUniq_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.descUniq_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L185-L187","name":"CategoryTheory.Sigma.descUniq_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.descUniq_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L178-L181","name":"CategoryTheory.Sigma.descUniq","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.descUniq","doc":"If `q` when restricted to each subcategory `C i` agrees with `F i`, then `q` is isomorphic to\n`desc F`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L171-L172","name":"CategoryTheory.Sigma.inclDesc_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclDesc_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L166-L167","name":"CategoryTheory.Sigma.inclDesc_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclDesc_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L161-L162","name":"CategoryTheory.Sigma.inclDesc","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.inclDesc","doc":"This shows that when `desc F` is restricted to just the subcategory `C i`, `desc F` agrees with\n`F i`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L153-L154","name":"CategoryTheory.Sigma.desc_map_mk","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.desc_map_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L141-L149","name":"CategoryTheory.Sigma.desc","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.desc","doc":"Given a collection of functors `F i : C i ⥤ D`, we can produce a functor `(Σ i, C i) ⥤ D`.\n\nThe produced functor `desc F` satisfies: `incl i ⋙ desc F ≅ F i`, i.e. restricted to just the\nsubcategory `C i`, `desc F` agrees with `F i`, and it is unique (up to natural isomorphism) with\nthis property.\n\nThis witnesses that the sigma-type is the coproduct in Cat.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L140-L140","name":"CategoryTheory.Sigma.desc_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.desc_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L127-L128","name":"CategoryTheory.Sigma.descMap","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.descMap","doc":"(Implementation). An auxiliary definition to build the functor `desc`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L121-L123","name":"CategoryTheory.Sigma.natTrans_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natTrans_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L113-L117","name":"CategoryTheory.Sigma.natTrans","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.natTrans","doc":"To build a natural transformation over the sigma category, it suffices to specify it restricted to\neach subcategory.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L101-L103","name":"CategoryTheory.Sigma.instFaithfulSigmaSigmaIncl","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.instFaithfulSigmaSigmaIncl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L97-L99","name":"CategoryTheory.Sigma.instFullSigmaSigmaIncl","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.instFullSigmaSigmaIncl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L93-L94","name":"CategoryTheory.Sigma.incl_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.incl_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L87-L89","name":"CategoryTheory.Sigma.incl","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.incl","doc":"The inclusion functor into the disjoint union of categories. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L86-L86","name":"CategoryTheory.Sigma.incl_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.incl_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L79-L82","name":"CategoryTheory.Sigma.sigma","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.sigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L73-L74","name":"CategoryTheory.Sigma.SigmaHom.comp_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L69-L70","name":"CategoryTheory.Sigma.SigmaHom.id_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L64-L66","name":"CategoryTheory.Sigma.SigmaHom.assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L60-L61","name":"CategoryTheory.Sigma.SigmaHom.comp_def","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.comp_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L54-L57","name":"CategoryTheory.Sigma.SigmaHom.instCategoryStructSigma","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.instCategoryStructSigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L49-L50","name":"CategoryTheory.Sigma.SigmaHom.comp","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.comp","doc":"Composition of sigma homomorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L45-L46","name":"CategoryTheory.Sigma.SigmaHom.instInhabitedSigmaHom","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.instInhabitedSigmaHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L40-L41","name":"CategoryTheory.Sigma.SigmaHom.id","kind":"def","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.id","doc":"The identity morphism on an object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L34-L34","name":"CategoryTheory.Sigma.SigmaHom.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sigma/Basic.lean#L33-L34","name":"CategoryTheory.Sigma.SigmaHom","kind":"inductive","docLink":"./Mathlib/CategoryTheory/Sigma/Basic.html#CategoryTheory.Sigma.SigmaHom","doc":"The type of morphisms of a disjoint union of categories: for `X : C i` and `Y : C j`, a morphism\n`(i, X) ⟶ (j, Y)` if `i = j` is just a morphism `X ⟶ Y`, and if `i ≠ j` there are no such morphisms.\n"}]}