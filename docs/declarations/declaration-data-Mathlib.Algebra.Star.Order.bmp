{"name":"Mathlib.Algebra.Star.Order","instances":[{"typeNames":[],"name":"StarOrderedRing.toOrderedAddCommMonoid","className":"OrderedAddCommMonoid"},{"typeNames":["Distrib.toAdd","NonUnitalNonAssocSemiring.toDistrib","NonUnitalSemiring.toNonUnitalNonAssocSemiring","Preorder.toLE","PartialOrder.toPreorder"],"name":"StarOrderedRing.toExistsAddOfLE","className":"ExistsAddOfLE"},{"typeNames":[],"name":"StarOrderedRing.toOrderedAddCommGroup","className":"OrderedAddCommGroup"}],"imports":["Init","Mathlib.Algebra.Star.Basic","Mathlib.GroupTheory.Submonoid.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L189-L190","name":"conjugate_le_conjugate'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#conjugate_le_conjugate'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L181-L186","name":"conjugate_le_conjugate","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#conjugate_le_conjugate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L177-L178","name":"conjugate_nonneg'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#conjugate_nonneg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L164-L174","name":"conjugate_nonneg","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#conjugate_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L160-L161","name":"star_mul_self_nonneg'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#star_mul_self_nonneg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L156-L157","name":"star_mul_self_nonneg","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#star_mul_self_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L145-L147","name":"StarOrderedRing.nonneg_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.nonneg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L136-L142","name":"StarOrderedRing.ofNonnegIff'","kind":"def","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.ofNonnegIff'","doc":"When `R` is a non-unital ring, to construct a `StarOrderedRing` instance it suffices to\nshow that the nonnegative elements are precisely those elements of the form `star s * s`\nfor `s : R`.\n\nThis is provided for convenience because it holds in many common scenarios (e.g.,`ℝ`, `ℂ`, or\nany C⋆-algebra), and obviates the hassle of `AddSubmonoid.closure_induction` when creating those\ninstances. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L116-L124","name":"StarOrderedRing.ofNonnegIff","kind":"def","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.ofNonnegIff","doc":"When `R` is a non-unital ring, to construct a `StarOrderedRing` instance it suffices to\nshow that the nonnegative elements are precisely those elements in the `AddSubmonoid` generated\nby `star s * s` for `s : R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L90-L108","name":"StarOrderedRing.ofLeIff","kind":"def","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.ofLeIff","doc":"To construct a `StarOrderedRing` instance it suffices to show that `x ≤ y` if and only if\n`y = x + star s * s` for some `s : R`.\n\nThis is provided for convenience because it holds in some common scenarios (e.g.,`ℝ≥0`, `C(X, ℝ≥0)`)\nand obviates the hassle of `AddSubmonoid.closure_induction` when creating those instances.\n\nIf you are working with a `NonUnitalRing` and not a `NonUnitalSemiring`, see\n`StarOrderedRing.ofNonnegIff` for a more convenient version. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L74-L77","name":"StarOrderedRing.toOrderedAddCommGroup","kind":"instance","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.toOrderedAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L66-L70","name":"StarOrderedRing.toExistsAddOfLE","kind":"instance","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.toExistsAddOfLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L59-L62","name":"StarOrderedRing.toOrderedAddCommMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.toOrderedAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L52-L52","name":"StarOrderedRing.le_iff","kind":"def","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.le_iff","doc":"characterization of the order in terms of the `StarRing` structure. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L50-L50","name":"StarOrderedRing.add_le_add_left","kind":"def","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.add_le_add_left","doc":"addition commutes with `≤` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L48-L48","name":"StarOrderedRing.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Order.lean#L48-L53","name":"StarOrderedRing","kind":"class","docLink":"./Mathlib/Algebra/Star/Order.html#StarOrderedRing","doc":"An ordered `*`-ring is a ring which is both an `OrderedAddCommGroup` and a `*`-ring,\nand the nonnegative elements constitute precisely the `AddSubmonoid` generated by\nelements of the form `star s * s`.\n\nIf you are working with a `NonUnitalRing` and not a `NonUnitalSemiring`, it may be more\nconvenient to declare instances using `StarOrderedRing.ofNonnegIff'`. "}]}