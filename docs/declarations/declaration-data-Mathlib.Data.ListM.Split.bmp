{"name":"Mathlib.Data.ListM.Split","instances":[],"imports":["Init","Mathlib.Data.ListM.Basic","Mathlib.Data.ULift"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L107-L108","name":"ListM.splitAtBecomesTrue","kind":"def","docLink":"./Mathlib/Data/ListM/Split.html#ListM.splitAtBecomesTrue","doc":"Split a lazy list into contiguous sublists,\nstarting a new sublist each time a predicate changes from `false` to `true`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L97-L101","name":"ListM.splitAtBecomesTrueM.aux","kind":"opaque","docLink":"./Mathlib/Data/ListM/Split.html#ListM.splitAtBecomesTrueM.aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L95-L101","name":"ListM.splitAtBecomesTrueM","kind":"def","docLink":"./Mathlib/Data/ListM/Split.html#ListM.splitAtBecomesTrueM","doc":"Split a lazy list into contiguous sublists,\nstarting a new sublist each time a monadic predicate changes from `false` to `true`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L85-L86","name":"ListM.groupBy","kind":"def","docLink":"./Mathlib/Data/ListM/Split.html#ListM.groupBy","doc":"Splits a lazy list into contiguous sublists of elements with the same value under a function.\nReturn a lazy lists of pairs, consisting of a value under that function,\nand a maximal list of elements having that value.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L74-L78","name":"ListM.groupByM","kind":"opaque","docLink":"./Mathlib/Data/ListM/Split.html#ListM.groupByM","doc":"Splits a lazy list into contiguous sublists of elements with the same value under\na monadic function.\nReturn a lazy lists of pairs, consisting of a value under that function,\nand a maximal list of elements having that value.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L65-L66","name":"ListM.splitWhile","kind":"def","docLink":"./Mathlib/Data/ListM/Split.html#ListM.splitWhile","doc":"Extract a maximal prefix of a lazy list consisting of elements\nsatisfying a predicate.\nReturn (in the monad) the prefix as a `List`, along with the remaining elements as a `ListM`.\n\n(Note that the first element *not* satisfying the predicate will be generated,\nand pushed back on to the remaining lazy list.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L47-L55","name":"ListM.splitWhileM","kind":"opaque","docLink":"./Mathlib/Data/ListM/Split.html#ListM.splitWhileM","doc":"Extract a maximal prefix of a lazy list consisting of elements\nsatisfying a monadic predicate.\nReturn (in the monad) the prefix as a `List`, along with the remaining elements as a `ListM`.\n\n(Note that the first element *not* satisfying the predicate will be generated,\nand pushed back on to the remaining lazy list.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L36-L37","name":"ListM.getUpToFirst","kind":"def","docLink":"./Mathlib/Data/ListM/Split.html#ListM.getUpToFirst","doc":"Extract the prefix of a lazy list consisting of elements up to and including\nthe first element satisfying a predicate.\nReturn (in the monad) the prefix as a `List`, along with the remaining elements as a `ListM`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ListM/Split.lean#L22-L29","name":"ListM.getUpToFirstM","kind":"opaque","docLink":"./Mathlib/Data/ListM/Split.html#ListM.getUpToFirstM","doc":"Extract the prefix of a lazy list consisting of elements up to and including\nthe first element satisfying a monadic predicate.\nReturn (in the monad) the prefix as a `List`, along with the remaining elements as a `ListM`.\n"}]}