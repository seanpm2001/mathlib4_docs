{"name":"Mathlib.SetTheory.ZFC.Basic","instances":[{"typeNames":["Arity"],"name":"Arity.Arity.inhabited","className":"Inhabited"},{"typeNames":["PSet"],"name":"PSet.setoid","className":"Setoid"},{"typeNames":["PSet"],"name":"PSet.instHasSubsetPSet","className":"HasSubset"},{"typeNames":["PSet","PSet","HasSubset.Subset","PSet.instHasSubsetPSet"],"name":"PSet.instIsReflPSetSubsetInstHasSubsetPSet","className":"IsRefl"},{"typeNames":["PSet","PSet","HasSubset.Subset","PSet.instHasSubsetPSet"],"name":"PSet.instIsTransPSetSubsetInstHasSubsetPSet","className":"IsTrans"},{"typeNames":["PSet","PSet"],"name":"PSet.instMembershipPSetPSet","className":"Membership"},{"typeNames":["PSet"],"name":"PSet.instWellFoundedRelationPSet","className":"WellFoundedRelation"},{"typeNames":["PSet","PSet","Membership.mem","PSet.instMembershipPSetPSet"],"name":"PSet.instIsAsymmPSetMemInstMembershipPSetPSet","className":"IsAsymm"},{"typeNames":["PSet","PSet","Membership.mem","PSet.instMembershipPSetPSet"],"name":"PSet.instIsIrreflPSetMemInstMembershipPSetPSet","className":"IsIrrefl"},{"typeNames":["PSet","Set","PSet"],"name":"PSet.instCoePSetSetPSet","className":"Coe"},{"typeNames":["PSet"],"name":"PSet.instEmptyCollectionPSet","className":"EmptyCollection"},{"typeNames":["PSet"],"name":"PSet.instInhabitedPSet","className":"Inhabited"},{"typeNames":["PSet.Type","EmptyCollection.emptyCollection","PSet","PSet.instEmptyCollectionPSet"],"name":"PSet.instIsEmptyTypeEmptyCollectionPSetInstEmptyCollectionPSet","className":"IsEmpty"},{"typeNames":["PSet","PSet"],"name":"PSet.instInsertPSetPSet","className":"Insert"},{"typeNames":["PSet","PSet"],"name":"PSet.instSingletonPSetPSet","className":"Singleton"},{"typeNames":["PSet","PSet","PSet.instEmptyCollectionPSet","PSet.instInsertPSetPSet","PSet.instSingletonPSetPSet"],"name":"PSet.instIsLawfulSingletonPSetInstEmptyCollectionPSetInstInsertPSetPSetInstSingletonPSetPSet","className":"IsLawfulSingleton"},{"typeNames":["PSet.Type","Insert.insert","PSet","PSet.instInsertPSetPSet"],"name":"PSet.instInhabitedTypeInsertPSetInstInsertPSetPSet","className":"Inhabited"},{"typeNames":["PSet","PSet"],"name":"PSet.instSepPSetPSet","className":"Sep"},{"typeNames":["PSet.Resp"],"name":"PSet.Resp.inhabited","className":"Inhabited"},{"typeNames":["PSet.Resp"],"name":"PSet.Resp.setoid","className":"Setoid"},{"typeNames":["ZFSet","ZFSet"],"name":"ZFSet.instMembershipZFSetZFSet","className":"Membership"},{"typeNames":["Set.Elem","ZFSet","ZFSet.toSet"],"name":"ZFSet.small_toSet","className":"Small"},{"typeNames":["ZFSet"],"name":"ZFSet.hasSubset","className":"HasSubset"},{"typeNames":["ZFSet","ZFSet","HasSubset.Subset","ZFSet.hasSubset"],"name":"ZFSet.instIsReflZFSetSubsetHasSubset","className":"IsRefl"},{"typeNames":["ZFSet","ZFSet","HasSubset.Subset","ZFSet.hasSubset"],"name":"ZFSet.instIsTransZFSetSubsetHasSubset","className":"IsTrans"},{"typeNames":["ZFSet","ZFSet","HasSubset.Subset","ZFSet.hasSubset"],"name":"ZFSet.instIsAntisymmZFSetSubsetHasSubset","className":"IsAntisymm"},{"typeNames":["ZFSet"],"name":"ZFSet.instEmptyCollectionZFSet","className":"EmptyCollection"},{"typeNames":["ZFSet"],"name":"ZFSet.instInhabitedZFSet","className":"Inhabited"},{"typeNames":["ZFSet","ZFSet"],"name":"ZFSet.instInsertZFSetZFSet","className":"Insert"},{"typeNames":["ZFSet","ZFSet"],"name":"ZFSet.instSingletonZFSetZFSet","className":"Singleton"},{"typeNames":["ZFSet","ZFSet","ZFSet.instEmptyCollectionZFSet","ZFSet.instInsertZFSetZFSet","ZFSet.instSingletonZFSetZFSet"],"name":"ZFSet.instIsLawfulSingletonZFSetInstEmptyCollectionZFSetInstInsertZFSetZFSetInstSingletonZFSetZFSet","className":"IsLawfulSingleton"},{"typeNames":["ZFSet","ZFSet"],"name":"ZFSet.instSepZFSetZFSet","className":"Sep"},{"typeNames":["ZFSet"],"name":"ZFSet.instUnionZFSet","className":"Union"},{"typeNames":["ZFSet"],"name":"ZFSet.instInterZFSet","className":"Inter"},{"typeNames":["ZFSet"],"name":"ZFSet.instSDiffZFSet","className":"SDiff"},{"typeNames":["ZFSet"],"name":"ZFSet.instWellFoundedRelationZFSet","className":"WellFoundedRelation"},{"typeNames":["ZFSet","ZFSet","Membership.mem","ZFSet.instMembershipZFSetZFSet"],"name":"ZFSet.instIsAsymmZFSetMemInstMembershipZFSetZFSet","className":"IsAsymm"},{"typeNames":["ZFSet","ZFSet","Membership.mem","ZFSet.instMembershipZFSetZFSet"],"name":"ZFSet.instIsIrreflZFSetMemInstMembershipZFSetZFSet","className":"IsIrrefl"},{"typeNames":["OfNat.ofNat","Nat","instOfNatNat","ZFSet","ZFSet.pair"],"name":"ZFSet.mapDefinableAux","className":"PSet.Definable"},{"typeNames":["ZFSet","Class"],"name":"instInsertZFSetClass","className":"Insert"},{"typeNames":["ZFSet","Class"],"name":"Class.instCoeZFSetClass","className":"Coe"},{"typeNames":["Class","Class"],"name":"Class.instMembershipClassClass","className":"Membership"},{"typeNames":["Class"],"name":"Class.instWellFoundedRelationClass","className":"WellFoundedRelation"},{"typeNames":["Class","Class","Membership.mem","Class.instMembershipClassClass"],"name":"Class.instIsAsymmClassMemInstMembershipClassClass","className":"IsAsymm"},{"typeNames":["Class","Class","Membership.mem","Class.instMembershipClassClass"],"name":"Class.instIsIrreflClassMemInstMembershipClassClass","className":"IsIrrefl"}],"imports":["Init","Mathlib.Data.Set.Lattice","Mathlib.Logic.Small.Basic","Mathlib.Order.WellFounded"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1819-L1822","name":"ZFSet.choice_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.choice_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1814-L1816","name":"ZFSet.choice_isFunc","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.choice_isFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1807-L1810","name":"ZFSet.choice_mem_aux","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.choice_mem_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1803-L1804","name":"ZFSet.choice","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.choice","doc":"A choice function on the class of nonempty ZFC sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1788-L1797","name":"ZFSet.map_fval","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.map_fval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1779-L1780","name":"Class.fval_ex","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.fval_ex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1776-L1777","name":"Class.«term_′_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.«term_′_»","doc":"Function value "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1772-L1773","name":"Class.fval","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.fval","doc":"Function value "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1764-L1768","name":"Class.iota_ex","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.iota_ex","doc":"Unlike the other set constructors, the `iota` definite descriptor\nis a set for any set input, but not constructively so, so there is no\nassociated `Class → Set` function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1755-L1758","name":"Class.iota_val","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.iota_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1751-L1752","name":"Class.iota","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.iota","doc":"The definite description operator, which is `{x}` if `{y | A y} = {x}` and `∅` otherwise. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1738-L1746","name":"Class.eq_univ_of_powerset_subset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.eq_univ_of_powerset_subset","doc":"An induction principle for sets. If every subset of a class is a member, then the class is\nuniversal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1732-L1733","name":"Class.sInter_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sInter_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1726-L1728","name":"Class.sUnion_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sUnion_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1716-L1722","name":"Class.mem_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1711-L1713","name":"Class.mem_of_mem_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_of_mem_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1707-L1708","name":"Class.coe_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1700-L1703","name":"Class.sInter_apply","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sInter_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1692-L1697","name":"Class.mem_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1686-L1688","name":"Class.coe_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1678-L1682","name":"Class.sUnion_apply","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sUnion_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1673-L1674","name":"Class.powerset_apply","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.powerset_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1668-L1669","name":"Class.coe_powerset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_powerset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1663-L1664","name":"Class.coe_diff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_diff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1658-L1659","name":"Class.coe_inter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1653-L1654","name":"Class.coe_union","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1648-L1649","name":"Class.coe_insert","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_insert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1643-L1644","name":"Class.coe_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1637-L1639","name":"Class.coe_sep","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_sep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1632-L1633","name":"Class.coe_subset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1627-L1628","name":"Class.coe_apply","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1622-L1623","name":"Class.coe_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.coe_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1617-L1618","name":"Class.toSet_of_ZFSet","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.toSet_of_ZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1610-L1613","name":"Class.ofSet.inj","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.ofSet.inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1607-L1608","name":"Class.«term⋂₀_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.«term⋂₀_»","doc":"The intersection of a class is the class of all members of ZFC sets in the class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1604-L1605","name":"Class.sInter","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sInter","doc":"The intersection of a class is the class of all members of ZFC sets in the class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1600-L1601","name":"Class.«term⋃₀_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.«term⋃₀_»","doc":"The union of a class is the class of all members of ZFC sets in the class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1596-L1597","name":"Class.sUnion","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sUnion","doc":"The union of a class is the class of all members of ZFC sets in the class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1591-L1592","name":"Class.powerset","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.powerset","doc":"The power class of a class is the class of all subclasses that are ZFC sets "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1585-L1587","name":"Class.classToCong_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.classToCong_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1580-L1581","name":"Class.classToCong","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.classToCong","doc":"Convert a class into a conglomerate (a collection of classes) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1573-L1576","name":"Class.congToClass_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.congToClass_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1568-L1569","name":"Class.congToClass","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.congToClass","doc":"Convert a conglomerate (a collection of classes) into a class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1563-L1564","name":"Class.univ_not_mem_univ","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.univ_not_mem_univ","doc":"**There is no universal set.**\nThis is stated as `univ ∉ univ`, meaning that `univ` (the class of all sets) is proper (does not\nbelong to the class of all sets). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1556-L1557","name":"Class.mem_irrefl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1552-L1553","name":"Class.mem_asymm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_asymm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1549-L1550","name":"Class.instIsIrreflClassMemInstMembershipClassClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.instIsIrreflClassMemInstMembershipClassClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1545-L1546","name":"Class.instIsAsymmClassMemInstMembershipClassClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.instIsAsymmClassMemInstMembershipClassClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1542-L1543","name":"Class.instWellFoundedRelationClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.instWellFoundedRelationClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1531-L1539","name":"Class.mem_wf","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_wf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1527-L1528","name":"Class.eq_univ_of_forall","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.eq_univ_of_forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1523-L1524","name":"Class.eq_univ_iff_forall","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.eq_univ_iff_forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1519-L1520","name":"Class.mem_univ_hom","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_univ_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1514-L1515","name":"Class.mem_univ","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1509-L1510","name":"Class.not_empty_hom","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.not_empty_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1505-L1505","name":"Class.not_mem_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.not_mem_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1500-L1501","name":"Class.mem_def","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.mem_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1497-L1498","name":"Class.instMembershipClassClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.instMembershipClassClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1493-L1494","name":"Class.Mem","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.Mem","doc":"`A ∈ B` if `A` is a ZFC set which satisfies `B` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1488-L1489","name":"Class.ToSet","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.ToSet","doc":"Assert that `A` is a ZFC set satisfying `B` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1483-L1484","name":"Class.univ","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.univ","doc":"The universal class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1479-L1480","name":"Class.instCoeZFSetClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.instCoeZFSetClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1475-L1476","name":"Class.ofSet","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.ofSet","doc":"Coerce a ZFC set into a class "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1469-L1470","name":"Class.ext_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1465-L1466","name":"Class.ext","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1461-L1462","name":"Class.sep","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class.sep","doc":"`{x ∈ A | p x}` is the class of elements in `A` satisfying `p` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1454-L1455","name":"instInsertZFSetClass","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#instInsertZFSetClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1450-L1451","name":"Class","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Class","doc":"The collection of all classes.\nWe define `Class` as `Set ZFSet`, as this allows us to get many instances automatically. However, in\npractice, we treat it as (the definitionally equal) `ZFSet → Prop`. This means, the preferred way to\nstate that `x : ZFSet` belongs to `A : Class` is to write `A x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1434-L1439","name":"ZFSet.Hereditarily.empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Hereditarily.empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1430-L1431","name":"ZFSet.Hereditarily.mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Hereditarily.mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1426-L1427","name":"ZFSet.Hereditarily.self","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Hereditarily.self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1423-L1423","name":"ZFSet.Hereditarily.def","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Hereditarily.def","doc":"**Alias** of the forward direction of `ZFSet.hereditarily_iff`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1419-L1420","name":"ZFSet.hereditarily_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.hereditarily_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1410-L1412","name":"ZFSet.Hereditarily","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Hereditarily","doc":"Given a predicate `p` on ZFC sets. `hereditarily p x` means that `x` has property `p` and the\nmembers of `x` are all `hereditarily p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1396-L1405","name":"ZFSet.map_isFunc","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.map_isFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1387-L1392","name":"ZFSet.map_unique","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.map_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1382-L1384","name":"ZFSet.mem_map","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1377-L1378","name":"ZFSet.map","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.map","doc":"Graph of a function: `map f x` is the ZFC function which maps `a ∈ x` to `f a` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1371-L1373","name":"ZFSet.mapDefinableAux","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mapDefinableAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1364-L1364","name":"ZFSet.mem_funs","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_funs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1359-L1360","name":"ZFSet.funs","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.funs","doc":"`funs x y` is `y ^ x`, the set of all set functions `x → y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1354-L1355","name":"ZFSet.IsFunc","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.IsFunc","doc":"`isFunc x y f` is the assertion that `f` is a subset of `x × y` which relates to each element\nof `x` a unique element of `y`, so that we can consider `f` as a ZFC function `x → y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1348-L1349","name":"ZFSet.pair_mem_prod","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.pair_mem_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1344-L1345","name":"ZFSet.mem_prod","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1339-L1340","name":"ZFSet.prod","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.prod","doc":"The cartesian product, `{(a, b) | a ∈ x, b ∈ y}` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1334-L1335","name":"ZFSet.pair_inj","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.pair_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1311-L1330","name":"ZFSet.pair_injective","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.pair_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1300-L1308","name":"ZFSet.mem_pairSep","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_pairSep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1295-L1296","name":"ZFSet.pairSep","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.pairSep","doc":"A subset of pairs `{(a, b) ∈ x × y | p a b}` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1291-L1291","name":"ZFSet.toSet_pair","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_pair","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1286-L1287","name":"ZFSet.pair","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.pair","doc":"Kuratowski ordered pair "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1279-L1282","name":"ZFSet.toSet_range","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1267-L1275","name":"ZFSet.mem_range","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1262-L1263","name":"ZFSet.range","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.range","doc":"The range of an indexed family of sets. The universes allow for a more general index type\nwithout manual use of `ULift`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1254-L1257","name":"ZFSet.toSet_image","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1244-L1250","name":"ZFSet.mem_image","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1238-L1240","name":"ZFSet.image.mk","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.image.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1226-L1235","name":"ZFSet.image","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.image","doc":"The image of a (definable) ZFC set function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1216-L1222","name":"ZFSet.regularity","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.regularity","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1212-L1213","name":"ZFSet.mem_irrefl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1208-L1209","name":"ZFSet.mem_asymm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_asymm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1205-L1206","name":"ZFSet.instIsIrreflZFSetMemInstMembershipZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsIrreflZFSetMemInstMembershipZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1201-L1202","name":"ZFSet.instIsAsymmZFSetMemInstMembershipZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsAsymmZFSetMemInstMembershipZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1198-L1199","name":"ZFSet.instWellFoundedRelationZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instWellFoundedRelationZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1194-L1195","name":"ZFSet.inductionOn","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.inductionOn","doc":"Induction on the `∈` relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1187-L1189","name":"ZFSet.mem_wf","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_wf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1183-L1184","name":"ZFSet.sUnion_pair","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion_pair","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1178-L1179","name":"ZFSet.mem_diff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_diff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1173-L1174","name":"ZFSet.mem_inter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1167-L1169","name":"ZFSet.mem_union","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1160-L1163","name":"ZFSet.toSet_sdiff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_sdiff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1153-L1156","name":"ZFSet.toSet_inter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1147-L1149","name":"ZFSet.toSet_union","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1143-L1144","name":"ZFSet.instSDiffZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instSDiffZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1140-L1141","name":"ZFSet.instInterZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instInterZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1137-L1138","name":"ZFSet.instUnionZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instUnionZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1133-L1134","name":"ZFSet.diff","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.diff","doc":"The set difference operation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1128-L1129","name":"ZFSet.inter","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.inter","doc":"The binary intersection operation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1123-L1124","name":"ZFSet.union","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.union","doc":"The binary union operation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1118-L1119","name":"ZFSet.singleton_inj","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.singleton_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1112-L1114","name":"ZFSet.singleton_injective","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.singleton_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1107-L1109","name":"ZFSet.toSet_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1102-L1104","name":"ZFSet.toSet_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1097-L1098","name":"ZFSet.sInter_singleton","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sInter_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1092-L1093","name":"ZFSet.sUnion_singleton","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1087-L1088","name":"ZFSet.not_mem_sInter_of_not_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.not_mem_sInter_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1083-L1084","name":"ZFSet.mem_sUnion_of_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_sUnion_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1077-L1080","name":"ZFSet.mem_of_mem_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_of_mem_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1074-L1074","name":"ZFSet.sInter_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sInter_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1068-L1070","name":"ZFSet.sUnion_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1061-L1064","name":"ZFSet.mem_sInter","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_sInter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1055-L1058","name":"ZFSet.mem_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1051-L1052","name":"ZFSet.«term⋂₀_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.«term⋂₀_»","doc":"The intersection operator, the collection of elements in all of the elements of a ZFC set. We\nspecial-case `⋂₀ ∅ = ∅`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1047-L1048","name":"ZFSet.sInter","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sInter","doc":"The intersection operator, the collection of elements in all of the elements of a ZFC set. We\nspecial-case `⋂₀ ∅ = ∅`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1042-L1043","name":"ZFSet.«term⋃₀_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.«term⋃₀_»","doc":"The union operator, the collection of elements of elements of a ZFC set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1033-L1039","name":"ZFSet.sUnion","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion","doc":"The union operator, the collection of elements of elements of a ZFC set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1016-L1029","name":"ZFSet.sUnion_lem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion_lem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L1011-L1013","name":"ZFSet.mem_powerset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_powerset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L996-L1007","name":"ZFSet.powerset","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.powerset","doc":"The powerset operation, the collection of subsets of a ZFC set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L989-L992","name":"ZFSet.toSet_sep","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_sep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L978-L985","name":"ZFSet.mem_sep","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_sep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L974-L975","name":"ZFSet.instSepZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instSepZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L962-L970","name":"ZFSet.sep","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sep","doc":"`{x ∈ a | p x}` is the set of elements in `a` satisfying `p` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L952-L958","name":"ZFSet.omega_succ","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.omega_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L947-L948","name":"ZFSet.omega_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.omega_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L942-L943","name":"ZFSet.omega","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.omega","doc":"`omega` is the first infinite von Neumann ordinal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L937-L938","name":"ZFSet.mem_pair","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_pair","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L933-L934","name":"ZFSet.singleton_nonempty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.singleton_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L929-L930","name":"ZFSet.insert_nonempty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.insert_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L924-L926","name":"ZFSet.toSet_singleton","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L918-L920","name":"ZFSet.mem_singleton","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L912-L914","name":"ZFSet.toSet_insert","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_insert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L907-L908","name":"ZFSet.mem_insert_of_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_insert_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L903-L904","name":"ZFSet.mem_insert","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_insert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L890-L900","name":"ZFSet.mem_insert_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_insert_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L886-L887","name":"ZFSet.instIsLawfulSingletonZFSetInstEmptyCollectionZFSetInstInsertZFSetZFSetInstSingletonZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsLawfulSingletonZFSetInstEmptyCollectionZFSetInstInsertZFSetZFSetInstSingletonZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L883-L884","name":"ZFSet.instSingletonZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instSingletonZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L880-L881","name":"ZFSet.instInsertZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instInsertZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L863-L877","name":"ZFSet.Insert","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Insert","doc":"`Insert x y` is the set `{x} ∪ y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L857-L859","name":"ZFSet.eq_empty_or_nonempty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.eq_empty_or_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L852-L854","name":"ZFSet.eq_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.eq_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L845-L849","name":"ZFSet.nonempty_mk_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.nonempty_mk_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L841-L841","name":"ZFSet.not_nonempty_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.not_nonempty_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L836-L837","name":"ZFSet.empty_subset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.empty_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L832-L832","name":"ZFSet.toSet_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L827-L828","name":"ZFSet.not_mem_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.not_mem_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L823-L824","name":"ZFSet.instInhabitedZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instInhabitedZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L820-L821","name":"ZFSet.instEmptyCollectionZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instEmptyCollectionZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L816-L817","name":"ZFSet.empty","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.empty","doc":"The empty ZFC set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L812-L813","name":"ZFSet.instIsAntisymmZFSetSubsetHasSubset","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsAntisymmZFSetSubsetHasSubset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L808-L809","name":"ZFSet.toSet_inj","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L804-L804","name":"ZFSet.toSet_injective","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L800-L801","name":"ZFSet.ext_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L796-L797","name":"ZFSet.ext","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L791-L792","name":"ZFSet.toSet_subset_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet_subset_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L782-L787","name":"ZFSet.subset_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.subset_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L778-L779","name":"ZFSet.instIsTransZFSetSubsetHasSubset","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsTransZFSetSubsetHasSubset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L775-L776","name":"ZFSet.instIsReflZFSetSubsetHasSubset","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instIsReflZFSetSubsetHasSubset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L771-L772","name":"ZFSet.subset_def","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.subset_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L767-L768","name":"ZFSet.hasSubset","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.hasSubset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L763-L764","name":"ZFSet.Subset","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Subset","doc":"`x ⊆ y` as ZFC sets means that all members of `x` are members of `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L758-L759","name":"ZFSet.nonempty_toSet_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.nonempty_toSet_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L753-L754","name":"ZFSet.nonempty_of_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.nonempty_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L749-L750","name":"ZFSet.nonempty_def","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.nonempty_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L745-L746","name":"ZFSet.Nonempty","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Nonempty","doc":"A nonempty set is one that contains some element. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L734-L741","name":"ZFSet.small_toSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.small_toSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L730-L731","name":"ZFSet.mem_toSet","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mem_toSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L725-L726","name":"ZFSet.toSet","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.toSet","doc":"Convert a ZFC set into a `set` of ZFC sets "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L720-L721","name":"ZFSet.mk_mem_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mk_mem_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L716-L717","name":"ZFSet.instMembershipZFSetZFSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.instMembershipZFSetZFSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L711-L713","name":"ZFSet.Mem","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.Mem","doc":"The membership relation for ZFC sets is inherited from the membership relation for pre-sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L705-L707","name":"ZFSet.eval_mk","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.eval_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L700-L701","name":"ZFSet.exact","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.exact","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L696-L697","name":"ZFSet.sound","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L692-L693","name":"ZFSet.eq","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L688-L689","name":"ZFSet.mk_out","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mk_out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L683-L684","name":"ZFSet.mk_eq","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mk_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L678-L679","name":"ZFSet.mk","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.mk","doc":"Turns a pre-set into a ZFC set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L655-L668","name":"Classical.AllDefinable","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Classical.AllDefinable","doc":"All functions are classically definable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L643-L645","name":"PSet.Definable.eq","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Definable.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L639-L640","name":"PSet.Definable.Resp","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Definable.Resp","doc":"Turns a definable function into a function that respects equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L634-L635","name":"PSet.Definable.EqMk","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Definable.EqMk","doc":"The evaluation of a function respecting equivalence is definable, by that same function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L628-L628","name":"PSet.Definable.mk","kind":"ctor","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Definable.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L627-L628","name":"PSet.Definable","kind":"class","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Definable","doc":"A set function is \"definable\" if it is the image of some n-ary pre-set\nfunction. This isn't exactly definability, but is useful as a sufficient\ncondition for functions that have a computable image. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L618-L619","name":"PSet.Resp.eval_val","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.eval_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L614-L615","name":"PSet.Resp.eval","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.eval","doc":"An equivalence-respecting function yields an n-ary ZFC set function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L600-L610","name":"PSet.Resp.EvalAux","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.EvalAux","doc":"Helper function for `pSet.eval`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L591-L592","name":"ZFSet","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet","doc":"The ZFC universe of sets consists of the type of pre-sets,\nquotiented by extensional equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L583-L584","name":"PSet.Resp.setoid","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.setoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L578-L580","name":"PSet.Resp.Equiv.trans","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.Equiv.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L574-L575","name":"PSet.Resp.Equiv.symm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.Equiv.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L567-L571","name":"PSet.Resp.Equiv.euc","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.Equiv.euc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L563-L564","name":"PSet.Resp.Equiv.refl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.Equiv.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L559-L560","name":"PSet.Resp.Equiv","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.Equiv","doc":"Function equivalence for functions respecting equivalence. See `pSet.arity.equiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L554-L555","name":"PSet.Resp.f","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.f","doc":"The `n`-ary image of a `(n + 1)`-ary function respecting equivalence as a function respecting\nequivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L548-L549","name":"PSet.Resp.inhabited","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L544-L545","name":"PSet.Resp","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Resp","doc":"`resp n` is the collection of n-ary functions on `pSet` that respect\nequivalence, i.e. when the inputs are equivalent the output is as well. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L537-L539","name":"PSet.Arity.equiv_const","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Arity.equiv_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L532-L534","name":"PSet.Arity.Equiv","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Arity.Equiv","doc":"Function equivalence is defined so that `f ~ g` iff `∀ x y, x ~ y → f x ~ g y`. This extends to\nequivalence of `n`-ary functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L526-L527","name":"PSet.lift_mem_embed","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.lift_mem_embed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L522-L523","name":"PSet.embed","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.embed","doc":"Embedding of one universe in another "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L515-L516","name":"PSet.Lift","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Lift","doc":"Universe lift operation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L508-L511","name":"PSet.mem_image","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L503-L504","name":"PSet.image","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.image","doc":"The image of a function from pre-sets to pre-sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L497-L499","name":"PSet.toSet_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.toSet_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L483-L493","name":"PSet.mem_sUnion","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_sUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L479-L480","name":"PSet.«term⋃₀_»","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.«term⋃₀_»","doc":"The pre-set union operator "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L475-L476","name":"PSet.sUnion","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.sUnion","doc":"The pre-set union operator "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L465-L471","name":"PSet.mem_powerset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_powerset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L460-L461","name":"PSet.powerset","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.powerset","doc":"The pre-set powerset operator "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L456-L457","name":"PSet.instSepPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instSepPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L452-L453","name":"PSet.sep","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.sep","doc":"The pre-set separation operation `{x ∈ a | p x}` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L447-L448","name":"PSet.omega","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.omega","doc":"The von Neumann ordinal ω "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L441-L443","name":"PSet.ofNat","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.ofNat","doc":"The n-th von Neumann ordinal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L437-L438","name":"PSet.instInhabitedTypeInsertPSetInstInsertPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instInhabitedTypeInsertPSetInstInsertPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L434-L435","name":"PSet.instIsLawfulSingletonPSetInstEmptyCollectionPSetInstInsertPSetPSetInstSingletonPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsLawfulSingletonPSetInstEmptyCollectionPSetInstInsertPSetPSetInstSingletonPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L431-L432","name":"PSet.instSingletonPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instSingletonPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L428-L429","name":"PSet.instInsertPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instInsertPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L424-L425","name":"PSet.insert","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.insert","doc":"Insert an element into a pre-set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L419-L420","name":"PSet.equiv_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.equiv_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L416-L416","name":"PSet.not_nonempty_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.not_nonempty_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L412-L412","name":"PSet.empty_subset","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.empty_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L408-L408","name":"PSet.toSet_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.toSet_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L403-L404","name":"PSet.not_mem_empty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.not_mem_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L399-L400","name":"PSet.instIsEmptyTypeEmptyCollectionPSetInstEmptyCollectionPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsEmptyTypeEmptyCollectionPSetInstEmptyCollectionPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L396-L397","name":"PSet.instInhabitedPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instInhabitedPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L393-L394","name":"PSet.instEmptyCollectionPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instEmptyCollectionPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L389-L390","name":"PSet.empty","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.empty","doc":"The empty pre-set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L385-L386","name":"PSet.instCoePSetSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instCoePSetSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L381-L382","name":"PSet.Equiv.eq","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.eq","doc":"Two pre-sets are equivalent iff they have the same members. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L376-L377","name":"PSet.nonempty_of_nonempty_type","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.nonempty_of_nonempty_type","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L372-L373","name":"PSet.nonempty_type_iff_nonempty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.nonempty_type_iff_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L368-L369","name":"PSet.nonempty_toSet_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.nonempty_toSet_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L363-L364","name":"PSet.nonempty_of_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.nonempty_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L359-L360","name":"PSet.nonempty_def","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.nonempty_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L355-L356","name":"PSet.Nonempty","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Nonempty","doc":"A nonempty set is one that contains some element. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L350-L351","name":"PSet.mem_toSet","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_toSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L345-L346","name":"PSet.toSet","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.toSet","doc":"Convert a pre-set to a `set` of pre-sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L340-L341","name":"PSet.mem_irrefl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L336-L337","name":"PSet.mem_asymm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_asymm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L333-L334","name":"PSet.instIsIrreflPSetMemInstMembershipPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsIrreflPSetMemInstMembershipPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L330-L331","name":"PSet.instIsAsymmPSetMemInstMembershipPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsAsymmPSetMemInstMembershipPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L327-L328","name":"PSet.instWellFoundedRelationPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instWellFoundedRelationPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L323-L324","name":"PSet.mem_wf","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mem_wf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L310-L311","name":"PSet.Mem.congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Mem.congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L301-L307","name":"PSet.equiv_iff_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.equiv_iff_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L291-L298","name":"PSet.Mem.congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Mem.congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L284-L288","name":"PSet.Mem.ext","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Mem.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L279-L281","name":"PSet.func_mem","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.func_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L275-L276","name":"PSet.Mem.mk","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Mem.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L272-L273","name":"PSet.instMembershipPSetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instMembershipPSetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L268-L269","name":"PSet.Mem","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Mem","doc":"`x ∈ y` as pre-sets if `x` is extensionally equivalent to a member of the family `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L255-L264","name":"PSet.Subset.congr_right","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Subset.congr_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L243-L252","name":"PSet.Subset.congr_left","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Subset.congr_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L231-L240","name":"PSet.Equiv.ext","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L225-L229","name":"PSet.instIsTransPSetSubsetInstHasSubsetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsTransPSetSubsetInstHasSubsetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L222-L223","name":"PSet.instIsReflPSetSubsetInstHasSubsetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instIsReflPSetSubsetInstHasSubsetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L219-L220","name":"PSet.instHasSubsetPSet","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.instHasSubsetPSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L215-L216","name":"PSet.Subset","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Subset","doc":"A pre-set is a subset of another pre-set if every element of the first family is extensionally\nequivalent to some element of the second family."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L209-L210","name":"PSet.setoid","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.setoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L205-L206","name":"PSet.equiv_of_isEmpty","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.equiv_of_isEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L201-L202","name":"PSet.Equiv.trans","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L196-L197","name":"PSet.Equiv.comm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L192-L193","name":"PSet.Equiv.symm","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L179-L188","name":"PSet.Equiv.euc","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.euc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L175-L176","name":"PSet.Equiv.rfl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.rfl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L171-L172","name":"PSet.Equiv.refl","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L166-L167","name":"PSet.Equiv.exists_right","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.exists_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L162-L163","name":"PSet.Equiv.exists_left","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv.exists_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L156-L159","name":"PSet.equiv_iff","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.equiv_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L152-L153","name":"PSet.Equiv","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Equiv","doc":"Two pre-sets are extensionally equivalent if every element of the first family is extensionally\nequivalent to some element of the second family and vice-versa. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L146-L147","name":"PSet.eta","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.eta","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L141-L142","name":"PSet.mk_func","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mk_func","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L136-L137","name":"PSet.mk_type","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mk_type","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L131-L132","name":"PSet.Func","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Func","doc":"The underlying pre-set family of a pre-set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L126-L127","name":"PSet.Type","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.Type","doc":"The underlying type of a pre-set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L120-L120","name":"PSet.mk","kind":"ctor","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L119-L120","name":"PSet","kind":"inductive","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#PSet","doc":"The type of pre-sets in universe `u`. A pre-set\nis a family of pre-sets indexed by a type in `Type u`.\nThe ZFC universe is defined as a quotient of this\nto ensure extensionality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L109-L110","name":"Arity.Arity.inhabited","kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity.Arity.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L105-L106","name":"Arity.const_succ_apply","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity.const_succ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L101-L102","name":"Arity.const_succ","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity.const_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L96-L97","name":"Arity.const_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity.const_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L90-L92","name":"Arity.Const","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity.Const","doc":"Constant `n`-ary function with value `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L83-L84","name":"arity_succ","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#arity_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L78-L79","name":"arity_zero","kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#arity_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/SetTheory/ZFC/Basic.lean#L72-L74","name":"Arity","kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Basic.html#Arity","doc":"The type of `n`-ary functions `α → α → ... → α`. "}]}