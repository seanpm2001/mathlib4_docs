{"name":"Lean.Parser.Extra","instances":[],"imports":["Init","Lean.Parser.Extension","Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L183-L183","name":"Lean.Parser.«termRegister_parser_alias(Kind:=_)______»","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.«termRegister_parser_alias(Kind:=_)______»","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L168-L172","name":"Lean.ppHardLineUnlessUngrouped.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppHardLineUnlessUngrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L163-L167","name":"Lean.ppDedentIfGrouped.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppDedentIfGrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L161-L162","name":"Lean.ppAllowUngrouped.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppAllowUngrouped.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L157-L159","name":"Lean.ppDedent.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppDedent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L156-L156","name":"Lean.ppIndent.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppIndent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L155-L155","name":"Lean.ppRealGroup.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppRealGroup.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L154-L154","name":"Lean.ppRealFill.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppRealFill.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L153-L153","name":"Lean.ppLine.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppLine.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L152-L152","name":"Lean.ppSpace.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppSpace.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L151-L151","name":"Lean.ppHardSpace.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppHardSpace.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L144-L144","name":"Lean.Parser.ppHardLineUnlessUngrouped","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardLineUnlessUngrouped","doc":"No-op parser combinator that prints a line break.\nThe line break is soft if the combinator is followed\nby an ungrouped parser (see ppAllowUngrouped), otherwise hard. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L138-L138","name":"Lean.Parser.ppDedentIfGrouped","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedentIfGrouped","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax,\nif it was grouped by the category parser.\nDedenting can in particular be used to counteract automatic indentation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L132-L132","name":"Lean.Parser.ppAllowUngrouped","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppAllowUngrouped","doc":"No-op parser combinator that allows the pretty printer to omit the group and\nindent operation in the enclosing category parser.\n```\nsyntax ppAllowUngrouped \"by \" tacticSeq : term\n-- allows a `by` after `:=` without linebreak in between:\ntheorem foo : True := by\n  trivial\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L120-L120","name":"Lean.Parser.ppDedent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedent","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax.\nDedenting can in particular be used to counteract automatic indentation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L116-L116","name":"Lean.Parser.ppGroup","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppGroup","doc":"No-op parser combinator that advises the pretty printer to group and indent the given syntax.\nBy default, only syntax categories are grouped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L112-L112","name":"Lean.Parser.ppIndent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppIndent","doc":"No-op parser combinator that advises the pretty printer to indent the given syntax without grouping it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L110-L110","name":"Lean.Parser.ppRealGroup","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealGroup","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.group` node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L108-L108","name":"Lean.Parser.ppRealFill","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealFill","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.fill` node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L106-L106","name":"Lean.Parser.ppLine","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppLine","doc":"No-op parser that advises the pretty printer to emit a hard line break. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L104-L104","name":"Lean.Parser.ppSpace","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppSpace","doc":"No-op parser that advises the pretty printer to emit a space/soft line break. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L102-L102","name":"Lean.Parser.ppHardSpace","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardSpace","doc":"No-op parser that advises the pretty printer to emit a non-breaking space. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L99-L99","name":"Lean.Parser.patternIgnore","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.patternIgnore","doc":"No-op parser combinator that annotates subtrees to be ignored in syntax patterns. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L95-L96","name":"Lean.Parser.notSymbol","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.notSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L91-L91","name":"Lean.Parser.sepBy1Indent.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L77-L89","name":"Lean.Parser.sepByIndent.formatter","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent.formatter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L71-L73","name":"Lean.Parser.sepBy1Indent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L67-L69","name":"Lean.Parser.sepByIndent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L64-L65","name":"Lean.Parser.manyIndent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.manyIndent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L61-L62","name":"Lean.Parser.many1Indent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1Indent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L58-L59","name":"Lean.Parser.group","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.group","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L55-L56","name":"Lean.Parser.nameLit","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.nameLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L52-L53","name":"Lean.Parser.charLit","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.charLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L49-L50","name":"Lean.Parser.strLit","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.strLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L46-L47","name":"Lean.Parser.scientificLit","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.scientificLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L43-L44","name":"Lean.Parser.numLit","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.numLit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L40-L41","name":"Lean.Parser.hygieneInfo","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.hygieneInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L37-L38","name":"Lean.Parser.rawIdent","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.rawIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L33-L34","name":"Lean.Parser.ident","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ident","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L30-L31","name":"Lean.Parser.many1","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L27-L28","name":"Lean.Parser.many","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/a44dd71ad62a1760e32b0e8a12449e560ddcf492/src/Lean/Parser/Extra.lean#L24-L25","name":"Lean.Parser.optional","kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.optional","doc":""}]}