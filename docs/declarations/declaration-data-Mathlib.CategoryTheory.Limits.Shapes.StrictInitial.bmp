{"name":"Mathlib.CategoryTheory.Limits.Shapes.StrictInitial","instances":[{"typeNames":[],"name":"CategoryTheory.Limits.initial_mono_of_strict_initial_objects","className":"CategoryTheory.Limits.InitialMonoClass"},{"typeNames":["CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.initial_isIso_to","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.terminal_isIso_from","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Terminal","Mathlib.CategoryTheory.Limits.Shapes.BinaryProducts"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L262-L266","name":"CategoryTheory.Limits.hasStrictTerminalObjects_of_terminal_is_strict","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.hasStrictTerminalObjects_of_terminal_is_strict","doc":"If `C` has an object such that every morphism *from* it is an isomorphism, then `C`\nhas strict terminal objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L254-L255","name":"CategoryTheory.Limits.terminal.subsingleton_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.terminal.subsingleton_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L250-L251","name":"CategoryTheory.Limits.terminal.hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.terminal.hom_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L245-L246","name":"CategoryTheory.Limits.terminal_isIso_from","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.terminal_isIso_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L209-L240","name":"CategoryTheory.Limits.limit_π_isIso_of_is_strict_terminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.limit_π_isIso_of_is_strict_terminal","doc":"If all but one object in a diagram is strict terminal, then the limit is isomorphic to the\nsaid object via `limit.π`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L201-L202","name":"CategoryTheory.Limits.IsTerminal.subsingleton_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsTerminal.subsingleton_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L195-L198","name":"CategoryTheory.Limits.IsTerminal.strict_hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsTerminal.strict_hom_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L191-L192","name":"CategoryTheory.Limits.IsTerminal.isIso_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsTerminal.isIso_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L182-L182","name":"CategoryTheory.Limits.HasStrictTerminalObjects.out","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictTerminalObjects.out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L181-L182","name":"CategoryTheory.Limits.HasStrictTerminalObjects","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictTerminalObjects","doc":"We say `C` has strict terminal objects if every terminal object is strict, ie given any morphism\n`f : I ⟶ A` where `I` is terminal, then `f` is an isomorphism.\n\nStrictly speaking, this says that *any* terminal object must be strict, rather than that strict\nterminal objects exist.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L164-L168","name":"CategoryTheory.Limits.hasStrictInitialObjects_of_initial_is_strict","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.hasStrictInitialObjects_of_initial_is_strict","doc":"If `C` has an initial object such that every morphism *to* it is an isomorphism, then `C`\nhas strict initial objects. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L156-L157","name":"CategoryTheory.Limits.initialMul_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initialMul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L151-L152","name":"CategoryTheory.Limits.initialMul","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initialMul","doc":"The product of `X` with an initial object in a category with strict initial objects is itself\ninitial.\nThis is the generalisation of the fact that `Empty × X ≃ Empty` for types (or `0 * n = 0`).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L150-L150","name":"CategoryTheory.Limits.initialMul_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initialMul_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L142-L143","name":"CategoryTheory.Limits.mulInitial_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulInitial_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L137-L138","name":"CategoryTheory.Limits.mulInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulInitial","doc":"The product of `X` with an initial object in a category with strict initial objects is itself\ninitial.\nThis is the generalisation of the fact that `X × Empty ≃ Empty` for types (or `n * 0 = 0`).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L136-L136","name":"CategoryTheory.Limits.mulInitial_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulInitial_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L128-L129","name":"CategoryTheory.Limits.initial.subsingleton_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initial.subsingleton_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L124-L125","name":"CategoryTheory.Limits.initial.hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initial.hom_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L119-L120","name":"CategoryTheory.Limits.initial_isIso_to","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initial_isIso_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L112-L114","name":"CategoryTheory.Limits.isInitialMul_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.isInitialMul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L106-L108","name":"CategoryTheory.Limits.isInitialMul","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.isInitialMul","doc":"If `I` is initial, then `I ⨯ X` is isomorphic to it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L105-L105","name":"CategoryTheory.Limits.isInitialMul_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.isInitialMul_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L99-L101","name":"CategoryTheory.Limits.mulIsInitial_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulIsInitial_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L93-L95","name":"CategoryTheory.Limits.mulIsInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulIsInitial","doc":"If `I` is initial, then `X ⨯ I` is isomorphic to it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L92-L92","name":"CategoryTheory.Limits.mulIsInitial_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.mulIsInitial_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L87-L88","name":"CategoryTheory.Limits.initial_mono_of_strict_initial_objects","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.initial_mono_of_strict_initial_objects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L83-L84","name":"CategoryTheory.Limits.IsInitial.subsingleton_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsInitial.subsingleton_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L77-L80","name":"CategoryTheory.Limits.IsInitial.strict_hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsInitial.strict_hom_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L73-L74","name":"CategoryTheory.Limits.IsInitial.isIso_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.IsInitial.isIso_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L64-L64","name":"CategoryTheory.Limits.HasStrictInitialObjects.out","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictInitialObjects.out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L63-L64","name":"CategoryTheory.Limits.HasStrictInitialObjects","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictInitialObjects","doc":"We say `C` has strict initial objects if every initial object is strict, ie given any morphism\n`f : A ⟶ I` where `I` is initial, then `f` is an isomorphism.\n\nStrictly speaking, this says that *any* initial object must be strict, rather than that strict\ninitial objects exist.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L1-L1","name":"CategoryTheory.Limits.HasStrictInitialObjects.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictInitialObjects.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.lean#L1-L1","name":"CategoryTheory.Limits.HasStrictTerminalObjects.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/StrictInitial.html#CategoryTheory.Limits.HasStrictTerminalObjects.mk","doc":""}]}