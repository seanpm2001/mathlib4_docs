{"name":"Mathlib.CategoryTheory.Sites.Coverage","instances":[{"typeNames":["CategoryTheory.Coverage","CategoryTheory.Coverage","Set","CategoryTheory.Presieve"],"name":"CategoryTheory.Coverage.instCoeFunCoverageForAllSetPresieve","className":"CoeFun"},{"typeNames":["CategoryTheory.Coverage"],"name":"CategoryTheory.Coverage.instPartialOrderCoverage","className":"PartialOrder"}],"imports":["Init","Mathlib.CategoryTheory.Sites.SheafOfTypes"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L297-L365","name":"CategoryTheory.Presieve.isSheaf_coverage","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_coverage","doc":"The main theorem of this file: Given a coverage `K` on `C`,\na `Type _`-valued presheaf on `C` is a sheaf for `K` if and only if it is a sheaf for\nthe associated Grothendieck topology.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L273-L284","name":"CategoryTheory.Coverage.toGrothendieck_eq_sInf","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck_eq_sInf","doc":"An alternative characterization of the Grothendieck topology associated to a coverage `K`:\nit is the infimum of all Grothendieck topologies whose associated coverage contains `K`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L251-L267","name":"CategoryTheory.Coverage.gi","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.gi","doc":"The two constructions `Coverage.toGrothendieck` and `Coverage.ofGrothendieck` form\na Galois insertion.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L239-L244","name":"CategoryTheory.Coverage.instPartialOrderCoverage","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instPartialOrderCoverage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L216-L237","name":"CategoryTheory.Coverage.toGrothendieck","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck","doc":"The Grothendieck topology associated to a coverage `K`.\nIt is defined *inductively* as follows:\n1. If `S` is a covering presieve for `K`, then the sieve generated by `S` is a covering\n  sieve for the associated Grothendieck topology.\n2. The top sieves are in the associated Grothendieck topology.\n3. Add all sieves required by the *local character* axiom of a Grothendieck topology.\n\nThe pullback compatibility condition for a coverage ensures that the\nassociated Grothendieck topology is pullback stable, and so an additional constructor\nin the inductive construction is not needed.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L195-L201","name":"CategoryTheory.Coverage.saturate_of_superset","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate_of_superset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L187-L193","name":"CategoryTheory.Coverage.eq_top_pullback","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.eq_top_pullback","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L182-L185","name":"CategoryTheory.Coverage.saturate.transitive","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate.transitive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L181-L181","name":"CategoryTheory.Coverage.saturate.top","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate.top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L180-L180","name":"CategoryTheory.Coverage.saturate.of","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate.of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L179-L185","name":"CategoryTheory.Coverage.saturate","kind":"inductive","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate","doc":"An auxiliary definition used to define the Grothendieck topology associated to a\ncoverage. See `Coverage.toGrothendieck`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L172-L173","name":"CategoryTheory.Coverage.ofGrothendieck_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L163-L170","name":"CategoryTheory.Coverage.ofGrothendieck","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck","doc":"Associate a coverage to any Grothendieck topology.\nIf `J` is a Grothendieck topology, and `K` is the associated coverage, then a presieve\n`S` is a covering presieve for `K` if and only if the sieve that it generates is a\ncovering sieve for `J`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L153-L154","name":"CategoryTheory.Coverage.instCoeFunCoverageForAllSetPresieve","kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instCoeFunCoverageForAllSetPresieve","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L148-L148","name":"CategoryTheory.Coverage.pullback","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.pullback","doc":"Given any covering sieve `S` on `X` and a morphism `f : Y ⟶ X`, there exists\nsome covering sieve `T` on `Y` such that `T` factors through `S` along `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L145-L145","name":"CategoryTheory.Coverage.covering","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering","doc":"The collection of covering presieves for an object `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L143-L149","name":"CategoryTheory.Coverage","kind":"structure","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage","doc":"The type `Coverage C` of coverages on `C`.\nA coverage is a collection of *covering* presieves on every object `X : C`,\nwhich satisfies a *pullback compatibility* condition.\nExplicitly, this condition says that whenever `S` is a covering presieve for `X` and\n`f : Y ⟶ X` is a morphism, then there exists some covering presieve `T` for `Y`\nsuch that `T` factors through `S` along `f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L142-L142","name":"CategoryTheory.Coverage.ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L142-L142","name":"CategoryTheory.Coverage.ext_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L97-L128","name":"CategoryTheory.Presieve.isSheafFor_of_factorsThru","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheafFor_of_factorsThru","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L94-L95","name":"CategoryTheory.Presieve.factorsThru_top","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L88-L92","name":"CategoryTheory.Presieve.le_of_factorsThru_sieve","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.le_of_factorsThru_sieve","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L84-L86","name":"CategoryTheory.Presieve.factorsThru_of_le","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L80-L82","name":"CategoryTheory.Presieve.factorsThruAlong_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThruAlong_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L75-L77","name":"CategoryTheory.Presieve.FactorsThru","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru","doc":"Given `S T : Presieve X`, we say that `S` factors through `T` if any morphism in `S`\nfactors through some morphism in `T`.\n\nThe lemma `Presieve.isSheafFor_of_factorsThru` gives a *sufficient* condition for a\npresheaf to be a sheaf for a presieve `T`, in terms of `S.FactorsThru T`, provided\nthat the presheaf is a sheaf for `S`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L63-L65","name":"CategoryTheory.Presieve.FactorsThruAlong","kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong","doc":"Given a morphism `f : Y ⟶ X`, a presieve `S` on `Y` and presieve `T` on `X`,\nwe say that *`S` factors through `T` along `f`*, written `S.FactorsThruAlong T f`,\nprovided that for any morphism `g : Z ⟶ Y` in `S`, there exists some\nmorphism `e : W ⟶ X` in `T` and some morphism `i : Z ⟶ W` such that the obvious\nsquare commutes: `i ≫ e = g ≫ f`.\n\nThis is used in the definition of a coverage.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Sites/Coverage.lean#L1-L1","name":"CategoryTheory.Coverage.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.mk","doc":""}]}