{"name":"Mathlib.Logic.Equiv.Fin","instances":[{"typeNames":["Fin","OfNat.ofNat","Nat","instOfNatNat"],"name":"subsingleton_fin_zero","className":"Subsingleton"},{"typeNames":["Fin","OfNat.ofNat","Nat","instOfNatNat"],"name":"subsingleton_fin_one","className":"Subsingleton"}],"imports":["Init","Mathlib.Data.Fin.VecNotation","Mathlib.Data.Int.Order.Basic","Mathlib.Logic.Equiv.Defs"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L549-L550","name":"subsingleton_fin_one","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Fin.html#subsingleton_fin_one","doc":"`Fin 1` is a subsingleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L544-L545","name":"subsingleton_fin_zero","kind":"instance","docLink":"./Mathlib/Logic/Equiv/Fin.html#subsingleton_fin_zero","doc":"`Fin 0` is a subsingleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L532-L538","name":"Fin.castLEOrderIso","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.castLEOrderIso","doc":"Promote a `Fin n` into a larger `Fin m`, as a subtype where the underlying\nvalues are retained. This is the `OrderIso` version of `Fin.castLE`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L531-L531","name":"Fin.castLEOrderIso_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.castLEOrderIso_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L531-L531","name":"Fin.castLEOrderIso_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.castLEOrderIso_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L512-L526","name":"Int.divModEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#Int.divModEquiv","doc":"The equivalence induced by `a ↦ (a / n, a % n)` for nonzero `n`.\nSee `Int.ediv_emod_unique` for a similar propositional statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L511-L511","name":"Int.divModEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Int.divModEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L511-L511","name":"Int.divModEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Int.divModEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L498-L506","name":"Nat.divModEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#Nat.divModEquiv","doc":"The equivalence induced by `a ↦ (a / n, a % n)` for nonzero `n`.\nThis is like `finProdFinEquiv.symm` but with `m` infinite.\nSee `Nat.div_mod_unique` for a similar propositional statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L497-L497","name":"Nat.divModEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Nat.divModEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L497-L497","name":"Nat.divModEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Nat.divModEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L464-L489","name":"finProdFinEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finProdFinEquiv","doc":"Equivalence between `Fin m × Fin n` and `Fin (m * n)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L463-L463","name":"finProdFinEquiv_apply_val","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finProdFinEquiv_apply_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L463-L463","name":"finProdFinEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finProdFinEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L457-L459","name":"coe_finRotate","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#coe_finRotate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L450-L454","name":"coe_finRotate_of_ne_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#coe_finRotate_of_ne_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L446-L447","name":"finRotate_apply_zero","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_apply_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L435-L442","name":"finRotate_succ_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_succ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L431-L432","name":"finRotate_one","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L416-L427","name":"Fin.snoc_eq_cons_rotate","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.snoc_eq_cons_rotate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L412-L413","name":"finRotate_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L406-L409","name":"finRotate_last'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_last'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L399-L403","name":"finRotate_of_lt","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L397-L397","name":"finRotate_succ","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L394-L394","name":"finRotate_zero","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L389-L391","name":"finRotate","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finRotate","doc":"Rotate `Fin n` one step to the right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L381-L385","name":"finAddFlip_apply_mk_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finAddFlip_apply_mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L374-L377","name":"finAddFlip_apply_mk_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finAddFlip_apply_mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L369-L370","name":"finAddFlip_apply_natAdd","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finAddFlip_apply_natAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L364-L365","name":"finAddFlip_apply_castAdd","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finAddFlip_apply_castAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L359-L360","name":"finAddFlip","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finAddFlip","doc":"The equivalence between `Fin (m + n)` and `Fin (n + m)` which rotates by `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L354-L355","name":"finSumFinEquiv_symm_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv_symm_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L348-L350","name":"finSumFinEquiv_symm_apply_natAdd","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv_symm_apply_natAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L342-L344","name":"finSumFinEquiv_symm_apply_castAdd","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv_symm_apply_castAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L336-L338","name":"finSumFinEquiv_apply_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv_apply_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L330-L332","name":"finSumFinEquiv_apply_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv_apply_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L321-L326","name":"finSumFinEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSumFinEquiv","doc":"Equivalence between `Fin m ⊕ Fin n` and `Fin (m + n)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L314-L315","name":"Equiv.piFinSucc","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSucc","doc":"Equivalence between `Fin (n + 1) → β` and `β × (Fin n → β)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L313-L313","name":"Equiv.piFinSucc_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSucc_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L313-L313","name":"Equiv.piFinSucc_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSucc_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L306-L309","name":"OrderIso.piFinSuccAboveIso","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#OrderIso.piFinSuccAboveIso","doc":"Order isomorphism between `Π j : Fin (n + 1), α j` and\n`α i × Π j : Fin n, α (Fin.succAbove i j)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L294-L299","name":"Equiv.piFinSuccAboveEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSuccAboveEquiv","doc":"Equivalence between `Π j : Fin (n + 1), α j` and `α i × Π j : Fin n, α (Fin.succAbove i j)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L293-L293","name":"Equiv.piFinSuccAboveEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSuccAboveEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L293-L293","name":"Equiv.piFinSuccAboveEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSuccAboveEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L288-L289","name":"finSuccEquivLast_symm_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquivLast_symm_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L283-L284","name":"finSuccEquivLast_symm_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquivLast_symm_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L278-L279","name":"finSuccEquivLast_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquivLast_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L273-L274","name":"finSuccEquivLast_castSucc","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquivLast_castSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L268-L269","name":"finSuccEquivLast","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquivLast","doc":"`Equiv` between `Fin (n + 1)` and `Option (Fin n)` sending `Fin.last n` to `none` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L260-L264","name":"finSuccAboveEquiv_symm_apply_ne_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccAboveEquiv_symm_apply_ne_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L254-L257","name":"finSuccAboveEquiv_symm_apply_last","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccAboveEquiv_symm_apply_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L249-L251","name":"finSuccAboveEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccAboveEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L244-L246","name":"finSuccAboveEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccAboveEquiv","doc":"`Fin.succAbove` as an order isomorphism between `Fin n` and `{x : Fin (n + 1) // x ≠ p}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L236-L240","name":"finSuccEquiv'_ne_last_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_ne_last_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L229-L233","name":"finSuccEquiv'_last_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_last_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L225-L227","name":"finSuccEquiv'_last_apply_castSucc","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_last_apply_castSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L221-L222","name":"finSuccEquiv'_zero","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_zero","doc":"The equiv version of `Fin.predAbove_zero`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L215-L216","name":"finSuccEquiv_symm_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv_symm_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L210-L211","name":"finSuccEquiv_symm_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv_symm_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L205-L206","name":"finSuccEquiv_succ","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L200-L201","name":"finSuccEquiv_zero","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L195-L196","name":"finSuccEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv","doc":"Equivalence between `Fin (n + 1)` and `Option (Fin n)`.\nThis is a version of `Fin.pred` that produces `Option (Fin n)` instead of\nrequiring a proof that the input is not `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L187-L189","name":"finSuccEquiv'_symm_coe_above","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_coe_above","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L182-L184","name":"finSuccEquiv'_symm_coe_below","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_coe_below","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L177-L179","name":"finSuccEquiv'_symm_some_above","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_some_above","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L172-L174","name":"finSuccEquiv'_symm_some_below","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_some_below","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L167-L169","name":"finSuccEquiv'_symm_some","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L162-L163","name":"finSuccEquiv'_symm_none","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_symm_none","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L156-L158","name":"finSuccEquiv'_above","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_above","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L151-L153","name":"finSuccEquiv'_below","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_below","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L146-L148","name":"finSuccEquiv'_succAbove","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_succAbove","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L141-L142","name":"finSuccEquiv'_at","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'_at","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L132-L137","name":"finSuccEquiv'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finSuccEquiv'","doc":"An equivalence that removes `i` and maps it to `none`.\nThis is a version of `Fin.predAbove` that produces `Option (Fin n)` instead of\nmapping both `i.cast_succ` and `i.succ` to `i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L125-L126","name":"finCongr_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finCongr_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L121-L122","name":"finCongr_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finCongr_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L117-L118","name":"finCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L112-L114","name":"finCongr_apply_mk","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finCongr_apply_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L108-L109","name":"finCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finCongr","doc":"The 'identity' equivalence between `Fin n` and `Fin m` when `n = m`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L103-L104","name":"OrderIso.finTwoArrowIso","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#OrderIso.finTwoArrowIso","doc":"The space of functions `Fin 2 → α` is order equivalent to `α × α`. See also\n`OrderIso.piFinTwoIso`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L95-L98","name":"OrderIso.piFinTwoIso","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#OrderIso.piFinTwoIso","doc":"`Π i : Fin 2, α i` is order equivalent to `α 0 × α 1`. See also `OrderIso.finTwoArrowEquiv`\nfor a non-dependent version. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L87-L88","name":"finTwoArrowEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finTwoArrowEquiv","doc":"The space of functions `Fin 2 → α` is equivalent to `α × α`. See also `piFinTwoEquiv` and\n`prodEquivPiFinTwo`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L86-L86","name":"finTwoArrowEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finTwoArrowEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L86-L86","name":"finTwoArrowEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#finTwoArrowEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L78-L79","name":"prodEquivPiFinTwo","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#prodEquivPiFinTwo","doc":"A product space `α × β` is equivalent to the space `Π i : Fin 2, γ i`, where\n`γ = Fin.cons α (Fin.cons β finZeroElim)`. See also `piFinTwoEquiv` and\n`finTwoArrowEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L77-L77","name":"prodEquivPiFinTwo_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#prodEquivPiFinTwo_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L77-L77","name":"prodEquivPiFinTwo_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#prodEquivPiFinTwo_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L69-L71","name":"Fin.preimage_apply_01_prod'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.preimage_apply_01_prod'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L60-L65","name":"Fin.preimage_apply_01_prod","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#Fin.preimage_apply_01_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L49-L54","name":"piFinTwoEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#piFinTwoEquiv","doc":"`Π i : Fin 2, α i` is equivalent to `α 0 × α 1`. See also `finTwoArrowEquiv` for a\nnon-dependent version and `prodEquivPiFinTwo` for a version with inputs `α β : Type u`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L48-L48","name":"piFinTwoEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#piFinTwoEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L48-L48","name":"piFinTwoEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Fin.html#piFinTwoEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L39-L43","name":"finTwoEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finTwoEquiv","doc":"Equivalence between `Fin 2` and `Bool`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L34-L35","name":"finOneEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finOneEquiv","doc":"Equivalence between `Fin 1` and `Unit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L29-L30","name":"finZeroEquiv'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finZeroEquiv'","doc":"Equivalence between `Fin 0` and `PEmpty`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Fin.lean#L24-L25","name":"finZeroEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Fin.html#finZeroEquiv","doc":"Equivalence between `Fin 0` and `Empty`. "}]}