{"name":"Archive.MiuLanguage.Basic","instances":[{"typeNames":["Eq","Miu.MiuAtom"],"name":"Miu.instDecidableEqMiuAtom","className":"Decidable"},{"typeNames":["Miu.MiuAtom"],"name":"Miu.miuAtomInhabited","className":"Inhabited"},{"typeNames":["Miu.MiuAtom"],"name":"Miu.instReprMiuAtom","className":"Repr"},{"typeNames":["Miu.MiuAtom","Miu.Miustr"],"name":"Miu.instMembershipMiuAtomMiustr","className":"Membership"},{"typeNames":["Miu.Miustr"],"name":"Miu.miurepr","className":"Repr"},{"typeNames":["String","Miu.Miustr"],"name":"Miu.stringCoeMiustr","className":"Coe"}],"imports":["Init","Mathlib.Tactic.Linarith"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L168-L168","name":"Miu.Derivable.r4","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable.r4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L167-L167","name":"Miu.Derivable.r3","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable.r3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L166-L166","name":"Miu.Derivable.r2","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable.r2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L165-L165","name":"Miu.Derivable.r1","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable.r1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L164-L164","name":"Miu.Derivable.mk","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L163-L168","name":"Miu.Derivable","kind":"inductive","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Derivable","doc":"The inductive type `Derivable` has five constructors. The nonrecursive constructor `mk` corresponds\nto Hofstadter's axiom that `\"MI\"` is derivable. Each of the constructors `r1`, `r2`, `r3`, `r4`\ncorresponds to the one of Hofstadter's rules of inference.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L148-L149","name":"Miu.stringCoeMiustr","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.stringCoeMiustr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L137-L145","name":"Miu.lcharToMiustr","kind":"def","docLink":"./Archive/MiuLanguage/Basic.html#Miu.lcharToMiustr","doc":"In the other direction, we set up a coercion from `String` to `Miustr`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L131-L132","name":"Miu.miurepr","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.miurepr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L126-L128","name":"Miu.Miustr.mrepr","kind":"def","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Miustr.mrepr","doc":"For display purposes, an `Miustr` can be represented as a `String`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L122-L122","name":"Miu.instMembershipMiuAtomMiustr","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.instMembershipMiuAtomMiustr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L117-L119","name":"Miu.Miustr","kind":"def","docLink":"./Archive/MiuLanguage/Basic.html#Miu.Miustr","doc":"For simplicity, an `Miustr` is just a list of elements of type `MiuAtom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L112-L113","name":"Miu.instReprMiuAtom","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.instReprMiuAtom","doc":"Using `MiuAtom.repr`, we prove that `MiuAtom` is an instance of `Repr`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L104-L107","name":"Miu.MiuAtom.repr","kind":"def","docLink":"./Archive/MiuLanguage/Basic.html#Miu.MiuAtom.repr","doc":"`MiuAtom.repr` is the 'natural' function from `MiuAtom` to `String`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L98-L99","name":"Miu.miuAtomInhabited","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.miuAtomInhabited","doc":"We show that the type `MiuAtom` is inhabited, giving `M` (for no particular reason) as the default\nelement.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L82-L82","name":"Miu.instDecidableEqMiuAtom","kind":"instance","docLink":"./Archive/MiuLanguage/Basic.html#Miu.instDecidableEqMiuAtom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L81-L81","name":"Miu.MiuAtom.U","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.MiuAtom.U","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L80-L80","name":"Miu.MiuAtom.I","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.MiuAtom.I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L79-L79","name":"Miu.MiuAtom.M","kind":"ctor","docLink":"./Archive/MiuLanguage/Basic.html#Miu.MiuAtom.M","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/Basic.lean#L78-L82","name":"Miu.MiuAtom","kind":"inductive","docLink":"./Archive/MiuLanguage/Basic.html#Miu.MiuAtom","doc":"The atoms of MIU can be represented as an enumerated type in Lean.\n"}]}