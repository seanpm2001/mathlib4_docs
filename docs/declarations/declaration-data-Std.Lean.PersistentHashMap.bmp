{"name":"Std.Lean.PersistentHashMap","instances":[],"imports":["Init","Lean.Data.PersistentHashMap"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L81-L88","name":"Lean.PersistentHashMap.mergeWith","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.mergeWith","doc":"Merge two `PersistentHashMap`s. The values of keys which appear in both maps are\ncombined using `f`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L69-L74","name":"Lean.PersistentHashMap.mergeWithM","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.mergeWithM","doc":"Merge two `PersistentHashMap`s. The values of keys which appear in both maps are\ncombined using the monadic function `f`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L57-L62","name":"Lean.PersistentHashMap.ofArrayWith","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.ofArrayWith","doc":"Variant of `ofArray` which accepts a function that combines values of duplicated\nkeys.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L50-L51","name":"Lean.PersistentHashMap.ofArray","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.ofArray","doc":"Builds a `PersistentHashMap` from an array of key-value pairs. Values of\nduplicated keys are replaced by their respective last occurrences.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L39-L44","name":"Lean.PersistentHashMap.ofListWith","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.ofListWith","doc":"Variant of `ofList` which accepts a function that combines values of duplicated\nkeys.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L32-L33","name":"Lean.PersistentHashMap.ofList","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.ofList","doc":"Builds a `PersistentHashMap` from a list of key-value pairs. Values of\nduplicated keys are replaced by their respective last occurrences.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L25-L26","name":"Lean.PersistentHashMap.toArray","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.toArray","doc":"Turns a `PersistentHashMap` into an array of key-value pairs.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/PersistentHashMap.lean#L17-L20","name":"Lean.PersistentHashMap.insert'","kind":"def","docLink":"./Std/Lean/PersistentHashMap.html#Lean.PersistentHashMap.insert'","doc":"Similar to `insert`, but also returns a Boolean flag indicating whether an\nexisting entry has been replaced with `a â†¦ b`.\n"}]}