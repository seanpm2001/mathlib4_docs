{"name":"Std.Data.HashMap.WF","instances":[],"imports":["Init","Std.Data.HashMap.Basic","Std.Data.List.Lemmas","Std.Data.Array.Lemmas","Std.Tactic.ShowTerm"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L365-L366","name":"Std.HashMap.filter","kind":"def","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.filter","doc":"Constructs a map with the set of all pairs `a, b` such that `f` returns true. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L361-L362","name":"Std.HashMap.filterMap","kind":"def","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.filterMap","doc":"Applies `f` to each key-value pair `a, b` in the map. If it returns `some c` then\n`a, c` is pushed into the new map; else the key is removed from the map.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L354-L355","name":"Std.HashMap.mapVal","kind":"def","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.mapVal","doc":"Map a function over the values in the map. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L308-L347","name":"Std.HashMap.Imp.WF.filterMap","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.WF.filterMap","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L296-L306","name":"Std.HashMap.Imp.WF.mapVal","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.WF.mapVal","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L292-L294","name":"Std.HashMap.Imp.WF_iff","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.WF_iff","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L283-L290","name":"Std.HashMap.Imp.WF.out","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.WF.out","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L273-L281","name":"Std.HashMap.Imp.modify_WF","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.modify_WF","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L265-L271","name":"Std.HashMap.Imp.modify_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.modify_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L257-L263","name":"Std.HashMap.Imp.erase_WF","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.erase_WF","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L241-L255","name":"Std.HashMap.Imp.erase_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.erase_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L221-L239","name":"Std.HashMap.Imp.insert_WF","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.insert_WF","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L174-L187","name":"Std.HashMap.Imp.insert_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.insert_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L147-L171","name":"Std.HashMap.Imp.expand_WF.go","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.expand_WF.go","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L143-L172","name":"Std.HashMap.Imp.expand_WF","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.expand_WF","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L113-L141","name":"Std.HashMap.Imp.expand_WF.foldl","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.expand_WF.foldl","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L85-L110","name":"Std.HashMap.Imp.expand_size.go","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.expand_size.go","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L79-L111","name":"Std.HashMap.Imp.expand_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.expand_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L70-L77","name":"Std.HashMap.Imp.reinsertAux_WF","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.reinsertAux_WF","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L64-L68","name":"Std.HashMap.Imp.reinsertAux_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.reinsertAux_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L46-L60","name":"Std.HashMap.Imp.Bucket.WF.update","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.WF.update","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L40-L44","name":"Std.HashMap.Imp.Bucket.WF.mk'","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.WF.mk'","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L36-L38","name":"Std.HashMap.Imp.Bucket.mk_size","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.mk_size","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L33-L34","name":"Std.HashMap.Imp.Bucket.size_eq","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.size_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L29-L31","name":"Std.HashMap.Imp.Bucket.update_update","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.update_update","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L24-L27","name":"Std.HashMap.Imp.Bucket.exists_of_update","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.exists_of_update","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L21-L22","name":"Std.HashMap.Imp.Bucket.update_data","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.update_data","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/HashMap/WF.lean#L18-L19","name":"Std.HashMap.Imp.Bucket.ext","kind":"theorem","docLink":"./Std/Data/HashMap/WF.html#Std.HashMap.Imp.Bucket.ext","doc":""}]}