{"name":"Mathlib.CategoryTheory.Types","instances":[{"typeNames":["_builtin_typeu"],"name":"CategoryTheory.types","className":"CategoryTheory.Category"},{"typeNames":["_builtin_typeu","CategoryTheory.types","_builtin_typeu","CategoryTheory.types","CategoryTheory.uliftFunctor"],"name":"CategoryTheory.uliftFunctorFull","className":"CategoryTheory.Full"},{"typeNames":["_builtin_typeu","CategoryTheory.types","_builtin_typeu","CategoryTheory.types","CategoryTheory.uliftFunctor"],"name":"CategoryTheory.uliftFunctor_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["_builtin_typeu","CategoryTheory.types"],"name":"CategoryTheory.instSplitEpiCategoryTypeTypes","className":"CategoryTheory.SplitEpiCategory"}],"imports":["Init","Mathlib.CategoryTheory.EpiMono","Mathlib.CategoryTheory.Functor.FullyFaithful","Mathlib.Logic.Equiv.Basic","Mathlib.Data.Set.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L416-L417","name":"equivEquivIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#equivEquivIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L411-L412","name":"equivEquivIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#equivEquivIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L406-L407","name":"equivEquivIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#equivEquivIso","doc":"Equivalences (between types in the same universe) are the same as (equivalent to) isomorphisms\nof types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L398-L401","name":"equivIsoIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#equivIsoIso","doc":"Equivalences (between types in the same universe) are the same as (isomorphic to) isomorphisms\nof types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L397-L397","name":"equivIsoIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#equivIsoIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L397-L397","name":"equivIsoIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#equivIsoIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L385-L389","name":"CategoryTheory.instSplitEpiCategoryTypeTypes","kind":"instance","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.instSplitEpiCategoryTypeTypes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L380-L382","name":"CategoryTheory.isIso_iff_bijective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.isIso_iff_bijective","doc":"A morphism in `Type u` is an isomorphism if and only if it is bijective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L370-L372","name":"CategoryTheory.Iso.toEquiv_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Iso.toEquiv_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L365-L366","name":"CategoryTheory.Iso.toEquiv_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Iso.toEquiv_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L360-L361","name":"CategoryTheory.Iso.toEquiv_symm_fun","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Iso.toEquiv_symm_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L355-L356","name":"CategoryTheory.Iso.toEquiv_fun","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Iso.toEquiv_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L345-L349","name":"CategoryTheory.Iso.toEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Iso.toEquiv","doc":"Any isomorphism between types gives an equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L329-L330","name":"Equiv.toIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#Equiv.toIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L324-L325","name":"Equiv.toIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#Equiv.toIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L316-L320","name":"Equiv.toIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#Equiv.toIso","doc":"Any equivalence between types in the same universe gives\na categorical isomorphism between those types.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L297-L299","name":"CategoryTheory.ofTypeFunctor_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.ofTypeFunctor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L292-L293","name":"CategoryTheory.ofTypeFunctor_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.ofTypeFunctor_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L279-L286","name":"CategoryTheory.ofTypeFunctor","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.ofTypeFunctor","doc":"`ofTypeFunctor m` converts from Lean's `Type`-based `Category` to `CategoryTheory`. This\nallows us to use these functors in category theory. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L271-L272","name":"CategoryTheory.surjective_of_epi","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.surjective_of_epi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L260-L268","name":"CategoryTheory.epi_iff_surjective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.epi_iff_surjective","doc":"A morphism in `Type` is an epimorphism if and only if it is surjective.\n\nSee <https://stacks.math.columbia.edu/tag/003C>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L252-L253","name":"CategoryTheory.injective_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.injective_of_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L243-L249","name":"CategoryTheory.mono_iff_injective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.mono_iff_injective","doc":"A morphism in `Type` is a monomorphism if and only if it is injective.\n\nSee <https://stacks.math.columbia.edu/tag/003C>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L235-L236","name":"CategoryTheory.homOfElement_eq_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.homOfElement_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L232-L232","name":"CategoryTheory.homOfElement","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.homOfElement","doc":"Any term `x` of a type `X` corresponds to a morphism `PUnit ‚ü∂ X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L225-L226","name":"CategoryTheory.uliftFunctorTrivial","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftFunctorTrivial","doc":"The functor embedding `Type u` into `Type u` via `ULift` is isomorphic to the identity functor.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L217-L220","name":"CategoryTheory.uliftFunctor_faithful","kind":"instance","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftFunctor_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L214-L214","name":"CategoryTheory.uliftFunctorFull","kind":"instance","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftFunctorFull","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L209-L211","name":"CategoryTheory.uliftFunctor_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftFunctor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L202-L205","name":"CategoryTheory.uliftFunctor","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftFunctor","doc":"The functor embedding `Type u` into `Type (max u v)`.\nWrite this as `uliftFunctor.{5 2}` to get `Type 2 ‚•§ Type 5`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L194-L196","name":"CategoryTheory.uliftTrivial","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.uliftTrivial","doc":"The isomorphism between a `Type` which has been `ULift`ed to the same universe,\nand the original type.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L185-L186","name":"CategoryTheory.FunctorToTypes.inv_hom_id_app_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.inv_hom_id_app_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L180-L181","name":"CategoryTheory.FunctorToTypes.hom_inv_id_app_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.hom_inv_id_app_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L175-L176","name":"CategoryTheory.FunctorToTypes.map_hom_map_inv_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.map_hom_map_inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L170-L171","name":"CategoryTheory.FunctorToTypes.map_inv_map_hom_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.map_inv_map_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L165-L166","name":"CategoryTheory.FunctorToTypes.hcomp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.hcomp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L158-L159","name":"CategoryTheory.FunctorToTypes.comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L153-L154","name":"CategoryTheory.FunctorToTypes.naturality","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.naturality","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L150-L150","name":"CategoryTheory.FunctorToTypes.map_id_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.map_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L145-L146","name":"CategoryTheory.FunctorToTypes.map_comp_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.FunctorToTypes.map_comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L132-L134","name":"CategoryTheory.Functor.sections_property","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Functor.sections_property","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L126-L127","name":"CategoryTheory.Functor.sections","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.Functor.sections","doc":"The sections of a functor `J ‚•§ Type` are\nthe choices of a point `u j : F.obj j` for each `j`,\nsuch that `F.map f (u j) = u j` for every morphism `f : j ‚ü∂ j'`.\n\nWe later use these to define limits in `Type` and in many concrete categories.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L99-L100","name":"CategoryTheory.¬´term‚Üæ_¬ª","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.¬´term‚Üæ_¬ª","doc":"`asHom f` helps Lean type check a function as a morphism in the category `Type`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L95-L96","name":"CategoryTheory.asHom","kind":"def","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom","doc":"`asHom f` helps Lean type check a function as a morphism in the category `Type`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L89-L90","name":"CategoryTheory.inv_hom_id_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.inv_hom_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L84-L85","name":"CategoryTheory.hom_inv_id_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.hom_inv_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L79-L80","name":"CategoryTheory.types_comp_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L74-L75","name":"CategoryTheory.types_id_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L69-L70","name":"CategoryTheory.types_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L65-L66","name":"CategoryTheory.types_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L61-L63","name":"CategoryTheory.types_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L54-L55","name":"CategoryTheory.types_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Types.lean#L47-L51","name":"CategoryTheory.types","kind":"instance","docLink":"./Mathlib/CategoryTheory/Types.html#CategoryTheory.types","doc":""}]}