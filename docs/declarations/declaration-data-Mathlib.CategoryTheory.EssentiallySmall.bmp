{"name":"Mathlib.CategoryTheory.EssentiallySmall","instances":[{"typeNames":["CategoryTheory.SmallModel"],"name":"CategoryTheory.smallCategorySmallModel","className":"CategoryTheory.Category"},{"typeNames":["Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.instSmallHomToQuiverToCategoryStruct","className":"Small"},{"typeNames":[],"name":"CategoryTheory.locallySmall_self","className":"CategoryTheory.LocallySmall"},{"typeNames":[],"name":"CategoryTheory.locallySmall_of_essentiallySmall","className":"CategoryTheory.LocallySmall"},{"typeNames":["CategoryTheory.ShrinkHoms"],"name":"CategoryTheory.ShrinkHoms.instCategoryShrinkHoms","className":"CategoryTheory.Category"},{"typeNames":[],"name":"CategoryTheory.locallySmall_of_thin","className":"CategoryTheory.LocallySmall"}],"imports":["Init","Mathlib.Logic.Small.Basic","Mathlib.CategoryTheory.Category.ULift","Mathlib.CategoryTheory.Skeletal"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L236-L238","name":"CategoryTheory.essentiallySmall_iff_of_thin","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.essentiallySmall_iff_of_thin","doc":"A thin category is essentially small if and only if the underlying type of its skeleton is small.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L229-L230","name":"CategoryTheory.locallySmall_of_thin","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.locallySmall_of_thin","doc":"Any thin category is locally small.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L205-L224","name":"CategoryTheory.essentiallySmall_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.essentiallySmall_iff","doc":"A category is essentially small if and only if\nthe underlying type of its skeleton (i.e. the \"set\" of isomorphism classes) is small,\nand it is locally small.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L193-L196","name":"CategoryTheory.ShrinkHoms.equivalence","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence","doc":"The categorical equivalence between `C` and `ShrinkHoms C`, when `C` is locally small.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_inverse_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_inverse_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_functor_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_functor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_counitIso_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_counitIso_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_unitIso_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_unitIso_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_inverse_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_inverse_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_counitIso_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_counitIso_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_unitIso_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_unitIso_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L192-L192","name":"CategoryTheory.ShrinkHoms.equivalence_functor_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.equivalence_functor_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L184-L187","name":"CategoryTheory.ShrinkHoms.inverse","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.inverse","doc":"Implementation of `ShrinkHoms.equivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L183-L183","name":"CategoryTheory.ShrinkHoms.inverse_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.inverse_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L183-L183","name":"CategoryTheory.ShrinkHoms.inverse_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.inverse_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L176-L179","name":"CategoryTheory.ShrinkHoms.functor","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.functor","doc":"Implementation of `ShrinkHoms.equivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L175-L175","name":"CategoryTheory.ShrinkHoms.functor_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.functor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L175-L175","name":"CategoryTheory.ShrinkHoms.functor_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.functor_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L168-L172","name":"CategoryTheory.ShrinkHoms.instCategoryShrinkHoms","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.instCategoryShrinkHoms","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L167-L167","name":"CategoryTheory.ShrinkHoms.instCategoryShrinkHoms_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.instCategoryShrinkHoms_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L167-L167","name":"CategoryTheory.ShrinkHoms.instCategoryShrinkHoms_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.instCategoryShrinkHoms_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L159-L160","name":"CategoryTheory.ShrinkHoms.from_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.from_to","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L154-L155","name":"CategoryTheory.ShrinkHoms.to_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.to_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L149-L150","name":"CategoryTheory.ShrinkHoms.fromShrinkHoms","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.fromShrinkHoms","doc":"Help the typechecker by explicitly translating from `ShrinkHoms C` to `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L144-L145","name":"CategoryTheory.ShrinkHoms.toShrinkHoms","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms.toShrinkHoms","doc":"Help the typechecker by explicitly translating from `C` to `ShrinkHoms C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L132-L133","name":"CategoryTheory.ShrinkHoms","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms","doc":"We define a type alias `ShrinkHoms C` for `C`. When we have `LocallySmall.{w} C`,\nwe'll put a `Category.{w}` instance on `ShrinkHoms C`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L123-L125","name":"CategoryTheory.locallySmall_of_essentiallySmall","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.locallySmall_of_essentiallySmall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L119-L120","name":"CategoryTheory.locallySmall_self","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.locallySmall_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L102-L116","name":"CategoryTheory.locallySmall_congr","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.locallySmall_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L99-L100","name":"CategoryTheory.instSmallHomToQuiverToCategoryStruct","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.instSmallHomToQuiverToCategoryStruct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L96-L96","name":"CategoryTheory.LocallySmall.hom_small","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall.hom_small","doc":"A locally small category has small hom-types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L94-L94","name":"CategoryTheory.LocallySmall.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L94-L96","name":"CategoryTheory.LocallySmall","kind":"class","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall","doc":"A category is `w`-locally small if every hom set is `w`-small.\n\nSee `ShrinkHoms C` for a category instance where every hom set has been replaced by a small model.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L86-L87","name":"CategoryTheory.essentiallySmallSelf","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.essentiallySmallSelf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L81-L83","name":"CategoryTheory.Discrete.essentiallySmallOfSmall","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.Discrete.essentiallySmallOfSmall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L70-L78","name":"CategoryTheory.essentiallySmall_congr","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.essentiallySmall_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L64-L67","name":"CategoryTheory.equivSmallModel","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.equivSmallModel","doc":"The (noncomputable) categorical equivalence between\nan essentially small category and its small model.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L56-L58","name":"CategoryTheory.smallCategorySmallModel","kind":"instance","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.smallCategorySmallModel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L52-L53","name":"CategoryTheory.SmallModel","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.SmallModel","doc":"An arbitrarily chosen small model for an essentially small category.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L44-L46","name":"CategoryTheory.EssentiallySmall.mk'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall.mk'","doc":"Constructor for `EssentiallySmall C` from an explicit small category witness. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L40-L40","name":"CategoryTheory.EssentiallySmall.equiv_smallCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall.equiv_smallCategory","doc":"An essentially small category is equivalent to some small category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L38-L38","name":"CategoryTheory.EssentiallySmall.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EssentiallySmall.lean#L38-L40","name":"CategoryTheory.EssentiallySmall","kind":"class","docLink":"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall","doc":"A category is `EssentiallySmall.{w}` if there exists\nan equivalence to some `S : Type w` with `[SmallCategory S]`. "}]}