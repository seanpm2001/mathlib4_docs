{"name":"Mathlib.Algebra.Hom.Group","instances":[{"typeNames":["ZeroHom"],"name":"ZeroHom.zeroHomClass","className":"ZeroHomClass"},{"typeNames":["OneHom"],"name":"OneHom.oneHomClass","className":"OneHomClass"},{"typeNames":["ZeroHom"],"name":"instCoeTCZeroHom","className":"CoeTC"},{"typeNames":["OneHom"],"name":"instCoeTCOneHom","className":"CoeTC"},{"typeNames":["AddHom"],"name":"AddHom.addHomClass","className":"AddHomClass"},{"typeNames":["MulHom"],"name":"MulHom.mulHomClass","className":"MulHomClass"},{"typeNames":["AddHom"],"name":"instCoeTCAddHom","className":"CoeTC"},{"typeNames":["MulHom"],"name":"instCoeTCMulHom","className":"CoeTC"},{"typeNames":["AddMonoidHom"],"name":"AddMonoidHom.addMonoidHomClass","className":"AddMonoidHomClass"},{"typeNames":["MonoidHom"],"name":"MonoidHom.monoidHomClass","className":"MonoidHomClass"},{"typeNames":["AddMonoidHom"],"name":"instCoeTCAddMonoidHom","className":"CoeTC"},{"typeNames":["MonoidHom"],"name":"instCoeTCMonoidHom","className":"CoeTC"},{"typeNames":["MonoidWithZeroHom"],"name":"MonoidWithZeroHom.monoidWithZeroHomClass","className":"MonoidWithZeroHomClass"},{"typeNames":["MonoidWithZeroHom"],"name":"instCoeTCMonoidWithZeroHom","className":"CoeTC"},{"typeNames":["AddMonoidHom","ZeroHom","AddZeroClass.toZero","AddZeroClass.toZero"],"name":"AddMonoidHom.coeToZeroHom","className":"Coe"},{"typeNames":["MonoidHom","OneHom","MulOneClass.toOne","MulOneClass.toOne"],"name":"MonoidHom.coeToOneHom","className":"Coe"},{"typeNames":["AddMonoidHom","AddHom","AddZeroClass.toAdd","AddZeroClass.toAdd"],"name":"AddMonoidHom.coeToAddHom","className":"Coe"},{"typeNames":["MonoidHom","MulHom","MulOneClass.toMul","MulOneClass.toMul"],"name":"MonoidHom.coeToMulHom","className":"Coe"},{"typeNames":["MonoidWithZeroHom","MonoidHom","MulZeroOneClass.toMulOneClass","MulZeroOneClass.toMulOneClass"],"name":"MonoidWithZeroHom.coeToMonoidHom","className":"Coe"},{"typeNames":["MonoidWithZeroHom","ZeroHom","MulZeroOneClass.toZero","MulZeroOneClass.toZero"],"name":"MonoidWithZeroHom.coeToZeroHom","className":"Coe"},{"typeNames":["Monoid.End"],"name":"Monoid.End.instMonoidEnd","className":"Monoid"},{"typeNames":["Monoid.End"],"name":"Monoid.End.instInhabitedEnd","className":"Inhabited"},{"typeNames":["Monoid.End"],"name":"Monoid.End.instMonoidHomClassEnd","className":"MonoidHomClass"},{"typeNames":["AddMonoid.End"],"name":"AddMonoid.End.monoid","className":"Monoid"},{"typeNames":["AddMonoid.End"],"name":"AddMonoid.End.instInhabitedEnd","className":"Inhabited"},{"typeNames":["AddMonoid.End"],"name":"AddMonoid.End.instAddMonoidHomClassEnd","className":"AddMonoidHomClass"},{"typeNames":["ZeroHom"],"name":"instZeroZeroHom","className":"Zero"},{"typeNames":["OneHom"],"name":"instOneOneHom","className":"One"},{"typeNames":["AddHom","AddZeroClass.toAdd"],"name":"instZeroAddHomToAdd","className":"Zero"},{"typeNames":["MulHom","MulOneClass.toMul"],"name":"instOneMulHomToMul","className":"One"},{"typeNames":["AddMonoidHom"],"name":"instZeroAddMonoidHom","className":"Zero"},{"typeNames":["MonoidHom"],"name":"instOneMonoidHom","className":"One"},{"typeNames":["ZeroHom"],"name":"instInhabitedZeroHom","className":"Inhabited"},{"typeNames":["OneHom"],"name":"instInhabitedOneHom","className":"Inhabited"},{"typeNames":["AddHom","AddZeroClass.toAdd"],"name":"instInhabitedAddHomToAdd","className":"Inhabited"},{"typeNames":["MulHom","MulOneClass.toMul"],"name":"instInhabitedMulHomToMul","className":"Inhabited"},{"typeNames":["AddMonoidHom"],"name":"instInhabitedAddMonoidHom","className":"Inhabited"},{"typeNames":["MonoidHom"],"name":"instInhabitedMonoidHom","className":"Inhabited"},{"typeNames":["MonoidWithZeroHom"],"name":"instInhabitedMonoidWithZeroHom","className":"Inhabited"},{"typeNames":["AddHom","AddSemigroup.toAdd","AddCommSemigroup.toAddSemigroup"],"name":"AddHom.instAddAddHomToAddToAddSemigroup","className":"Add"},{"typeNames":["MulHom","Semigroup.toMul","CommSemigroup.toSemigroup"],"name":"MulHom.instMulMulHomToMulToSemigroup","className":"Mul"},{"typeNames":["AddMonoidHom","AddMonoid.toAddZeroClass","AddCommMonoid.toAddMonoid"],"name":"AddMonoidHom.add","className":"Add"},{"typeNames":["MonoidHom","Monoid.toMulOneClass","CommMonoid.toMonoid"],"name":"MonoidHom.mul","className":"Mul"},{"typeNames":["AddMonoidHom","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","AddCommGroup.toAddGroup"],"name":"AddMonoidHom.instNegAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","className":"Neg"},{"typeNames":["MonoidHom","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid","CommGroup.toGroup"],"name":"MonoidHom.instInvMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","className":"Inv"},{"typeNames":["AddMonoidHom","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","AddCommGroup.toAddGroup"],"name":"AddMonoidHom.instSubAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","className":"Sub"},{"typeNames":["MonoidHom","Monoid.toMulOneClass","DivInvMonoid.toMonoid","Group.toDivInvMonoid","CommGroup.toGroup"],"name":"MonoidHom.instDivMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","className":"Div"},{"typeNames":["MonoidWithZeroHom","MonoidWithZero.toMulZeroOneClass","CommMonoidWithZero.toMonoidWithZero"],"name":"instMulMonoidWithZeroHomToMulZeroOneClassToMonoidWithZero","className":"Mul"}],"imports":["Init","Mathlib.Init.CcLemmas","Mathlib.Algebra.NeZero","Mathlib.Algebra.Group.Basic","Mathlib.Algebra.GroupWithZero.Defs","Mathlib.Data.FunLike.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1696-L1699","name":"instMulMonoidWithZeroHomToMulZeroOneClassToMonoidWithZero","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instMulMonoidWithZeroHomToMulZeroOneClassToMonoidWithZero","doc":"Given two monoid with zero morphisms `f`, `g` to a commutative monoid, `f * g` is the monoid\nwith zero morphism sending `x` to `f x * g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1687-L1688","name":"MonoidHom.div_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.div_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1686-L1686","name":"AddMonoidHom.sub_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.sub_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1678-L1680","name":"MonoidHom.instDivMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.instDivMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","doc":"If `f` and `g` are monoid homomorphisms to a commutative group, then `f / g` is the homomorphism\nsending `x` to `(f x) / (g x)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1677-L1677","name":"AddMonoidHom.instSubAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.instSubAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1677-L1677","name":"AddMonoidHom.instSubAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.instSubAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","doc":"If `f` and `g` are monoid homomorphisms to an additive commutative group, then `f - g`\nis the homomorphism sending `x` to `(f x) - (g x)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1668-L1671","name":"MonoidHom.comp_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1667-L1667","name":"AddMonoidHom.comp_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1660-L1663","name":"MonoidHom.inv_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.inv_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1659-L1659","name":"AddMonoidHom.neg_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.neg_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1654-L1655","name":"MonoidHom.inv_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1653-L1653","name":"AddMonoidHom.neg_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.neg_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1646-L1647","name":"MonoidHom.instInvMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.instInvMonoidHomToMulOneClassToMonoidToDivInvMonoidToGroup","doc":"If `f` is a monoid homomorphism to a commutative group, then `f⁻¹` is the homomorphism sending\n`x` to `(f x)⁻¹`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1645-L1645","name":"AddMonoidHom.instNegAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.instNegAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1645-L1645","name":"AddMonoidHom.instNegAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.instNegAddMonoidHomToAddZeroClassToAddMonoidToSubNegAddMonoidToAddGroup","doc":"If `f` is an additive monoid homomorphism to an additive commutative group, then `-f` is the\nhomomorphism sending `x` to `-(f x)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1638-L1639","name":"MonoidHom.coe_of_map_div","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_of_map_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1637-L1637","name":"AddMonoidHom.coe_of_map_sub","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_of_map_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1632-L1633","name":"MonoidHom.ofMapDiv","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.ofMapDiv","doc":"Define a morphism of additive groups given a map which respects ratios. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1631-L1631","name":"AddMonoidHom.ofMapSub","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ofMapSub","doc":"Define a morphism of additive groups given a map which respects difference."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1631-L1631","name":"AddMonoidHom.ofMapSub.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ofMapSub.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1624-L1626","name":"MonoidHom.coe_of_map_mul_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_of_map_mul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1623-L1623","name":"AddMonoidHom.coe_of_map_add_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_of_map_add_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1611-L1619","name":"MonoidHom.ofMapMulInv","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.ofMapMulInv","doc":"Makes a group homomorphism from a proof that the map preserves right division\n`fun x y => x * y⁻¹`. See also `MonoidHom.of_map_div` for a version using `fun x y => x / y`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1607-L1610","name":"AddMonoidHom.ofMapAddNeg.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ofMapAddNeg.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1607-L1610","name":"AddMonoidHom.ofMapAddNeg","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ofMapAddNeg","doc":"Makes an additive group homomorphism from a proof that the map preserves\nthe operation `fun a b => a + -b`. See also `AddMonoidHom.ofMapSub` for a version using\n`fun a b => a - b`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1595-L1598","name":"MonoidHom.mk'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mk'","doc":"Makes a group homomorphism from a proof that the map preserves multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1593-L1593","name":"MonoidHom.mk'_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mk'_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1593-L1593","name":"AddMonoidHom.mk'_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.mk'_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1593-L1594","name":"AddMonoidHom.mk'.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.mk'.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1593-L1594","name":"AddMonoidHom.mk'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.mk'","doc":"Makes an additive group homomorphism from a proof that the map preserves addition."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1583-L1586","name":"injective_iff_map_eq_one'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#injective_iff_map_eq_one'","doc":"A homomorphism from a group to a monoid is injective iff its kernel is trivial,\nstated as an iff on the triviality of the kernel.\nFor the implication, see `injective_iff_map_eq_one`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1579-L1582","name":"injective_iff_map_eq_zero'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#injective_iff_map_eq_zero'","doc":"A homomorphism from an additive group to an additive monoid is injective iff its\nkernel is trivial, stated as an iff on the triviality of the kernel. For the implication, see\n`injective_iff_map_eq_zero`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1569-L1572","name":"injective_iff_map_eq_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#injective_iff_map_eq_one","doc":"A homomorphism from a group to a monoid is injective iff its kernel is trivial.\nFor the iff statement on the triviality of the kernel, see `injective_iff_map_eq_one'`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1565-L1568","name":"injective_iff_map_eq_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#injective_iff_map_eq_zero","doc":"A homomorphism from an additive group to an additive monoid is injective iff\nits kernel is trivial. For the iff statement on the triviality of the kernel,\nsee `injective_iff_map_eq_zero'`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1558-L1559","name":"MonoidHom.map_mul_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_mul_inv","doc":"Group homomorphisms preserve division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1557-L1557","name":"AddMonoidHom.map_add_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_add_neg","doc":"Additive group homomorphisms preserve subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1551-L1552","name":"MonoidHom.map_div","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_div","doc":"Group homomorphisms preserve division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1550-L1550","name":"AddMonoidHom.map_sub","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_sub","doc":"Additive group homomorphisms preserve subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1544-L1545","name":"MonoidHom.map_zpow","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_zpow","doc":"Group homomorphisms preserve integer power. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1543-L1543","name":"AddMonoidHom.map_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_zsmul","doc":"Additive group homomorphisms preserve integer scaling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1537-L1538","name":"MonoidHom.map_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_inv","doc":"Group homomorphisms preserve inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1536-L1536","name":"AddMonoidHom.map_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_neg","doc":"Additive group homomorphisms preserve negation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1528-L1531","name":"MonoidHom.comp_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1527-L1527","name":"AddMonoidHom.comp_add","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1522-L1523","name":"MonoidHom.mul_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mul_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1521-L1521","name":"AddMonoidHom.add_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.add_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1514-L1517","name":"MonoidHom.comp_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1513-L1513","name":"AddMonoidHom.comp_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1508-L1509","name":"MonoidHom.one_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.one_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1507-L1507","name":"AddMonoidHom.zero_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.zero_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1502-L1503","name":"MonoidHom.mul_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1501-L1501","name":"AddMonoidHom.add_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1488-L1495","name":"MonoidHom.mul","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mul","doc":"Given two monoid morphisms `f`, `g` to a commutative monoid, `f * g` is the monoid morphism\nsending `x` to `f x * g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1487-L1487","name":"AddMonoidHom.add.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.add.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1487-L1487","name":"AddMonoidHom.add","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.add","doc":"Given two additive monoid morphisms `f`, `g` to an additive commutative monoid,\n`f + g` is the additive monoid morphism sending `x` to `f x + g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1487-L1487","name":"AddMonoidHom.add.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.add.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1472-L1475","name":"MulHom.comp_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.comp_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1471-L1471","name":"AddHom.comp_add","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1466-L1467","name":"MulHom.mul_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.mul_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1465-L1465","name":"AddHom.add_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.add_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1460-L1461","name":"MulHom.mul_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.mul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1459-L1459","name":"AddHom.add_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1447-L1453","name":"MulHom.instMulMulHomToMulToSemigroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.instMulMulHomToMulToSemigroup","doc":"Given two mul morphisms `f`, `g` to a commutative semigroup, `f * g` is the mul morphism\nsending `x` to `f x * g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1446-L1446","name":"AddHom.instAddAddHomToAddToAddSemigroup","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.instAddAddHomToAddToAddSemigroup","doc":"Given two additive morphisms `f`, `g` to an additive commutative semigroup, `f + g` is the\nadditive morphism sending `x` to `f x + g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1446-L1446","name":"AddHom.instAddAddHomToAddToAddSemigroup.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.instAddAddHomToAddToAddSemigroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1440-L1440","name":"instInhabitedMonoidWithZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedMonoidWithZeroHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1433-L1433","name":"instInhabitedMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedMonoidHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1432-L1432","name":"instInhabitedAddMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedAddMonoidHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1430-L1430","name":"instInhabitedMulHomToMul","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedMulHomToMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1429-L1429","name":"instInhabitedAddHomToAdd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedAddHomToAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1424-L1424","name":"instInhabitedOneHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedOneHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1423-L1423","name":"instInhabitedZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instInhabitedZeroHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1417-L1419","name":"OneHom.comp_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.comp_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1416-L1416","name":"ZeroHom.comp_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1411-L1412","name":"OneHom.one_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.one_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1410-L1410","name":"ZeroHom.zero_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.zero_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1406-L1406","name":"MonoidHom.one_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.one_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1405-L1405","name":"AddMonoidHom.zero_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1401-L1401","name":"OneHom.one_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.one_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1400-L1400","name":"ZeroHom.zero_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1388-L1389","name":"instOneMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instOneMonoidHom","doc":"`1` is the monoid homomorphism sending all elements to `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1387-L1387","name":"instZeroAddMonoidHom.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroAddMonoidHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1387-L1387","name":"instZeroAddMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroAddMonoidHom","doc":"`0` is the additive monoid homomorphism sending all elements to `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1387-L1387","name":"instZeroAddMonoidHom.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroAddMonoidHom.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1383-L1384","name":"instOneMulHomToMul","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instOneMulHomToMul","doc":"`1` is the multiplicative homomorphism sending all elements to `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1382-L1382","name":"instZeroAddHomToAdd.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroAddHomToAdd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1382-L1382","name":"instZeroAddHomToAdd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroAddHomToAdd","doc":"`0` is the additive homomorphism sending all elements to `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1379-L1379","name":"instOneOneHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instOneOneHom","doc":"`1` is the homomorphism sending all elements to `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1378-L1378","name":"instZeroZeroHom.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroZeroHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1378-L1378","name":"instZeroZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instZeroZeroHom","doc":"`0` is the homomorphism sending all elements to `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1370-L1370","name":"AddMonoid.coe_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.coe_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1366-L1366","name":"AddMonoid.coe_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.coe_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1361-L1361","name":"AddMonoid.End.instAddMonoidHomClassEnd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.End.instAddMonoidHomClassEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1359-L1359","name":"AddMonoid.End.instInhabitedEnd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.End.instInhabitedEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1352-L1357","name":"AddMonoid.End.monoid","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.End.monoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1347-L1347","name":"AddMonoid.End","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoid.End","doc":"The monoid of endomorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1337-L1337","name":"Monoid.coe_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.coe_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1333-L1333","name":"Monoid.coe_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.coe_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1328-L1328","name":"Monoid.End.instMonoidHomClassEnd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.End.instMonoidHomClassEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1326-L1326","name":"Monoid.End.instInhabitedEnd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.End.instInhabitedEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1319-L1324","name":"Monoid.End.instMonoidEnd","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.End.instMonoidEnd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1314-L1314","name":"Monoid.End","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#Monoid.End","doc":"The monoid of endomorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1301-L1303","name":"MonoidHom.map_zpow'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_zpow'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1300-L1300","name":"AddMonoidHom.map_zsmul'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_zsmul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1295-L1296","name":"MonoidHom.map_pow","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1294-L1294","name":"AddMonoidHom.map_nsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1290-L1291","name":"MonoidWithZeroHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1284-L1285","name":"MonoidHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1283-L1283","name":"AddMonoidHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1278-L1279","name":"MulHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1277-L1277","name":"AddHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1272-L1273","name":"OneHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1271-L1271","name":"ZeroHom.id_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1267-L1268","name":"MonoidWithZeroHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1261-L1262","name":"MonoidHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1260-L1260","name":"AddMonoidHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1255-L1256","name":"MulHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1254-L1254","name":"AddHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1249-L1250","name":"OneHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1248-L1248","name":"ZeroHom.comp_id","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1243-L1245","name":"MonoidWithZeroHom.toZeroHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.toZeroHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1236-L1238","name":"MonoidWithZeroHom.toMonoidHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.toMonoidHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1230-L1232","name":"MonoidHom.toMulHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.toMulHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1229-L1229","name":"AddMonoidHom.toAddHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.toAddHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1223-L1225","name":"MonoidHom.toOneHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.toOneHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1222-L1222","name":"AddMonoidHom.toZeroHom_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.toZeroHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1211-L1216","name":"MonoidWithZeroHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1204-L1207","name":"MonoidHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1203-L1203","name":"AddMonoidHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1196-L1199","name":"MulHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1195-L1195","name":"AddHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1188-L1191","name":"OneHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1187-L1187","name":"ZeroHom.cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1181-L1184","name":"MonoidWithZeroHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1174-L1177","name":"MonoidHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1173-L1173","name":"AddMonoidHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1167-L1169","name":"MulHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1166-L1166","name":"AddHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1160-L1162","name":"OneHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1159-L1159","name":"ZeroHom.cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1154-L1156","name":"MonoidWithZeroHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1148-L1150","name":"MonoidHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1147-L1147","name":"AddMonoidHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1142-L1143","name":"MulHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1141-L1141","name":"AddHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1135-L1137","name":"OneHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.comp_assoc","doc":"Composition of monoid homomorphisms is associative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1134-L1134","name":"ZeroHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp_assoc","doc":"Composition of additive monoid homomorphisms is associative."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1129-L1130","name":"MonoidWithZeroHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1124-L1125","name":"MonoidHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1123-L1123","name":"AddMonoidHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1118-L1119","name":"MulHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1117-L1117","name":"AddHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1112-L1113","name":"OneHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1111-L1111","name":"ZeroHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1107-L1108","name":"MonoidWithZeroHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1101-L1102","name":"MonoidHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1100-L1100","name":"AddMonoidHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1095-L1096","name":"MulHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1094-L1094","name":"AddHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1089-L1090","name":"OneHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1088-L1088","name":"ZeroHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1071-L1076","name":"MonoidWithZeroHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.comp","doc":"Composition of `MonoidWithZeroHom`s as a `MonoidWithZeroHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1062-L1066","name":"MonoidHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.comp","doc":"Composition of monoid morphisms as a monoid morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1061-L1061","name":"AddMonoidHom.comp.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1061-L1061","name":"AddMonoidHom.comp.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1061-L1061","name":"AddMonoidHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.comp","doc":"Composition of additive monoid morphisms as an additive monoid morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1054-L1056","name":"MulHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.comp","doc":"Composition of `MulHom`s as a `MulHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1053-L1053","name":"AddHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp","doc":"Composition of `AddHom`s as an `AddHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1053-L1053","name":"AddHom.comp.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.comp.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1046-L1048","name":"OneHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.comp","doc":"Composition of `OneHom`s as a `OneHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1045-L1045","name":"ZeroHom.comp.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1045-L1045","name":"ZeroHom.comp","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.comp","doc":"Composition of `ZeroHom`s as a `ZeroHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1027-L1031","name":"MonoidWithZeroHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.id","doc":"The identity map from a `MonoidWithZero` to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1026-L1026","name":"MonoidWithZeroHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1016-L1019","name":"MonoidHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.id","doc":"The identity map from a monoid to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1015-L1015","name":"AddMonoidHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1015-L1015","name":"MonoidHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1015-L1015","name":"AddMonoidHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.id","doc":"The identity map from an additive monoid to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1015-L1015","name":"AddMonoidHom.id.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.id.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1015-L1015","name":"AddMonoidHom.id.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.id.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1006-L1008","name":"MulHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.id","doc":"The identity map from a type with multiplication to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1005-L1005","name":"MulHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1005-L1005","name":"AddHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1005-L1005","name":"AddHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.id","doc":"The identity map from a type with addition to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L1005-L1005","name":"AddHom.id.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.id.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L996-L998","name":"OneHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.id","doc":"The identity map from a type with 1 to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L995-L995","name":"ZeroHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L995-L995","name":"OneHom.id_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L995-L995","name":"ZeroHom.id","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.id","doc":"The identity map from a type with zero to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L995-L995","name":"ZeroHom.id.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.id.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L989-L989","name":"invMonoidHom_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#invMonoidHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L985-L985","name":"coe_invMonoidHom","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#coe_invMonoidHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L977-L980","name":"invMonoidHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#invMonoidHom","doc":"Inversion on a commutative group, considered as a monoid homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L975-L976","name":"negAddMonoidHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#negAddMonoidHom","doc":"Negation on a commutative additive group, considered as an additive monoid\nhomomorphism."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L975-L976","name":"negAddMonoidHom.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#negAddMonoidHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L962-L964","name":"MonoidHom.map_exists_left_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_exists_left_inv","doc":"Given a monoid homomorphism `f : M →* N` and an element `x : M`, if `x` has a left inverse,\nthen `f x` has a left inverse too. For elements invertible on both sides see `IsUnit.map`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L958-L961","name":"AddMonoidHom.map_exists_left_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_exists_left_neg","doc":"Given an AddMonoid homomorphism `f : M →+ N` and an element `x : M`, if `x` has\na left inverse, then `f x` has a left inverse too. For elements invertible on both sides see\n`IsAddUnit.map`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L958-L961","name":"AddMonoidHom.map_exists_left_neg.match_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_exists_left_neg.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L950-L952","name":"MonoidHom.map_exists_right_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_exists_right_inv","doc":"Given a monoid homomorphism `f : M →* N` and an element `x : M`, if `x` has a right inverse,\nthen `f x` has a right inverse too. For elements invertible on both sides see `IsUnit.map`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L947-L949","name":"AddMonoidHom.map_exists_right_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_exists_right_neg","doc":"Given an AddMonoid homomorphism `f : M →+ N` and an element `x : M`, if `x` has\na right inverse, then `f x` has a right inverse too."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L947-L949","name":"AddMonoidHom.map_exists_right_neg.match_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_exists_right_neg.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L934-L935","name":"MonoidWithZeroHom.map_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.map_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L929-L930","name":"MonoidHom.map_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_mul","doc":"If `f` is a monoid homomorphism then `f (a * b) = f a * f b`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L928-L928","name":"AddMonoidHom.map_add","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_add","doc":"If `f` is an additive monoid homomorphism then `f (a + b) = f a + f b`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L922-L923","name":"MulHom.map_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.map_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L921-L921","name":"AddHom.map_add","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.map_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L917-L918","name":"MonoidWithZeroHom.map_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L910-L911","name":"MonoidWithZeroHom.map_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.map_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L905-L906","name":"MonoidHom.map_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.map_one","doc":"If `f` is a monoid homomorphism then `f 1 = 1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L904-L904","name":"AddMonoidHom.map_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.map_zero","doc":"If `f` is an additive monoid homomorphism then `f 0 = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L898-L899","name":"OneHom.map_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.map_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L897-L897","name":"ZeroHom.map_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L892-L894","name":"MonoidWithZeroHom.copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L887-L889","name":"MonoidWithZeroHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L881-L883","name":"MonoidWithZeroHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.copy","doc":"Copy of a `MonoidHom` with a new `toFun` equal to the old one. Useful to fix\ndefinitional equalities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L873-L875","name":"MonoidHom.copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L872-L872","name":"AddMonoidHom.copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L866-L868","name":"MonoidHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L865-L865","name":"AddMonoidHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L859-L861","name":"MonoidHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.copy","doc":"Copy of a `MonoidHom` with a new `toFun` equal to the old one. Useful to fix\ndefinitional equalities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L856-L858","name":"AddMonoidHom.copy.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.copy.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L856-L858","name":"AddMonoidHom.copy.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.copy.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L856-L858","name":"AddMonoidHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.copy","doc":"Copy of an `AddMonoidHom` with a new `toFun` equal to the old one. Useful to fix\ndefinitional equalities."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L848-L850","name":"MulHom.coe_copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L847-L847","name":"AddHom.coe_copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L841-L843","name":"MulHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L840-L840","name":"AddHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L833-L836","name":"MulHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.copy","doc":"Copy of a `MulHom` with a new `toFun` equal to the old one. Useful to fix definitional\nequalities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L830-L832","name":"AddHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.copy","doc":"Copy of an `AddHom` with a new `toFun` equal to the old one. Useful to fix\ndefinitional equalities."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L830-L832","name":"AddHom.copy.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.copy.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L822-L824","name":"OneHom.coe_copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L821-L821","name":"ZeroHom.coe_copy_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L815-L817","name":"OneHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L814-L814","name":"ZeroHom.coe_copy","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L807-L810","name":"OneHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.copy","doc":"Copy of a `OneHom` with a new `toFun` equal to the old one. Useful to fix definitional\nequalities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L804-L806","name":"ZeroHom.copy.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.copy.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L804-L806","name":"ZeroHom.copy","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.copy","doc":"Copy of a `ZeroHom` with a new `toFun` equal to the old one. Useful to fix\ndefinitional equalities."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L796-L797","name":"MonoidWithZeroHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L790-L791","name":"MonoidHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L789-L789","name":"AddMonoidHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L784-L785","name":"MulHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L783-L783","name":"AddHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L778-L779","name":"OneHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L777-L777","name":"ZeroHom.mk_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L771-L772","name":"MonoidWithZeroHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L764-L765","name":"MonoidHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L763-L763","name":"AddMonoidHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L757-L758","name":"MulHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L756-L756","name":"AddHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L750-L751","name":"OneHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L749-L749","name":"ZeroHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.ext_iff","doc":"Deprecated: use `FunLike.ext_iff` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L744-L745","name":"MonoidWithZeroHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L737-L738","name":"MonoidHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L736-L736","name":"AddMonoidHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L730-L731","name":"MulHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L729-L729","name":"AddHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L723-L724","name":"OneHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L722-L722","name":"ZeroHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_inj","doc":"Deprecated: use `FunLike.coe_injective` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L717-L718","name":"MonoidWithZeroHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L710-L711","name":"MonoidHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L709-L709","name":"AddMonoidHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L703-L704","name":"MulHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L702-L702","name":"AddHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L696-L697","name":"OneHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L695-L695","name":"ZeroHom.congr_arg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.congr_arg","doc":"Deprecated: use `FunLike.congr_arg` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L690-L691","name":"MonoidWithZeroHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L683-L684","name":"MonoidHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L682-L682","name":"AddMonoidHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L676-L677","name":"MulHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L675-L675","name":"AddHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L669-L670","name":"OneHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L668-L668","name":"ZeroHom.congr_fun","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.congr_fun","doc":"Deprecated: use `FunLike.congr_fun` instead."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L661-L662","name":"MonoidWithZeroHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L655-L656","name":"MonoidHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L654-L654","name":"AddMonoidHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L649-L650","name":"MulHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L648-L648","name":"AddHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L643-L644","name":"OneHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L642-L642","name":"ZeroHom.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L638-L639","name":"MonoidWithZeroHom.toMonoidHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.toMonoidHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L634-L635","name":"MonoidWithZeroHom.toZeroHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.toZeroHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L629-L630","name":"MonoidWithZeroHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L624-L624","name":"MonoidHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L623-L623","name":"AddMonoidHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L618-L619","name":"MonoidHom.toMulHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.toMulHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L617-L617","name":"AddMonoidHom.toAddHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.toAddHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L612-L613","name":"MonoidHom.toOneHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.toOneHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L611-L611","name":"AddMonoidHom.toZeroHom_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.toZeroHom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L606-L607","name":"MonoidHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L605-L605","name":"AddMonoidHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L601-L601","name":"MulHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L600-L600","name":"AddHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L596-L596","name":"MulHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L595-L595","name":"AddHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L591-L591","name":"OneHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L590-L590","name":"ZeroHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L586-L586","name":"OneHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L585-L585","name":"ZeroHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L572-L573","name":"MonoidWithZeroHom.coeToZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coeToZeroHom","doc":"`MonoidWithZeroHom` down-cast to a `ZeroHom`, forgetting the monoidal property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L565-L566","name":"MonoidWithZeroHom.coeToMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coeToMonoidHom","doc":"`MonoidWithZeroHom` down-cast to a `MonoidHom`, forgetting the 0-preserving property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L557-L558","name":"MonoidHom.coeToMulHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coeToMulHom","doc":"`MonoidHom` down-cast to a `MulHom`, forgetting the 1-preserving property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L556-L556","name":"AddMonoidHom.coeToAddHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coeToAddHom","doc":"`AddMonoidHom` down-cast to an `AddHom`, forgetting the 0-preserving property."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L547-L548","name":"MonoidHom.coeToOneHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coeToOneHom","doc":"`MonoidHom` down-cast to a `OneHom`, forgetting the multiplicative property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L546-L546","name":"AddMonoidHom.coeToZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coeToZeroHom","doc":"`AddMonoidHom` down-cast to a `ZeroHom`, forgetting the additive property"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L531-L532","name":"MonoidWithZeroHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L527-L528","name":"instCoeTCMonoidWithZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCMonoidWithZeroHom","doc":"Any type satisfying `MonoidWithZeroHomClass` can be cast into `MonoidWithZeroHom` via\n`MonoidWithZeroHomClass.toMonoidWithZeroHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L522-L523","name":"MonoidWithZeroHomClass.toMonoidWithZeroHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHomClass.toMonoidWithZeroHom","doc":"Turn an element of a type `F` satisfying `MonoidWithZeroHomClass F M N` into an actual\n`MonoidWithZeroHom`. This is declared as the default coercion from `F` to `M →*₀ N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L506-L516","name":"MonoidWithZeroHom.monoidWithZeroHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.monoidWithZeroHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L502-L503","name":"MonoidWithZeroHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L502-L503","name":"MonoidWithZeroHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHomClass","doc":"`MonoidWithZeroHomClass F M N` states that `F` is a type of\n`MonoidWithZero`-preserving homomorphisms.\n\nYou should also extend this typeclass when you extend `MonoidWithZeroHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L494-L495","name":"«term_→*₀_»","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#«term_→*₀_»","doc":"`M →*₀ N` denotes the type of zero-preserving monoid homomorphisms from `M` to `N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L487-L488","name":"MonoidWithZeroHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L487-L488","name":"MonoidWithZeroHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidWithZeroHom","doc":"`M →*₀ N` is the type of functions `M → N` that preserve\nthe `MonoidWithZero` structure.\n\n`MonoidWithZeroHom` is also used for group homomorphisms.\n\nWhen possible, instead of parametrizing results over `(f : M →*₀ N)`,\nyou should parametrize over `(F : Type _) [MonoidWithZeroHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to extend `MonoidWithZeroHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L466-L467","name":"map_zpow","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zpow","doc":"Group homomorphisms preserve integer power. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L464-L465","name":"map_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zsmul","doc":"Additive group homomorphisms preserve integer scaling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L456-L459","name":"map_zpow'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zpow'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L455-L455","name":"map_zsmul'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zsmul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L455-L455","name":"map_zsmul'.match_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zsmul'.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L448-L451","name":"map_pow","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L447-L447","name":"map_nsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L447-L447","name":"map_nsmul.match_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#map_nsmul.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L442-L443","name":"map_div","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_div","doc":"Group homomorphisms preserve division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L441-L441","name":"map_sub","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_sub","doc":"Additive group homomorphisms preserve subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L435-L436","name":"map_mul_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_mul_inv","doc":"Group homomorphisms preserve division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L434-L434","name":"map_add_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_add_neg","doc":"Additive group homomorphisms preserve subtraction."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L427-L429","name":"map_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_inv","doc":"Group homomorphisms preserve inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L426-L426","name":"map_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_neg","doc":"Additive group homomorphisms preserve negation."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L419-L421","name":"map_div'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L418-L418","name":"map_sub'","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_sub'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L413-L414","name":"map_mul_eq_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_mul_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L412-L412","name":"map_add_eq_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_add_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L408-L408","name":"MonoidHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L407-L407","name":"AddMonoidHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L404-L405","name":"instCoeTCMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCMonoidHom","doc":"Any type satisfying `MonoidHomClass` can be cast into `MonoidHom` via\n`MonoidHomClass.toMonoidHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L402-L403","name":"instCoeTCAddMonoidHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCAddMonoidHom","doc":"Any type satisfying `AddMonoidHomClass` can be cast into `AddMonoidHom` via\n`AddMonoidHomClass.toAddMonoidHom`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L397-L398","name":"MonoidHomClass.toMonoidHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHomClass.toMonoidHom","doc":"Turn an element of a type `F` satisfying `MonoidHomClass F M N` into an actual\n`MonoidHom`. This is declared as the default coercion from `F` to `M →* N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L394-L396","name":"AddMonoidHomClass.toAddMonoidHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHomClass.toAddMonoidHom","doc":"Turn an element of a type `F` satisfying `AddMonoidHomClass F M N` into an\nactual `MonoidHom`. This is declared as the default coercion from `F` to `M →+ N`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L394-L396","name":"AddMonoidHomClass.toAddMonoidHom.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHomClass.toAddMonoidHom.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L394-L396","name":"AddMonoidHomClass.toAddMonoidHom.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHomClass.toAddMonoidHom.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L375-L384","name":"MonoidHom.monoidHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.monoidHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L374-L374","name":"AddMonoidHom.addMonoidHomClass.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.addMonoidHomClass.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L374-L374","name":"AddMonoidHom.addMonoidHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.addMonoidHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L374-L374","name":"AddMonoidHom.addMonoidHomClass.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.addMonoidHomClass.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L370-L370","name":"MonoidHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L370-L371","name":"MonoidHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHomClass","doc":"`MonoidHomClass F M N` states that `F` is a type of `Monoid`-preserving homomorphisms.\nYou should also extend this typeclass when you extend `MonoidHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L364-L365","name":"«term_→*_»","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#«term_→*_»","doc":"`M →* N` denotes the type of monoid homomorphisms from `M` to `N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L354-L354","name":"MonoidHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L354-L355","name":"MonoidHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#MonoidHom","doc":"`M →* N` is the type of functions `M → N` that preserve the `Monoid` structure.\n`MonoidHom` is also used for group homomorphisms.\n\nWhen possible, instead of parametrizing results over `(f : M →+ N)`,\nyou should parametrize over `(F : Type _) [MonoidHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to extend `MonoidHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L335-L335","name":"MulHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L334-L334","name":"AddHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L331-L332","name":"instCoeTCMulHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCMulHom","doc":"Any type satisfying `MulHomClass` can be cast into `MulHom` via `MulHomClass.toMulHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L329-L330","name":"instCoeTCAddHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCAddHom","doc":"Any type satisfying `AddHomClass` can be cast into `AddHom` via\n`AddHomClass.toAddHom`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L324-L326","name":"MulHomClass.toMulHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHomClass.toMulHom","doc":"Turn an element of a type `F` satisfying `MulHomClass F M N` into an actual\n`MulHom`. This is declared as the default coercion from `F` to `M →ₙ* N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L321-L323","name":"AddHomClass.toAddHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHomClass.toAddHom","doc":"Turn an element of a type `F` satisfying `AddHomClass F M N` into an actual\n`AddHom`. This is declared as the default coercion from `F` to `M →ₙ+ N`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L314-L315","name":"map_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L313-L313","name":"map_add","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L306-L309","name":"MulHom.mulHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.mulHomClass","doc":"`MulHom` is a type of multiplication-preserving homomorphisms "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L305-L305","name":"AddHom.addHomClass.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.addHomClass.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L305-L305","name":"AddHom.addHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.addHomClass","doc":"`AddHom` is a type of addition-preserving homomorphisms"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L301-L301","name":"MulHomClass.map_mul","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHomClass.map_mul","doc":"The proposition that the function preserves multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L298-L298","name":"MulHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L298-L301","name":"MulHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHomClass","doc":"`MulHomClass F M N` states that `F` is a type of multiplication-preserving homomorphisms.\n\nYou should declare an instance of this typeclass when you extend `MulHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L290-L291","name":"«term_→ₙ*_»","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#«term_→ₙ*_»","doc":"`M →ₙ* N` denotes the type of multiplication-preserving maps from `M` to `N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L287-L287","name":"MulHom.map_mul'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.map_mul'","doc":"The proposition that the function preserves multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L285-L285","name":"MulHom.toFun","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.toFun","doc":"The underlying function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L283-L283","name":"MulHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L283-L287","name":"MulHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#MulHom","doc":"`M →ₙ* N` is the type of functions `M → N` that preserve multiplication. The `ₙ` in the notation\nstands for \"non-unital\" because it is intended to match the notation for `NonUnitalAlgHom` and\n`NonUnitalRingHom`, so a `MulHom` is a non-unital monoid hom.\n\nWhen possible, instead of parametrizing results over `(f : M →ₙ* N)`,\nyou should parametrize over `(F : Type _) [MulHomClass F M N] (f : F)`.\nWhen you extend this structure, make sure to extend `MulHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L264-L264","name":"OneHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L263-L263","name":"ZeroHom.coe_coe","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L260-L261","name":"instCoeTCOneHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCOneHom","doc":"Any type satisfying `OneHomClass` can be cast into `OneHom` via `OneHomClass.toOneHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L258-L259","name":"instCoeTCZeroHom","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#instCoeTCZeroHom","doc":"Any type satisfying `ZeroHomClass` can be cast into `ZeroHom` via\n`ZeroHomClass.toZeroHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L253-L255","name":"OneHomClass.toOneHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHomClass.toOneHom","doc":"Turn an element of a type `F` satisfying `OneHomClass F M N` into an actual\n`OneHom`. This is declared as the default coercion from `F` to `OneHom M N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L250-L252","name":"ZeroHomClass.toZeroHom","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHomClass.toZeroHom","doc":"Turn an element of a type `F` satisfying `ZeroHomClass F M N` into an actual\n`ZeroHom`. This is declared as the default coercion from `F` to `ZeroHom M N`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L243-L244","name":"ne_one_of_map","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ne_one_of_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L242-L242","name":"ne_zero_of_map","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#ne_zero_of_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L237-L238","name":"map_ne_one_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_ne_one_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L236-L236","name":"map_ne_zero_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_ne_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L231-L232","name":"map_eq_one_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_eq_one_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L230-L230","name":"map_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L225-L226","name":"map_one","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L224-L224","name":"map_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L217-L220","name":"OneHom.oneHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.oneHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L216-L216","name":"ZeroHom.zeroHomClass.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.zeroHomClass.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L216-L216","name":"ZeroHom.zeroHomClass","kind":"instance","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.zeroHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L213-L213","name":"OneHomClass.map_one","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHomClass.map_one","doc":"The proposition that the function preserves 1 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L210-L210","name":"OneHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L210-L213","name":"OneHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHomClass","doc":"`OneHomClass F M N` states that `F` is a type of one-preserving homomorphisms.\nYou should extend this typeclass when you extend `OneHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L203-L203","name":"OneHom.map_one'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.map_one'","doc":"The proposition that the function preserves 1 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L201-L201","name":"OneHom.toFun","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.toFun","doc":"The underlying function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L199-L199","name":"OneHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L199-L203","name":"OneHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#OneHom","doc":"`OneHom M N` is the type of functions `M → N` that preserve one.\n\nWhen possible, instead of parametrizing results over `(f : OneHom M N)`,\nyou should parametrize over `(F : Type _) [OneHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to also extend `OneHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L180-L180","name":"AddMonoidHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L180-L181","name":"AddMonoidHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHomClass","doc":"`AddMonoidHomClass F M N` states that `F` is a type of `AddZeroClass`-preserving\nhomomorphisms.\n\nYou should also extend this typeclass when you extend `AddMonoidHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L172-L173","name":"«term_→+_»","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#«term_→+_»","doc":"`M →+ N` denotes the type of additive monoid homomorphisms from `M` to `N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L165-L165","name":"AddMonoidHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L165-L166","name":"AddMonoidHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#AddMonoidHom","doc":"`M →+ N` is the type of functions `M → N` that preserve the `AddZeroClass` structure.\n\n`AddMonoidHom` is also used for group homomorphisms.\n\nWhen possible, instead of parametrizing results over `(f : M →+ N)`,\nyou should parametrize over `(F : Type _) [AddMonoidHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to extend `AddMonoidHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L148-L148","name":"AddHomClass.map_add","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHomClass.map_add","doc":"The proposition that the function preserves addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L145-L145","name":"AddHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L145-L148","name":"AddHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHomClass","doc":"`AddHomClass F M N` states that `F` is a type of addition-preserving homomorphisms.\nYou should declare an instance of this typeclass when you extend `AddHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L139-L139","name":"AddHom.map_add'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.map_add'","doc":"The proposition that the function preserves addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L137-L137","name":"AddHom.toFun","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.toFun","doc":"The underlying function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L135-L135","name":"AddHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L135-L139","name":"AddHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#AddHom","doc":"`AddHom M N` is the type of functions `M → N` that preserve addition.\n\nWhen possible, instead of parametrizing results over `(f : AddHom M N)`,\nyou should parametrize over `(F : Type _) [AddHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to extend `AddHomClass`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L117-L121","name":"NeZero.of_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#NeZero.of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L112-L114","name":"NeZero.of_map","kind":"theorem","docLink":"./Mathlib/Algebra/Hom/Group.html#NeZero.of_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L103-L103","name":"ZeroHomClass.map_zero","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHomClass.map_zero","doc":"The proposition that the function preserves 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L100-L100","name":"ZeroHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L100-L103","name":"ZeroHomClass","kind":"class","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHomClass","doc":"`ZeroHomClass F M N` states that `F` is a type of zero-preserving homomorphisms.\n\nYou should extend this typeclass when you extend `ZeroHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L92-L92","name":"ZeroHom.map_zero'","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.map_zero'","doc":"The proposition that the function preserves 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L90-L90","name":"ZeroHom.toFun","kind":"def","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.toFun","doc":"The underlying function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L88-L88","name":"ZeroHom.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Hom/Group.lean#L88-L92","name":"ZeroHom","kind":"structure","docLink":"./Mathlib/Algebra/Hom/Group.html#ZeroHom","doc":"`ZeroHom M N` is the type of functions `M → N` that preserve zero.\n\nWhen possible, instead of parametrizing results over `(f : ZeroHom M N)`,\nyou should parametrize over `(F : Type _) [ZeroHomClass F M N] (f : F)`.\n\nWhen you extend this structure, make sure to also extend `ZeroHomClass`.\n"}]}