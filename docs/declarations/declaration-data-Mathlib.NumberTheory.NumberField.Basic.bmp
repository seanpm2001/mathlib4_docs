{"name":"Mathlib.NumberTheory.NumberField.Basic","instances":[{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommRing","Int","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers","EuclideanDomain.toCommRing","Field.toEuclideanDomain","Subalgebra.toAlgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","Semifield.toCommSemiring","Field.toSemifield","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","Algebra.id","NumberField.ringOfIntegers"],"name":"NumberField.RingOfIntegers.instIsFractionRingSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingToAlgebraToCommSemiringToSemifieldId","className":"IsLocalization"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Int","Int.instCommRingInt","Subalgebra.toCommSemiring","Int","CommRing.toCommSemiring","Int.instCommRingInt","Semifield.toCommSemiring","Field.toSemifield","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","Subalgebra.toAlgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","Semifield.toCommSemiring","Field.toSemifield","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","Algebra.id","NumberField.ringOfIntegers"],"name":"NumberField.RingOfIntegers.instIsIntegralClosureSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldToAlgebraId","className":"IsIntegralClosure"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommRing","Int","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers","Subalgebra.isDomain","Int","Int.instCommRingInt","DivisionRing.toRing","Field.toDivisionRing","Field.isDomain","algebraInt","NumberField.ringOfIntegers"],"name":"NumberField.RingOfIntegers.instIsIntegrallyClosedSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","className":"IsIntegrallyClosed"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","AddGroupWithOne.toAddMonoidWithOne","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Ring.toAddGroupWithOne","Subalgebra.toRing"],"name":"NumberField.RingOfIntegers.instCharZeroSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToAddMonoidWithOneToAddGroupWithOneToRing","className":"CharZero"},{"typeNames":["Int","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Int.instSemiringInt","NonUnitalNonAssocSemiring.toAddCommMonoid","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring","NonAssocRing.toNonUnitalNonAssocRing","Ring.toNonAssocRing","Subalgebra.toRing","AddCommGroup.intModule","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Ring.toAddCommGroup","Subalgebra.toRing"],"name":"NumberField.RingOfIntegers.instIsNoetherianIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","className":"IsNoetherian"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommRing","Int","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers","Subalgebra.isDomain","Int","Int.instCommRingInt","DivisionRing.toRing","Field.toDivisionRing","Field.isDomain","algebraInt","NumberField.ringOfIntegers"],"name":"NumberField.RingOfIntegers.instIsDedekindDomainSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","className":"IsDedekindDomain"},{"typeNames":["Int","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Int.instSemiringInt","NonUnitalNonAssocSemiring.toAddCommMonoid","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring","NonAssocRing.toNonUnitalNonAssocRing","Ring.toNonAssocRing","Subalgebra.toRing","AddCommGroup.intModule","Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Ring.toAddCommGroup","Subalgebra.toRing"],"name":"NumberField.RingOfIntegers.instFreeIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","className":"Module.Free"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommSemiring","Int","CommRing.toCommSemiring","Int.instCommRingInt","Semifield.toCommSemiring","Field.toSemifield","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers","Algebra.algebraMapSubmonoid","Int","Int.instCommSemiringInt","Subtype","Membership.mem","Subalgebra","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","Subalgebra.algebra","nonZeroDivisors","Semiring.toMonoidWithZero","Int.instSemiringInt","Semifield.toCommSemiring","Field.toSemifield","Subalgebra.toAlgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","Semifield.toCommSemiring","Field.toSemifield","CommSemiring.toSemiring","algebraInt","DivisionRing.toRing","Field.toDivisionRing","Algebra.id","NumberField.ringOfIntegers"],"name":"NumberField.RingOfIntegers.instIsLocalizationSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldAlgebraMapSubmonoidInstCommSemiringIntToSemiringAlgebraNonZeroDivisorsToMonoidWithZeroInstSemiringIntToAlgebraId","className":"IsLocalization"},{"typeNames":["Rat","Rat.field"],"name":"Rat.numberField","className":"NumberField"},{"typeNames":["AdjoinRoot","Rat","Rat.commRing","AdjoinRoot.field","Rat","Rat.field"],"name":"AdjoinRoot.instNumberFieldAdjoinRootRatCommRingFieldField","className":"NumberField"}],"imports":["Init","Mathlib.Algebra.CharP.Algebra","Mathlib.RingTheory.DedekindDomain.IntegralClosure"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L211-L213","name":"AdjoinRoot.instNumberFieldAdjoinRootRatCommRingFieldField","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#AdjoinRoot.instNumberFieldAdjoinRootRatCommRingFieldField","doc":"The quotient of `ℚ[X]` by the ideal generated by an irreducible polynomial of `ℚ[X]`\nis a number field. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L195-L196","name":"Rat.ringOfIntegersEquiv","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#Rat.ringOfIntegersEquiv","doc":"The ring of integers of `ℚ` as a number field is just `ℤ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L184-L191","name":"Rat.numberField","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#Rat.numberField","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L174-L175","name":"NumberField.RingOfIntegers.rank","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.rank","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L169-L171","name":"NumberField.integralBasis_apply","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L164-L165","name":"NumberField.integralBasis","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis","doc":"A basis of `K` over `ℚ` that is also a basis of `𝓞 K` over `ℤ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L157-L158","name":"NumberField.RingOfIntegers.basis","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.basis","doc":"A ℤ-basis of the ring of integers of `K`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L153-L154","name":"NumberField.RingOfIntegers.instIsLocalizationSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldAlgebraMapSubmonoidInstCommSemiringIntToSemiringAlgebraNonZeroDivisorsToMonoidWithZeroInstSemiringIntToAlgebraId","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsLocalizationSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldAlgebraMapSubmonoidInstCommSemiringIntToSemiringAlgebraNonZeroDivisorsToMonoidWithZeroInstSemiringIntToAlgebraId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L150-L151","name":"NumberField.RingOfIntegers.instFreeIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instFreeIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L147-L148","name":"NumberField.RingOfIntegers.instIsDedekindDomainSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsDedekindDomainSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L140-L144","name":"NumberField.RingOfIntegers.not_isField","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.not_isField","doc":"The ring of integers of a number field is not a field. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L136-L137","name":"NumberField.RingOfIntegers.instIsNoetherianIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsNoetherianIntSubtypeMemSubalgebraToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersInstSemiringIntToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonAssocRingToRingIntModuleToAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L133-L134","name":"NumberField.RingOfIntegers.instCharZeroSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToAddMonoidWithOneToAddGroupWithOneToRing","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instCharZeroSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToAddMonoidWithOneToAddGroupWithOneToRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L126-L128","name":"NumberField.RingOfIntegers.equiv","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.equiv","doc":"The ring of integers of `K` are equivalent to any integral closure of `ℤ` in `K` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L120-L122","name":"NumberField.RingOfIntegers.map_mem","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.map_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L116-L117","name":"NumberField.RingOfIntegers.isIntegral_coe","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.isIntegral_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L113-L114","name":"NumberField.RingOfIntegers.instIsIntegrallyClosedSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsIntegrallyClosedSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingIsDomainIsDomain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L110-L111","name":"NumberField.RingOfIntegers.instIsIntegralClosureSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldToAlgebraId","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsIntegralClosureSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommSemiringToCommSemiringToSemifieldToAlgebraId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L107-L108","name":"NumberField.RingOfIntegers.instIsFractionRingSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingToAlgebraToCommSemiringToSemifieldId","kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers.instIsFractionRingSubtypeMemSubalgebraIntToCommSemiringInstCommRingIntToSemiringToCommSemiringToCommRingToEuclideanDomainAlgebraIntToRingToDivisionRingInstMembershipInstSetLikeSubalgebraRingOfIntegersToCommRingToAlgebraToCommSemiringToSemifieldId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L92-L100","name":"NumberField.ringOfIntegersAlgebra","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegersAlgebra","doc":"Given an algebra between two fields, create an algebra between their two rings of integers.\n\nFor now, this is not an instance by default as it creates an equal-but-not-defeq diamond with\n`Algebra.id` when `K = L`. This is caused by `x = ⟨x, x.prop⟩` not being defeq on subtypes. This\nwill likely change in Lean 4. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L78-L83","name":"NumberField.isIntegral_of_mem_ringOfIntegers","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.isIntegral_of_mem_ringOfIntegers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L74-L75","name":"NumberField.mem_ringOfIntegers","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.mem_ringOfIntegers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L72-L72","name":"NumberField.term𝓞","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.term𝓞","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L68-L69","name":"NumberField.ringOfIntegers","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers","doc":"The ring of integers (or number ring) corresponding to a number field\nis the integral closure of ℤ in the number field. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L62-L63","name":"NumberField.isAlgebraic","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.isAlgebraic","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L50-L52","name":"Int.not_isField","kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#Int.not_isField","doc":"`ℤ` with its usual ring structure is not a field. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L42-L42","name":"NumberField.to_finiteDimensional","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.to_finiteDimensional","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L41-L41","name":"NumberField.to_charZero","kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.to_charZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L40-L40","name":"NumberField.mk","kind":"ctor","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/NumberTheory/NumberField/Basic.lean#L40-L42","name":"NumberField","kind":"class","docLink":"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField","doc":"A number field is a field which has characteristic zero and is finite\ndimensional over ℚ. "}]}