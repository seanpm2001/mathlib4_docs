{"name":"Mathlib.Tactic.CategoryTheory.BicategoryCoherence","instances":[{"typeNames":["CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHomId","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHomComp","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom"},{"typeNames":[],"name":"Mathlib.Tactic.BicategoryCoherence.liftHomOf","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom"},{"typeNames":["CategoryTheory.CategoryStruct.id","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Bicategory.homCategory"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂Id","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId","CategoryTheory.Iso.hom","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.leftUnitor"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorHom","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId","CategoryTheory.Iso.inv","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.leftUnitor"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorInv","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId","CategoryTheory.Iso.hom","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.rightUnitor"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorHom","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId","CategoryTheory.Iso.inv","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.rightUnitor"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorInv","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Iso.hom","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.associator"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorHom","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Iso.inv","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Bicategory.homCategory","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.associator"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorInv","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Bicategory.homCategory"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂Comp","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.Bicategory.whiskerLeft"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerLeft","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.Bicategory.whiskerRight"],"name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerRight","className":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂"},{"typeNames":[],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.refl","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","Mathlib.Tactic.BicategoryCoherence.liftHomComp"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerLeft","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","Mathlib.Tactic.BicategoryCoherence.liftHomComp"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerRight","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight'","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left'","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","CategoryTheory.CategoryStruct.id","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.id","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomId"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right'","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"},{"typeNames":["CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct","Mathlib.Tactic.BicategoryCoherence.liftHomComp","CategoryTheory.CategoryStruct.comp","CategoryTheory.Bicategory.toCategoryStruct"],"name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc'","className":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence"}],"imports":["Init","Mathlib.CategoryTheory.Bicategory.Coherence"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L313-L315","name":"Mathlib.Tactic.BicategoryCoherence.assoc_liftHom₂","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.assoc_liftHom₂","doc":"Auxiliary simp lemma for the `coherence` tactic:\nthis move brackets to the left in order to expose a maximal prefix\nbuilt out of unitors and associators.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L290-L293","name":"Mathlib.Tactic.BicategoryCoherence.whisker_simps","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.whisker_simps","doc":"Simp lemmas for rewriting a 2-morphism into a normal form.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L286-L288","name":"Mathlib.Tactic.BicategoryCoherence.tacticBicategory_coherence","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.tacticBicategory_coherence","doc":"Coherence tactic for bicategories.\nUse `pure_coherence` instead, which is a frontend to this one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L270-L284","name":"Mathlib.Tactic.BicategoryCoherence.bicategory_coherence","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.bicategory_coherence","doc":"Coherence tactic for bicategories. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L264-L267","name":"Mathlib.Tactic.BicategoryCoherence.mkLiftMap₂LiftExpr","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.mkLiftMap₂LiftExpr","doc":"Auxiliary definition for `bicategorical_coherence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L253-L258","name":"Mathlib.Tactic.BicategoryCoherence.exception'","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.exception'","doc":"Helper function for throwing exceptions with respect to the main goal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L249-L250","name":"Mathlib.Tactic.BicategoryCoherence.exception","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.exception","doc":"Helper function for throwing exceptions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L242-L243","name":"Mathlib.Tactic.BicategoryCoherence.bicategoricalComp_refl","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.bicategoricalComp_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L227-L229","name":"CategoryTheory.Bicategory.«term_≪⊗≫_»","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#CategoryTheory.Bicategory.«term_≪⊗≫_»","doc":"Compose two isomorphisms in a bicategorical category,\ninserting unitors and associators between as necessary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L221-L223","name":"Mathlib.Tactic.BicategoryCoherence.bicategoricalIsoComp","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.bicategoricalIsoComp","doc":"Compose two isomorphisms in a bicategorical category,\ninserting unitors and associators between as necessary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L215-L217","name":"CategoryTheory.Bicategory.«term_⊗≫_»","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#CategoryTheory.Bicategory.«term_⊗≫_»","doc":"Compose two morphisms in a bicategorical category,\ninserting unitors and associators between as necessary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L209-L211","name":"Mathlib.Tactic.BicategoryCoherence.bicategoricalComp","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.bicategoricalComp","doc":"Compose two morphisms in a bicategorical category,\ninserting unitors and associators between as necessary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L203-L204","name":"Mathlib.Tactic.BicategoryCoherence.bicategoricalIso","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.bicategoricalIso","doc":"Construct an isomorphism between two objects in a bicategorical category\nout of unitors and associators. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L193-L196","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc'","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L192-L192","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc'_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc'_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L186-L189","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L185-L185","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.assoc_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L180-L182","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right'","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L179-L179","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right'_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right'_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L174-L176","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L173-L173","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.right_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L168-L170","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left'","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L167-L167","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left'_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left'_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L162-L164","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L161-L161","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.left_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L156-L158","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight'","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L155-L155","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight'_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight'_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L150-L152","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L149-L149","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.tensorRight_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L144-L146","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerRight","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L143-L143","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerRight_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerRight_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L138-L140","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerLeft","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L137-L137","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerLeft_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.whiskerLeft_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L133-L134","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.refl","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L132-L132","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.refl_hom'","kind":"theorem","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.refl_hom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L130-L130","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.hom","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.hom","doc":"The chosen structural isomorphism between to 1-morphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L118-L118","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.isIso","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.isIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L117-L117","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.hom'","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.hom'","doc":"The chosen structural isomorphism between to 1-morphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L115-L115","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.mk","kind":"ctor","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L115-L118","name":"Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence","kind":"class","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.BicategoricalCoherence","doc":"A typeclass carrying a choice of bicategorical structural isomorphism between two objects.\nUsed by the `⊗≫` bicategorical composition operator, and the `coherence` tactic.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L107-L109","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerRight","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L102-L104","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerLeft","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂WhiskerLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L97-L99","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂Comp","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂Comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L92-L94","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorInv","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L87-L89","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorHom","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂AssociatorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L83-L84","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorInv","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L79-L80","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorHom","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂RightUnitorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L75-L76","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorInv","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L71-L72","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorHom","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂LeftUnitorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L67-L68","name":"Mathlib.Tactic.BicategoryCoherence.liftHom₂Id","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHom₂Id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L64-L64","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂.lift","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom₂.lift","doc":"A lift of a 2-morphism to the free bicategory.\nThis should only exist for \"structural\" 2-morphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L61-L61","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂.mk","kind":"ctor","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom₂.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L61-L64","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom₂","kind":"class","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom₂","doc":"A typeclass carrying a choice of lift of a 2-morphism from `B` to `FreeBicategory B`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L57-L57","name":"Mathlib.Tactic.BicategoryCoherence.liftHomOf","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHomOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L53-L54","name":"Mathlib.Tactic.BicategoryCoherence.liftHomComp","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHomComp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L50-L50","name":"Mathlib.Tactic.BicategoryCoherence.liftHomId","kind":"instance","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.liftHomId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L47-L47","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom.lift","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom.lift","doc":"A lift of a morphism to the free bicategory.\nThis should only exist for \"structural\" morphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L44-L44","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom.mk","kind":"ctor","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/BicategoryCoherence.lean#L44-L47","name":"Mathlib.Tactic.BicategoryCoherence.LiftHom","kind":"class","docLink":"./Mathlib/Tactic/CategoryTheory/BicategoryCoherence.html#Mathlib.Tactic.BicategoryCoherence.LiftHom","doc":"A typeclass carrying a choice of lift of a 1-morphism from `B` to `FreeBicategory B`. "}]}