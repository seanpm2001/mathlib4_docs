{"name":"Mathlib.Data.Matrix.Reflection","instances":[],"imports":["Init","Mathlib.Data.Matrix.Notation","Mathlib.Data.Matrix.Basic","Mathlib.Data.Fin.Tuple.Reflection"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L235-L236","name":"Matrix.etaExpand_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.etaExpand_eq","doc":"This can be used to prove\n```lean\nexample (A : Matrix (Fin 2) (Fin 2) α) :\n  A = !![A 0 0, A 0 1;\n         A 1 0, A 1 1] :=\n(etaExpand_eq _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L223-L224","name":"Matrix.etaExpand","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.etaExpand","doc":"Expand `A` to `!![A 0 0, ...; ..., A m n]` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L212-L215","name":"Matrix.vecMulᵣ_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.vecMulᵣ_eq","doc":"This can be used to prove\n```lean\nexample [NonUnitalNonAssocSemiring α] (a₁₁ a₁₂ a₂₁ a₂₂ b₁ b₂ : α) :\n  vecMul ![b₁, b₂] !![a₁₁, a₁₂;\n                       a₂₁, a₂₂] = ![b₁*a₁₁ + b₂*a₂₁, b₁*a₁₂ + b₂*a₂₂] :=\n(vecMulᵣ_eq _ _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L199-L200","name":"Matrix.vecMulᵣ","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.vecMulᵣ","doc":"`Matrix.vecMul` with better defeq for `Fin` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L188-L191","name":"Matrix.mulVecᵣ_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.mulVecᵣ_eq","doc":"This can be used to prove\n```lean\nexample [NonUnitalNonAssocSemiring α] (a₁₁ a₁₂ a₂₁ a₂₂ b₁ b₂ : α) :\n  !![a₁₁, a₁₂;\n     a₂₁, a₂₂].mulVec ![b₁, b₂] = ![a₁₁*b₁ + a₁₂*b₂, a₂₁*b₁ + a₂₂*b₂] :=\n(mulVecᵣ_eq _ _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L175-L176","name":"Matrix.mulVecᵣ","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.mulVecᵣ","doc":"`Matrix.mulVec` with better defeq for `Fin` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L162-L165","name":"Matrix.mulᵣ_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.mulᵣ_eq","doc":"This can be used to prove\n```lean\nexample [AddCommMonoid α] [Mul α] (a₁₁ a₁₂ a₂₁ a₂₂ b₁₁ b₁₂ b₂₁ b₂₂ : α) :\n  !![a₁₁, a₁₂;\n     a₂₁, a₂₂] ⬝ !![b₁₁, b₁₂;\n                    b₂₁, b₂₂] =\n  !![a₁₁*b₁₁ + a₁₂*b₂₁, a₁₁*b₁₂ + a₁₂*b₂₂;\n     a₂₁*b₁₁ + a₂₂*b₂₁, a₂₁*b₁₂ + a₂₂*b₂₂] :=\n(mulᵣ_eq _ _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L145-L147","name":"Matrix.mulᵣ","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.mulᵣ","doc":"`Matrix.mul` with better defeq for `Fin` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L135-L138","name":"Matrix.dotProductᵣ_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.dotProductᵣ_eq","doc":"This can be used to prove\n```lean\nexample (a b c d : α) [Mul α] [AddCommMonoid α] :\n  dot_product ![a, b] ![c, d] = a * c + b * d :=\n(dot_productᵣ_eq _ _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L123-L124","name":"Matrix.dotProductᵣ","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.dotProductᵣ","doc":"`Matrix.dotProduct` with better defeq for `Fin` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L107-L116","name":"Matrix.transposeᵣ_eq","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.transposeᵣ_eq","doc":"This can be used to prove\n```lean\nexample (a b c d : α) : transpose !![a, b; c, d] = !![a, c; b, d] := (transposeᵣ_eq _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L95-L98","name":"Matrix.transposeᵣ","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.transposeᵣ","doc":"`Matrix.transpose` with better defeq for `Fin` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L83-L87","name":"Matrix.exists_iff","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.exists_iff","doc":"This can be use to prove\n```lean\nexample (P : Matrix (Fin 2) (Fin 3) α → Prop) :\n  (∃ x, P x) ↔ ∃ a b c d e f, P !![a, b, c; d, e, f] :=\n(exists_iff _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L71-L73","name":"Matrix.Exists","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.Exists","doc":"`∃` with better defeq for `∃ x : Matrix (Fin m) (Fin n) α, P x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L59-L63","name":"Matrix.forall_iff","kind":"theorem","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.forall_iff","doc":"This can be use to prove\n```lean\nexample (P : Matrix (Fin 2) (Fin 3) α → Prop) :\n  (∀ x, P x) ↔ ∀ a b c d e f, P !![a, b, c; d, e, f] :=\n(forall_iff _).symm\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/Reflection.lean#L47-L49","name":"Matrix.Forall","kind":"def","docLink":"./Mathlib/Data/Matrix/Reflection.html#Matrix.Forall","doc":"`∀` with better defeq for `∀ x : Matrix (Fin m) (Fin n) α, P x`. "}]}