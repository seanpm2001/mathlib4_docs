{"name":"Mathlib.Algebra.Module.Injective","instances":[{"typeNames":["Module.Baer.ExtensionOf"],"name":"Module.Baer.instInfExtensionOf","className":"Inf"},{"typeNames":["Module.Baer.ExtensionOf"],"name":"Module.Baer.instSemilatticeInfExtensionOf","className":"SemilatticeInf"},{"typeNames":["Module.Baer.ExtensionOf"],"name":"Module.Baer.ExtensionOf.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.CategoryTheory.Preadditive.Injective","Mathlib.Algebra.Category.ModuleCat.EpiMono","Mathlib.RingTheory.Ideal.Basic","Mathlib.LinearAlgebra.LinearPMap","Mathlib.Data.TypeMax"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L454-L467","name":"Module.Baer.injective","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.injective","doc":"**Baer's criterion** for injective module : a Baer module is an injective module, i.e. if every\nlinear map from an ideal can be extended, then the module is injective."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L442-L448","name":"Module.Baer.extensionOfMax_to_submodule_eq_top","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.extensionOfMax_to_submodule_eq_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L432-L438","name":"Module.Baer.extensionOfMax_le","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.extensionOfMax_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L397-L428","name":"Module.Baer.extensionOfMaxAdjoin","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.extensionOfMaxAdjoin","doc":"The linear map `M ⊔ ⟨y⟩ ⟶ Q` by `x + r • y ↦ f x + φ r` is an extension of `f`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L371-L392","name":"Module.Baer.ExtensionOfMaxAdjoin.extensionToFun_wd","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extensionToFun_wd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L364-L367","name":"Module.Baer.ExtensionOfMaxAdjoin.extensionToFun","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extensionToFun","doc":"We can finally define a linear map `M ⊔ ⟨y⟩ ⟶ Q` by `x + r • y ↦ f x + φ r`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L353-L358","name":"Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L344-L349","name":"Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_wd","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_wd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L331-L340","name":"Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_wd'","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_wd'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L324-L327","name":"Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_is_extension","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo_is_extension","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L319-L320","name":"Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.extendIdealTo","doc":"Since we assumed `Q` being Baer, the linear map `x ↦ f' (x • y) : I ⟶ Q` extends to `R ⟶ Q`,\ncall this extended map `φ`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L302-L313","name":"Module.Baer.ExtensionOfMaxAdjoin.idealTo","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.idealTo","doc":"A linear map `I ⟶ Q` by `x ↦ f' (x • y)` where `f'` is the maximal extension"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L296-L297","name":"Module.Baer.ExtensionOfMaxAdjoin.ideal","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.ideal","doc":"The ideal `I = {r | r • y ∈ N}`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L286-L288","name":"Module.Baer.ExtensionOfMaxAdjoin.eqn","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.eqn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L281-L282","name":"Module.Baer.ExtensionOfMaxAdjoin.snd","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.snd","doc":"If `x ∈ M ⊔ ⟨y⟩`, then `x = m + r • y`, `snd` pick an arbitrary such `r`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L274-L276","name":"Module.Baer.ExtensionOfMaxAdjoin.fst","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOfMaxAdjoin.fst","doc":"If `x ∈ M ⊔ ⟨y⟩`, then `x = m + r • y`, `fst` pick an arbitrary such `m`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L256-L257","name":"Module.Baer.supExtensionOfMaxSingleton","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.supExtensionOfMaxSingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L246-L249","name":"Module.Baer.extensionOfMax_is_max","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.extensionOfMax_is_max","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L240-L242","name":"Module.Baer.extensionOfMax","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.extensionOfMax","doc":"Since every nonempty chain has a maximal element, by Zorn's lemma, there is a maximal\n`extension_of i f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L213-L234","name":"Module.Baer.ExtensionOf.inhabited","kind":"instance","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L203-L207","name":"Module.Baer.ExtensionOf.le_max","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.le_max","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L179-L199","name":"Module.Baer.ExtensionOf.max","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.max","doc":"The maximal element of every nonempty chain of `extension_of i f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L170-L174","name":"Module.Baer.chain_linearPMap_of_chain_extensionOf","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.chain_linearPMap_of_chain_extensionOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L152-L166","name":"Module.Baer.instSemilatticeInfExtensionOf","kind":"instance","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.instSemilatticeInfExtensionOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L140-L150","name":"Module.Baer.instInfExtensionOf","kind":"instance","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.instInfExtensionOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L130-L134","name":"Module.Baer.ExtensionOf.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L119-L126","name":"Module.Baer.ExtensionOf.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L110-L110","name":"Module.Baer.ExtensionOf.is_extension","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.is_extension","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L109-L109","name":"Module.Baer.ExtensionOf.le","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L108-L110","name":"Module.Baer.ExtensionOf","kind":"structure","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf","doc":"If we view `M` as a submodule of `N` via the injective linear map `i : M ↪ N`, then a submodule\nbetween `M` and `N` is a submodule `N'` of `N`. To prove Baer's criterion, we need to consider\npairs of `(N', f')` such that `M ≤ N' ≤ N` and `f'` extends `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L94-L95","name":"Module.Baer","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer","doc":"An `R`-module `Q` satisfies Baer's criterion if any `R`-linear map from an `Ideal R` extends to\nan `R`-linear map `R ⟶ Q`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L85-L89","name":"Module.injective_iff_injective_object","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.injective_iff_injective_object","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L74-L82","name":"Module.injective_module_of_injective_object","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.injective_module_of_injective_object","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L67-L71","name":"Module.injective_object_of_injective_module","kind":"theorem","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.injective_object_of_injective_module","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L61-L61","name":"Module.Injective.out","kind":"def","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Injective.out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L60-L63","name":"Module.Injective","kind":"class","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Injective","doc":"An `R`-module `Q` is injective if and only if every injective `R`-linear map descends to a linear\nmap to `Q`, i.e. in the following diagram, if `f` is injective then there is an `R`-linear map\n`h : Y ⟶ Q` such that `g = h ∘ f`\n  ```\n  X --- f ---> Y\n  |\n  | g\n  v\n  Q\n  ```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L1-L1","name":"Module.Injective.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Injective.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Module/Injective.lean#L1-L1","name":"Module.Baer.ExtensionOf.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Module/Injective.html#Module.Baer.ExtensionOf.mk","doc":""}]}