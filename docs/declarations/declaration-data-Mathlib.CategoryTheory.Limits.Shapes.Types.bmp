{"name":"Mathlib.CategoryTheory.Limits.Shapes.Types","instances":[{"typeNames":["TypeMax","CategoryTheory.types"],"name":"CategoryTheory.Limits.Types.instHasProductTypeMaxTypes","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["_builtin_typeu","CategoryTheory.types"],"name":"CategoryTheory.Limits.Types.instHasProductTypeTypes","className":"CategoryTheory.Limits.HasLimit"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Types","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Limits.Shapes.BinaryProducts","Mathlib.CategoryTheory.Limits.Shapes.Terminal","Mathlib.CategoryTheory.ConcreteCategory.Basic","Mathlib.Tactic.CategoryTheory.Elementwise"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L628-L630","name":"CategoryTheory.Limits.Types.pullbackIsoPullback_inv_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackIsoPullback_inv_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L622-L624","name":"CategoryTheory.Limits.Types.pullbackIsoPullback_inv_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackIsoPullback_inv_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L616-L618","name":"CategoryTheory.Limits.Types.pullbackIsoPullback_hom_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackIsoPullback_hom_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L610-L612","name":"CategoryTheory.Limits.Types.pullbackIsoPullback_hom_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackIsoPullback_hom_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L605-L606","name":"CategoryTheory.Limits.Types.pullbackIsoPullback","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackIsoPullback","doc":"The pullback given by the instance `HasPullbacks (Type u)` is isomorphic to the\nexplicit pullback object given by `PullbackObj`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L598-L599","name":"CategoryTheory.Limits.Types.pullbackConeIsoPullback","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackConeIsoPullback","doc":"The pullback cone given by the instance `HasPullbacks (Type u)` is isomorphic to the\nexplicit pullback cone given by `pullbackLimitCone`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L585-L592","name":"CategoryTheory.Limits.Types.pullbackLimitCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackLimitCone","doc":"The explicit pullback in the category of types, bundled up as a `LimitCone`\nfor given `f` and `g`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L584-L584","name":"CategoryTheory.Limits.Types.pullbackLimitCone_isLimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackLimitCone_isLimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L584-L584","name":"CategoryTheory.Limits.Types.pullbackLimitCone_cone","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackLimitCone_cone","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L577-L578","name":"CategoryTheory.Limits.Types.pullbackCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pullbackCone","doc":"The explicit pullback cone on `PullbackObj f g`.\nThis is bundled with the `IsLimit` data as `pullbackLimitCone f g`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L566-L567","name":"CategoryTheory.Limits.Types.PullbackObj","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.PullbackObj","doc":"The usual explicit pullback in the category of types, as a subtype of the product.\nThe full `LimitCone` data is bundled as `pullbackLimitCone f g`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L543-L545","name":"CategoryTheory.Limits.Types.coequalizerIso_quot_comp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizerIso_quot_comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L536-L538","name":"CategoryTheory.Limits.Types.coequalizerIso_π_comp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizerIso_π_comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L535-L535","name":"CategoryTheory.Limits.Types.coequalizerIso_π_comp_hom_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizerIso_π_comp_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L531-L532","name":"CategoryTheory.Limits.Types.coequalizerIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizerIso","doc":"The categorical coequalizer in `Type u` is the quotient by `f g ~ g x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L503-L527","name":"CategoryTheory.Limits.Types.coequalizer_preimage_image_eq_of_preimage_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizer_preimage_image_eq_of_preimage_eq","doc":"If `π : Y ⟶ Z` is an equalizer for `(f, g)`, and `U ⊆ Y` such that `f ⁻¹' U = g ⁻¹' U`,\nthen `π ⁻¹' (π '' U) = U`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L487-L497","name":"CategoryTheory.Limits.Types.coequalizerColimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coequalizerColimit","doc":"Show that the quotient by the relation generated by `f(x) ~ g(x)`\nis a coequalizer for the pair `(f, g)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L481-L481","name":"CategoryTheory.Limits.Types.CoequalizerRel.Rel","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.CoequalizerRel.Rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L480-L481","name":"CategoryTheory.Limits.Types.CoequalizerRel","kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.CoequalizerRel","doc":"(Implementation) The relation to be quotiented to obtain the coequalizer. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L469-L470","name":"CategoryTheory.Limits.Types.equalizerIso_inv_comp_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.equalizerIso_inv_comp_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L468-L468","name":"CategoryTheory.Limits.Types.equalizerIso_inv_comp_ι_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.equalizerIso_inv_comp_ι_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L464-L465","name":"CategoryTheory.Limits.Types.equalizerIso_hom_comp_subtype","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.equalizerIso_hom_comp_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L458-L459","name":"CategoryTheory.Limits.Types.equalizerIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.equalizerIso","doc":"The categorical equalizer in `Type u` is `{x : Y // g x = h x}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L447-L452","name":"CategoryTheory.Limits.Types.equalizerLimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.equalizerLimit","doc":"Show that the subtype `{x : Y // g x = h x}` is an equalizer for the pair `(g,h)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L440-L443","name":"CategoryTheory.Limits.Types.type_equalizer_iff_unique","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.type_equalizer_iff_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L427-L437","name":"CategoryTheory.Limits.Types.unique_of_type_equalizer","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.unique_of_type_equalizer","doc":"The converse of `type_equalizer_of_unique`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L413-L423","name":"CategoryTheory.Limits.Types.typeEqualizerOfUnique","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.typeEqualizerOfUnique","doc":"Show the given fork in `Type u` is an equalizer given that any element in the \"difference kernel\"\ncomes from `X`.\nThe converse of `unique_of_type_equalizer`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L399-L401","name":"CategoryTheory.Limits.Types.coproductIso_mk_comp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coproductIso_mk_comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L392-L394","name":"CategoryTheory.Limits.Types.coproductIso_ι_comp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coproductIso_ι_comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L391-L391","name":"CategoryTheory.Limits.Types.coproductIso_ι_comp_hom_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coproductIso_ι_comp_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L387-L388","name":"CategoryTheory.Limits.Types.coproductIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coproductIso","doc":"The categorical coproduct in `Type u` is the type theoretic coproduct `Σ j, F j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L374-L383","name":"CategoryTheory.Limits.Types.coproductColimitCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.coproductColimitCocone","doc":"The category of types has `Σ j, f j` as the coproduct of a type family `f : J → Type`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L367-L369","name":"CategoryTheory.Limits.Types.productIso_inv_comp_π","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.productIso_inv_comp_π","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L366-L366","name":"CategoryTheory.Limits.Types.productIso_inv_comp_π_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.productIso_inv_comp_π_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L361-L363","name":"CategoryTheory.Limits.Types.productIso_hom_comp_eval","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.productIso_hom_comp_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L355-L356","name":"CategoryTheory.Limits.Types.productIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.productIso","doc":"The categorical product in `Type u` is the type theoretic product `Π j, F j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L344-L351","name":"CategoryTheory.Limits.Types.productLimitCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.productLimitCone","doc":"The category of types has `Π j, f j` as the product of a type family `f : J → Type`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L332-L339","name":"CategoryTheory.Limits.Types.isCoprodOfMono","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.isCoprodOfMono","doc":"Any monomorphism in `Type` is a coproduct injection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L283-L328","name":"CategoryTheory.Limits.Types.binaryCofan_isColimit_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCofan_isColimit_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L276-L278","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L275-L275","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_inv_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L270-L272","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L269-L269","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_inv_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L264-L266","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L263-L263","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_hom_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inr_comp_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L258-L260","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L257-L257","name":"CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_hom_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso_inl_comp_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L251-L252","name":"CategoryTheory.Limits.Types.binaryCoproductIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductIso","doc":"The categorical binary coproduct in `Type u` is the sum `X ⊕ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L246-L247","name":"CategoryTheory.Limits.Types.binaryCoproductColimitCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductColimitCocone","doc":"The category of types has `X ⊕ Y`,\nas the binary coproduct of `X` and `Y`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L237-L240","name":"CategoryTheory.Limits.Types.binaryCoproductColimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductColimit","doc":"The sum type `X ⊕ Y` is a binary coproduct for `X` and `Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L236-L236","name":"CategoryTheory.Limits.Types.binaryCoproductColimit_desc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductColimit_desc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L231-L232","name":"CategoryTheory.Limits.Types.binaryCoproductCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductCocone","doc":"The sum type `X ⊕ Y` forms a cocone for the binary coproduct of `X` and `Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L230-L230","name":"CategoryTheory.Limits.Types.binaryCoproductCocone_ι_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductCocone_ι_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L230-L230","name":"CategoryTheory.Limits.Types.binaryCoproductCocone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryCoproductCocone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L220-L226","name":"CategoryTheory.Limits.Types.binaryProductIsoProd","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIsoProd","doc":"The product functor given by the instance `HasBinaryProducts (Type u)` is isomorphic to the\nexplicit binary product functor given by the product type.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L207-L214","name":"CategoryTheory.Limits.Types.binaryProductFunctor","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductFunctor","doc":"The functor which sends `X, Y` to the product type `X × Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L206-L206","name":"CategoryTheory.Limits.Types.binaryProductFunctor_obj_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductFunctor_obj_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L206-L206","name":"CategoryTheory.Limits.Types.binaryProductFunctor_map_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductFunctor_map_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L206-L206","name":"CategoryTheory.Limits.Types.binaryProductFunctor_obj_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductFunctor_obj_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L197-L199","name":"CategoryTheory.Limits.Types.binaryProductIso_inv_comp_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_inv_comp_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L196-L196","name":"CategoryTheory.Limits.Types.binaryProductIso_inv_comp_snd_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_inv_comp_snd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L191-L193","name":"CategoryTheory.Limits.Types.binaryProductIso_inv_comp_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_inv_comp_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L190-L190","name":"CategoryTheory.Limits.Types.binaryProductIso_inv_comp_fst_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_inv_comp_fst_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L185-L187","name":"CategoryTheory.Limits.Types.binaryProductIso_hom_comp_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_hom_comp_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L184-L184","name":"CategoryTheory.Limits.Types.binaryProductIso_hom_comp_snd_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_hom_comp_snd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L179-L181","name":"CategoryTheory.Limits.Types.binaryProductIso_hom_comp_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_hom_comp_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L178-L178","name":"CategoryTheory.Limits.Types.binaryProductIso_hom_comp_fst_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso_hom_comp_fst_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L174-L175","name":"CategoryTheory.Limits.Types.binaryProductIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductIso","doc":"The categorical binary product in `Type u` is cartesian product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L169-L170","name":"CategoryTheory.Limits.Types.binaryProductLimitCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductLimitCone","doc":"The category of types has `X × Y`, the usual cartesian product,\nas the binary product of `X` and `Y`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L168-L168","name":"CategoryTheory.Limits.Types.binaryProductLimitCone_cone","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductLimitCone_cone","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L168-L168","name":"CategoryTheory.Limits.Types.binaryProductLimitCone_isLimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductLimitCone_isLimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L159-L162","name":"CategoryTheory.Limits.Types.binaryProductLimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductLimit","doc":"The product type `X × Y` is a binary product for `X` and `Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L158-L158","name":"CategoryTheory.Limits.Types.binaryProductLimit_lift","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductLimit_lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L153-L154","name":"CategoryTheory.Limits.Types.binaryProductCone_snd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductCone_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L148-L149","name":"CategoryTheory.Limits.Types.binaryProductCone_fst","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductCone_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L143-L144","name":"CategoryTheory.Limits.Types.binaryProductCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductCone","doc":"The product type `X × Y` forms a cone for the binary product of `X` and `Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L142-L142","name":"CategoryTheory.Limits.Types.binaryProductCone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.binaryProductCone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L133-L134","name":"CategoryTheory.Limits.Types.isInitialPunit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.isInitialPunit","doc":"The initial object in `Type u` is `PEmpty`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L128-L129","name":"CategoryTheory.Limits.Types.initialIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.initialIso","doc":"The initial object in `Type u` is `PEmpty`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L116-L124","name":"CategoryTheory.Limits.Types.initialColimitCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.initialColimitCocone","doc":"The category of types has `PEmpty` as an initial object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L111-L112","name":"CategoryTheory.Limits.Types.isTerminalPunit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.isTerminalPunit","doc":"The terminal object in `Type u` is `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L106-L107","name":"CategoryTheory.Limits.Types.terminalIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.terminalIso","doc":"The terminal object in `Type u` is `PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L92-L102","name":"CategoryTheory.Limits.Types.terminalLimitCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.terminalLimitCone","doc":"The category of types has `PUnit` as a terminal object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L86-L88","name":"CategoryTheory.Limits.Types.pi_map_π_apply'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pi_map_π_apply'","doc":"A restatement of `Types.Limit.map_π_apply` that uses `Pi.π` and `Pi.map`,\nwith specialized universes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L78-L80","name":"CategoryTheory.Limits.Types.pi_map_π_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pi_map_π_apply","doc":"A restatement of `Types.Limit.map_π_apply` that uses `Pi.π` and `Pi.map`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L70-L73","name":"CategoryTheory.Limits.Types.pi_lift_π_apply'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pi_lift_π_apply'","doc":"A restatement of `Types.Limit.lift_π_apply` that uses `Pi.π` and `Pi.lift`,\nwith specialized universes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L61-L64","name":"CategoryTheory.Limits.Types.pi_lift_π_apply","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.pi_lift_π_apply","doc":"A restatement of `Types.Limit.lift_π_apply` that uses `Pi.π` and `Pi.lift`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L56-L57","name":"CategoryTheory.Limits.Types.instHasProductTypeTypes","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.instHasProductTypeTypes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Types.lean#L51-L52","name":"CategoryTheory.Limits.Types.instHasProductTypeMaxTypes","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Types.html#CategoryTheory.Limits.Types.instHasProductTypeMaxTypes","doc":""}]}