{"name":"Std.Tactic.Ext.Attr","instances":[{"typeNames":["Std.Tactic.Ext.ExtTheorem"],"name":"Std.Tactic.Ext.instInhabitedExtTheorem","className":"Inhabited"},{"typeNames":["Std.Tactic.Ext.ExtTheorem"],"name":"Std.Tactic.Ext.instReprExtTheorem","className":"Repr"},{"typeNames":["Std.Tactic.Ext.ExtTheorem"],"name":"Std.Tactic.Ext.instBEqExtTheorem","className":"BEq"},{"typeNames":["Std.Tactic.Ext.ExtTheorem"],"name":"Std.Tactic.Ext.instHashableExtTheorem","className":"Hashable"}],"imports":["Init","Std.Tactic.RCases","Std.Lean.Command"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L41-L49","name":"Std.Tactic.Ext.ext","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ext","doc":"Registers an extensionality lemma.\n\n* When `@[ext]` is applied to a structure, it generates `.ext` and `.ext_iff` theorems and registers\nthem for the `ext` tactic.\n\n* When `@[ext]` is applied to a theorem, the theorem is registered for the `ext` tactic.\n\n* You can use `@[ext 9000]` to specify a priority for the attribute. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L35-L39","name":"Std.Tactic.Ext.getExtLemmas","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.getExtLemmas","doc":"Get the list of `@[ext]` lemmas corresponding to the key `ty`,\nordered from high priority to low. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L25-L31","name":"Std.Tactic.Ext.extExtension","kind":"opaque","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.extExtension","doc":"The environment extension to track `@[ext]` lemmas. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L23-L23","name":"Std.Tactic.Ext.instHashableExtTheorem","kind":"instance","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.instHashableExtTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L23-L23","name":"Std.Tactic.Ext.instBEqExtTheorem","kind":"instance","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.instBEqExtTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L23-L23","name":"Std.Tactic.Ext.instReprExtTheorem","kind":"instance","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.instReprExtTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L23-L23","name":"Std.Tactic.Ext.instInhabitedExtTheorem","kind":"instance","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.instInhabitedExtTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L22-L22","name":"Std.Tactic.Ext.ExtTheorem.keys","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ExtTheorem.keys","doc":"Key in the discrimination tree. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L20-L20","name":"Std.Tactic.Ext.ExtTheorem.priority","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ExtTheorem.priority","doc":"Priority of the extensionality theorem. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L18-L18","name":"Std.Tactic.Ext.ExtTheorem.declName","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ExtTheorem.declName","doc":"Declaration name of the extensionality theorem. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L16-L23","name":"Std.Tactic.Ext.ExtTheorem","kind":"structure","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ExtTheorem","doc":"Information about an extensionality theorem, stored in the environment extension. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L12-L13","name":"Std.Tactic.Ext.«commandDeclare_ext_theorems_for(Flat:=_)___»","kind":"def","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.«commandDeclare_ext_theorems_for(Flat:=_)___»","doc":"`declare_ext_theorems_for A` declares the extensionality theorems for the structure `A`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Ext/Attr.lean#L1-L1","name":"Std.Tactic.Ext.ExtTheorem.mk","kind":"ctor","docLink":"./Std/Tactic/Ext/Attr.html#Std.Tactic.Ext.ExtTheorem.mk","doc":""}]}