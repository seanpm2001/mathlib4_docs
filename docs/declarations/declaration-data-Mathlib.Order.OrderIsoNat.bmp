{"name":"Mathlib.Order.OrderIsoNat","instances":[],"imports":["Init","Mathlib.Data.Nat.Lattice","Mathlib.Logic.Denumerable","Mathlib.Logic.Function.Iterate","Mathlib.Order.Hom.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L254-L262","name":"WellFounded.iSup_eq_monotonicSequenceLimit","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#WellFounded.iSup_eq_monotonicSequenceLimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L250-L251","name":"monotonicSequenceLimit","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#monotonicSequenceLimit","doc":"The constant value of an eventually-constant monotone sequence `a₀ ≤ a₁ ≤ a₂ ≤ ...` in a\npartially-ordered type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L244-L245","name":"monotonicSequenceLimitIndex","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#monotonicSequenceLimitIndex","doc":"Given an eventually-constant monotone sequence `a₀ ≤ a₁ ≤ a₂ ≤ ...` in a partially-ordered\ntype, `monotonicSequenceLimitIndex a` is the least natural number `n` for which `aₙ` reaches the\nconstant value. For sequences that are not eventually constant, `monotonicSequenceLimitIndex a`\nis defined, but is a junk value. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L231-L237","name":"WellFounded.monotone_chain_condition","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#WellFounded.monotone_chain_condition","doc":"The \"monotone chain condition\" below is sometimes a convenient form of well foundedness. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L219-L227","name":"WellFounded.monotone_chain_condition'","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#WellFounded.monotone_chain_condition'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L206-L216","name":"exists_increasing_or_nonincreasing_subseq","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#exists_increasing_or_nonincreasing_subseq","doc":"This is the infinitary Erdős–Szekeres theorem, and an important lemma in the usual proof of\nBolzano-Weierstrass for `ℝ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L169-L201","name":"exists_increasing_or_nonincreasing_subseq'","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#exists_increasing_or_nonincreasing_subseq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L156-L164","name":"Nat.exists_subseq_of_forall_mem_union","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.exists_subseq_of_forall_mem_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L151-L153","name":"Nat.orderEmbeddingOfSet_range","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.orderEmbeddingOfSet_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L144-L146","name":"Nat.Subtype.orderIsoOfNat_apply","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.Subtype.orderIsoOfNat_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L138-L140","name":"Nat.orderEmbeddingOfSet_apply","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.orderEmbeddingOfSet_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L133-L135","name":"Nat.coe_orderEmbeddingOfSet","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.coe_orderEmbeddingOfSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L121-L127","name":"Nat.Subtype.orderIsoOfNat","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.Subtype.orderIsoOfNat","doc":"`Nat.Subtype.ofNat` as an order isomorphism between `ℕ` and an infinite subset. See also\n`Nat.Nth` for a version where the subset may be finite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L113-L116","name":"Nat.orderEmbeddingOfSet","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#Nat.orderEmbeddingOfSet","doc":"An order embedding from `ℕ` to itself with a specified range "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L101-L103","name":"RelEmbedding.not_wellFounded_of_decreasing_seq","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.not_wellFounded_of_decreasing_seq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L92-L98","name":"RelEmbedding.wellFounded_iff_no_descending_seq","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.wellFounded_iff_no_descending_seq","doc":"A relation is well-founded iff it doesn't have any infinite decreasing sequence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L86-L88","name":"RelEmbedding.not_acc_of_decreasing_seq","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.not_acc_of_decreasing_seq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L68-L83","name":"RelEmbedding.acc_iff_no_decreasing_seq","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.acc_iff_no_decreasing_seq","doc":"A value is accessible iff it isn't contained in any infinite decreasing sequence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L60-L64","name":"RelEmbedding.exists_not_acc_lt_of_not_acc","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.exists_not_acc_lt_of_not_acc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L56-L57","name":"RelEmbedding.coe_natGt","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.coe_natGt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L50-L52","name":"RelEmbedding.natGt","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.natGt","doc":"If `f` is a strictly `r`-decreasing sequence, then this returns `f` as an order embedding. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L45-L46","name":"RelEmbedding.coe_natLt","kind":"theorem","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.coe_natLt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/OrderIsoNat.lean#L40-L41","name":"RelEmbedding.natLt","kind":"def","docLink":"./Mathlib/Order/OrderIsoNat.html#RelEmbedding.natLt","doc":"If `f` is a strictly `r`-increasing sequence, then this returns `f` as an order embedding. "}]}