{"name":"Mathlib.Data.Nat.EvenOddRec","instances":[],"imports":["Init","Mathlib.Data.Nat.Basic","Mathlib.Init.Data.Nat.Bitwise"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/EvenOddRec.lean#L51-L57","name":"Nat.evenOddRec_odd","kind":"theorem","docLink":"./Mathlib/Data/Nat/EvenOddRec.html#Nat.evenOddRec_odd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/EvenOddRec.lean#L41-L47","name":"Nat.evenOddRec_even","kind":"theorem","docLink":"./Mathlib/Data/Nat/EvenOddRec.html#Nat.evenOddRec_even","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/EvenOddRec.lean#L35-L37","name":"Nat.evenOddRec_zero","kind":"theorem","docLink":"./Mathlib/Data/Nat/EvenOddRec.html#Nat.evenOddRec_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/EvenOddRec.lean#L27-L31","name":"Nat.evenOddRec","kind":"def","docLink":"./Mathlib/Data/Nat/EvenOddRec.html#Nat.evenOddRec","doc":"Recursion principle on even and odd numbers: if we have `P 0`, and for all `i : ℕ` we can\nextend from `P i` to both `P (2 * i)` and `P (2 * i + 1)`, then we have `P n` for all `n : ℕ`.\nThis is nothing more than a wrapper around `Nat.binaryRec`, to avoid having to switch to\ndealing with `bit0` and `bit1`. "}]}