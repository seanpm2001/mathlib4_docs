{"name":"Mathlib.FieldTheory.RatFunc","instances":[{"typeNames":["RatFunc"],"name":"RatFunc.instZeroRatFunc","className":"Zero"},{"typeNames":["RatFunc"],"name":"RatFunc.instAddRatFunc","className":"Add"},{"typeNames":["RatFunc"],"name":"RatFunc.instSubRatFunc","className":"Sub"},{"typeNames":["RatFunc"],"name":"RatFunc.instNegRatFunc","className":"Neg"},{"typeNames":["RatFunc"],"name":"RatFunc.instOneRatFunc","className":"One"},{"typeNames":["RatFunc"],"name":"RatFunc.instMulRatFunc","className":"Mul"},{"typeNames":["RatFunc"],"name":"RatFunc.instDivRatFunc","className":"Div"},{"typeNames":["RatFunc"],"name":"RatFunc.instInvRatFunc","className":"Inv"},{"typeNames":["RatFunc"],"name":"RatFunc.instSMulRatFunc","className":"SMul"},{"typeNames":["Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","RatFunc","SMulZeroClass.toSMul","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","Polynomial.zero","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","AddMonoidWithOne.toAddMonoid","AddGroupWithOne.toAddMonoidWithOne","Ring.toAddGroupWithOne","Polynomial.ring","CommRing.toRing","DistribMulAction.toDistribSMul","RatFunc.instSMulRatFunc","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","Localization.instSMulLocalization","CommRing.toCommMonoid","Polynomial.commRing","nonZeroDivisors","Semiring.toMonoidWithZero","Algebra.toSMul","Polynomial.commSemiring","Polynomial.semiring","Algebra.id","IsScalarTower.right","RatFunc.instSMulRatFunc","Localization.instSMulLocalization","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","CommRing.toCommMonoid","Polynomial.commRing","nonZeroDivisors","Semiring.toMonoidWithZero","SMulZeroClass.toSMul","Polynomial.zero","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","AddMonoidWithOne.toAddMonoid","AddGroupWithOne.toAddMonoidWithOne","Ring.toAddGroupWithOne","Polynomial.ring","CommRing.toRing","DistribMulAction.toDistribSMul"],"name":"RatFunc.instIsScalarTowerPolynomialToSemiringToCommSemiringRatFuncToSMulZeroToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneRingToRingToDistribSMulInstSMulRatFuncInstSMulLocalizationToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringSemiringIdRightInstSMulRatFuncInstSMulLocalization","className":"IsScalarTower"},{"typeNames":["RatFunc"],"name":"RatFunc.instSubsingletonRatFunc","className":"Subsingleton"},{"typeNames":["RatFunc"],"name":"RatFunc.instInhabitedRatFunc","className":"Inhabited"},{"typeNames":["RatFunc"],"name":"RatFunc.instNontrivial","className":"Nontrivial"},{"typeNames":["RatFunc"],"name":"RatFunc.instCommRing","className":"CommRing"},{"typeNames":["RatFunc"],"name":"RatFunc.instFieldRatFunc","className":"Field"},{"typeNames":["RatFunc","DivisionSemiring.toSemiring","RatFunc","Semifield.toDivisionSemiring","Field.toSemifield","RatFunc.instFieldRatFunc"],"name":"RatFunc.instAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFunc","className":"Algebra"},{"typeNames":["Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","Polynomial.commRing","RatFunc","RatFunc.instCommRing","RatFunc.instAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFunc","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","Polynomial.commRing","Algebra.id"],"name":"RatFunc.instIsFractionRingPolynomialToSemiringToCommSemiringCommRingRatFuncInstCommRingInstAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFuncId","className":"IsLocalization"},{"typeNames":["RatFunc","Field.toCommRing","LaurentSeries","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield"],"name":"RatFunc.coeToLaurentSeries","className":"Coe"},{"typeNames":["RatFunc","Field.toCommRing","LaurentSeries","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","Semifield.toCommSemiring","RatFunc","Field.toCommRing","Field.toSemifield","RatFunc.instFieldRatFunc","Field.isDomain","HahnSeries.instSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZero","Int","StrictOrderedSemiring.toOrderedCancelAddCommMonoid","LinearOrderedSemiring.toStrictOrderedSemiring","LinearOrderedCommSemiring.toLinearOrderedSemiring","LinearOrderedCommRing.toLinearOrderedCommSemiring","Int.linearOrderedCommRing","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield"],"name":"RatFunc.instAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiring","className":"Algebra"},{"typeNames":["Polynomial","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","RatFunc","Field.toCommRing","LaurentSeries","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","RatFunc.instSMulRatFunc","Field.toCommRing","Polynomial","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","Localization.instSMulLocalization","CommSemiring.toSemiring","CommRing.toCommSemiring","CommRing.toCommMonoid","Polynomial.commRing","nonZeroDivisors","Semiring.toMonoidWithZero","Algebra.toSMul","Polynomial.commSemiring","Semifield.toCommSemiring","Polynomial.semiring","Algebra.id","IsScalarTower.right","Algebra.toSMul","RatFunc","Field.toCommRing","LaurentSeries","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","Semifield.toCommSemiring","RatFunc.instFieldRatFunc","Field.isDomain","HahnSeries.instSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZero","Int","StrictOrderedSemiring.toOrderedCancelAddCommMonoid","LinearOrderedSemiring.toStrictOrderedSemiring","LinearOrderedCommSemiring.toLinearOrderedSemiring","LinearOrderedCommRing.toLinearOrderedCommSemiring","Int.linearOrderedCommRing","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","RatFunc.instAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiring","Algebra.toSMul","Polynomial","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","LaurentSeries","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","CommRing.toCommSemiring","Polynomial.commRing","Field.toCommRing","HahnSeries.instSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZero","Int","StrictOrderedSemiring.toOrderedCancelAddCommMonoid","LinearOrderedSemiring.toStrictOrderedSemiring","LinearOrderedCommSemiring.toLinearOrderedSemiring","LinearOrderedCommRing.toLinearOrderedCommSemiring","Int.linearOrderedCommRing","HahnSeries.powerSeriesAlgebra","Semifield.toCommSemiring","PowerSeries.algebraPolynomial","Algebra.id"],"name":"RatFunc.instIsScalarTowerPolynomialToSemiringToDivisionSemiringToSemifieldRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroInstSMulRatFuncInstSMulLocalizationToSemiringToCommSemiringToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringToCommSemiringSemiringIdRightInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingInstAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiringPowerSeriesAlgebraAlgebraPolynomial","className":"IsScalarTower"}],"imports":["Init","Mathlib.RingTheory.EuclideanDomain","Mathlib.RingTheory.LaurentSeries","Mathlib.RingTheory.Localization.FractionRing","Mathlib.RingTheory.Polynomial.Content"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1786-L1789","name":"RatFunc.instIsScalarTowerPolynomialToSemiringToDivisionSemiringToSemifieldRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroInstSMulRatFuncInstSMulLocalizationToSemiringToCommSemiringToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringToCommSemiringSemiringIdRightInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingInstAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiringPowerSeriesAlgebraAlgebraPolynomial","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instIsScalarTowerPolynomialToSemiringToDivisionSemiringToSemifieldRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroInstSMulRatFuncInstSMulLocalizationToSemiringToCommSemiringToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringToCommSemiringSemiringIdRightInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingInstAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiringPowerSeriesAlgebraAlgebraPolynomial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1777-L1783","name":"RatFunc.algebraMap_apply_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_apply_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1774-L1775","name":"RatFunc.instAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiring","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instAlgebraRatFuncToCommRingLaurentSeriesToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldToCommSemiringInstFieldRatFuncIsDomainInstSemiringHahnSeriesToPartialOrderToZeroToMonoidWithZeroIntToOrderedCancelAddCommMonoidToStrictOrderedSemiringToLinearOrderedSemiringToLinearOrderedCommSemiringLinearOrderedCommRingToSemiringToDivisionSemiring","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1766-L1770","name":"RatFunc.coe_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1759-L1760","name":"RatFunc.coe_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1749-L1753","name":"RatFunc.coe_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1743-L1745","name":"RatFunc.coe_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1738-L1739","name":"RatFunc.coe_pow","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1733-L1734","name":"RatFunc.coe_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1728-L1729","name":"RatFunc.coe_neg","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1723-L1724","name":"RatFunc.coe_sub","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1718-L1719","name":"RatFunc.coe_add","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1713-L1714","name":"RatFunc.coe_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1708-L1709","name":"RatFunc.coe_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1703-L1704","name":"RatFunc.coe_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1696-L1697","name":"RatFunc.coe_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1692-L1693","name":"RatFunc.coe_num_denom","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_num_denom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1688-L1689","name":"RatFunc.coe_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1684-L1685","name":"RatFunc.coeToLaurentSeries","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coeToLaurentSeries","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1681-L1682","name":"RatFunc.coeToLaurentSeries_fun","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coeToLaurentSeries_fun","doc":"The coercion `RatFunc F → LaurentSeries F` as a function.\n\nThis is the implementation of `coeToLaurentSeries`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1670-L1673","name":"RatFunc.coeAlgHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coeAlgHom","doc":"The coercion `RatFunc F → LaurentSeries F` as bundled alg hom. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1647-L1658","name":"RatFunc.intDegree_add_le","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1639-L1644","name":"RatFunc.natDegree_num_mul_right_sub_natDegree_denom_mul_left_eq_intDegree","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.natDegree_num_mul_right_sub_natDegree_denom_mul_left_eq_intDegree","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1631-L1636","name":"RatFunc.intDegree_add","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1622-L1628","name":"RatFunc.intDegree_neg","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1608-L1618","name":"RatFunc.intDegree_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1602-L1605","name":"RatFunc.intDegree_polynomial","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_polynomial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1595-L1597","name":"RatFunc.intDegree_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1589-L1590","name":"RatFunc.intDegree_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1584-L1585","name":"RatFunc.intDegree_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1579-L1580","name":"RatFunc.intDegree_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1574-L1575","name":"RatFunc.intDegree","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.intDegree","doc":"`int_degree x` is the degree of the rational function `x`, defined as the difference between\nthe `nat_degree` of its numerator and the `nat_degree` of its denominator. In particular,\n`int_degree 0 = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1547-L1558","name":"RatFunc.eval_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_mul","doc":"`eval` is a multiplicative homomorphism except when a denominator evaluates to `0`.\n\nCounterexample: `eval _ 0 X * eval _ 0 (1/X) = 0 ≠ 1 = eval _ 0 1 = eval _ 0 (X * 1/X)`.\n\nSee also `RatFunc.eval₂_denom_ne_zero` to make the hypotheses simpler but less general.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1527-L1538","name":"RatFunc.eval_add","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_add","doc":"`eval` is an additive homomorphism except when a denominator evaluates to `0`.\n\nCounterexample: `eval _ 1 (X / (X-1)) + eval _ 1 (-1 / (X-1)) = 0`\n`... ≠ 1 = eval _ 1 ((X-1) / (X-1))`.\n\nSee also `RatFunc.eval₂_denom_ne_zero` to make the hypotheses simpler but less general.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1515-L1517","name":"RatFunc.eval_algebraMap","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1511-L1511","name":"RatFunc.eval_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1507-L1507","name":"RatFunc.eval_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1502-L1502","name":"RatFunc.eval_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1497-L1497","name":"RatFunc.eval_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1489-L1491","name":"RatFunc.eval₂_denom_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval₂_denom_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1485-L1486","name":"RatFunc.eval_eq_zero_of_eval₂_denom_eq_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval_eq_zero_of_eval₂_denom_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1479-L1480","name":"RatFunc.eval","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.eval","doc":"Evaluate a rational function `p` given a ring hom `f` from the scalar field\nto the target and a value `x` for the variable in the target.\n\nFractions are reduced by clearing common denominators before evaluating:\n`eval id 1 ((X^2 - 1) / (X - 1)) = eval id 1 (X + 1) = 2`, not `0 / 0 = 0`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1466-L1467","name":"RatFunc.X_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.X_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1461-L1462","name":"RatFunc.denom_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1455-L1456","name":"RatFunc.num_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1449-L1450","name":"RatFunc.denom_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1443-L1444","name":"RatFunc.num_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1431-L1432","name":"RatFunc.algebraMap_X","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1425-L1426","name":"RatFunc.X","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.X","doc":"`RatFunc.X` is the polynomial variable (aka indeterminate). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1419-L1420","name":"RatFunc.smul_eq_C_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.smul_eq_C_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1414-L1415","name":"RatFunc.algebraMap_comp_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_comp_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1408-L1409","name":"RatFunc.algebraMap_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1402-L1403","name":"RatFunc.algebraMap_eq_C","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_eq_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1396-L1397","name":"RatFunc.C","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.C","doc":"`RatFunc.C a` is the constant rational function `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1377-L1382","name":"RatFunc.num_mul_denom_add_denom_mul_num_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_mul_denom_add_denom_mul_num_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1371-L1374","name":"RatFunc.liftAlgHom_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1366-L1368","name":"RatFunc.liftRingHom_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1360-L1363","name":"RatFunc.liftMonoidWithZeroHom_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1353-L1357","name":"RatFunc.map_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1348-L1350","name":"RatFunc.map_denom_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_denom_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1339-L1345","name":"RatFunc.denom_add_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_add_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1333-L1336","name":"RatFunc.denom_mul_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_mul_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1323-L1330","name":"RatFunc.num_mul_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_mul_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1311-L1320","name":"RatFunc.denom_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1298-L1308","name":"RatFunc.num_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1290-L1295","name":"RatFunc.num_denom_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_denom_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1286-L1287","name":"RatFunc.num_denom_neg","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_denom_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1277-L1283","name":"RatFunc.num_denom_add","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_denom_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1268-L1274","name":"RatFunc.num_mul_eq_mul_denom_iff","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_mul_eq_mul_denom_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1264-L1265","name":"RatFunc.num_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1260-L1261","name":"RatFunc.num_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1251-L1256","name":"RatFunc.isCoprime_num_denom","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.isCoprime_num_denom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1235-L1248","name":"RatFunc.num_div_denom","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_div_denom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1226-L1231","name":"RatFunc.denom_div_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_div_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1221-L1222","name":"RatFunc.denom_algebraMap","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1216-L1217","name":"RatFunc.denom_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1211-L1212","name":"RatFunc.denom_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1206-L1207","name":"RatFunc.denom_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1199-L1203","name":"RatFunc.monic_denom","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.monic_denom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1193-L1196","name":"RatFunc.denom_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1188-L1189","name":"RatFunc.denom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.denom","doc":"`RatFunc.denom` is the denominator of a rational function,\nnormalized such that it is monic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1182-L1183","name":"RatFunc.num_div_dvd'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_div_dvd'","doc":"A version of `num_div_dvd` with the LHS in simp normal form "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1173-L1177","name":"RatFunc.num_div_dvd","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_div_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1170-L1170","name":"RatFunc.num_algebraMap","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1166-L1166","name":"RatFunc.num_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1157-L1162","name":"RatFunc.num_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1153-L1153","name":"RatFunc.num_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1143-L1144","name":"RatFunc.num","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.num","doc":"`RatFunc.num` is the numerator of a rational function,\nnormalized such that the denominator is monic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1131-L1138","name":"RatFunc.numDenom_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.numDenom_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1092-L1127","name":"RatFunc.numDenom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.numDenom","doc":"`RatFunc.numDenom` are numerator and denominator of a rational function over a field,\nnormalized such that the denominator is monic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1068-L1071","name":"RatFunc.toFractionRingRingEquiv_symm_eq","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRingRingEquiv_symm_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1056-L1064","name":"RatFunc.toFractionRing_eq","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRing_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1043-L1051","name":"RatFunc.ofFractionRing_eq","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1035-L1039","name":"RatFunc.ofFractionRing_mk'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1030-L1032","name":"RatFunc.induction_on","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.induction_on","doc":"Induction principle for `RatFunc K`: if `f p q : P (p / q)` for all `p q : K[X]`,\nthen `P` holds on all elements of `RatFunc K`.\n\nSee also `induction_on'`, which is a recursion principle defined in terms of `RatFunc.mk`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1017-L1021","name":"RatFunc.liftOn'_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn'_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L1008-L1013","name":"RatFunc.liftOn_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L990-L1003","name":"RatFunc.instIsFractionRingPolynomialToSemiringToCommSemiringCommRingRatFuncInstCommRingInstAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFuncId","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instIsFractionRingPolynomialToSemiringToCommSemiringCommRingRatFuncInstCommRingInstAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFuncId","doc":"`RatFunc K` is the field of fractions of the polynomials over `K`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L980-L982","name":"RatFunc.liftAlgHom_apply_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom_apply_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L976-L978","name":"RatFunc.liftAlgHom_apply_div'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom_apply_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L968-L971","name":"RatFunc.liftAlgHom_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L963-L965","name":"RatFunc.liftAlgHom_apply_ofFractionRing_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom_apply_ofFractionRing_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L956-L960","name":"RatFunc.liftAlgHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftAlgHom","doc":"Lift an injective algebra homomorphism `K[X] →ₐ[S] L` to a `RatFunc K →ₐ[S] L`\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L949-L951","name":"RatFunc.coe_mapAlgHom_eq_coe_map","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_mapAlgHom_eq_coe_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L942-L946","name":"RatFunc.mapAlgHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mapAlgHom","doc":"Lift an algebra homomorphism that maps polynomials `φ : K[X] →ₐ[S] R[X]`\nto a `RatFunc K →ₐ[S] RatFunc R`,\non the condition that `φ` maps non zero divisors to non zero divisors,\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L929-L930","name":"RatFunc.algebraMap_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L922-L924","name":"RatFunc.algebraMap_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L916-L918","name":"RatFunc.algebraMap_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L911-L913","name":"RatFunc.ofFractionRing_comp_algebraMap","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_comp_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L904-L907","name":"RatFunc.liftRingHom_apply_div'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom_apply_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L897-L899","name":"RatFunc.liftRingHom_apply_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom_apply_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L891-L895","name":"RatFunc.liftMonoidWithZeroHom_apply_div'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom_apply_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L880-L886","name":"RatFunc.liftMonoidWithZeroHom_apply_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom_apply_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L867-L877","name":"RatFunc.map_apply_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_apply_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L857-L863","name":"RatFunc.map_apply_div_ne_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_apply_div_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L851-L854","name":"RatFunc.algebraMap_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.algebraMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L844-L848","name":"RatFunc.div_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.div_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L839-L840","name":"RatFunc.mk_eq_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_eq_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L833-L835","name":"RatFunc.ofFractionRing_algebraMap","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L829-L830","name":"RatFunc.mk_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L812-L825","name":"RatFunc.instAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instAlgebraRatFuncToSemiringToDivisionSemiringToSemifieldInstFieldRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L794-L802","name":"RatFunc.instFieldRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instFieldRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L784-L787","name":"RatFunc.liftRingHom_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L779-L781","name":"RatFunc.liftRingHom_apply_ofFractionRing_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom_apply_ofFractionRing_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L754-L776","name":"RatFunc.liftRingHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftRingHom","doc":"Lift an injective ring homomorphism `R[X] →+* L` to a `RatFunc R →+* L`\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L737-L749","name":"RatFunc.liftMonoidWithZeroHom_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L731-L734","name":"RatFunc.liftMonoidWithZeroHom_apply_ofFractionRing_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom_apply_ofFractionRing_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L705-L728","name":"RatFunc.liftMonoidWithZeroHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftMonoidWithZeroHom","doc":"Lift a monoid with zero homomorphism `R[X] →*₀ G₀` to a `RatFunc R →*₀ G₀`\non the condition that `φ` maps non zero divisors to non zero divisors,\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L696-L698","name":"RatFunc.coe_mapRingHom_eq_coe_map","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.coe_mapRingHom_eq_coe_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L675-L693","name":"RatFunc.mapRingHom","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mapRingHom","doc":"Lift a ring homomorphism that maps polynomials `φ : R[X] →+* S[X]`\nto a `RatFunc R →+* RatFunc S`,\non the condition that `φ` maps non zero divisors to non zero divisors,\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L660-L668","name":"RatFunc.map_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L651-L657","name":"RatFunc.map_apply_ofFractionRing_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map_apply_ofFractionRing_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L615-L648","name":"RatFunc.map","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.map","doc":"Lift a monoid homomorphism that maps polynomials `φ : R[X] →* S[X]`\nto a `RatFunc R →* RatFunc S`,\non the condition that `φ` maps non zero divisors to non zero divisors,\nby mapping both the numerator and denominator and quotienting them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L588-L602","name":"RatFunc.instCommRing","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instCommRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L568-L586","name":"RatFunc.instAddCommGroup","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instAddCommGroup","doc":"`RatFunc K` is an additive commutative group.\n\nThis is an intermediate step on the way to the full instance `RatFunc.instCommRing`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L555-L562","name":"RatFunc.instCommMonoid","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instCommMonoid","doc":"`RatFunc K` is a commutative monoid.\n\nThis is an intermediate step on the way to the full instance `RatFunc.instCommRing`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L532-L543","name":"RatFunc.tacticSmul_tac","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.tacticSmul_tac","doc":"Solve equations for `RatFunc K` by applying `RatFunc.induction_on`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L523-L529","name":"RatFunc.tacticFrac_tac","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.tacticFrac_tac","doc":"Solve equations for `RatFunc K` by working in `FractionRing K[X]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L508-L514","name":"RatFunc.toFractionRingRingEquiv","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRingRingEquiv","doc":"`RatFunc K` is isomorphic to the field of fractions of `K[X]`, as rings.\n\nThis is an auxiliary definition; `simp`-normal form is `IsLocalization.algEquiv`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L507-L507","name":"RatFunc.toFractionRingRingEquiv_apply","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRingRingEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L499-L500","name":"RatFunc.instNontrivial","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instNontrivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L496-L497","name":"RatFunc.instInhabitedRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instInhabitedRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L493-L494","name":"RatFunc.instSubsingletonRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instSubsingletonRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L483-L485","name":"RatFunc.instIsScalarTowerPolynomialToSemiringToCommSemiringRatFuncToSMulZeroToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneRingToRingToDistribSMulInstSMulRatFuncInstSMulLocalizationToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringSemiringIdRightInstSMulRatFuncInstSMulLocalization","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instIsScalarTowerPolynomialToSemiringToCommSemiringRatFuncToSMulZeroToSMulZeroClassToAddZeroClassToAddMonoidToAddMonoidWithOneToAddGroupWithOneRingToRingToDistribSMulInstSMulRatFuncInstSMulLocalizationToCommMonoidCommRingNonZeroDivisorsToMonoidWithZeroToSMulCommSemiringSemiringIdRightInstSMulRatFuncInstSMulLocalization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L475-L479","name":"RatFunc.mk_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L458-L463","name":"RatFunc.smul_eq_C_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.smul_eq_C_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L452-L455","name":"RatFunc.toFractionRing_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRing_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L447-L449","name":"RatFunc.ofFractionRing_smul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L442-L443","name":"RatFunc.instSMulRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instSMulRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L435-L437","name":"RatFunc.smul","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.smul","doc":"Scalar multiplication of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L435-L437","name":"RatFunc.smul_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.smul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L421-L426","name":"RatFunc.mul_inv_cancel","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mul_inv_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L415-L417","name":"RatFunc.ofFractionRing_inv","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L412-L413","name":"RatFunc.instInvRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instInvRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L407-L409","name":"RatFunc.inv_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.inv_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L407-L409","name":"RatFunc.inv","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.inv","doc":"Multiplicative inverse of a rational function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L402-L404","name":"RatFunc.ofFractionRing_div","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L397-L398","name":"RatFunc.instDivRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instDivRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L392-L394","name":"RatFunc.div","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.div","doc":"Division of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L392-L394","name":"RatFunc.div_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.div_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L383-L385","name":"RatFunc.ofFractionRing_mul","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L378-L379","name":"RatFunc.instMulRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instMulRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L373-L375","name":"RatFunc.mul","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mul","doc":"Multiplication of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L373-L375","name":"RatFunc.mul_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L369-L370","name":"RatFunc.ofFractionRing_one","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L364-L365","name":"RatFunc.instOneRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instOneRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L359-L361","name":"RatFunc.one_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.one_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L359-L361","name":"RatFunc.one","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.one","doc":"The multiplicative unit of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L355-L356","name":"RatFunc.ofFractionRing_neg","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L352-L353","name":"RatFunc.instNegRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instNegRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L347-L349","name":"RatFunc.neg_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.neg_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L347-L349","name":"RatFunc.neg","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.neg","doc":"Additive inverse of a rational function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L342-L344","name":"RatFunc.ofFractionRing_sub","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L337-L338","name":"RatFunc.instSubRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instSubRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L332-L334","name":"RatFunc.sub","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.sub","doc":"Subtraction of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L332-L334","name":"RatFunc.sub_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.sub_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L327-L329","name":"RatFunc.ofFractionRing_add","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L322-L323","name":"RatFunc.instAddRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instAddRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L317-L319","name":"RatFunc.add","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.add","doc":"Addition of rational functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L317-L319","name":"RatFunc.add_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.add_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L313-L314","name":"RatFunc.ofFractionRing_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L308-L309","name":"RatFunc.instZeroRatFunc","kind":"instance","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.instZeroRatFunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L303-L305","name":"RatFunc.zero_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.zero_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L303-L305","name":"RatFunc.zero","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.zero","doc":"The zero rational function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L287-L292","name":"RatFunc.induction_on'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.induction_on'","doc":"Induction principle for `RatFunc K`: if `f p q : P (RatFunc.mk p q)` for all `p q`,\nthen `P` holds on all elements of `RatFunc K`.\n\nSee also `induction_on`, which is a recursion principle defined in terms of `algebraMap`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L274-L278","name":"RatFunc.liftOn'_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn'_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L260-L271","name":"RatFunc.liftOn'","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn'","doc":"Non-dependent recursion principle for `RatFunc K`: if `f p q : P` for all `p q`,\nsuch that `f (a * p) (a * q) = f p q`, then we can find a value of `P`\nfor all elements of `RatFunc K` by setting `lift_on' (p / q) f _ = f p q`.\n\nThe value of `f p 0` for any `p` is never used and in principle this may be anything,\nalthough many usages of `lift_on'` assume `f p 0 = f 0 1`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L260-L271","name":"RatFunc.liftOn'_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn'_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L247-L257","name":"RatFunc.liftOn_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L240-L244","name":"RatFunc.mk_eq_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_eq_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L234-L237","name":"RatFunc.mk_one'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L226-L230","name":"RatFunc.mk_eq_localization_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_eq_localization_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L219-L223","name":"RatFunc.mk_def_of_ne","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_def_of_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L213-L216","name":"RatFunc.mk_def_of_mem","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_def_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L207-L210","name":"RatFunc.mk_coe_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_coe_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L203-L204","name":"RatFunc.mk_zero","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L199-L200","name":"RatFunc.mk_eq_div'","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_eq_div'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L188-L196","name":"RatFunc.mk_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L188-L196","name":"RatFunc.mk","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.mk","doc":"`RatFunc.mk (p q : K[X])` is `p / q` as a rational function.\n\nIf `q = 0`, then `mk` returns 0.\n\nThis is an auxiliary definition used to define an `Algebra` structure on `RatFunc`;\nthe `simp` normal form of `mk p q` is `algebraMap _ _ p / algebraMap _ _ q`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L175-L181","name":"RatFunc.lift_on_condition_of_lift_on'_condition","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.lift_on_condition_of_lift_on'_condition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L168-L172","name":"RatFunc.liftOn_ofFractionRing_mk","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn_ofFractionRing_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L139-L158","name":"RatFunc.liftOn","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn","doc":"Non-dependent recursion principle for `RatFunc K`:\nTo construct a term of `P : Sort*` out of `x : RatFunc K`,\nit suffices to provide a constructor `f : Π (p q : K[X]), P`\nand a proof that `f p q = f p' q'` for all `p q p' q'` such that `q' * p = q * p'` where\nboth `q` and `q'` are not zero divisors, stated as `q ∉ K[X]⁰`, `q' ∉ K[X]⁰`.\n\nIf considering `K` as an integral domain, this is the same as saying that\nwe construct a value of `P` for such elements of `RatFunc K` by setting\n`lift_on (p / q) f _ = f p q`.\n\nWhen `[IsDomain K]`, one can use `RatFunc.liftOn'`, which has the stronger requirement\nof `∀ {p q a : K[X]} (hq : q ≠ 0) (ha : a ≠ 0), f (a * p) (a * q) = f p q)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L139-L158","name":"RatFunc.liftOn_def","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.liftOn_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L134-L136","name":"RatFunc.toFractionRing_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRing_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L130-L131","name":"RatFunc.ofFractionRing_injective","kind":"theorem","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L113-L113","name":"RatFunc.toFractionRing","kind":"def","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.toFractionRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L112-L112","name":"RatFunc.ofFractionRing","kind":"ctor","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc.ofFractionRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/FieldTheory/RatFunc.lean#L112-L113","name":"RatFunc","kind":"structure","docLink":"./Mathlib/FieldTheory/RatFunc.html#RatFunc","doc":"`RatFunc K` is `K(X)`, the field of rational functions over `K`.\n\nThe inclusion of polynomials into `RatFunc` is `algebraMap K[X] (RatFunc K)`,\nthe maps between `RatFunc K` and another field of fractions of `K[X]`,\nespecially `FractionRing K[X]`, are given by `is_localization.algebra_equiv`.\n"}]}