{"name":"Mathlib.Util.AtomM","instances":[{"typeNames":["Mathlib.Tactic.AtomM.Context"],"name":"Mathlib.Tactic.AtomM.instInhabitedContext","className":"Inhabited"}],"imports":["Init","Lean.Elab.Tactic.Basic","Mathlib.Algebra.GroupPower.Basic","Mathlib.Algebra.Ring.Basic","Mathlib.Tactic.NormNum"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L46-L52","name":"Mathlib.Tactic.AtomM.addAtom","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.addAtom","doc":"Get the index corresponding to an atomic expression, if it has already been encountered, or\nput it in the list of atoms and return the new index, otherwise. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L39-L42","name":"Mathlib.Tactic.AtomM.run","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.run","doc":"Run a computation in the `AtomM` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L36-L36","name":"Mathlib.Tactic.AtomM","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM","doc":"The monad that `ring` works in. This is only used for collecting atoms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L33-L33","name":"Mathlib.Tactic.AtomM.State.atoms","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.State.atoms","doc":"The list of atoms-up-to-defeq encountered thus far, used for atom sorting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L31-L33","name":"Mathlib.Tactic.AtomM.State","kind":"structure","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.State","doc":"The mutable state of the `AtomM` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L28-L28","name":"Mathlib.Tactic.AtomM.instInhabitedContext","kind":"instance","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.instInhabitedContext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L27-L27","name":"Mathlib.Tactic.AtomM.Context.evalAtom","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.Context.evalAtom","doc":"A simplification to apply to atomic expressions when they are encountered,\nbefore interning them in the atom list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L24-L24","name":"Mathlib.Tactic.AtomM.Context.red","kind":"def","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.Context.red","doc":"The reducibility setting for definitional equality of atoms "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L22-L28","name":"Mathlib.Tactic.AtomM.Context","kind":"structure","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.Context","doc":"The context (read-only state) of the `AtomM` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L1-L1","name":"Mathlib.Tactic.AtomM.Context.mk","kind":"ctor","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.Context.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Util/AtomM.lean#L1-L1","name":"Mathlib.Tactic.AtomM.State.mk","kind":"ctor","docLink":"./Mathlib/Util/AtomM.html#Mathlib.Tactic.AtomM.State.mk","doc":""}]}