{"name":"Mathlib.GroupTheory.GroupAction.SubMulAction","instances":[{"typeNames":["Subtype","Membership.mem","SetLike.instMembership"],"name":"SetLike.vadd","className":"VAdd"},{"typeNames":["Subtype","Membership.mem","SetLike.instMembership"],"name":"SetLike.smul","className":"SMul"},{"typeNames":["SubMulAction"],"name":"SubMulAction.instSetLikeSubMulAction","className":"SetLike"},{"typeNames":["SubMulAction","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.instSMulMemClassSubMulActionInstSetLikeSubMulAction","className":"SMulMemClass"},{"typeNames":["SubMulAction"],"name":"SubMulAction.instBotSubMulAction","className":"Bot"},{"typeNames":["SubMulAction"],"name":"SubMulAction.instInhabitedSubMulAction","className":"Inhabited"},{"typeNames":["Subtype","Membership.mem","SubMulAction","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.instSMulSubtypeMemSubMulActionInstMembershipInstSetLikeSubMulAction","className":"SMul"},{"typeNames":["Subtype","Membership.mem","SetLike.instMembership"],"name":"SubMulAction.SMulMemClass.toMulAction","className":"MulAction"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.smul'","className":"SMul"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction","SubMulAction.smul'","MulAction.toSMul","Monoid.toMulAction","MulAction.toSMul","IsScalarTower.left","SubMulAction.smul'"],"name":"SubMulAction.isScalarTower","className":"IsScalarTower"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction","SubMulAction.smul'","SubMulAction.smul'"],"name":"SubMulAction.isScalarTower'","className":"IsScalarTower"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction","SubMulAction.smul'","SubMulAction.smul'","MulOpposite"],"name":"SubMulAction.isCentralScalar","className":"IsCentralScalar"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.mulAction'","className":"MulAction"},{"typeNames":["Subtype","Membership.mem","SubMulAction","MulAction.toSMul","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.mulAction","className":"MulAction"},{"typeNames":["Subtype","Membership.mem","SubMulAction","SMulZeroClass.toSMul","AddMonoid.toZero","AddCommMonoid.toAddMonoid","SMulWithZero.toSMulZeroClass","MonoidWithZero.toZero","Semiring.toMonoidWithZero","MulActionWithZero.toSMulWithZero","Module.toMulActionWithZero","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.instZeroSubtypeMemSubMulActionToSMulToZeroToAddMonoidToSMulZeroClassToZeroToMonoidWithZeroToSMulWithZeroToMulActionWithZeroInstMembershipInstSetLikeSubMulAction","className":"Zero"},{"typeNames":["Subtype","Membership.mem","SubMulAction","SMulZeroClass.toSMul","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","SMulWithZero.toSMulZeroClass","MonoidWithZero.toZero","Semiring.toMonoidWithZero","Ring.toSemiring","MulActionWithZero.toSMulWithZero","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","SetLike.instMembership","SubMulAction.instSetLikeSubMulAction"],"name":"SubMulAction.instNegSubtypeMemSubMulActionToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidToSMulZeroClassToZeroToMonoidWithZeroToSemiringToSMulWithZeroToMulActionWithZeroToAddCommMonoidInstMembershipInstSetLikeSubMulAction","className":"Neg"}],"imports":["Init","Mathlib.Algebra.Hom.GroupAction","Mathlib.Algebra.Module.Basic","Mathlib.Data.SetLike.Basic","Mathlib.GroupTheory.GroupAction.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L390-L391","name":"SubMulAction.smul_mem_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul_mem_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L374-L375","name":"SubMulAction.val_neg","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.val_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L370-L371","name":"SubMulAction.instNegSubtypeMemSubMulActionToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidToSMulZeroClassToZeroToMonoidWithZeroToSemiringToSMulWithZeroToMulActionWithZeroToAddCommMonoidInstMembershipInstSetLikeSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instNegSubtypeMemSubMulActionToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidToSMulZeroClassToZeroToMonoidWithZeroToSemiringToSMulWithZeroToMulActionWithZeroToAddCommMonoidInstMembershipInstSetLikeSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L364-L367","name":"SubMulAction.neg_mem_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.neg_mem_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L358-L360","name":"SubMulAction.neg_mem","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.neg_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L343-L344","name":"SubMulAction.instZeroSubtypeMemSubMulActionToSMulToZeroToAddMonoidToSMulZeroClassToZeroToMonoidWithZeroToSMulWithZeroToMulActionWithZeroInstMembershipInstSetLikeSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instZeroSubtypeMemSubMulActionToSMulToZeroToAddMonoidToSMulZeroClassToZeroToMonoidWithZeroToSMulWithZeroToMulActionWithZeroInstMembershipInstSetLikeSubMulAction","doc":"If the scalar product forms a `Module`, and the `SubMulAction` is not `‚ä•`, then the\nsubset inherits the zero. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L336-L338","name":"SubMulAction.zero_mem","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.zero_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L320-L323","name":"SubMulAction.stabilizer_of_subMul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.stabilizer_of_subMul","doc":"Stabilizers in group SubMulAction coincide with stabilizers in the ambient space "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L307-L310","name":"SubMulAction.stabilizer_of_subMul.submonoid","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.stabilizer_of_subMul.submonoid","doc":"Stabilizers in monoid SubMulAction coincide with stabilizers in the ambient space "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L297-L299","name":"SubMulAction.val_image_orbit","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.val_image_orbit","doc":"Orbits in a `SubMulAction` coincide with orbits in the ambient space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L290-L291","name":"SubMulAction.mulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.mulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L284-L287","name":"SubMulAction.mulAction'","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.mulAction'","doc":"If the scalar product forms a `MulAction`, then the subset inherits this action "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L270-L273","name":"SubMulAction.isCentralScalar","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.isCentralScalar","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L265-L267","name":"SubMulAction.smul_mem_iff'","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul_mem_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L260-L261","name":"SubMulAction.val_smul_of_tower","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.val_smul_of_tower","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L254-L256","name":"SubMulAction.isScalarTower'","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.isScalarTower'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L250-L251","name":"SubMulAction.isScalarTower","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.isScalarTower","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L247-L247","name":"SubMulAction.smul'","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L242-L244","name":"SubMulAction.smul_of_tower_mem","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul_of_tower_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L226-L227","name":"SubMulAction.SMulMemClass.coeSubtype","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.SMulMemClass.coeSubtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L221-L222","name":"SubMulAction.SMulMemClass.subtype","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.SMulMemClass.subtype","doc":"The natural `MulActionHom` over `R` from a `SubMulAction` of `M` to `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L216-L217","name":"SubMulAction.SMulMemClass.toMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.SMulMemClass.toMulAction","doc":"A `SubMulAction` of a `MulAction` is a `MulAction`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L202-L203","name":"SubMulAction.subtype_eq_val","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.subtype_eq_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L198-L199","name":"SubMulAction.subtype_apply","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.subtype_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L194-L194","name":"SubMulAction.subtype","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.subtype","doc":"Embedding of a submodule `p` to the ambient space `M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L184-L185","name":"SubMulAction.val_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.val_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L179-L179","name":"SubMulAction.instSMulSubtypeMemSubMulActionInstMembershipInstSetLikeSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instSMulSubtypeMemSubMulActionInstMembershipInstSetLikeSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L175-L176","name":"SubMulAction.smul_mem","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L160-L161","name":"SubMulAction.instInhabitedSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instInhabitedSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L155-L158","name":"SubMulAction.instBotSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instBotSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L151-L152","name":"SubMulAction.copy_eq","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L147-L148","name":"SubMulAction.coe_copy","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L140-L143","name":"SubMulAction.copy","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.copy","doc":"Copy of a sub_mul_action with a new `carrier` equal to the old one. Useful to fix definitional\nequalities."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L134-L135","name":"SubMulAction.ext","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L129-L130","name":"SubMulAction.mem_carrier","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.mem_carrier","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L126-L126","name":"SubMulAction.instSMulMemClassSubMulActionInstSetLikeSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instSMulMemClassSubMulActionInstSetLikeSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L123-L124","name":"SubMulAction.instSetLikeSubMulAction","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.instSetLikeSubMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L116-L116","name":"SubMulAction.smul_mem'","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.smul_mem'","doc":"The carrier set is closed under scalar multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L114-L114","name":"SubMulAction.carrier","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.carrier","doc":"The underlying set of a `SubMulAction`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L112-L112","name":"SubMulAction.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L112-L116","name":"SubMulAction","kind":"structure","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SubMulAction","doc":"A SubMulAction is a set which is closed under scalar multiplication.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L104-L106","name":"SetLike.forall_smul_mem_iff","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.forall_smul_mem_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L98-L99","name":"SetLike.smul_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.smul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L97-L97","name":"SetLike.vadd_def","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.vadd_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L92-L93","name":"SetLike.mk_smul_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.mk_smul_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L91-L91","name":"SetLike.mk_vadd_mk","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.mk_vadd_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L84-L85","name":"SetLike.val_smul","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.val_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L83-L83","name":"SetLike.val_vadd","kind":"theorem","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.val_vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L76-L77","name":"SetLike.smul","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.smul","doc":"A subset closed under the scalar action inherits that action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L75-L75","name":"SetLike.vadd.proof_1","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.vadd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L75-L75","name":"SetLike.vadd","kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SetLike.vadd","doc":"A subset closed under the additive action inherits that action."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L62-L62","name":"VAddMemClass.vadd_mem","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#VAddMemClass.vadd_mem","doc":"Addition by a scalar with an element of the set remains in the set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L60-L60","name":"VAddMemClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#VAddMemClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L60-L62","name":"VAddMemClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#VAddMemClass","doc":"`VAddMemClass S R M` says `S` is a type of subsets `s ‚â§ M` that are closed under the\nadditive action of `R` on `M`.\n\nNote that only `R` is marked as an `outParam` here, since `M` is supplied by the `SetLike`\nclass instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L52-L52","name":"SMulMemClass.smul_mem","kind":"def","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SMulMemClass.smul_mem","doc":"Multiplication by a scalar on an element of the set remains in the set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L50-L50","name":"SMulMemClass.mk","kind":"ctor","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SMulMemClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/GroupTheory/GroupAction/SubMulAction.lean#L50-L52","name":"SMulMemClass","kind":"class","docLink":"./Mathlib/GroupTheory/GroupAction/SubMulAction.html#SMulMemClass","doc":"`SMulMemClass S R M` says `S` is a type of subsets `s ‚â§ M` that are closed under the\nscalar action of `R` on `M`.\n\nNote that only `R` is marked as an `outParam` here, since `M` is supplied by the `SetLike`\nclass instead.\n"}]}