{"name":"Mathlib.Analysis.Normed.Group.Hom","instances":[{"typeNames":["NormedAddGroupHom","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","SeminormedAddGroup.toAddGroup","SeminormedAddCommGroup.toSeminormedAddGroup","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","SeminormedAddGroup.toAddGroup","SeminormedAddCommGroup.toSeminormedAddGroup"],"name":"NormedAddGroupHom.toAddMonoidHomClass","className":"AddMonoidHomClass"},{"typeNames":["NormedAddGroupHom","NormedAddGroupHom"],"name":"NormedAddGroupHom.coeFun","className":"CoeFun"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.hasOpNorm","className":"Norm"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.add","className":"Add"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.zero","className":"Zero"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.inhabited","className":"Inhabited"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.neg","className":"Neg"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.sub","className":"Sub"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.smul","className":"SMul"},{"typeNames":["NormedAddGroupHom","NormedAddGroupHom.smul","NormedAddGroupHom.smul"],"name":"NormedAddGroupHom.smulCommClass","className":"SMulCommClass"},{"typeNames":["NormedAddGroupHom","NormedAddGroupHom.smul","NormedAddGroupHom.smul"],"name":"NormedAddGroupHom.isScalarTower","className":"IsScalarTower"},{"typeNames":["NormedAddGroupHom","NormedAddGroupHom.smul","NormedAddGroupHom.smul","MulOpposite","MulOpposite.monoidWithZero","MulOpposite.instPseudoMetricSpaceMulOpposite","BoundedSMul.op","SeminormedAddCommGroup.toPseudoMetricSpace","MulZeroClass.toZero","MulZeroOneClass.toMulZeroClass","MonoidWithZero.toMulZeroOneClass","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","SeminormedAddCommGroup.toAddCommGroup","SMulZeroClass.toSMul","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid","SeminormedAddGroup.toAddGroup","SeminormedAddCommGroup.toSeminormedAddGroup","DistribMulAction.toDistribSMul","MonoidWithZero.toMonoid"],"name":"NormedAddGroupHom.isCentralScalar","className":"IsCentralScalar"},{"typeNames":["Nat","NormedAddGroupHom"],"name":"NormedAddGroupHom.nsmul","className":"SMul"},{"typeNames":["Int","NormedAddGroupHom"],"name":"NormedAddGroupHom.zsmul","className":"SMul"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toAddCommGroup","className":"AddCommGroup"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toSeminormedAddCommGroup","className":"SeminormedAddCommGroup"},{"typeNames":["NormedAddGroupHom","NormedAddCommGroup.toSeminormedAddCommGroup","NormedAddCommGroup.toSeminormedAddCommGroup"],"name":"NormedAddGroupHom.toNormedAddCommGroup","className":"NormedAddCommGroup"},{"typeNames":["NormedAddGroupHom","MonoidWithZero.toMonoid","SubNegMonoid.toAddMonoid","NormedAddGroupHom","AddGroup.toSubNegMonoid","SeminormedAddGroup.toAddGroup","SeminormedAddCommGroup.toSeminormedAddGroup","NormedAddGroupHom.toSeminormedAddCommGroup"],"name":"NormedAddGroupHom.distribMulAction","className":"DistribMulAction"},{"typeNames":["NormedAddGroupHom","AddCommGroup.toAddCommMonoid","NormedAddGroupHom","NormedAddGroupHom.toAddCommGroup"],"name":"NormedAddGroupHom.module","className":"Module"}],"imports":["Init","Mathlib.Analysis.Normed.Group.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L1001-L1003","name":"NormedAddGroupHom.Equalizer.norm_map_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_map_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L996-L998","name":"NormedAddGroupHom.Equalizer.map_normNoninc","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_normNoninc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L991-L993","name":"NormedAddGroupHom.Equalizer.norm_lift_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_lift_le","doc":"If `φ` satisfies `‖φ‖ ≤ C`, then the same is true for the lifted morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L985-L987","name":"NormedAddGroupHom.Equalizer.lift_normNoninc","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_normNoninc","doc":"The lifting of a norm nonincreasing morphism is norm nonincreasing. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L981-L981","name":"NormedAddGroupHom.Equalizer.ι_normNoninc","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_normNoninc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L973-L978","name":"NormedAddGroupHom.Equalizer.map_comp_map","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L968-L970","name":"NormedAddGroupHom.Equalizer.comm_sq₂","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comm_sq₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L963-L965","name":"NormedAddGroupHom.Equalizer.map_id","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L957-L959","name":"NormedAddGroupHom.Equalizer.ι_comp_map","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L945-L949","name":"NormedAddGroupHom.Equalizer.map","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map","doc":"Given `φ : NormedAddGroupHom V₁ V₂` and `ψ : NormedAddGroupHom W₁ W₂` such that\n`ψ.comp f₁ = f₂.comp φ` and `ψ.comp g₁ = g₂.comp φ`, the induced morphism\n`NormedAddGroupHom (f₁.equalizer g₁) (f₂.equalizer g₂)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L931-L939","name":"NormedAddGroupHom.Equalizer.liftEquiv","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv","doc":"The lifting property of the equalizer as an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L930-L930","name":"NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L930-L930","name":"NormedAddGroupHom.Equalizer.liftEquiv_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L923-L926","name":"NormedAddGroupHom.Equalizer.ι_comp_lift","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L907-L919","name":"NormedAddGroupHom.Equalizer.lift","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift","doc":"If `φ : NormedAddGroupHom V₁ V` is such that `f.comp φ = g.comp φ`, the induced morphism\n`NormedAddGroupHom V₁ (f.equalizer g)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L906-L906","name":"NormedAddGroupHom.Equalizer.lift_apply_coe","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L896-L899","name":"NormedAddGroupHom.Equalizer.comp_ι_eq","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comp_ι_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L892-L893","name":"NormedAddGroupHom.Equalizer.ι","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι","doc":"The inclusion of `f.equalizer g` as a `NormedAddGroupHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L885-L886","name":"NormedAddGroupHom.equalizer","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer","doc":"The equalizer of two morphisms `f g : NormedAddGroupHom V W`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L867-L868","name":"NormedAddGroupHom.normNoninc_of_isometry","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.normNoninc_of_isometry","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L862-L864","name":"NormedAddGroupHom.isometry_comp","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L858-L859","name":"NormedAddGroupHom.isometry_id","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L854-L855","name":"NormedAddGroupHom.norm_eq_of_isometry","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_eq_of_isometry","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L846-L847","name":"NormedAddGroupHom.NormNoninc.neg_iff","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.neg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L841-L842","name":"NormedAddGroupHom.NormNoninc.comp","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L838-L838","name":"NormedAddGroupHom.NormNoninc.id","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L835-L835","name":"NormedAddGroupHom.NormNoninc.zero","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L828-L832","name":"NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L822-L823","name":"NormedAddGroupHom.NormNoninc","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc","doc":"A `NormedAddGroupHom` is *norm-nonincreasing* if `‖f v‖ ≤ ‖v‖` for all `v`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L813-L814","name":"NormedAddGroupHom.range_comp_incl_top","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range_comp_incl_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L807-L809","name":"NormedAddGroupHom.incl_range","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L802-L804","name":"NormedAddGroupHom.comp_range","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L798-L799","name":"NormedAddGroupHom.mem_range_self","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L794-L794","name":"NormedAddGroupHom.mem_range","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L790-L791","name":"NormedAddGroupHom.range","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range","doc":"The image of a bounded group homomorphism. Naturally endowed with a\n`SeminormedAddCommGroup` instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L774-L776","name":"NormedAddGroupHom.isClosed_ker","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isClosed_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L770-L771","name":"NormedAddGroupHom.coe_ker","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L765-L767","name":"NormedAddGroupHom.ker_zero","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L759-L761","name":"NormedAddGroupHom.ker.incl_comp_lift","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.incl_comp_lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L752-L755","name":"NormedAddGroupHom.ker.lift","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift","doc":"Given a normed group hom `f : V₁ → V₂` satisfying `g.comp f = 0` for some `g : V₂ → V₃`,\nthe corestriction of `f` to the kernel of `g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L751-L751","name":"NormedAddGroupHom.ker.lift_apply_coe","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L745-L746","name":"NormedAddGroupHom.mem_ker","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L741-L742","name":"NormedAddGroupHom.ker","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker","doc":"The kernel of a bounded group homomorphism. Naturally endowed with a\n`SeminormedAddCommGroup` instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L728-L729","name":"NormedAddGroupHom.norm_incl","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_incl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L722-L725","name":"NormedAddGroupHom.incl","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl","doc":"The inclusion of an `AddSubgroup`, as bounded group homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L721-L721","name":"NormedAddGroupHom.incl_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L708-L710","name":"NormedAddGroupHom.coe_comp","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L701-L705","name":"NormedAddGroupHom.comp_assoc","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L696-L698","name":"NormedAddGroupHom.zero_comp","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L690-L692","name":"NormedAddGroupHom.comp_zero","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L674-L686","name":"NormedAddGroupHom.compHom","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.compHom","doc":"Composition of normed groups hom as an additive group morphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L667-L670","name":"NormedAddGroupHom.norm_comp_le_of_le'","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L662-L664","name":"NormedAddGroupHom.norm_comp_le_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L657-L659","name":"NormedAddGroupHom.norm_comp_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L648-L654","name":"NormedAddGroupHom.comp","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp","doc":"The composition of continuous normed group homs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L647-L647","name":"NormedAddGroupHom.comp_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L639-L641","name":"NormedAddGroupHom.module","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.module","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L635-L637","name":"NormedAddGroupHom.distribMulAction","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.distribMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L628-L629","name":"NormedAddGroupHom.sum_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sum_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L623-L625","name":"NormedAddGroupHom.coe_sum","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L616-L619","name":"NormedAddGroupHom.coeAddHom","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom","doc":"Coercion of a `NormedAddGroupHom` is an `AddMonoidHom`. Similar to `AddMonoidHom.coeFn`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L615-L615","name":"NormedAddGroupHom.coeAddHom_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L604-L611","name":"NormedAddGroupHom.toNormedAddCommGroup","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toNormedAddCommGroup","doc":"Normed group homomorphisms themselves form a normed group with respect to\nthe operator norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L594-L599","name":"NormedAddGroupHom.toSeminormedAddCommGroup","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toSeminormedAddCommGroup","doc":"Normed group homomorphisms themselves form a seminormed group with respect to\nthe operator norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L588-L590","name":"NormedAddGroupHom.toAddCommGroup","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddCommGroup","doc":"Homs between two given normed groups form a commutative additive group. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L580-L581","name":"NormedAddGroupHom.zsmul_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L575-L576","name":"NormedAddGroupHom.coe_zsmul","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L563-L571","name":"NormedAddGroupHom.zsmul","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L559-L560","name":"NormedAddGroupHom.nsmul_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L554-L555","name":"NormedAddGroupHom.coe_nsmul","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L542-L550","name":"NormedAddGroupHom.nsmul","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L536-L538","name":"NormedAddGroupHom.isCentralScalar","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isCentralScalar","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L532-L534","name":"NormedAddGroupHom.isScalarTower","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isScalarTower","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L528-L530","name":"NormedAddGroupHom.smulCommClass","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smulCommClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L524-L525","name":"NormedAddGroupHom.smul_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L519-L520","name":"NormedAddGroupHom.coe_smul","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L504-L516","name":"NormedAddGroupHom.smul","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L490-L492","name":"NormedAddGroupHom.sub_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L485-L486","name":"NormedAddGroupHom.coe_sub","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L477-L482","name":"NormedAddGroupHom.sub","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub","doc":"Subtraction of normed group homs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L469-L470","name":"NormedAddGroupHom.opNorm_neg","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L464-L466","name":"NormedAddGroupHom.neg_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L459-L460","name":"NormedAddGroupHom.coe_neg","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L455-L456","name":"NormedAddGroupHom.neg","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg","doc":"Opposite of a normed group hom. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L447-L448","name":"NormedAddGroupHom.coe_id","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L441-L444","name":"NormedAddGroupHom.norm_id","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id","doc":"If a normed space is non-trivial, then the norm of the identity equals `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L433-L437","name":"NormedAddGroupHom.norm_id_of_nontrivial_seminorm","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_of_nontrivial_seminorm","doc":"If there is an element with norm different from `0`, then the norm of the identity equals `1`.\n(Since we are working with seminorms supposing that the space is non-trivial is not enough.) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L427-L428","name":"NormedAddGroupHom.norm_id_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_le","doc":"The norm of the identity is at most `1`. It is in fact `1`, except when the norm of every\nelement vanishes, where it is `0`. (Since we are working with seminorms this can happen even if the\nspace is non-trivial.) It means that one can not do better than an inequality in general. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L420-L421","name":"NormedAddGroupHom.id","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id","doc":"The identity as a continuous normed group hom. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L419-L419","name":"NormedAddGroupHom.id_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L407-L408","name":"NormedAddGroupHom.zero_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L402-L403","name":"NormedAddGroupHom.coe_zero","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L388-L398","name":"NormedAddGroupHom.opNorm_zero_iff","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero_iff","doc":"For normed groups, an operator is zero iff its norm vanishes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L376-L384","name":"NormedAddGroupHom.opNorm_zero","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero","doc":"The norm of the `0` operator is `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L372-L373","name":"NormedAddGroupHom.inhabited","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L369-L370","name":"NormedAddGroupHom.zero","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L361-L363","name":"NormedAddGroupHom.add_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L356-L357","name":"NormedAddGroupHom.coe_add","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L341-L342","name":"NormedAddGroupHom.opNorm_add_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_add_le","doc":"The operator norm satisfies the triangle inequality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L331-L338","name":"NormedAddGroupHom.add","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add","doc":"Addition of normed group homs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L324-L324","name":"AddMonoidHom.mkNormedAddGroupHom_norm_le'","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le'","doc":"**Alias** of `NormedAddGroupHom.mkNormedAddGroupHom_norm_le'`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L321-L321","name":"AddMonoidHom.mkNormedAddGroupHom_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le","doc":"**Alias** of `NormedAddGroupHom.mkNormedAddGroupHom_norm_le`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L315-L318","name":"NormedAddGroupHom.mkNormedAddGroupHom_norm_le'","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le'","doc":"If a bounded group homomorphism map is constructed from a group homomorphism\nvia the constructor `AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound\ngiven to the constructor or zero if this bound is negative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L308-L310","name":"NormedAddGroupHom.ofLipschitz_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz_norm_le","doc":"If a bounded group homomorphism map is constructed from a group homomorphism via the constructor\n`NormedAddGroupHom.ofLipschitz`, then its norm is bounded by the bound given to the constructor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L301-L303","name":"NormedAddGroupHom.mkNormedAddGroupHom_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le","doc":"If a bounded group homomorphism map is constructed from a group homomorphism via the constructor\n`AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound given to the constructor\nif it is nonnegative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L293-L295","name":"NormedAddGroupHom.opNorm_le_of_lipschitz","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_of_lipschitz","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L286-L290","name":"NormedAddGroupHom.opNorm_eq_of_bounds","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_eq_of_bounds","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L282-L283","name":"NormedAddGroupHom.opNorm_le_bound","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_bound","doc":"If one controls the norm of every `f x`, then one controls the norm of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L277-L278","name":"NormedAddGroupHom.ratio_le_opNorm","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ratio_le_opNorm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L273-L274","name":"NormedAddGroupHom.continuous","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L268-L269","name":"NormedAddGroupHom.uniformContinuous","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.uniformContinuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L262-L265","name":"NormedAddGroupHom.lipschitz","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.lipschitz","doc":"continuous linear maps are Lipschitz continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L257-L258","name":"NormedAddGroupHom.le_of_opNorm_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_of_opNorm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L253-L254","name":"NormedAddGroupHom.le_opNorm_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L242-L250","name":"NormedAddGroupHom.le_opNorm","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm","doc":"The fundamental property of the operator norm: `‖f x‖ ≤ ‖f‖ * ‖x‖`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L237-L238","name":"NormedAddGroupHom.opNorm_nonneg","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L232-L234","name":"NormedAddGroupHom.bounds_bddBelow","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_bddBelow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L226-L229","name":"NormedAddGroupHom.bounds_nonempty","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L220-L221","name":"NormedAddGroupHom.norm_def","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L216-L217","name":"NormedAddGroupHom.hasOpNorm","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.hasOpNorm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L212-L213","name":"NormedAddGroupHom.opNorm","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm","doc":"The operator norm of a seminormed group homomorphism is the inf of all its bounds. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L203-L205","name":"NormedAddGroupHom.SurjectiveOnWith.surjOn","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.surjOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L195-L200","name":"NormedAddGroupHom.SurjectiveOnWith.exists_pos","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.exists_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L185-L192","name":"NormedAddGroupHom.SurjectiveOnWith.mono","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L181-L182","name":"NormedAddGroupHom.SurjectiveOnWith","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith","doc":"A normed group hom is surjective on the subgroup `K` with constant `C` if every element\n`x` of `K` has a preimage whose norm is bounded above by `C*‖x‖`. This is a more\nabstract version of `f` having a right inverse defined on `K` with operator norm\nat most `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L173-L174","name":"NormedAddGroupHom.antilipschitz_of_norm_ge","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.antilipschitz_of_norm_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L168-L170","name":"NormedAddGroupHom.bound","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L163-L165","name":"NormedAddGroupHom.mk_toAddMonoidHom","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk_toAddMonoidHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L157-L159","name":"NormedAddGroupHom.toAddMonoidHom_injective","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L153-L154","name":"NormedAddGroupHom.coe_toAddMonoidHom","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_toAddMonoidHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L148-L149","name":"NormedAddGroupHom.toAddMonoidHom","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom","doc":"The group homomorphism underlying a bounded group homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L143-L144","name":"NormedAddGroupHom.coe_mkNormedAddGroupHom'","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L138-L139","name":"NormedAddGroupHom.coe_mkNormedAddGroupHom","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L133-L134","name":"NormedAddGroupHom.coe_mk","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L128-L129","name":"NormedAddGroupHom.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L121-L122","name":"NormedAddGroupHom.ext_iff","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L117-L118","name":"NormedAddGroupHom.ext","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L112-L113","name":"NormedAddGroupHom.coe_inj_iff","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L108-L109","name":"NormedAddGroupHom.coe_injective","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L104-L105","name":"NormedAddGroupHom.coe_inj","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L99-L100","name":"NormedAddGroupHom.coeFun","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeFun","doc":"Helper instance for when there are too many metavariables to apply `FunLike.coeFun` directly. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L92-L96","name":"NormedAddGroupHom.toAddMonoidHomClass","kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHomClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L88-L89","name":"NormedAddGroupHom.ofLipschitz","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz","doc":"A Lipschitz continuous additive homomorphism is a normed additive group homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L70-L77","name":"exists_pos_bound_of_bound","kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#exists_pos_bound_of_bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L63-L65","name":"AddMonoidHom.mkNormedAddGroupHom'","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom'","doc":"Associate to a group homomorphism a bounded group homomorphism under a norm control condition.\n\nSee `AddMonoidHom.mkNormedAddGroupHom` for a version that uses `ℝ` for the bound. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L56-L57","name":"AddMonoidHom.mkNormedAddGroupHom","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom","doc":"Associate to a group homomorphism a bounded group homomorphism under a norm control condition.\n\nSee `AddMonoidHom.mkNormedAddGroupHom'` for a version that uses `ℝ≥0` for the bound. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L45-L45","name":"NormedAddGroupHom.bound'","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound'","doc":"A `NormedAddGroupHom` is bounded. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L43-L43","name":"NormedAddGroupHom.map_add'","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.map_add'","doc":"A `NormedAddGroupHom` is additive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L41-L41","name":"NormedAddGroupHom.toFun","kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun","doc":"The function underlying a `NormedAddGroupHom` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L38-L39","name":"NormedAddGroupHom.mk","kind":"ctor","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Normed/Group/Hom.lean#L38-L45","name":"NormedAddGroupHom","kind":"structure","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom","doc":"A morphism of seminormed abelian groups is a bounded group homomorphism. "}]}