{"name":"Mathlib.Topology.PartitionOfUnity","instances":[{"typeNames":["PartitionOfUnity","ContinuousMap","Real","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace"],"name":"PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","className":"FunLike"},{"typeNames":["BumpCovering","ContinuousMap","Real","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace"],"name":"BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","className":"FunLike"},{"typeNames":["BumpCovering"],"name":"BumpCovering.instInhabitedBumpCovering","className":"Inhabited"},{"typeNames":["PartitionOfUnity"],"name":"PartitionOfUnity.instInhabitedPartitionOfUnity","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.BigOperators.Finprod","Mathlib.SetTheory.Ordinal.Basic","Mathlib.Topology.ContinuousFunction.Algebra","Mathlib.Topology.Paracompact","Mathlib.Topology.ShrinkingLemma","Mathlib.Topology.UrysohnsLemma"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L515-L519","name":"PartitionOfUnity.exists_isSubordinate","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.exists_isSubordinate","doc":"If `X` is a paracompact normal topological space and `U` is an open covering of a closed set\n`s`, then there exists a `PartitionOfUnity Œπ X s` that is subordinate to `U`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L506-L510","name":"PartitionOfUnity.exists_isSubordinate_of_locallyFinite","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.exists_isSubordinate_of_locallyFinite","doc":"If `X` is a normal topological space and `U` is a locally finite open covering of a closed set\n`s`, then there exists a `PartitionOfUnity Œπ X s` that is subordinate to `U`. If `X` is a\nparacompact space, then the assumption `hf : LocallyFinite U` can be omitted, see\n`BumpCovering.exists_isSubordinate`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L499-L500","name":"PartitionOfUnity.instInhabitedPartitionOfUnity","kind":"instance","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.instInhabitedPartitionOfUnity","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L488-L490","name":"BumpCovering.IsSubordinate.toPartitionOfUnity","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.IsSubordinate.toPartitionOfUnity","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L483-L485","name":"BumpCovering.sum_toPartitionOfUnity_eq","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.sum_toPartitionOfUnity_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L478-L480","name":"BumpCovering.support_toPartitionOfUnity_subset","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.support_toPartitionOfUnity_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L473-L475","name":"BumpCovering.toPartitionOfUnity_zero_of_zero","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPartitionOfUnity_zero_of_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L468-L470","name":"BumpCovering.exists_finset_toPartitionOfUnity_eventuallyEq","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_finset_toPartitionOfUnity_eventuallyEq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L462-L465","name":"BumpCovering.toPartitionOfUnity_eq_mul_prod","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPartitionOfUnity_eq_mul_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L458-L459","name":"BumpCovering.toPartitionOfUnity_apply","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPartitionOfUnity_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L442-L455","name":"BumpCovering.toPartitionOfUnity","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPartitionOfUnity","doc":"The partition of unity defined by a `BumpCovering`.\n\nThe partition of unity is given by the formula `g i x = f i x * ‚àè·∂† j < i, (1 - f j x)`. In other\nwords, `g i x = ‚àè·∂† j < i, (1 - f j x) - ‚àè·∂† j ‚â§ i, (1 - f j x)`, so\n`‚àë·∂† i, g i x = 1 - ‚àè·∂† j, (1 - f j x)`. If `x ‚àà s`, then one of `f j x` equals one, hence the product\nof `1 - f j x` vanishes, and `‚àë·∂† i, g i x = 1`.\n\nIn order to avoid an assumption `LinearOrder Œπ`, we use `WellOrderingRel` instead of `(<)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L427-L431","name":"BumpCovering.continuous_toPOUFun","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.continuous_toPOUFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L416-L424","name":"BumpCovering.exists_finset_toPOUFun_eventuallyEq","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_finset_toPOUFun_eventuallyEq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L399-L413","name":"BumpCovering.sum_toPOUFun_eq","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.sum_toPOUFun_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L390-L396","name":"BumpCovering.toPOUFun_eq_mul_prod","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPOUFun_eq_mul_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L386-L387","name":"BumpCovering.support_toPOUFun_subset","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.support_toPOUFun_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L382-L383","name":"BumpCovering.toPOUFun_zero_of_zero","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPOUFun_zero_of_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L378-L379","name":"BumpCovering.toPOUFun","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toPOUFun","doc":"Partition of unity defined by a `BumpCovering`. We use this auxiliary definition to prove some\nproperties of the new family of functions before bundling it into a `PartitionOfUnity`. Do not use\nthis definition, use `BumpCovering.toPartitionOfUnity` instead.\n\nThe partition of unity is given by the formula `g i x = f i x * ‚àè·∂† j < i, (1 - f j x)`. In other\nwords, `g i x = ‚àè·∂† j < i, (1 - f j x) - ‚àè·∂† j ‚â§ i, (1 - f j x)`, so\n`‚àë·∂† i, g i x = 1 - ‚àè·∂† j, (1 - f j x)`. If `x ‚àà s`, then one of `f j x` equals one, hence the product\nof `1 - f j x` vanishes, and `‚àë·∂† i, g i x = 1`.\n\nIn order to avoid an assumption `LinearOrder Œπ`, we use `WellOrderingRel` instead of `(<)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L364-L365","name":"BumpCovering.ind_apply","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.ind_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L360-L361","name":"BumpCovering.eventuallyEq_one","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.eventuallyEq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L356-L357","name":"BumpCovering.ind","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.ind","doc":"Index of a bump function such that `fs i =·∂†[ùìù x] 1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L348-L352","name":"BumpCovering.exists_isSubordinate","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_isSubordinate","doc":"If `X` is a paracompact normal topological space and `U` is an open covering of a closed set\n`s`, then there exists a `BumpCovering Œπ X s` that is subordinate to `U`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L336-L343","name":"BumpCovering.exists_isSubordinate_of_prop","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_isSubordinate_of_prop","doc":"If `X` is a paracompact normal topological space and `U` is an open covering of a closed set\n`s`, then there exists a `BumpCovering Œπ X s` that is subordinate to `U`. This version assumes that\n`p : (X ‚Üí ‚Ñù) ‚Üí Prop` is a predicate that satisfies Urysohn's lemma, and provides a\n`BumpCovering` such that each function of the covering satisfies `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L321-L329","name":"BumpCovering.exists_isSubordinate_of_locallyFinite","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_isSubordinate_of_locallyFinite","doc":"If `X` is a normal topological space and `U i`, `i : Œπ`, is a locally finite open covering of a\nclosed set `s`, then there exists a `BumpCovering Œπ X s` that is subordinate to `U`. If `X` is a\nparacompact space, then the assumption `hf : LocallyFinite U` can be omitted, see\n`BumpCovering.exists_isSubordinate`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L295-L314","name":"BumpCovering.exists_isSubordinate_of_locallyFinite_of_prop","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.exists_isSubordinate_of_locallyFinite_of_prop","doc":"If `X` is a normal topological space and `U i`, `i : Œπ`, is a locally finite open covering of a\nclosed set `s`, then there exists a `BumpCovering Œπ X s` that is subordinate to `U`. If `X` is a\nparacompact space, then the assumption `hf : LocallyFinite U` can be omitted, see\n`BumpCovering.exists_isSubordinate`. This version assumes that `p : (X ‚Üí ‚Ñù) ‚Üí Prop` is a predicate\nthat satisfies Urysohn's lemma, and provides a `BumpCovering` such that each function of the\ncovering satisfies `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L284-L286","name":"BumpCovering.IsSubordinate.mono","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.IsSubordinate.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L280-L281","name":"BumpCovering.IsSubordinate","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.IsSubordinate","doc":"A collection of bump functions `f i` is subordinate to a family of sets `U i` indexed by the\nsame type if for each `i` the closure of the support of `f i` is a subset of `U i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L275-L276","name":"BumpCovering.instInhabitedBumpCovering","kind":"instance","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.instInhabitedBumpCovering","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L272-L272","name":"BumpCovering.coe_single","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.coe_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L258-L268","name":"BumpCovering.single","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.single","doc":"A `BumpCovering` that consists of a single function, uniformly equal to one, defined as an\nexample for `Inhabited` instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L252-L253","name":"BumpCovering.le_one","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L248-L249","name":"BumpCovering.nonneg","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L244-L245","name":"BumpCovering.point_finite","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.point_finite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L240-L241","name":"BumpCovering.locallyFinite_tsupport","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.locallyFinite_tsupport","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L236-L237","name":"BumpCovering.locallyFinite","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.locallyFinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L232-L234","name":"BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","kind":"instance","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L220-L223","name":"PartitionOfUnity.IsSubordinate.continuous_finsum_smul","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.IsSubordinate.continuous_finsum_smul","doc":"If `f` is a partition of unity that is subordinate to a family of open sets `U i` and\n`g : Œπ ‚Üí X ‚Üí E` is a family of functions such that each `g i` is continuous on `U i`, then the sum\n`fun x ‚Ü¶ ‚àë·∂† i, f i x ‚Ä¢ g i x` is a continuous function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L207-L214","name":"PartitionOfUnity.exists_finset_nhd_support_subset","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.exists_finset_nhd_support_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L201-L202","name":"PartitionOfUnity.IsSubordinate","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.IsSubordinate","doc":"A partition of unity `f i` is subordinate to a family of sets `U i` indexed by the same type if\nfor each `i` the closure of the support of `f i` is a subset of `U i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L192-L196","name":"PartitionOfUnity.continuous_finsum_smul","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.continuous_finsum_smul","doc":"If `f` is a partition of unity on a set `s : Set X` and `g : Œπ ‚Üí X ‚Üí E` is a family of functions\nsuch that each `g i` is continuous at every point of the topological support of `f i`, then the sum\n`fun x ‚Ü¶ ‚àë·∂† i, f i x ‚Ä¢ g i x` is continuous on the whole space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L183-L186","name":"PartitionOfUnity.continuous_smul","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.continuous_smul","doc":"If `f` is a partition of unity on `s : Set X` and `g : X ‚Üí E` is continuous at every point of\nthe topological support of some `f i`, then `fun x ‚Ü¶ f i x ‚Ä¢ g x` is continuous on the whole space.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L176-L177","name":"PartitionOfUnity.le_one","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L172-L173","name":"PartitionOfUnity.sum_nonneg","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.sum_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L168-L169","name":"PartitionOfUnity.sum_le_one","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.sum_le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L162-L165","name":"PartitionOfUnity.exists_pos","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.exists_pos","doc":"If `f` is a partition of unity on `s`, then for every `x ‚àà s` there exists an index `i` such\nthat `0 < f i x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L156-L157","name":"PartitionOfUnity.sum_eq_one","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.sum_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L152-L153","name":"PartitionOfUnity.nonneg","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L148-L149","name":"PartitionOfUnity.locallyFinite_tsupport","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.locallyFinite_tsupport","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L144-L145","name":"PartitionOfUnity.locallyFinite","kind":"theorem","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.locallyFinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L140-L142","name":"PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","kind":"instance","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L130-L130","name":"BumpCovering.eventuallyEq_one'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.eventuallyEq_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L129-L129","name":"BumpCovering.le_one'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.le_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L128-L128","name":"BumpCovering.nonneg'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.nonneg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L127-L127","name":"BumpCovering.locallyFinite'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.locallyFinite'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L126-L126","name":"BumpCovering.toFun","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L125-L125","name":"BumpCovering.mk","kind":"ctor","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L125-L130","name":"BumpCovering","kind":"structure","docLink":"./Mathlib/Topology/PartitionOfUnity.html#BumpCovering","doc":"A `BumpCovering Œπ X s` is an indexed family of functions `f i`, `i : Œπ`, such that\n\n* the supports of `f i` form a locally finite family of sets, i.e., for every point `x : X` there\n  exists a neighborhood `U ‚àã x` such that all but finitely many functions `f i` are zero on `U`;\n* for all `i`, `x` we have `0 ‚â§ f i x ‚â§ 1`;\n* each point `x ‚àà s` belongs to the interior of `{x | f i x = 1}` for some `i`.\n\nOne of the main use cases for a `BumpCovering` is to define a `PartitionOfUnity`, see\n`BumpCovering.toPartitionOfUnity`, but some proofs can directly use a `BumpCovering` instead of\na `PartitionOfUnity`.\n\nIf `X` is a normal paracompact space, then `BumpCovering.exists_isSubordinate` guarantees that for\nevery open covering `U : Set (Set X)` of `s` there exists a `BumpCovering` of `s` that is\nsubordinate to `U`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L107-L107","name":"PartitionOfUnity.sum_le_one'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.sum_le_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L106-L106","name":"PartitionOfUnity.sum_eq_one'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.sum_eq_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L105-L105","name":"PartitionOfUnity.nonneg'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.nonneg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L104-L104","name":"PartitionOfUnity.locallyFinite'","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.locallyFinite'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L103-L103","name":"PartitionOfUnity.toFun","kind":"def","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L102-L102","name":"PartitionOfUnity.mk","kind":"ctor","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PartitionOfUnity.lean#L102-L107","name":"PartitionOfUnity","kind":"structure","docLink":"./Mathlib/Topology/PartitionOfUnity.html#PartitionOfUnity","doc":"A continuous partition of unity on a set `s : Set X` is a collection of continuous functions\n`f i` such that\n\n* the supports of `f i` form a locally finite family of sets, i.e., for every point `x : X` there\n  exists a neighborhood `U ‚àã x` such that all but finitely many functions `f i` are zero on `U`;\n* the functions `f i` are nonnegative;\n* the sum `‚àë·∂† i, f i x` is equal to one for every `x ‚àà s` and is less than or equal to one\n  otherwise.\n\nIf `X` is a normal paracompact space, then `PartitionOfUnity.exists_isSubordinate` guarantees\nthat for every open covering `U : Set (Set X)` of `s` there exists a partition of unity that is\nsubordinate to `U`.\n"}]}