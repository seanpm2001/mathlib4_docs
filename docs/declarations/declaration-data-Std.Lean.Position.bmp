{"name":"Std.Lean.Position","instances":[],"imports":["Init","Lean.Syntax","Lean.Data.Lsp.Utf16"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L37-L40","name":"Lean.FileMap.lineStart","kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.lineStart","doc":"Returns the position of the start of (1-based) line `line`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L33-L34","name":"Lean.Syntax.ofRange","kind":"def","docLink":"./Std/Lean/Position.html#Lean.Syntax.ofRange","doc":"Returns a synthetic Syntax which has the specified `String.Range`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L27-L30","name":"Lean.findIndentAndIsStart","kind":"def","docLink":"./Std/Lean/Position.html#Lean.findIndentAndIsStart","doc":"Return the indentation (number of leading spaces) of the line containing `pos`,\nand whether `pos` is the first non-whitespace character in the line.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L18-L21","name":"Lean.findLineStart","kind":"def","docLink":"./Std/Lean/Position.html#Lean.findLineStart","doc":"Return the beginning of the line contatining character `pos`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L14-L15","name":"Lean.FileMap.rangeOfStx?","kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.rangeOfStx?","doc":"Gets the LSP range of syntax `stx`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Lean/Position.lean#L10-L11","name":"Lean.FileMap.utf8RangeToLspRange","kind":"def","docLink":"./Std/Lean/Position.html#Lean.FileMap.utf8RangeToLspRange","doc":"Gets the LSP range from a `String.Range`. "}]}