{"name":"Mathlib.Logic.Embedding.Basic","instances":[{"typeNames":["Function.Embedding"],"name":"Function.instEmbeddingLikeEmbedding","className":"EmbeddingLike"},{"typeNames":["Equiv","Function.Embedding"],"name":"Equiv.coeEmbedding","className":"Coe"},{"typeNames":["Equiv.Perm","Function.Embedding"],"name":"Equiv.Perm.coeEmbedding","className":"Coe"},{"typeNames":["_builtin_sortu","_builtin_sortu","_builtin_sortu","Function.Embedding","Function.Embedding","Function.Embedding"],"name":"Function.Embedding.instTransSortSortSortEmbeddingEmbeddingEmbedding","className":"Trans"}],"imports":["Init","Mathlib.Data.Option.Basic","Mathlib.Data.Prod.PProd","Mathlib.Logic.Equiv.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L497-L498","name":"Subtype.impEmbedding","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Subtype.impEmbedding","doc":"A subtype `{x // p x}` can be injectively sent to into a subtype `{x // q x}`,\nif `p x → q x` for all `x : α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L496-L496","name":"Subtype.impEmbedding_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Subtype.impEmbedding_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L488-L491","name":"subtypeOrLeftEmbedding_apply_right","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#subtypeOrLeftEmbedding_apply_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L482-L485","name":"subtypeOrLeftEmbedding_apply_left","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#subtypeOrLeftEmbedding_apply_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L474-L479","name":"subtypeOrLeftEmbedding","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#subtypeOrLeftEmbedding","doc":"A subtype `{x // p x ∨ q x}` over a disjunction of `p q : α → Prop` can be injectively split\ninto a sum of subtypes `{x // p x} ⊕ {x // q x}` such that `¬ p x` is sent to the right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L461-L463","name":"Equiv.trans_toEmbedding","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.trans_toEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L456-L457","name":"Equiv.refl_toEmbedding","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.refl_toEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L447-L452","name":"Equiv.embeddingCongr_apply_trans","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr_apply_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L442-L444","name":"Equiv.embeddingCongr_symm","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L434-L438","name":"Equiv.embeddingCongr_trans","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L428-L430","name":"Equiv.embeddingCongr_refl","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L415-L423","name":"Equiv.embeddingCongr","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr","doc":"If `α₁ ≃ α₂` and `β₁ ≃ β₂`, then the type of embeddings `α₁ ↪ β₁`\nis equivalent to the type of embeddings `α₂ ↪ β₂`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L414-L414","name":"Equiv.embeddingCongr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.embeddingCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L403-L408","name":"Equiv.subtypeInjectiveEquivEmbedding","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.subtypeInjectiveEquivEmbedding","doc":"The type of embeddings `α ↪ β` is equivalent to\nthe subtype of all injective functions `α → β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L396-L397","name":"Equiv.asEmbedding","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.asEmbedding","doc":"Given an equivalence to a subtype, produce an embedding to the elements of the corresponding\nset. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L395-L395","name":"Equiv.asEmbedding_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.asEmbedding_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L380-L382","name":"Function.Embedding.swap_comp","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.swap_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L375-L377","name":"Function.Embedding.swap_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.swap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L367-L370","name":"Function.Embedding.subtypeMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.subtypeMap","doc":"Restrict both domain and codomain of an embedding. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L360-L363","name":"Function.Embedding.arrowCongrLeft","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.arrowCongrLeft","doc":"An embedding `e : α ↪ β` defines an embedding `(α → γ) ↪ (β → γ)` for any inhabited type `γ`.\nThis embedding sends each `f : α → γ` to a function `g : β → γ` such that `g ∘ e = f` and\n`g y = default` whenever `y ∉ range e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L352-L354","name":"Function.Embedding.arrowCongrRight_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.arrowCongrRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L347-L348","name":"Function.Embedding.arrowCongrRight","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.arrowCongrRight","doc":"An embedding `e : α ↪ β` defines an embedding `(γ → α) ↪ (γ → β)` that sends each `f`\nto `e ∘ f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L340-L341","name":"Function.Embedding.piCongrRight","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.piCongrRight","doc":"Define an embedding `(Π a : α, β a) ↪ (Π a : α, γ a)` from a family of embeddings\n`e : Π a, (β a ↪ γ a)`. This embedding sends `f` to `fun a ↦ e a (f a)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L339-L339","name":"Function.Embedding.piCongrRight_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.piCongrRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L330-L331","name":"Function.Embedding.sigmaMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sigmaMap","doc":"If `f : α ↪ α'` is an embedding and `g : Π a, β α ↪ β' (f α)` is a family\nof embeddings, then `Sigma.map f g` is an embedding. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L329-L329","name":"Function.Embedding.sigmaMap_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sigmaMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L322-L323","name":"Function.Embedding.sigmaMk","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sigmaMk","doc":"`Sigma.mk` as a `Function.Embedding`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L321-L321","name":"Function.Embedding.sigmaMk_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sigmaMk_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L309-L310","name":"Function.Embedding.inr","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr","doc":"The embedding of `β` into the sum `α ⊕ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L308-L308","name":"Function.Embedding.inr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L302-L303","name":"Function.Embedding.inl","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl","doc":"The embedding of `α` into the sum `α ⊕ β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L301-L301","name":"Function.Embedding.inl_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L296-L297","name":"Function.Embedding.coe_sumMap","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coe_sumMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L291-L292","name":"Function.Embedding.sumMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sumMap","doc":"If `e₁` and `e₂` are embeddings, then so is `Sum.map e₁ e₂`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L282-L283","name":"Function.Embedding.pprodMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.pprodMap","doc":"If `e₁` and `e₂` are embeddings, then so is `λ ⟨a, b⟩, ⟨e₁ a, e₂ b⟩ : PProd α γ → PProd β δ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L276-L278","name":"Function.Embedding.coe_prodMap","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coe_prodMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L271-L272","name":"Function.Embedding.prodMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap","doc":"If `e₁` and `e₂` are embeddings, then so is `prod.map e₁ e₂ : (a, b) ↦ (e₁ a, e₂ b)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L265-L266","name":"Function.Embedding.sectr","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sectr","doc":"Fixing an element `a : α` gives an embedding `β ↪ α × β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L264-L264","name":"Function.Embedding.sectr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sectr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L258-L259","name":"Function.Embedding.sectl","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sectl","doc":"Fixing an element `b : β` gives an embedding `α ↪ α × β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L257-L257","name":"Function.Embedding.sectl_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.sectl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L250-L253","name":"Function.Embedding.punit","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.punit","doc":"Choosing an element `b : β` gives an embedding of `PUnit` into `β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L245-L246","name":"Function.Embedding.coe_quotientOut","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coe_quotientOut","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L240-L241","name":"Function.Embedding.quotientOut","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.quotientOut","doc":"`Quotient.out` as an embedding. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L235-L236","name":"Function.Embedding.coe_subtype","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coe_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L230-L231","name":"Function.Embedding.subtype","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.subtype","doc":"Embedding of a `Subtype`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L224-L225","name":"Function.Embedding.optionMap","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.optionMap","doc":"A version of `Option.map` for `Function.Embedding`s. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L223-L223","name":"Function.Embedding.optionMap_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.optionMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L213-L214","name":"Function.Embedding.some","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.some","doc":"Embedding into `Option α` using `some`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L212-L212","name":"Function.Embedding.some_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.some_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L206-L208","name":"Function.Embedding.setValue_eq","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.setValue_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L188-L203","name":"Function.Embedding.setValue","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.setValue","doc":"Change the value of an embedding `f` at one point. If the prescribed image\nis already occupied by some `f a'`, then swap the values at these two points. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L182-L183","name":"Function.Embedding.ofIsEmpty","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.ofIsEmpty","doc":"There is always an embedding from an empty type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L177-L178","name":"Function.Embedding.equivOfSurjective","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.equivOfSurjective","doc":"Convert a surjective `Embedding` to an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L172-L173","name":"Function.Embedding.ofSurjective","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.ofSurjective","doc":"A right inverse `surjInv` of a surjective function as an `Embedding`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L165-L167","name":"Function.Embedding.congr","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.congr","doc":"Transfer an embedding along a pair of equivalences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L164-L164","name":"Function.Embedding.congr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.congr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L157-L160","name":"Function.Embedding.equiv_symm_toEmbedding_trans_toEmbedding","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.equiv_symm_toEmbedding_trans_toEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L150-L153","name":"Function.Embedding.equiv_toEmbedding_trans_symm_toEmbedding","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.equiv_toEmbedding_trans_symm_toEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L147-L147","name":"Function.Embedding.instTransSortSortSortEmbeddingEmbeddingEmbedding","kind":"instance","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.instTransSortSortSortEmbeddingEmbeddingEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L142-L143","name":"Function.Embedding.trans","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans","doc":"Composition of `f : α ↪ β` and `g : β ↪ γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L141-L141","name":"Function.Embedding.trans_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L135-L136","name":"Function.Embedding.refl","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl","doc":"The identity map as a `Function.Embedding`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L134-L134","name":"Function.Embedding.refl_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L129-L130","name":"Function.Embedding.apply_eq_iff_eq","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.apply_eq_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L125-L126","name":"Function.Embedding.injective","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L121-L122","name":"Function.Embedding.mk_coe","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L116-L117","name":"Function.Embedding.coeFn_mk","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coeFn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L111-L112","name":"Function.Embedding.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L106-L107","name":"Function.Embedding.ext_iff","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L101-L102","name":"Function.Embedding.ext","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L96-L97","name":"Function.Embedding.coe_injective","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.coe_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L83-L84","name":"Equiv.Perm.coeEmbedding","kind":"instance","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.Perm.coeEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L78-L79","name":"Equiv.coeEmbedding","kind":"instance","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.coeEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L74-L75","name":"Equiv.toEmbedding_apply","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L70-L71","name":"Equiv.coe_toEmbedding","kind":"theorem","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.coe_toEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L65-L66","name":"Equiv.toEmbedding","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding","doc":"Convert an `α ≃ β` to `α ↪ β`.\n\nThis is also available as a coercion `Equiv.coeEmbedding`.\nThe explicit `Equiv.toEmbedding` version is preferred though, since the coercion can have issues\ninferring the type of the resulting embedding. For example:\n\n```lean\n-- Works:\nexample (s : Finset (Fin 3)) (f : Equiv.Perm (Fin 3)) : s.map f.toEmbedding = s.map f := by simp\n-- Error, `f` has type `Fin 3 ≃ Fin 3` but is expected to have type `Fin 3 ↪ ?m_1 : Type ?`\nexample (s : Finset (Fin 3)) (f : Equiv.Perm (Fin 3)) : s.map f = s.map f.toEmbedding := by simp\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L36-L39","name":"Function.instEmbeddingLikeEmbedding","kind":"instance","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.instEmbeddingLikeEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L33-L34","name":"Function.«term_↪_»","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.«term_↪_»","doc":"An embedding, a.k.a. a bundled injective function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L30-L30","name":"Function.Embedding.inj'","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inj'","doc":"An embedding is an injective function. Use `Function.Embedding.injective` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L28-L28","name":"Function.Embedding.toFun","kind":"def","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.toFun","doc":"An embedding as a function. Use coercion instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L26-L26","name":"Function.Embedding.mk","kind":"ctor","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Embedding/Basic.lean#L26-L30","name":"Function.Embedding","kind":"structure","docLink":"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding","doc":"`α ↪ β` is a bundled injective function. "}]}