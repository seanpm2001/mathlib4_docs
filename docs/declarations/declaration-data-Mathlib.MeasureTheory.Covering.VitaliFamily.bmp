{"name":"Mathlib.MeasureTheory.Covering.VitaliFamily","instances":[{"typeNames":["Set","VitaliFamily.filterAt"],"name":"VitaliFamily.filterAt_neBot","className":"Filter.NeBot"}],"imports":["Init","Mathlib.MeasureTheory.Measure.MeasureSpace"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L292-L297","name":"VitaliFamily.fineSubfamilyOn_of_frequently","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.fineSubfamilyOn_of_frequently","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L284-L289","name":"VitaliFamily.eventually_filterAt_subset_of_nhds","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.eventually_filterAt_subset_of_nhds","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L278-L281","name":"VitaliFamily.frequently_filterAt_iff","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.frequently_filterAt_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L274-L275","name":"VitaliFamily.eventually_filterAt_measurableSet","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.eventually_filterAt_measurableSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L264-L271","name":"VitaliFamily.tendsto_filterAt_iff","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.tendsto_filterAt_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L258-L261","name":"VitaliFamily.eventually_filterAt_subset_closedBall","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.eventually_filterAt_subset_closedBall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L252-L255","name":"VitaliFamily.eventually_filterAt_mem_sets","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.eventually_filterAt_mem_sets","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L247-L249","name":"VitaliFamily.eventually_filterAt_iff","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.eventually_filterAt_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L239-L244","name":"VitaliFamily.filterAt_neBot","kind":"instance","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.filterAt_neBot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L225-L236","name":"VitaliFamily.mem_filterAt_iff","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.mem_filterAt_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L221-L222","name":"VitaliFamily.filterAt","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.filterAt","doc":"Given a vitali family `v`, then `v.filterAt x` is the filter on `Set α` made of those families\nthat contain all sets of `v.setsAt x` of a sufficiently small diameter. This filter makes it\npossible to express limiting behavior when sets in `v.setsAt x` shrink to `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L189-L213","name":"VitaliFamily.enlarge","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.enlarge","doc":"One can enlarge a Vitali family by adding to the sets `f x` at `x` all sets which are not\ncontained in a `δ`-neighborhood on `x`. This does not change the local filter at a point, but it\ncan be convenient to get a nicer global behavior. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L180-L181","name":"VitaliFamily.FineSubfamilyOn.measure_le_tsum","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.measure_le_tsum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L168-L177","name":"VitaliFamily.FineSubfamilyOn.measure_le_tsum_of_absolutelyContinuous","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.measure_le_tsum_of_absolutelyContinuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L163-L165","name":"VitaliFamily.FineSubfamilyOn.measurableSet_u","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.measurableSet_u","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L158-L160","name":"VitaliFamily.FineSubfamilyOn.index_countable","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.index_countable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L154-L155","name":"VitaliFamily.FineSubfamilyOn.measure_diff_biUnion","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.measure_diff_biUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L150-L151","name":"VitaliFamily.FineSubfamilyOn.covering_mem_family","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.covering_mem_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L146-L147","name":"VitaliFamily.FineSubfamilyOn.covering_mem","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.covering_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L142-L143","name":"VitaliFamily.FineSubfamilyOn.covering_disjoint_subtype","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.covering_disjoint_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L138-L139","name":"VitaliFamily.FineSubfamilyOn.covering_disjoint","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.covering_disjoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L134-L135","name":"VitaliFamily.FineSubfamilyOn.index_subset","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.index_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L130-L131","name":"VitaliFamily.FineSubfamilyOn.covering","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.covering","doc":"Given `h : v.FineSubfamilyOn f s`, then `h.covering p` is a set in the family,\nfor `p ∈ h.index`, such that these sets form a disjoint covering of almost every `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L122-L123","name":"VitaliFamily.FineSubfamilyOn.index","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.index","doc":"Given `h : v.FineSubfamilyOn f s`, then `h.index` is a set parametrizing a disjoint\ncovering of almost every `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L111-L117","name":"VitaliFamily.FineSubfamilyOn.exists_disjoint_covering_ae","kind":"theorem","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn.exists_disjoint_covering_ae","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L103-L104","name":"VitaliFamily.FineSubfamilyOn","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.FineSubfamilyOn","doc":"Given a Vitali family `v` for a measure `μ`, a family `f` is a fine subfamily on a set `s` if\nevery point `x` in `s` belongs to arbitrarily small sets in `v.setsAt x ∩ f x`. This is precisely\nthe subfamilies for which the Vitali family definition ensures that one can extract a disjoint\ncovering of almost all `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L89-L96","name":"VitaliFamily.mono","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.mono","doc":"A Vitali family for a measure `μ` is also a Vitali family for any measure absolutely continuous\nwith respect to `μ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L76-L76","name":"VitaliFamily.covering","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.covering","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L75-L75","name":"VitaliFamily.Nontrivial","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.Nontrivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L74-L74","name":"VitaliFamily.nonempty_interior","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.nonempty_interior","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L73-L73","name":"VitaliFamily.MeasurableSet'","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.MeasurableSet'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L72-L72","name":"VitaliFamily.setsAt","kind":"def","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.setsAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L71-L71","name":"VitaliFamily.mk","kind":"ctor","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/MeasureTheory/Covering/VitaliFamily.lean#L71-L80","name":"VitaliFamily","kind":"structure","docLink":"./Mathlib/MeasureTheory/Covering/VitaliFamily.html#VitaliFamily","doc":"On a metric space `X` with a measure `μ`, consider for each `x : X` a family of measurable sets\nwith nonempty interiors, called `setsAt x`. This family is a Vitali family if it satisfies the\nfollowing property: consider a (possibly non-measurable) set `s`, and for any `x` in `s` a\nsubfamily `f x` of `setsAt x` containing sets of arbitrarily small diameter. Then one can extract\na disjoint subfamily covering almost all `s`.\n\nVitali families are provided by covering theorems such as the Besicovitch covering theorem or the\nVitali covering theorem. They make it possible to formulate general versions of theorems on\ndifferentiations of measure that apply in both contexts.\n"}]}