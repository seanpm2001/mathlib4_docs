{"name":"Mathlib.Tactic.DeriveToExpr","instances":[],"imports":["Init","Lean","Mathlib.Tactic.ToLevel"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L185-L191","name":"Mathlib.Deriving.ToExpr.mkToExprInstanceHandler","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToExprInstanceHandler","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L179-L183","name":"Mathlib.Deriving.ToExpr.mkToExprInstanceCmds","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToExprInstanceCmds","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L159-L177","name":"Mathlib.Deriving.ToExpr.mkInstanceCmds","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkInstanceCmds","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L152-L156","name":"Mathlib.Deriving.ToExpr.mkMutualBlock","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkMutualBlock","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L127-L150","name":"Mathlib.Deriving.ToExpr.mkAuxFunction","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkAuxFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L123-L124","name":"Mathlib.Deriving.ToExpr.mkToLevelBinders","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToLevelBinders","doc":"Make `ToLevel` instance binders for all the level variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L115-L120","name":"Mathlib.Deriving.ToExpr.fixIndType","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.fixIndType","doc":"Fix the output of `mkInductiveApp` to explicitly reference universe levels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L94-L112","name":"Mathlib.Deriving.ToExpr.mkLocalInstanceLetDecls","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkLocalInstanceLetDecls","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L81-L92","name":"Mathlib.Deriving.ToExpr.mkToTypeExpr","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToTypeExpr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L46-L79","name":"Mathlib.Deriving.ToExpr.mkToExprBody.mkAlts","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToExprBody.mkAlts","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L40-L79","name":"Mathlib.Deriving.ToExpr.mkToExprBody","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToExprBody","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L37-L38","name":"Mathlib.Deriving.ToExpr.mkAppNTerm","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkAppNTerm","doc":"Give a term that is equivalent to `(term| mkAppN $f #[$args,*])`.\nAs an optimization, `mkAppN` is pre-expanded out to use `Expr.app` directly. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/DeriveToExpr.lean#L30-L33","name":"Mathlib.Deriving.ToExpr.mkToExprHeader","kind":"def","docLink":"./Mathlib/Tactic/DeriveToExpr.html#Mathlib.Deriving.ToExpr.mkToExprHeader","doc":""}]}