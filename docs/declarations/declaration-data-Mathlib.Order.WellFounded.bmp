{"name":"Mathlib.Order.WellFounded","instances":[{"typeNames":["WellFoundedRelation.rel"],"name":"WellFounded.instIsAsymmRel","className":"IsAsymm"},{"typeNames":["WellFoundedRelation.rel"],"name":"WellFounded.instIsIrreflRel","className":"IsIrrefl"}],"imports":["Init","Mathlib.Data.Set.Image"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L279-L281","name":"WellFounded.induction_bot","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.induction_bot","doc":"Let `r` be a well-founded relation on `α`, let `C : α → Prop`, and let `bot : α`.\nThis induction principle shows that `C bot` holds, given that\n* some `a` satisfies `C a`, and\n* for each `b` that satisfies `C b`, there is `c` satisfying `r c b` and `C c`.\n\nThe naming is inspired by the fact that when `r` is transitive, it follows that `bot` is\nthe smallest element w.r.t. `r` that satisfies `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L266-L269","name":"WellFounded.induction_bot'","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.induction_bot'","doc":"Let `r` be a well-founded relation on `α`, let `f : α → β` be a function,\nlet `C : β → Prop`, and  let `bot : α`.\nThis induction principle shows that `C (f bot)` holds, given that\n* some `a` satisfies `C (f a)`, and\n* for each `b` such that `f b ≠ f bot` and `C (f b)` holds, there is `c`\n  satisfying `r c b` and `C (f c)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L255-L257","name":"Acc.induction_bot","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Acc.induction_bot","doc":"Let `r` be a relation on `α`, let `C : α → Prop` and let `bot : α`.\nThis induction principle shows that `C bot` holds, given that\n* some `a` that is accessible by `r` satisfies `C a`, and\n* for each `b ≠ bot` such that `C b` holds, there is `c` satisfying `r c b` and `C c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L243-L248","name":"Acc.induction_bot'","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Acc.induction_bot'","doc":"Let `r` be a relation on `α`, let `f : α → β` be a function, let `C : β → Prop`, and\nlet `bot : α`. This induction principle shows that `C (f bot)` holds, given that\n* some `a` that is accessible by `r` satisfies `C (f a)`, and\n* for each `b` such that `f b ≠ f bot` and `C (f b)` holds, there is `c`\n  satisfying `r c b` and `C (f c)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L227-L229","name":"Function.argminOn_le","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Function.argminOn_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L222-L223","name":"Function.argmin_le","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Function.argmin_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L210-L212","name":"Function.not_lt_argminOn","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Function.not_lt_argminOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L205-L206","name":"Function.argminOn_mem","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Function.argminOn_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L200-L201","name":"Function.argminOn","kind":"def","docLink":"./Mathlib/Order/WellFounded.html#Function.argminOn","doc":"Given a function `f : α → β` where `β` carries a well-founded `<`, and a non-empty subset `s`\nof `α`, this is an element of `s` whose image under `f` is minimal in the sense of\n`Function.not_lt_argminOn`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L193-L194","name":"Function.not_lt_argmin","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#Function.not_lt_argmin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L189-L190","name":"Function.argmin","kind":"def","docLink":"./Mathlib/Order/WellFounded.html#Function.argmin","doc":"Given a function `f : α → β` where `β` carries a well-founded `<`, this is an element of `α`\nwhose image under `f` is minimal in the sense of `Function.not_lt_argmin`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L169-L172","name":"WellFounded.self_le_of_strictMono","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.self_le_of_strictMono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L158-L166","name":"WellFounded.eq_strictMono_iff_eq_range","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.eq_strictMono_iff_eq_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L141-L142","name":"WellFounded.min_le","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.min_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L118-L133","name":"WellFounded.lt_succ_iff","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.lt_succ_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L110-L113","name":"WellFounded.lt_succ","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.lt_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L106-L107","name":"WellFounded.succ","kind":"def","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.succ","doc":"A successor of an element `x` in a well-founded order is a minimal element `y` such that\n`x < y` if one exists. Otherwise it is `x` itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L95-L97","name":"WellFounded.lt_sup","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.lt_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L90-L92","name":"WellFounded.sup","kind":"def","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.sup","doc":"The supremum of a bounded, well-founded order "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L77-L84","name":"WellFounded.wellFounded_iff_has_min","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.wellFounded_iff_has_min","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L71-L74","name":"WellFounded.not_lt_min","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.not_lt_min","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L65-L68","name":"WellFounded.min_mem","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.min_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L61-L62","name":"WellFounded.min","kind":"def","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.min","doc":"A minimal element of a nonempty set in a well-founded order.\n\nIf you're working with a nonempty linear order, consider defining a\n`ConditionallyCompleteLinearOrderBot` instance via\n`WellFounded.conditionallyCompleteLinearOrderWithBot` and using `Inf` instead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L48-L53","name":"WellFounded.has_min","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.has_min","doc":"If `r` is a well-founded relation, then any nonempty set has a minimal element\nwith respect to `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L43-L44","name":"WellFounded.instIsIrreflRel","kind":"instance","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.instIsIrreflRel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L39-L40","name":"WellFounded.isIrrefl","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.isIrrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L36-L37","name":"WellFounded.instIsAsymmRel","kind":"instance","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.instIsAsymmRel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/WellFounded.lean#L32-L33","name":"WellFounded.isAsymm","kind":"theorem","docLink":"./Mathlib/Order/WellFounded.html#WellFounded.isAsymm","doc":""}]}