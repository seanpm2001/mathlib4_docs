{"name":"Mathlib.Logic.Equiv.TransferInstance","instances":[],"imports":["Init","Mathlib.Algebra.Algebra.Equiv","Mathlib.Algebra.Field.Basic","Mathlib.Logic.Equiv.Defs"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L571-L581","name":"Equiv.algEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.algEquiv","doc":"An equivalence `e : α ≃ β` gives an algebra equivalence `α ≃ₐ[R] β`\nwhere the `R`-algebra structure on `α` is\nthe one obtained by transporting an `R`-algebra structure on `β` back along `e`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L550-L564","name":"Equiv.algebra","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.algebra","doc":"Transfer `Algebra` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L529-L539","name":"Equiv.linearEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.linearEquiv","doc":"An equivalence `e : α ≃ β` gives a linear equivalence `α ≃ₗ[R] β`\nwhere the `R`-module structure on `α` is\nthe one obtained by transporting an `R`-module structure on `β` back along `e`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L514-L522","name":"Equiv.module","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.module","doc":"Transfer `Module` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L494-L503","name":"Equiv.distribMulAction","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.distribMulAction","doc":"Transfer `DistribMulAction` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L486-L489","name":"Equiv.mulAction","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulAction","doc":"Transfer `MulAction` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L463-L473","name":"Equiv.field","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.field","doc":"Transfer `Field` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L449-L458","name":"Equiv.divisionRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.divisionRing","doc":"Transfer `DivisionRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L444-L444","name":"Equiv.RatCast","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.RatCast","doc":"Transfer `RatCast` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L438-L439","name":"Equiv.isDomain","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.isDomain","doc":"Transfer `IsDomain` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L432-L433","name":"Equiv.nontrivial","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nontrivial","doc":"Transfer `Nontrivial` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L423-L427","name":"Equiv.commRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.commRing","doc":"Transfer `CommRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L410-L418","name":"Equiv.nonUnitalCommRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalCommRing","doc":"Transfer `NonUnitalCommRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L401-L405","name":"Equiv.ring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.ring","doc":"Transfer `Ring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L393-L396","name":"Equiv.nonAssocRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonAssocRing","doc":"Transfer `NonAssocRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L380-L388","name":"Equiv.nonUnitalRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalRing","doc":"Transfer `NonUnitalRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L367-L375","name":"Equiv.nonUnitalNonAssocRing","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalNonAssocRing","doc":"Transfer `NonUnitalNonAssocRing` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L358-L362","name":"Equiv.commSemiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.commSemiring","doc":"Transfer `CommSemiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L348-L353","name":"Equiv.nonUnitalCommSemiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalCommSemiring","doc":"Transfer `NonUnitalCommSemiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L339-L343","name":"Equiv.semiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.semiring","doc":"Transfer `Semiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L331-L334","name":"Equiv.nonAssocSemiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonAssocSemiring","doc":"Transfer `NonAssocSemiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L320-L326","name":"Equiv.addGroupWithOne","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroupWithOne","doc":"Transfer `AddGroupWithOne` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L311-L315","name":"Equiv.addMonoidWithOne","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addMonoidWithOne","doc":"Transfer `AddMonoidWithOne` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L301-L306","name":"Equiv.nonUnitalSemiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalSemiring","doc":"Transfer `NonUnitalSemiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L290-L296","name":"Equiv.nonUnitalNonAssocSemiring","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.nonUnitalNonAssocSemiring","doc":"Transfer `NonUnitalNonAssocSemiring` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L277-L284","name":"Equiv.commGroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.commGroup","doc":"Transfer `CommGroup` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup","doc":"Transfer `AddCommGroup` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_6","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_2","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_4","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_3","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L276-L276","name":"Equiv.addCommGroup.proof_5","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommGroup.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L264-L271","name":"Equiv.group","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.group","doc":"Transfer `Group` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_5","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_3","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup","doc":"Transfer `AddGroup` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_4","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_2","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L263-L263","name":"Equiv.addGroup.proof_6","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addGroup.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L254-L258","name":"Equiv.commMonoid","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.commMonoid","doc":"Transfer `CommMonoid` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L253-L253","name":"Equiv.addCommMonoid","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommMonoid","doc":"Transfer `AddCommMonoid` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L253-L253","name":"Equiv.addCommMonoid.proof_3","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L253-L253","name":"Equiv.addCommMonoid.proof_2","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L253-L253","name":"Equiv.addCommMonoid.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L244-L248","name":"Equiv.monoid","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.monoid","doc":"Transfer `Monoid` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L243-L243","name":"Equiv.addMonoid.proof_2","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L243-L243","name":"Equiv.addMonoid.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L243-L243","name":"Equiv.addMonoid.proof_3","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L243-L243","name":"Equiv.addMonoid","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addMonoid","doc":"Transfer `AddMonoid` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L235-L239","name":"Equiv.mulZeroOneClass","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulZeroOneClass","doc":"Transfer `MulZeroOneClass` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L226-L229","name":"Equiv.mulOneClass","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulOneClass","doc":"Transfer `MulOneClass` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L225-L225","name":"Equiv.addZeroClass.proof_2","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addZeroClass.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L225-L225","name":"Equiv.addZeroClass.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addZeroClass.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L225-L225","name":"Equiv.addZeroClass","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addZeroClass","doc":"Transfer `AddZeroClass` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L218-L221","name":"Equiv.mulZeroClass","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulZeroClass","doc":"Transfer `MulZeroClass` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L210-L212","name":"Equiv.commSemigroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.commSemigroup","doc":"Transfer `CommSemigroup` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L209-L209","name":"Equiv.addCommSemigroup.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommSemigroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L209-L209","name":"Equiv.addCommSemigroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addCommSemigroup","doc":"Transfer `add_comm_semigroup` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L202-L205","name":"Equiv.semigroupWithZero","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.semigroupWithZero","doc":"Transfer `SemigroupWithZero` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L194-L196","name":"Equiv.semigroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.semigroup","doc":"Transfer `Semigroup` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L193-L193","name":"Equiv.addSemigroup.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addSemigroup.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L193-L193","name":"Equiv.addSemigroup","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addSemigroup","doc":"Transfer `add_semigroup` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L186-L189","name":"Equiv.ringEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.ringEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L182-L183","name":"Equiv.ringEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.ringEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L166-L178","name":"Equiv.ringEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.ringEquiv","doc":"An equivalence `e : α ≃ β` gives a ring equivalence `α ≃+* β`\nwhere the ring structure on `α` is\nthe one obtained by transporting a ring structure on `β` back along `e`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L155-L158","name":"Equiv.mulEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L154-L154","name":"Equiv.addEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L149-L150","name":"Equiv.mulEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L148-L148","name":"Equiv.addEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L136-L144","name":"Equiv.mulEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mulEquiv","doc":"An equivalence `e : α ≃ β` gives a multiplicative equivalence `α ≃* β` where\nthe multiplicative structure on `α` is the one obtained by transporting a multiplicative structure\non `β` back along `e`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L133-L135","name":"Equiv.addEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addEquiv","doc":"An equivalence `e : α ≃ β` gives an additive equivalence `α ≃+ β` where\nthe additive structure on `α` is the one obtained by transporting an additive structure\non `β` back along `e`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L133-L135","name":"Equiv.addEquiv.proof_1","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.addEquiv.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L124-L127","name":"Equiv.pow_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.pow_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L120-L121","name":"Equiv.Pow","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Pow","doc":"Transfer `Pow` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L112-L115","name":"Equiv.smul_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.smul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L108-L109","name":"Equiv.SMul","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.SMul","doc":"Transfer `SMul` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L99-L102","name":"Equiv.inv_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.inv_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L98-L98","name":"Equiv.neg_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.neg_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L93-L94","name":"Equiv.Inv","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Inv","doc":"Transfer `Inv` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L92-L92","name":"Equiv.Neg","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Neg","doc":"Transfer `Neg` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L84-L87","name":"Equiv.div_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.div_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L83-L83","name":"Equiv.sub_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.sub_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L78-L79","name":"Equiv.Div","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Div","doc":"Transfer `Div` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L77-L77","name":"Equiv.Sub","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Sub","doc":"Transfer `Sub` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L69-L72","name":"Equiv.mul_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.mul_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L68-L68","name":"Equiv.add_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.add_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L63-L64","name":"Equiv.Mul","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Mul","doc":"Transfer `Mul` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L62-L62","name":"Equiv.Add","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Add","doc":"Transfer `Add` across an `Equiv`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L54-L57","name":"Equiv.one_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.one_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L53-L53","name":"Equiv.zero_def","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.zero_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L48-L49","name":"Equiv.One","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.One","doc":"Transfer `One` across an `Equiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/TransferInstance.lean#L47-L47","name":"Equiv.Zero","kind":"def","docLink":"./Mathlib/Logic/Equiv/TransferInstance.html#Equiv.Zero","doc":"Transfer `Zero` across an `Equiv`"}]}