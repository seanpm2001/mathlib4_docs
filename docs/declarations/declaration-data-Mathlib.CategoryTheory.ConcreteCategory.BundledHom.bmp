{"name":"Mathlib.CategoryTheory.ConcreteCategory.BundledHom","instances":[{"typeNames":["CategoryTheory.Bundled"],"name":"CategoryTheory.BundledHom.category","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Bundled","CategoryTheory.BundledHom.category"],"name":"CategoryTheory.BundledHom.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["_builtin_typeu","CategoryTheory.BundledHom.MapHom","_builtin_typeu"],"name":"CategoryTheory.BundledHom.bundledHomOfParentProjection","className":"CategoryTheory.BundledHom"},{"typeNames":["CategoryTheory.Bundled","CategoryTheory.Bundled","CategoryTheory.BundledHom.category","CategoryTheory.BundledHom.MapHom","_builtin_typeu","CategoryTheory.BundledHom.bundledHomOfParentProjection","CategoryTheory.BundledHom.concreteCategory","CategoryTheory.BundledHom.MapHom","_builtin_typeu","CategoryTheory.BundledHom.bundledHomOfParentProjection","CategoryTheory.BundledHom.category","CategoryTheory.BundledHom.concreteCategory"],"name":"CategoryTheory.BundledHom.forget₂","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.Bundled","CategoryTheory.BundledHom.category","CategoryTheory.BundledHom.MapHom","_builtin_typeu","CategoryTheory.BundledHom.bundledHomOfParentProjection","CategoryTheory.Bundled","CategoryTheory.BundledHom.category","CategoryTheory.forget₂","CategoryTheory.Bundled","CategoryTheory.BundledHom.category","CategoryTheory.BundledHom.MapHom","_builtin_typeu","CategoryTheory.BundledHom.bundledHomOfParentProjection","CategoryTheory.BundledHom.concreteCategory","CategoryTheory.BundledHom.forget₂"],"name":"CategoryTheory.BundledHom.forget₂Full","className":"CategoryTheory.Full"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Basic","Mathlib.CategoryTheory.ConcreteCategory.Bundled"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L166-L167","name":"CategoryTheory.BundledHom.forget₂Full","kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget₂Full","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L160-L163","name":"CategoryTheory.BundledHom.forget₂","kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L155-L157","name":"CategoryTheory.BundledHom.bundledHomOfParentProjection","kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.bundledHomOfParentProjection","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L148-L148","name":"CategoryTheory.BundledHom.ParentProjection.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L148-L148","name":"CategoryTheory.BundledHom.ParentProjection","kind":"class","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection","doc":"We use the empty `ParentProjection` class to label functions like `CommMonoid.toMonoid`,\nwhich we would like to use to automatically construct `BundledHom` instances from.\n\nOnce we've set up `MonCat` as the category of bundled monoids,\nthis allows us to set up `CommMonCat` by defining an instance\n```instance : ParentProjection (CommMonoid.toMonoid) := ⟨⟩```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L128-L133","name":"CategoryTheory.BundledHom.map","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.map","doc":"Construct the `CategoryTheory.BundledHom` induced by a map between type classes.\nThis is useful for building categories such as `CommMonCat` from `MonCat`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L119-L120","name":"CategoryTheory.BundledHom.MapHom","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.MapHom","doc":"The `hom` corresponding to first forgetting along `F`, then taking the `hom` associated to `c`.\n\nFor typical usage, see the construction of `CommMonCat` from `MonCat`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L95-L102","name":"CategoryTheory.BundledHom.mkHasForget₂","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mkHasForget₂","doc":"A version of `HasForget₂.mk'` for categories defined using `@BundledHom`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L80-L87","name":"CategoryTheory.BundledHom.concreteCategory","kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.concreteCategory","doc":"A category given by `BundledHom` is a concrete category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L69-L76","name":"CategoryTheory.BundledHom.category","kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.category","doc":"Every `@BundledHom c _` defines a category with objects in `Bundled c`.\n\nThis instance generates the type-class problem `BundledHom ?m`.\nCurrently that is not a problem, as there are almost no instances of `BundledHom`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L46-L46","name":"CategoryTheory.BundledHom.comp_toFun","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp_toFun","doc":"compatibility with the composition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L44-L44","name":"CategoryTheory.BundledHom.id_toFun","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id_toFun","doc":"compatibility with identities "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L41-L41","name":"CategoryTheory.BundledHom.hom_ext","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.hom_ext","doc":"a bundled morphism is determined by the underlying map "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L39-L39","name":"CategoryTheory.BundledHom.comp","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp","doc":"composition of bundled morphisms "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L37-L37","name":"CategoryTheory.BundledHom.id","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id","doc":"the identity as a bundled morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L35-L35","name":"CategoryTheory.BundledHom.toFun","kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun","doc":"the underlying map of a bundled morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L33-L49","name":"CategoryTheory.BundledHom","kind":"class","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom","doc":"Class for bundled homs. Note that the arguments order follows that of lemmas for `MonoidHom`.\nThis way we can use `⟨@MonoidHom.toFun, @MonoidHom.id ...⟩` in an instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L1-L1","name":"CategoryTheory.BundledHom.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mk","doc":""}]}