{"name":"Mathlib.Init.Function","instances":[],"imports":["Init","Mathlib.Mathport.Rename"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L152-L153","name":"Function.RightInverse.id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.RightInverse.id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L149-L150","name":"Function.LeftInverse.id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.LeftInverse.id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L146-L147","name":"Function.uncurry_curry","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.uncurry_curry","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L143-L144","name":"Function.curry_uncurry","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.curry_uncurry","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L140-L141","name":"Function.uncurry","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.uncurry","doc":"Interpret a function with two arguments as a function on `α × β` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L136-L137","name":"Function.curry","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.curry","doc":"Interpret a function on `α × β` as a function with two arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L127-L127","name":"Function.bijective_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.bijective_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L125-L125","name":"Function.surjective_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.surjective_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L123-L123","name":"Function.injective_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.injective_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L116-L120","name":"Function.leftInverse_of_surjective_of_rightInverse","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.leftInverse_of_surjective_of_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L113-L114","name":"Function.HasRightInverse.surjective","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.HasRightInverse.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L110-L111","name":"Function.RightInverse.surjective","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.RightInverse.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L104-L107","name":"Function.rightInverse_of_injective_of_leftInverse","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.rightInverse_of_injective_of_leftInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L101-L102","name":"Function.HasLeftInverse.injective","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.HasLeftInverse.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L98-L99","name":"Function.LeftInverse.injective","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.LeftInverse.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L95-L95","name":"Function.HasRightInverse","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.HasRightInverse","doc":"`hasRightInverse f` means that `f` has an unspecified right inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L92-L92","name":"Function.RightInverse","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.RightInverse","doc":"`RightInverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L88-L88","name":"Function.HasLeftInverse","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.HasLeftInverse","doc":"`HasLeftInverse f` means that `f` has an unspecified left inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L85-L85","name":"Function.LeftInverse","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.LeftInverse","doc":"`LeftInverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L81-L82","name":"Function.Bijective.comp","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.Bijective.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L79-L79","name":"Function.Bijective","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.Bijective","doc":"A function is called bijective if it is both injective and surjective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L73-L76","name":"Function.Surjective.comp","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.Surjective.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L71-L71","name":"Function.Surjective","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.Surjective","doc":"A function `f : α → β` is called surjective if every `b : β` is equal to `f a`\nfor some `a : α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L65-L67","name":"Function.Injective.comp","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.Injective.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L63-L63","name":"Function.Injective","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.Injective","doc":"A function `f : α → β` is called injective if `f x = f y` implies `x = y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L60-L60","name":"Function.comp_const_right","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.comp_const_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L58-L58","name":"Function.comp.right_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.comp.right_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L56-L56","name":"Function.comp.left_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.comp.left_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L54-L54","name":"Function.comp.assoc","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.comp.assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L50-L50","name":"Function.right_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.right_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L48-L48","name":"Function.left_id","kind":"theorem","docLink":"./Mathlib/Init/Function.html#Function.left_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L45-L46","name":"Function.term_On_","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.term_On_","doc":"Given functions `f : β → β → φ` and `g : α → β`, produce a function `α → α → φ` that evaluates\n`g` on each argument, then applies `f` to the results. Can be used, e.g., to transfer a relation\nfrom `β` to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L42-L43","name":"Function.app","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L39-L40","name":"Function.swap","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L35-L37","name":"Function.combine","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.combine","doc":"Given functions `f : α → β → φ`, `g : α → β → δ` and a binary operator `op : φ → δ → ζ`,\nproduce a function `α → β → ζ` that applies `f` and `g` on each argument and then applies\n`op` to the results.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L26-L27","name":"Function.onFun","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.onFun","doc":"Given functions `f : β → β → φ` and `g : α → β`, produce a function `α → α → φ` that evaluates\n`g` on each argument, then applies `f` to the results. Can be used, e.g., to transfer a relation\nfrom `β` to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L20-L21","name":"Function.comp_left","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Init/Function.lean#L17-L18","name":"Function.comp_right","kind":"def","docLink":"./Mathlib/Init/Function.html#Function.comp_right","doc":""}]}