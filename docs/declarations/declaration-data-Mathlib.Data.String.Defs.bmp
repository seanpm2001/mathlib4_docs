{"name":"Mathlib.Data.String.Defs","instances":[],"imports":["Init","Std.Data.List.Basic","Mathlib.Mathport.Rename"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L89-L90","name":"String.head","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.head","doc":"Produce the head character from the string `s`, if `s` is not empty, otherwise `'A'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L82-L83","name":"String.getRest","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.getRest","doc":"`getRest s t` returns `some r` if `s = t ++ r`.\nIf `t` is not a prefix of `s`, it returns `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L77-L78","name":"String.count","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.count","doc":"Count the occurrences of a character in a string. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L73-L74","name":"String.stripSuffix","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.stripSuffix","doc":"`s.stripSuffix p` will remove `p` from the end of `s` if it occurs there,\nor otherwise return `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L68-L69","name":"String.stripPrefix","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.stripPrefix","doc":"`s.stripPrefix p` will remove `p` from the beginning of `s` if it occurs there,\nor otherwise return `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L63-L64","name":"String.isSuffixOf?","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.isSuffixOf?","doc":"`isSuffixOf? suff s` returns `some pre` if `s = pre ++ suff`.\nIf `suff` is not a suffix of `s`, it returns `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L57-L58","name":"String.isSuffixOf","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.isSuffixOf","doc":"Return true iff `p` is a suffix of `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L53-L54","name":"String.isPrefixOf?","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.isPrefixOf?","doc":"`isPrefixOf? pre s` returns `some post` if `s = pre ++ post`.\nIf `pre` is not a prefix of `s`, it returns `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L47-L48","name":"String.mapTokens","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.mapTokens","doc":"`String.mapTokens c f s` tokenizes `s : string` on `c : char`, maps `f` over each token, and\nthen reassembles the string by intercalating the separator token `c` over the mapped tokens. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L42-L43","name":"String.isSuffix","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.isSuffix","doc":"`s.isSuffix t` checks if the string `s` is a suffix of the string `t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L38-L39","name":"String.isPrefix","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.isPrefix","doc":"`s.isPrefix t` checks if the string `s` is a prefix of the string `t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L34-L35","name":"String.replicate","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.replicate","doc":"Construct the string consisting of `n` copies of the character `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/String/Defs.lean#L30-L31","name":"String.leftpad","kind":"def","docLink":"./Mathlib/Data/String/Defs.html#String.leftpad","doc":"Pad `s : String` with repeated occurrences of `c : Char` until it's of length `n`.\nIf `s` is initially larger than `n`, just return `s`. "}]}