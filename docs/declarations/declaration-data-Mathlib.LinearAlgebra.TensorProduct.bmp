{"name":"Mathlib.LinearAlgebra.TensorProduct","instances":[{"typeNames":["TensorProduct"],"name":"TensorProduct.addZeroClass","className":"AddZeroClass"},{"typeNames":["TensorProduct"],"name":"TensorProduct.addCommSemigroup","className":"AddCommSemigroup"},{"typeNames":["TensorProduct"],"name":"TensorProduct.instInhabitedTensorProduct","className":"Inhabited"},{"typeNames":[],"name":"TensorProduct.CompatibleSMul.isScalarTower","className":"TensorProduct.CompatibleSMul"},{"typeNames":["TensorProduct"],"name":"TensorProduct.leftHasSMul","className":"SMul"},{"typeNames":["TensorProduct"],"name":"TensorProduct.instSMulTensorProduct","className":"SMul"},{"typeNames":["TensorProduct"],"name":"TensorProduct.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["TensorProduct","AddCommMonoid.toAddMonoid","TensorProduct","TensorProduct.addCommMonoid"],"name":"TensorProduct.leftDistribMulAction","className":"DistribMulAction"},{"typeNames":["TensorProduct","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","CommSemiring.toSemiring","AddCommMonoid.toAddMonoid","TensorProduct","TensorProduct.addCommMonoid"],"name":"TensorProduct.instDistribMulActionTensorProductToMonoidToMonoidWithZeroToSemiringToAddMonoidAddCommMonoid","className":"DistribMulAction"},{"typeNames":["TensorProduct","TensorProduct.addCommMonoid"],"name":"TensorProduct.leftModule","className":"Module"},{"typeNames":["TensorProduct","CommSemiring.toSemiring","TensorProduct.addCommMonoid"],"name":"TensorProduct.instModuleTensorProductToSemiringAddCommMonoid","className":"Module"},{"typeNames":["TensorProduct","TensorProduct.leftHasSMul","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","Module.toDistribMulAction","TensorProduct.leftHasSMul","MulOpposite","MulOpposite.monoid","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","Module.toDistribMulAction","MulOpposite.semiring","SMulCommClass.op_right","SMulZeroClass.toSMul","AddMonoid.toZero","AddCommMonoid.toAddMonoid","SMulWithZero.toSMulZeroClass","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","CommSemiring.toSemiring","Module.toMulActionWithZero","SMulZeroClass.toSMul","SMulWithZero.toSMulZeroClass","MonoidWithZero.toZero","MulActionWithZero.toSMulWithZero","Module.toMulActionWithZero","DistribSMul.toSMulZeroClass","AddMonoid.toAddZeroClass","DistribMulAction.toDistribSMul"],"name":"TensorProduct.instIsCentralScalarTensorProductLeftHasSMulToMonoidToMonoidWithZeroToDistribMulActionMulOppositeMonoidSemiringOp_rightToSMulToZeroToAddMonoidToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroToSMulToSMulZeroClassToZeroToSMulWithZeroToMulActionWithZeroToSMulZeroClassToAddZeroClassToDistribSMul","className":"IsCentralScalar"},{"typeNames":["TensorProduct","TensorProduct.leftHasSMul","TensorProduct.leftHasSMul"],"name":"TensorProduct.isScalarTower_left","className":"IsScalarTower"},{"typeNames":["TensorProduct","TensorProduct.leftHasSMul","TensorProduct.leftHasSMul"],"name":"TensorProduct.isScalarTower_right","className":"IsScalarTower"},{"typeNames":["TensorProduct","TensorProduct.instSMulTensorProduct","TensorProduct.leftHasSMul"],"name":"TensorProduct.isScalarTower","className":"IsScalarTower"},{"typeNames":["TensorProduct","AddCommGroup.toAddCommMonoid","AddCommGroup.toAddCommMonoid"],"name":"TensorProduct.neg","className":"Neg"},{"typeNames":["TensorProduct","AddCommGroup.toAddCommMonoid","AddCommGroup.toAddCommMonoid"],"name":"TensorProduct.addCommGroup","className":"AddCommGroup"},{"typeNames":["Int","Int.instMonoidInt","AddCommGroup.toAddCommMonoid","AddCommGroup.toAddCommMonoid","Module.toDistribMulAction","Int","CommSemiring.toSemiring","CommRing.toCommSemiring","Int.instCommRingInt","AddCommGroup.toAddCommMonoid","AddCommGroup.intModule","Module.toDistribMulAction","Int","CommSemiring.toSemiring","CommRing.toCommSemiring","Int.instCommRingInt","AddCommGroup.toAddCommMonoid","AddCommGroup.intModule"],"name":"TensorProduct.CompatibleSMul.int","className":"TensorProduct.CompatibleSMul"},{"typeNames":["Units","DivInvMonoid.toMonoid","Units","Group.toDivInvMonoid","Units.instGroupUnits","AddCommGroup.toAddCommMonoid","AddCommGroup.toAddCommMonoid","Units.instDistribMulActionUnitsToMonoidToDivInvMonoidInstGroupUnits","AddCommMonoid.toAddMonoid","AddCommGroup.toAddCommMonoid","Units.instDistribMulActionUnitsToMonoidToDivInvMonoidInstGroupUnits","AddCommMonoid.toAddMonoid","AddCommGroup.toAddCommMonoid"],"name":"TensorProduct.CompatibleSMul.unit","className":"TensorProduct.CompatibleSMul"}],"imports":["Init","Mathlib.GroupTheory.Congruence","Mathlib.Algebra.Module.Submodule.Bilinear"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1301-L1303","name":"LinearMap.rTensor_neg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1295-L1297","name":"LinearMap.lTensor_neg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1289-L1291","name":"LinearMap.rTensor_sub","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1283-L1285","name":"LinearMap.lTensor_sub","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1273-L1275","name":"TensorProduct.CompatibleSMul.unit","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul.unit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1267-L1270","name":"TensorProduct.CompatibleSMul.int","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul.int","doc":"While the tensor product will automatically inherit a ℤ-module structure from\n`AddCommGroup.intModule`, that structure won't be compatible with lemmas like `tmul_smul` unless\nwe use a `ℤ-Module` instance provided by `TensorProduct.left_module`.\n\nWhen `R` is a `Ring` we get the required `TensorProduct.compatible_smul` instance through\n`IsScalarTower`, but when it is only a `Semiring` we need to build it from scratch.\nThe instance diamond in `compatible_smul` doesn't matter because it's in `Prop`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1255-L1256","name":"TensorProduct.sub_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.sub_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1251-L1252","name":"TensorProduct.tmul_sub","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1247-L1248","name":"TensorProduct.tmul_neg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1243-L1244","name":"TensorProduct.neg_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.neg_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1228-L1241","name":"TensorProduct.addCommGroup","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.addCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1214-L1225","name":"TensorProduct.add_left_neg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.add_left_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1196-L1212","name":"TensorProduct.neg","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1192-L1193","name":"TensorProduct.Neg.aux_of","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Neg.aux_of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1186-L1187","name":"TensorProduct.Neg.aux","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Neg.aux","doc":"Auxiliary function to defining negation multiplication on tensor product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1161-L1163","name":"LinearMap.lTensor_pow","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1155-L1157","name":"LinearMap.rTensor_pow","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1147-L1149","name":"LinearMap.lTensor_comp_map","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1141-L1143","name":"LinearMap.rTensor_comp_map","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1135-L1137","name":"LinearMap.map_comp_lTensor","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.map_comp_lTensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1129-L1131","name":"LinearMap.map_comp_rTensor","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.map_comp_rTensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1123-L1125","name":"LinearMap.rTensor_comp_lTensor","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_comp_lTensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1117-L1119","name":"LinearMap.lTensor_comp_rTensor","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_comp_rTensor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1110-L1111","name":"LinearMap.rTensor_id_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1105-L1106","name":"LinearMap.rTensor_id","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1100-L1101","name":"LinearMap.lTensor_id_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1095-L1096","name":"LinearMap.lTensor_id","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1088-L1089","name":"LinearMap.rTensor_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1084-L1085","name":"LinearMap.lTensor_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1080-L1081","name":"LinearMap.rTensor_comp_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1075-L1077","name":"LinearMap.rTensor_comp","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1071-L1072","name":"LinearMap.lTensor_comp_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1066-L1068","name":"LinearMap.lTensor_comp","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1062-L1063","name":"LinearMap.rTensor_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1057-L1058","name":"LinearMap.lTensor_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1052-L1053","name":"LinearMap.rTensor_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1047-L1048","name":"LinearMap.lTensor_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1042-L1043","name":"LinearMap.rTensor_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1037-L1038","name":"LinearMap.lTensor_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1032-L1033","name":"LinearMap.coe_rTensorHom","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.coe_rTensorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1027-L1028","name":"LinearMap.coe_lTensorHom","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.coe_lTensorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1015-L1023","name":"LinearMap.rTensorHom","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensorHom","doc":"`rTensorHom M` is the natural linear map that sends a linear map `f : N →ₗ P` to `M ⊗ f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L1003-L1011","name":"LinearMap.lTensorHom","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensorHom","doc":"`lTensorHom M` is the natural linear map that sends a linear map `f : N →ₗ P` to `M ⊗ f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L994-L995","name":"LinearMap.rTensor_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L989-L990","name":"LinearMap.lTensor_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L982-L983","name":"LinearMap.rTensor","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.rTensor","doc":"`rTensor f M : N₁ ⊗ M →ₗ N₂ ⊗ M` is the natural linear map induced by `f : N₁ →ₗ N₂`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L977-L978","name":"LinearMap.lTensor","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#LinearMap.lTensor","doc":"`lTensor M f : M ⊗ N →ₗ M ⊗ P` is the natural linear map induced by `f : N →ₗ P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L964-L966","name":"TensorProduct.tensorTensorTensorAssoc_symm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorAssoc_symm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L958-L960","name":"TensorProduct.tensorTensorTensorAssoc_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorAssoc_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L950-L952","name":"TensorProduct.tensorTensorTensorAssoc","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorAssoc","doc":"This special case is useful for describing the interplay between `dualTensorHomEquiv` and\ncomposition of linear maps.\n\nE.g., composition of linear maps gives a map `(M → N) ⊗ (N → P) → (M → P)`, and applying\n`dual_tensor_hom_equiv.symm` to the three hom-modules gives a map\n`(M.dual ⊗ N) ⊗ (N.dual ⊗ P) → (M.dual ⊗ P)`, which agrees with the application of `contractRight`\non `N ⊗ N.dual` after the suitable rebracketting.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L935-L937","name":"TensorProduct.tensorTensorTensorComm_symm","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorComm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L928-L930","name":"TensorProduct.tensorTensorTensorComm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorComm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L918-L922","name":"TensorProduct.tensorTensorTensorComm","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tensorTensorTensorComm","doc":"This special case is worth defining explicitly since it is useful for defining multiplication\non tensor products of modules carrying multiplications (e.g., associative rings, Lie rings, ...).\n\nE.g., suppose `M = P` and `N = Q` and that `M` and `N` carry bilinear multiplications:\n`M ⊗ M → M` and `N ⊗ N → N`. Using `map`, we can define `(M ⊗ M) ⊗ (N ⊗ N) → M ⊗ N` which, when\ncombined with this definition, yields a bilinear multiplication on `M ⊗ N`:\n`(M ⊗ N) ⊗ (M ⊗ N) → M ⊗ N`. In particular we could use this to define the multiplication in\nthe `TensorProduct.semiring` instance (currently defined \"by hand\" using `TensorProduct.mul`).\n\nSee also `mul_mul_mul_comm`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L901-L903","name":"TensorProduct.leftComm_symm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftComm_symm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L896-L897","name":"TensorProduct.leftComm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftComm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L886-L890","name":"TensorProduct.leftComm","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftComm","doc":"A tensor product analogue of `mul_left_comm`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L878-L880","name":"TensorProduct.congr_symm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.congr_symm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L872-L874","name":"TensorProduct.congr_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.congr_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L865-L868","name":"TensorProduct.congr","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.congr","doc":"If `M` and `P` are linearly equivalent and `N` and `Q` are linearly equivalent\nthen `M ⊗ N` and `P ⊗ Q` are linearly equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L856-L858","name":"TensorProduct.homTensorHomMap_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.homTensorHomMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L850-L852","name":"TensorProduct.rTensorHomToHomRTensor_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rTensorHomToHomRTensor_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L844-L846","name":"TensorProduct.lTensorHomToHomLTensor_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lTensorHomToHomLTensor_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L839-L840","name":"TensorProduct.mapBilinear_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.mapBilinear_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L832-L833","name":"TensorProduct.homTensorHomMap","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.homTensorHomMap","doc":"The linear map from `(M →ₗ P) ⊗ (N →ₗ Q)` to `(M ⊗ N →ₗ P ⊗ Q)` sending `f ⊗ₜ g` to\nthe `TensorProduct.map f g`, the tensor product of the two maps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L826-L827","name":"TensorProduct.rTensorHomToHomRTensor","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rTensorHomToHomRTensor","doc":"The canonical linear map from `(M →ₗ[R] P) ⊗[R] Q` to `(M →ₗ[R] P ⊗[R] Q)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L821-L822","name":"TensorProduct.lTensorHomToHomLTensor","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lTensorHomToHomLTensor","doc":"The canonical linear map from `P ⊗[R] (M →ₗ[R] Q)` to `(M →ₗ[R] P ⊗[R] Q)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L816-L817","name":"TensorProduct.mapBilinear","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.mapBilinear","doc":"The tensor product of a pair of linear maps between modules, bilinear in both maps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L808-L810","name":"TensorProduct.map_smul_right","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_smul_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L803-L805","name":"TensorProduct.map_smul_left","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_smul_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L797-L800","name":"TensorProduct.map_add_right","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_add_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L791-L794","name":"TensorProduct.map_add_left","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L784-L788","name":"TensorProduct.map_pow","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L778-L780","name":"TensorProduct.map_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L774-L775","name":"TensorProduct.map_one","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L768-L770","name":"TensorProduct.map_id","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L760-L762","name":"TensorProduct.lift_comp_map","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift_comp_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L755-L757","name":"TensorProduct.map_comp","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L745-L746","name":"TensorProduct.mapIncl","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.mapIncl","doc":"Given submodules `p ⊆ P` and `q ⊆ Q`, this is the natural map: `p ⊗ q → P ⊗ Q`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L729-L740","name":"TensorProduct.map_range_eq_span_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_range_eq_span_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L725-L726","name":"TensorProduct.map_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L720-L721","name":"TensorProduct.map","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map","doc":"The tensor product of a pair of linear maps between modules. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L714-L716","name":"TensorProduct.assoc_symm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.assoc_symm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L708-L710","name":"TensorProduct.assoc_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.assoc_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L693-L702","name":"TensorProduct.assoc","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.assoc","doc":"The associator for tensor product of R-modules, as a linear equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L682-L683","name":"TensorProduct.rid_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rid_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L677-L678","name":"TensorProduct.rid_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rid_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L670-L671","name":"TensorProduct.rid","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.rid","doc":"The base ring is a right identity for the tensor product of modules, up to linear equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L658-L659","name":"TensorProduct.comm_symm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.comm_symm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L653-L654","name":"TensorProduct.comm_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.comm_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L647-L649","name":"TensorProduct.comm","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.comm","doc":"The tensor product of modules is commutative, up to linear equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L637-L638","name":"TensorProduct.lid_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lid_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L632-L633","name":"TensorProduct.lid_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lid_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L624-L626","name":"TensorProduct.lid","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lid","doc":"The base ring is a left identity for the tensor product of modules, up to linear equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L608-L611","name":"TensorProduct.ext_fourfold'","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ext_fourfold'","doc":"Two linear maps (M ⊗ N) ⊗ (P ⊗ Q) → S which agree on all elements of the\nform (m ⊗ₜ n) ⊗ₜ (p ⊗ₜ q) are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L600-L603","name":"TensorProduct.ext_fourfold","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ext_fourfold","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L593-L596","name":"TensorProduct.ext_threefold","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ext_threefold","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L589-L590","name":"TensorProduct.curry_injective","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.curry_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L585-L586","name":"TensorProduct.curry_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.curry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L580-L581","name":"TensorProduct.curry","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.curry","doc":"Given a linear map `M ⊗ N → P`, compose it with the canonical bilinear map `M → N → M ⊗ N` to\nform a bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L574-L575","name":"TensorProduct.lcurry_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lcurry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L567-L568","name":"TensorProduct.lcurry","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lcurry","doc":"Given a linear map `M ⊗ N → P`, compose it with the canonical bilinear map `M → N → M ⊗ N` to\nform a bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L560-L562","name":"TensorProduct.lift.equiv_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.equiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L554-L556","name":"TensorProduct.lift.equiv_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.equiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L546-L550","name":"TensorProduct.lift.equiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.equiv","doc":"A linear equivalence constructing a linear map `M ⊗ N → P` given a bilinear map `M → N → P`\nwith the property that its composition with the canonical bilinear map `M → N → M ⊗ N` is\nthe given bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L537-L538","name":"TensorProduct.uncurry_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.uncurry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L530-L531","name":"TensorProduct.uncurry","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.uncurry","doc":"Linearly constructing a linear map `M ⊗ N → P` given a bilinear map `M → N → P`\nwith the property that its composition with the canonical bilinear map `M → N → M ⊗ N` is\nthe given bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L517-L518","name":"TensorProduct.ext","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ext","doc":"This used to be an `@[ext]` lemma, but it fails very slowly when the `ext` tactic tries to apply\nit in some cases, notably when one wants to show equality of two linear maps. The `@[ext]`\nattribute is now added locally where it is needed. Using this as the `@[ext]` lemma instead of\n`TensorProduct.ext'` allows `ext` to apply lemmas specific to `M →ₗ _` and `N →ₗ _`.\n\nSee note [partially-applied ext lemmas]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L507-L508","name":"TensorProduct.lift_mk_compr₂","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift_mk_compr₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L503-L504","name":"TensorProduct.lift_compr₂","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift_compr₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L499-L500","name":"TensorProduct.lift_mk","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L495-L496","name":"TensorProduct.lift.unique","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L489-L492","name":"TensorProduct.ext'","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ext'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L485-L486","name":"TensorProduct.lift.tmul'","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.tmul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L480-L481","name":"TensorProduct.lift.tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift.tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L473-L474","name":"TensorProduct.lift","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.lift","doc":"Constructing a linear map `M ⊗ N → P` given a bilinear map `M → N → P` with the property that\nits composition with the canonical bilinear map `M → N → M ⊗ N` is\nthe given bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L462-L465","name":"TensorProduct.liftAux.smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.liftAux.smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L455-L456","name":"TensorProduct.liftAux_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.liftAux_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L437-L452","name":"TensorProduct.liftAux","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.liftAux","doc":"Auxiliary function to constructing a linear map `M ⊗ N → P` given a bilinear map `M → N → P`\nwith the property that its composition with the canonical bilinear map `M → N → M ⊗ N` is\nthe given bilinear map `M → N → P`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L422-L424","name":"TensorProduct.map₂_mk_top_top_eq_top","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.map₂_mk_top_top_eq_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L410-L418","name":"TensorProduct.span_tmul_eq_top","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.span_tmul_eq_top","doc":"The simple (aka pure) elements span the tensor product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L397-L402","name":"TensorProduct.tmul_sum","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L389-L394","name":"TensorProduct.sum_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.sum_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L381-L382","name":"TensorProduct.tmul_ite","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L377-L378","name":"TensorProduct.ite_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.ite_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L373-L374","name":"TensorProduct.mk_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.mk_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L365-L367","name":"TensorProduct.mk","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.mk","doc":"The canonical bilinear map `M → N → M ⊗[R] N`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L357-L358","name":"TensorProduct.isScalarTower","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.isScalarTower","doc":"A short-cut instance for the common case, where the requirements for the `compatible_smul`\ninstances are sufficient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L346-L350","name":"TensorProduct.isScalarTower_right","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.isScalarTower_right","doc":"`IsScalarTower R'₂ R' N` implies `IsScalarTower R'₂ R' (M ⊗[R] N)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L335-L339","name":"TensorProduct.isScalarTower_left","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.isScalarTower_left","doc":"`IsScalarTower R'₂ R' M` implies `IsScalarTower R'₂ R' (M ⊗[R] N)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L322-L326","name":"TensorProduct.instIsCentralScalarTensorProductLeftHasSMulToMonoidToMonoidWithZeroToDistribMulActionMulOppositeMonoidSemiringOp_rightToSMulToZeroToAddMonoidToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroToSMulToSMulZeroClassToZeroToSMulWithZeroToMulActionWithZeroToSMulZeroClassToAddZeroClassToDistribSMul","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.instIsCentralScalarTensorProductLeftHasSMulToMonoidToMonoidWithZeroToDistribMulActionMulOppositeMonoidSemiringOp_rightToSMulToZeroToAddMonoidToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroToSMulToSMulZeroClassToZeroToSMulWithZeroToMulActionWithZeroToSMulZeroClassToAddZeroClassToDistribSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L319-L320","name":"TensorProduct.instModuleTensorProductToSemiringAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.instModuleTensorProductToSemiringAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L312-L316","name":"TensorProduct.leftModule","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L308-L309","name":"TensorProduct.smul_tmul_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.smul_tmul_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L303-L305","name":"TensorProduct.tmul_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L298-L299","name":"TensorProduct.smul_tmul'","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.smul_tmul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L295-L296","name":"TensorProduct.instDistribMulActionTensorProductToMonoidToMonoidWithZeroToSemiringToAddMonoidAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.instDistribMulActionTensorProductToMonoidToMonoidWithZeroToSemiringToAddMonoidAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L282-L292","name":"TensorProduct.leftDistribMulAction","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftDistribMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L274-L280","name":"TensorProduct.addCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.addCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L266-L271","name":"TensorProduct.add_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.add_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L259-L263","name":"TensorProduct.one_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.one_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L252-L256","name":"TensorProduct.zero_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.zero_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L248-L249","name":"TensorProduct.smul_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.smul_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L244-L245","name":"TensorProduct.smul_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.smul_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L241-L242","name":"TensorProduct.instSMulTensorProduct","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.instSMulTensorProduct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L222-L238","name":"TensorProduct.leftHasSMul","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.leftHasSMul","doc":"Given two modules over a commutative semiring `R`, if one of the factors carries a\n(distributive) action of a second type of scalars `R'`, which commutes with the action of `R`, then\nthe tensor product (over `R`) carries an action of `R'`.\n\nThis instance defines this `R'` action in the case that it is the left module which has the `R'`\naction. Two natural ways in which this situation arises are:\n * Extension of scalars\n * A tensor product of a group representation with a module not carrying an action\n\nNote that in the special case that `R = R'`, since `R` is commutative, we just get the usual scalar\naction on a tensor product of two modules. This special case is important enough that, for\nperformance reasons, we define it explicitly below. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L203-L205","name":"TensorProduct.SMul.aux_of","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.SMul.aux_of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L198-L199","name":"TensorProduct.SMul.aux","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.SMul.aux","doc":"Auxiliary function to defining scalar multiplication on tensor product. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L191-L193","name":"TensorProduct.smul_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.smul_tmul","doc":"`smul` can be moved from one side of the product to the other ."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L181-L187","name":"TensorProduct.CompatibleSMul.isScalarTower","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul.isScalarTower","doc":"Note that this provides the default `compatible_smul R R M N` instance through\n`IsScalarTower.left`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L174-L174","name":"TensorProduct.CompatibleSMul.smul_tmul","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul.smul_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L173-L173","name":"TensorProduct.CompatibleSMul.mk","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L173-L174","name":"TensorProduct.CompatibleSMul","kind":"class","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.CompatibleSMul","doc":"A typeclass for `SMul` structures which can be moved across a tensor product.\n\nThis typeclass is generated automatically from an `IsScalarTower` instance, but exists so that\nwe can also add an instance for `AddCommGroup.intModule`, allowing `z •` to be moved even if\n`R` does not support negation.\n\nNote that `Module R' (M ⊗[R] N)` is available even without this typeclass on `R'`; it's only\nneeded if `TensorProduct.smul_tmul`, `TensorProduct.smul_tmul'`, or `TensorProduct.tmul_smul` is\nused.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L155-L156","name":"TensorProduct.tmul_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L149-L150","name":"TensorProduct.tmul_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L142-L143","name":"TensorProduct.add_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.add_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L136-L137","name":"TensorProduct.zero_tmul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.zero_tmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L125-L130","name":"TensorProduct.induction_on","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L121-L121","name":"TensorProduct.«term_⊗ₜ[_]_»","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.«term_⊗ₜ[_]_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L119-L119","name":"TensorProduct.«term_⊗ₜ_»","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.«term_⊗ₜ_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L113-L114","name":"TensorProduct.tmul","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.tmul","doc":"The canonical function `M → N → M ⊗ N`. The localized notations are `m ⊗ₜ n` and `m ⊗ₜ[R] n`,\naccessed by `open scoped TensorProduct`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L106-L107","name":"TensorProduct.instInhabitedTensorProduct","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.instInhabitedTensorProduct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L100-L104","name":"TensorProduct.addCommSemigroup","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.addCommSemigroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L97-L98","name":"TensorProduct.addZeroClass","kind":"instance","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.addZeroClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L94-L95","name":"TensorProduct.addMonoid","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.addMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L86-L86","name":"TensorProduct.«term_⊗[_]_»","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.«term_⊗[_]_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L84-L84","name":"TensorProduct.«term_⊗_»","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.«term_⊗_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L77-L78","name":"TensorProduct","kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct","doc":"The tensor product of two modules `M` and `N` over the same commutative semiring `R`.\nThe localized notations are `M ⊗ N` and `M ⊗[R] N`, accessed by `open scoped TensorProduct`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L66-L66","name":"TensorProduct.Eqv.add_comm","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.add_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L65-L65","name":"TensorProduct.Eqv.of_smul","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.of_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L64-L64","name":"TensorProduct.Eqv.of_add_right","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.of_add_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L63-L63","name":"TensorProduct.Eqv.of_add_left","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.of_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L62-L62","name":"TensorProduct.Eqv.of_zero_right","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.of_zero_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L61-L61","name":"TensorProduct.Eqv.of_zero_left","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv.of_zero_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/TensorProduct.lean#L60-L66","name":"TensorProduct.Eqv","kind":"inductive","docLink":"./Mathlib/LinearAlgebra/TensorProduct.html#TensorProduct.Eqv","doc":"The relation on `FreeAddMonoid (M × N)` that generates a congruence whose quotient is\nthe tensor product. "}]}