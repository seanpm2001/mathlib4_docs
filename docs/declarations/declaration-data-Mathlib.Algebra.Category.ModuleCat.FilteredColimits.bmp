{"name":"Mathlib.Algebra.Category.ModuleCat.FilteredColimits","instances":[{"typeNames":["CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M"],"name":"ModuleCat.FilteredColimits.colimitHasSmul","className":"SMul"},{"typeNames":["CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","Ring.toSemiring"],"name":"ModuleCat.FilteredColimits.colimitMulAction","className":"MulAction"},{"typeNames":["CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M","MonoidWithZero.toZero","Semiring.toMonoidWithZero","Ring.toSemiring","NegZeroClass.toZero","CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","AddCommGroupCat.addCommGroupInstance"],"name":"ModuleCat.FilteredColimits.colimitSMulWithZero","className":"SMulWithZero"},{"typeNames":["CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M","Ring.toSemiring","AddCommGroup.toAddCommMonoid","CategoryTheory.Bundled.α","AddCommGroup","ModuleCat.FilteredColimits.M","AddCommGroupCat.addCommGroupInstance"],"name":"ModuleCat.FilteredColimits.colimitModule","className":"Module"},{"typeNames":["ModuleCat","ModuleCat.moduleCategory","AddCommGroupCat","instAddCommGroupCatLargeCategory","CategoryTheory.forget₂","ModuleCat","AddCommGroupCat","ModuleCat.moduleCategory","ModuleCat.moduleConcreteCategory","instAddCommGroupCatLargeCategory","AddCommGroupCat.concreteCategory","ModuleCat.hasForgetToAddCommGroup"],"name":"ModuleCat.FilteredColimits.forget₂AddCommGroupPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"},{"typeNames":["ModuleCat","ModuleCat.moduleCategory","_builtin_typeu","CategoryTheory.types","CategoryTheory.forget","ModuleCat","ModuleCat.moduleCategory","ModuleCat.moduleConcreteCategory"],"name":"ModuleCat.FilteredColimits.forgetPreservesFilteredColimits","className":"CategoryTheory.Limits.PreservesFilteredColimits"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.FilteredColimits","Mathlib.Algebra.Category.ModuleCat.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L218-L220","name":"ModuleCat.FilteredColimits.forgetPreservesFilteredColimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.forgetPreservesFilteredColimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L206-L214","name":"ModuleCat.FilteredColimits.forget₂AddCommGroupPreservesFilteredColimits","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.forget₂AddCommGroupPreservesFilteredColimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L193-L202","name":"ModuleCat.FilteredColimits.colimitCoconeIsColimit","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitCoconeIsColimit","doc":"The proposed colimit cocone is a colimit in `ModuleCat R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L181-L188","name":"ModuleCat.FilteredColimits.colimitDesc","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitDesc","doc":"Given a cocone `t` of `F`, the induced monoid linear map from the colimit to the cocone point.\nWe already know that this is a morphism between additive groups. The only thing left to see is that\nit is a linear map, i.e. preserves scalar multiplication.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L168-L173","name":"ModuleCat.FilteredColimits.colimitCocone","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitCocone","doc":"The cocone over the proposed colimit module. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L160-L163","name":"ModuleCat.FilteredColimits.coconeMorphism","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.coconeMorphism","doc":"The linear map from a given `R`-module in the diagram to the colimit module. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L154-L155","name":"ModuleCat.FilteredColimits.colimit","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimit","doc":"The bundled `R`-module giving the filtered colimit of a diagram. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L138-L148","name":"ModuleCat.FilteredColimits.colimitModule","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L121-L129","name":"ModuleCat.FilteredColimits.colimitSMulWithZero","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitSMulWithZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L111-L119","name":"ModuleCat.FilteredColimits.colimitMulAction","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L99-L100","name":"ModuleCat.FilteredColimits.colimit_smul_mk_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimit_smul_mk_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L88-L94","name":"ModuleCat.FilteredColimits.colimitHasSmul","kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitHasSmul","doc":"Scalar multiplication in the colimit. See also `colimitSMulAux`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L76-L83","name":"ModuleCat.FilteredColimits.colimitSMulAux_eq_of_rel","kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitSMulAux_eq_of_rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L71-L72","name":"ModuleCat.FilteredColimits.colimitSMulAux","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.colimitSMulAux","doc":"The \"unlifted\" version of scalar multiplication in the colimit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L64-L66","name":"ModuleCat.FilteredColimits.M.mk_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.M.mk_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L59-L60","name":"ModuleCat.FilteredColimits.M.mk","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.M.mk","doc":"The canonical projection into the colimit, as a quotient type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean#L52-L54","name":"ModuleCat.FilteredColimits.M","kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/FilteredColimits.html#ModuleCat.FilteredColimits.M","doc":"The colimit of `F ⋙ forget₂ (ModuleCat R) AddCommGroupCat` in the category `AddCommGroupCat`.\nIn the following, we will show that this has the structure of an `R`-module.\n"}]}