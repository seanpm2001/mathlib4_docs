{"name":"Mathlib.Computability.TuringMachine","instances":[{"typeNames":["Turing.ListBlank"],"name":"Turing.ListBlank.inhabited","className":"Inhabited"},{"typeNames":["Turing.ListBlank"],"name":"Turing.ListBlank.hasEmptyc","className":"EmptyCollection"},{"typeNames":["Turing.PointedMap"],"name":"Turing.instInhabitedPointedMap","className":"Inhabited"},{"typeNames":["Turing.PointedMap","Turing.PointedMap"],"name":"Turing.instCoeFunPointedMapForAll","className":"CoeFun"},{"typeNames":["Turing.Tape"],"name":"Turing.Tape.inhabited","className":"Inhabited"},{"typeNames":["Eq","Turing.Dir"],"name":"Turing.instDecidableEqDir","className":"Decidable"},{"typeNames":["Turing.Dir"],"name":"Turing.instInhabitedDir","className":"Inhabited"},{"typeNames":["Turing.TM0.Stmt"],"name":"Turing.TM0.Stmt.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM0.Machine"],"name":"Turing.TM0.Machine.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM0.Cfg"],"name":"Turing.TM0.Cfg.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM1.Stmt"],"name":"Turing.TM1.Stmt.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM1.Cfg"],"name":"Turing.TM1.Cfg.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM1to0.Λ'"],"name":"Turing.TM1to0.instInhabitedΛ'","className":"Inhabited"},{"typeNames":["Turing.TM1to1.Λ'"],"name":"Turing.TM1to1.instInhabitedΛ'","className":"Inhabited"},{"typeNames":["Turing.TM0to1.Λ'"],"name":"Turing.TM0to1.instInhabitedΛ'","className":"Inhabited"},{"typeNames":["Turing.TM2.Stmt"],"name":"Turing.TM2.Stmt.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM2.Cfg"],"name":"Turing.TM2.Cfg.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM2to1.Γ'"],"name":"Turing.TM2to1.Γ'.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM2to1.Γ'"],"name":"Turing.TM2to1.Γ'.fintype","className":"Fintype"},{"typeNames":["Turing.TM2to1.StAct"],"name":"Turing.TM2to1.StAct.inhabited","className":"Inhabited"},{"typeNames":["Turing.TM2to1.Λ'"],"name":"Turing.TM2to1.Λ'.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Data.Fintype.Option","Mathlib.Data.Fintype.Prod","Mathlib.Data.Fintype.Pi","Mathlib.Data.Vector.Basic","Mathlib.Data.PFun","Mathlib.Logic.Function.Iterate","Mathlib.Order.Basic","Mathlib.Tactic.ApplyFun"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2774-L2819","name":"Turing.TM2to1.tr_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2770-L2771","name":"Turing.TM2to1.trSupp","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trSupp","doc":"The support of a set of TM2 states in the TM2 emulator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2757-L2766","name":"Turing.TM2to1.tr_eval","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2752-L2754","name":"Turing.TM2to1.tr_eval_dom","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_eval_dom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2728-L2749","name":"Turing.TM2to1.trCfg_init","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trCfg_init","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2706-L2725","name":"Turing.TM2to1.tr_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2683-L2701","name":"Turing.TM2to1.tr_respects_aux","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_respects_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2672-L2680","name":"Turing.TM2to1.tr_respects_aux₃","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_respects_aux₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2660-L2669","name":"Turing.TM2to1.tr_respects_aux₁","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_respects_aux₁","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2655-L2657","name":"Turing.TM2to1.TrCfg.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.TrCfg.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2654-L2657","name":"Turing.TM2to1.TrCfg","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.TrCfg","doc":"The relation between TM2 configurations and TM1 configurations of the TM2 emulator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2642-L2647","name":"Turing.TM2to1.tr","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr","doc":"The TM2 emulator machine states written as a TM1 program.\nThis handles the `go` and `ret` states, which shuttle to and from a stack top. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2552-L2635","name":"Turing.TM2to1.tr_respects_aux₂","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.tr_respects_aux₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2547-L2549","name":"Turing.TM2to1.trStmts₁_run","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trStmts₁_run","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2538-L2544","name":"Turing.TM2to1.trStmts₁","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trStmts₁","doc":"The set of machine states accessible from an initial TM2 statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2530-L2532","name":"Turing.TM2to1.trNormal_run","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trNormal_run","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2520-L2527","name":"Turing.TM2to1.trNormal","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trNormal","doc":"The translation of TM2 statements to TM1 statements. regular actions have direct equivalents,\nbut stack actions are deferred by going to the corresponding `go` state, so that we can find the\nappropriate stack top. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2510-L2514","name":"Turing.TM2to1.step_run","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.step_run","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2505-L2507","name":"Turing.TM2to1.trInit","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trInit","doc":"The initial state for the TM2 emulator, given an initial TM2 state. All stacks start out empty\nexcept for the input stack, and the stack bottom mark is set at the head. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2494-L2500","name":"Turing.TM2to1.trStAct","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.trStAct","doc":"The program corresponding to state transitions at the end of a stack. Here we start out just\nafter the top of the stack, and should end just after the new top of the stack. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2482-L2483","name":"Turing.TM2to1.Λ'.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Λ'.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2475-L2475","name":"Turing.TM2to1.Λ'.ret","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Λ'.ret","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2474-L2474","name":"Turing.TM2to1.Λ'.go","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Λ'.go","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2473-L2473","name":"Turing.TM2to1.Λ'.normal","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Λ'.normal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2472-L2475","name":"Turing.TM2to1.Λ'","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Λ'","doc":"The machine states of the TM2 emulator. We can either be in a normal state when waiting for the\nnext TM2 action, or we can be in the \"go\" and \"return\" states to go to the top of the stack and\nreturn to the bottom, respectively. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2462-L2464","name":"Turing.TM2to1.supports_run","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.supports_run","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2449-L2459","name":"Turing.TM2to1.stmtStRec","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.stmtStRec","doc":"We have partitioned the TM2 statements into \"stack actions\", which require going to the end\nof the stack, and all other actions, which do not. This is a modified recursor which lumps the\nstack actions into one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2439-L2442","name":"Turing.TM2to1.stWrite","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.stWrite","doc":"The effect of a stack action on the stack. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2432-L2435","name":"Turing.TM2to1.stVar","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.stVar","doc":"The effect of a stack action on the local variables, given the value of the stack. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2425-L2428","name":"Turing.TM2to1.stRun","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.stRun","doc":"The TM2 statement corresponding to a stack action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2415-L2416","name":"Turing.TM2to1.StAct.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.StAct.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2410-L2410","name":"Turing.TM2to1.StAct.pop","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.StAct.pop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2409-L2409","name":"Turing.TM2to1.StAct.peek","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.StAct.peek","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2408-L2408","name":"Turing.TM2to1.StAct.push","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.StAct.push","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2407-L2410","name":"Turing.TM2to1.StAct","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.StAct","doc":"A stack action is a command that interacts with the top of a stack. Our default position\nis at the bottom of all the stacks, so we have to hold on to this action while going to the end\nto modify the stack. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2400-L2401","name":"Turing.TM2to1.addBottom_head_fst","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom_head_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2395-L2397","name":"Turing.TM2to1.addBottom_nth_succ_fst","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom_nth_succ_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2390-L2392","name":"Turing.TM2to1.addBottom_nth_snd","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom_nth_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2382-L2387","name":"Turing.TM2to1.addBottom_modifyNth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom_modifyNth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2374-L2379","name":"Turing.TM2to1.addBottom_map","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2370-L2371","name":"Turing.TM2to1.addBottom","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.addBottom","doc":"The bottom marker is fixed throughout the calculation, so we use the `addBottom` function\nto express the program state in terms of a tape with only the stacks themselves. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2364-L2365","name":"Turing.TM2to1.Γ'.fintype","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Γ'.fintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2360-L2361","name":"Turing.TM2to1.Γ'.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Γ'.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2354-L2355","name":"Turing.TM2to1.Γ'","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.Γ'","doc":"The alphabet of the TM2 simulator on TM1 is a marker for the stack bottom,\nplus a vector of stack elements for each stack, or none if the stack does not extend this far. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2329-L2334","name":"Turing.TM2to1.stk_nth_val","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2to1.stk_nth_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2276-L2277","name":"Turing.TM2.eval","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.eval","doc":"Evaluates a TM2 program to completion, with the output on the same stack as the input. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2271-L2272","name":"Turing.TM2.init","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.init","doc":"The initial state of the TM2 model. The input is provided on a designated stack. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2253-L2265","name":"Turing.TM2.step_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.step_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2246-L2250","name":"Turing.TM2.stmts_supportsStmt","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts_supportsStmt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2242-L2243","name":"Turing.TM2.Supports","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Supports","doc":"Given a TM2 machine `M` and a set `S` of states, `Supports M S` means that all states in\n`S` jump only to other states in `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2231-L2235","name":"Turing.TM2.stmts_trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2227-L2228","name":"Turing.TM2.stmts","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts","doc":"The set of statements accessible from initial set `S` of labels. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2215-L2223","name":"Turing.TM2.stmts₁_supportsStmt_mono","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts₁_supportsStmt_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2196-L2212","name":"Turing.TM2.stmts₁_trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts₁_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2192-L2193","name":"Turing.TM2.stmts₁_self","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts₁_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2182-L2189","name":"Turing.TM2.stmts₁","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stmts₁","doc":"The set of subtree statements in a statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2169-L2176","name":"Turing.TM2.SupportsStmt","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.SupportsStmt","doc":"Given a set `S` of states, `SupportsStmt S q` means that `q` only jumps to states in `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2164-L2165","name":"Turing.TM2.Reaches","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Reaches","doc":"The (reflexive) reachability relation for the TM2 model. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2158-L2160","name":"Turing.TM2.step","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.step","doc":"The step function for the TM2 model. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2146-L2153","name":"Turing.TM2.stepAux","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.stepAux","doc":"The step function for the TM2 model. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2138-L2139","name":"Turing.TM2.Cfg.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2133-L2133","name":"Turing.TM2.Cfg.stk","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg.stk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2132-L2132","name":"Turing.TM2.Cfg.var","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg.var","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2131-L2131","name":"Turing.TM2.Cfg.l","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg.l","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2130-L2133","name":"Turing.TM2.Cfg","kind":"structure","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg","doc":"A configuration in the TM2 model is a label (or `none` for the halt state), the state of\nlocal variables, and the stacks. (Note that the stacks are not `ListBlank`s, they have a definite\nsize.) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2123-L2124","name":"Turing.TM2.Stmt.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2116-L2116","name":"Turing.TM2.Stmt.halt","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.halt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2115-L2115","name":"Turing.TM2.Stmt.goto","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.goto","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2114-L2114","name":"Turing.TM2.Stmt.branch","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.branch","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2113-L2113","name":"Turing.TM2.Stmt.load","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.load","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2112-L2112","name":"Turing.TM2.Stmt.pop","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.pop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2111-L2111","name":"Turing.TM2.Stmt.peek","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.peek","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2110-L2110","name":"Turing.TM2.Stmt.push","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt.push","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2109-L2116","name":"Turing.TM2.Stmt","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Stmt","doc":"The TM2 model removes the tape entirely from the TM1 model,\nreplacing it with an arbitrary (finite) collection of stacks.\nThe operation `push` puts an element on one of the stacks,\nand `pop` removes an element from a stack (and modifying the\ninternal state based on the result). `peek` modifies the\ninternal state but does not remove an element. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2028-L2049","name":"Turing.TM0to1.tr_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.tr_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2024-L2025","name":"Turing.TM0to1.trCfg","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.trCfg","doc":"The configuration translation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L2013-L2020","name":"Turing.TM0to1.tr","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.tr","doc":"The program. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1999-L2000","name":"Turing.TM0to1.instInhabitedΛ'","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.instInhabitedΛ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1994-L1994","name":"Turing.TM0to1.Λ'.act","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.Λ'.act","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1993-L1993","name":"Turing.TM0to1.Λ'.normal","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.Λ'.normal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1992-L1994","name":"Turing.TM0to1.Λ'","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0to1.Λ'","doc":"The machine states for a TM1 emulating a TM0 machine. States of the TM0 machine are embedded\nas `normal q` states, but the actual operation is split into two parts, a jump to `act s q`\nfollowed by the action and a jump to the next `normal` state. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1915-L1956","name":"Turing.TM1to1.tr_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.tr_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1911-L1912","name":"Turing.TM1to1.trSupp","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trSupp","doc":"The set of accessible machine states, assuming that the input machine is supported on `S`,\nare the normal states embedded from `S`, plus all write states accessible from these states. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1900-L1906","name":"Turing.TM1to1.writes","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.writes","doc":"The set of accessible `Λ'.write` machine states. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1853-L1892","name":"Turing.TM1to1.tr_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.tr_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1822-L1850","name":"Turing.TM1to1.stepAux_read","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.stepAux_read","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1801-L1817","name":"Turing.TM1to1.stepAux_write","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.stepAux_write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1789-L1798","name":"Turing.TM1to1.trTape'_move_right","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trTape'_move_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1771-L1786","name":"Turing.TM1to1.trTape'_move_left","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trTape'_move_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1765-L1766","name":"Turing.TM1to1.trCfg","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trCfg","doc":"The machine configuration translation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1759-L1761","name":"Turing.TM1to1.tr","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.tr","doc":"The top level program. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1750-L1751","name":"Turing.TM1to1.trTape_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trTape_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1746-L1747","name":"Turing.TM1to1.trTape","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trTape","doc":"The low level tape corresponding to the given tape over alphabet `Γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1738-L1742","name":"Turing.TM1to1.trTape'","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trTape'","doc":"The low level tape corresponding to the given tape over alphabet `Γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1721-L1728","name":"Turing.TM1to1.supportsStmt_read","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.supportsStmt_read","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1716-L1718","name":"Turing.TM1to1.supportsStmt_write","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.supportsStmt_write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1710-L1713","name":"Turing.TM1to1.supportsStmt_move","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.supportsStmt_move","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1700-L1707","name":"Turing.TM1to1.stepAux_move","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.stepAux_move","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1690-L1697","name":"Turing.TM1to1.trNormal","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.trNormal","doc":"Translate a normal instruction. For the `write` command, we use a `goto` indirection so that\nwe can access the current value of the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1683-L1685","name":"Turing.TM1to1.write","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.write","doc":"Write a list of bools on the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1678-L1679","name":"Turing.TM1to1.read","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.read","doc":"To read a symbol from the tape, we use `readAux` to traverse the symbol,\nthen return to the original position with `n` moves to the left. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1670-L1671","name":"Turing.TM1to1.move","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.move","doc":"A move left or right corresponds to `n` moves across the super-cell. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1660-L1664","name":"Turing.TM1to1.readAux","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.readAux","doc":"Read a vector of length `n` from the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1652-L1653","name":"Turing.TM1to1.instInhabitedΛ'","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.instInhabitedΛ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1647-L1647","name":"Turing.TM1to1.Λ'.write","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.Λ'.write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1646-L1646","name":"Turing.TM1to1.Λ'.normal","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.Λ'.normal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1645-L1647","name":"Turing.TM1to1.Λ'","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.Λ'","doc":"The configuration state of the TM. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1622-L1633","name":"Turing.TM1to1.exists_enc_dec","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to1.exists_enc_dec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1538-L1580","name":"Turing.TM1to0.tr_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.tr_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1530-L1531","name":"Turing.TM1to0.trStmts","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.trStmts","doc":"Given a finite set of accessible `Λ` machine states, there is a finite set of accessible\nmachine states in the target (even though the type `Λ'` is infinite). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1519-L1523","name":"Turing.TM1to0.tr_eval","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.tr_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1502-L1516","name":"Turing.TM1to0.tr_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.tr_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1498-L1499","name":"Turing.TM1to0.trCfg","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.trCfg","doc":"Translate configurations from TM1 to TM0. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1492-L1494","name":"Turing.TM1to0.tr","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.tr","doc":"The translated TM0 machine (given the TM1 machine input). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1480-L1486","name":"Turing.TM1to0.trAux","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.trAux","doc":"The core TM1 → TM0 translation function. Here `s` is the current value on the tape, and the\n`Stmt₁` is the TM1 statement to translate, with local state `v : σ`. We evaluate all regular\ninstructions recursively until we reach either a `move` or `write` command, or a `goto`; in the\nlatter case we emit a dummy `write s` step and transition to the new target location. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1471-L1472","name":"Turing.TM1to0.instInhabitedΛ'","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.instInhabitedΛ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1465-L1466","name":"Turing.TM1to0.Λ'","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1to0.Λ'","doc":"The base machine state space is a pair of an `Option Stmt₁` representing the current program\nto be executed, or `none` for the halt state, and a `σ` which is the local state (stored in the TM,\nnot the tape). Because there are an infinite number of programs, this state space is infinite, but\nfor a finitely supported TM1 machine and a finite type `σ`, only finitely many of these states are\nreachable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1409-L1410","name":"Turing.TM1.eval","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.eval","doc":"Evaluate a TM to completion, resulting in an output list on the tape (with an indeterminate\nnumber of blanks on the end). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1403-L1404","name":"Turing.TM1.init","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.init","doc":"The initial state, given a finite input that is placed on the tape starting at the TM head and\ngoing to the right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1384-L1396","name":"Turing.TM1.step_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.step_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1377-L1381","name":"Turing.TM1.stmts_supportsStmt","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts_supportsStmt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1373-L1374","name":"Turing.TM1.Supports","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Supports","doc":"A set `S` of labels supports machine `M` if all the `goto`\nstatements in the functions in `S` refer only to other functions\nin `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1361-L1365","name":"Turing.TM1.stmts_trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1357-L1358","name":"Turing.TM1.stmts","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts","doc":"The set of all statements in a turing machine, plus one extra value `none` representing the\nhalt state. This is used in the TM1 to TM0 reduction. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1344-L1352","name":"Turing.TM1.stmts₁_supportsStmt_mono","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts₁_supportsStmt_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1325-L1341","name":"Turing.TM1.stmts₁_trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts₁_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1321-L1322","name":"Turing.TM1.stmts₁_self","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts₁_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1313-L1318","name":"Turing.TM1.stmts₁","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stmts₁","doc":"The subterm closure of a statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1301-L1307","name":"Turing.TM1.SupportsStmt","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.SupportsStmt","doc":"A set `S` of labels supports the statement `q` if all the `goto`\nstatements in `q` refer only to other functions in `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1294-L1296","name":"Turing.TM1.step","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.step","doc":"The state transition function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1284-L1290","name":"Turing.TM1.stepAux","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.stepAux","doc":"The semantics of TM1 evaluation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1277-L1278","name":"Turing.TM1.Cfg.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1272-L1272","name":"Turing.TM1.Cfg.Tape","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg.Tape","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1271-L1271","name":"Turing.TM1.Cfg.var","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg.var","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1270-L1270","name":"Turing.TM1.Cfg.l","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg.l","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1269-L1272","name":"Turing.TM1.Cfg","kind":"structure","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg","doc":"The configuration of a TM1 machine is given by the currently\nevaluating statement, the variable store value, and the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1263-L1264","name":"Turing.TM1.Stmt.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1256-L1256","name":"Turing.TM1.Stmt.halt","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.halt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1255-L1255","name":"Turing.TM1.Stmt.goto","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.goto","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1254-L1254","name":"Turing.TM1.Stmt.branch","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.branch","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1253-L1253","name":"Turing.TM1.Stmt.load","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.load","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1252-L1252","name":"Turing.TM1.Stmt.write","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1251-L1251","name":"Turing.TM1.Stmt.move","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt.move","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1250-L1256","name":"Turing.TM1.Stmt","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Stmt","doc":"The TM1 model is a simplification and extension of TM0\n(Post-Turing model) in the direction of Wang B-machines. The machine's\ninternal state is extended with a (finite) store `σ` of variables\nthat may be accessed and updated at any time.\nA machine is given by a `Λ` indexed set of procedures or functions.\nEach function has a body which is a `Stmt`, which can either be a\n`move` or `write` command, a `branch` (if statement based on the\ncurrent tape value), a `load` (set the variable value),\na `goto` (call another function), or `halt`. Note that here\nmost statements do not have labels; `goto` commands can only\ngo to a new function. All commands have access to the variable value\nand current tape value. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1176-L1185","name":"Turing.TM0.Machine.map_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Machine.map_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1172-L1173","name":"Turing.TM0.map_init","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.map_init","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1158-L1169","name":"Turing.TM0.Machine.map_step","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Machine.map_step","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1154-L1155","name":"Turing.TM0.Machine.map","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Machine.map","doc":"Because the state transition function uses the alphabet and machine states in both the input\nand output, to map a machine from one alphabet and machine state space to another we need functions\nin both directions, essentially an `Equiv` without the laws. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1145-L1146","name":"Turing.TM0.Cfg.map","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg.map","doc":"Map a configuration across a function, given `f : Γ → Γ'` a map of the alphabets and\n`g : Λ → Λ'` a map of the machine states. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1138-L1140","name":"Turing.TM0.Stmt.map","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Stmt.map","doc":"Map a TM statement across a function. This does nothing to move statements and maps the write\nvalues. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1120-L1121","name":"Turing.TM0.univ_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.univ_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1113-L1117","name":"Turing.TM0.step_supports","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.step_supports","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1109-L1110","name":"Turing.TM0.Supports","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Supports","doc":"The raw definition of a Turing machine does not require that\n`Γ` and `Λ` are finite, and in practice we will be interested\nin the infinite `Λ` case. We recover instead a notion of\n\"effectively finite\" Turing machines, which only make use of a\nfinite subset of their states. We say that a set `S ⊆ Λ`\nsupports a Turing machine `M` if `S` is closed under the\ntransition function and contains the initial state. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1098-L1099","name":"Turing.TM0.eval","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.eval","doc":"Evaluate a Turing machine on initial input to a final state,\nif it terminates. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1092-L1093","name":"Turing.TM0.init","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.init","doc":"The initial configuration. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1087-L1088","name":"Turing.TM0.Reaches","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Reaches","doc":"The statement `Reaches M s₁ s₂` means that `s₂` is obtained\nstarting from `s₁` after a finite number of steps from `s₂`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1079-L1082","name":"Turing.TM0.step","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.step","doc":"Execution semantics of the Turing machine. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1072-L1073","name":"Turing.TM0.Cfg.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1067-L1067","name":"Turing.TM0.Cfg.Tape","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg.Tape","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1066-L1066","name":"Turing.TM0.Cfg.q","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg.q","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1065-L1067","name":"Turing.TM0.Cfg","kind":"structure","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg","doc":"The configuration state of a Turing machine during operation\nconsists of a label (machine state), and a tape, represented in\nthe form `(a, L, R)` meaning the tape looks like `L.rev ++ [a] ++ R`\nwith the machine currently reading the `a`. The lists are\nautomatically extended with blanks as the machine moves around. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1056-L1057","name":"Turing.TM0.Machine.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Machine.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1050-L1051","name":"Turing.TM0.Machine","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Machine","doc":"A Post-Turing machine with symbol type `Γ` and label type `Λ`\nis a function which, given the current state `q : Λ` and\nthe tape head `a : Γ`, either halts (returns `none`) or returns\na new state `q' : Λ` and a `Stmt` describing what to do,\neither a move left or right, or a write command.\n\nBoth `Λ` and `Γ` are required to be inhabited; the default value\nfor `Γ` is the \"blank\" tape value, and the default value of `Λ` is\nthe initial state. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1036-L1037","name":"Turing.TM0.Stmt.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Stmt.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1031-L1031","name":"Turing.TM0.Stmt.write","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Stmt.write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1030-L1030","name":"Turing.TM0.Stmt.move","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Stmt.move","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1029-L1031","name":"Turing.TM0.Stmt","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Stmt","doc":"A Turing machine \"statement\" is just a command to either move\nleft or right, or write a symbol on the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L977-L986","name":"Turing.tr_eval'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_eval'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L971-L974","name":"Turing.fun_respects","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.fun_respects","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L965-L968","name":"Turing.frespects_eq","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.frespects_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L960-L962","name":"Turing.FRespects","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.FRespects","doc":"A simpler version of `Respects` when the state transition relation `tr` is a function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L949-L956","name":"Turing.tr_eval_dom","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_eval_dom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L934-L946","name":"Turing.tr_eval_rev","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_eval_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L926-L931","name":"Turing.tr_eval","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L906-L923","name":"Turing.tr_reaches_rev","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_reaches_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L898-L903","name":"Turing.tr_reaches","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_reaches","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L886-L895","name":"Turing.tr_reaches₁","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.tr_reaches₁","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L880-L883","name":"Turing.Respects","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Respects","doc":"Given a relation `tr : σ₁ → σ₂ → Prop` between state spaces, and state transition functions\n`f₁ : σ₁ → Option σ₁` and `f₂ : σ₂ → Option σ₂`, `Respects f₁ f₂ tr` means that if `tr a₁ a₂` holds\ninitially and `f₁` takes a step to `a₂` then `f₂` will take one or more steps before reaching a\nstate `b₂` satisfying `tr a₂ b₂`, and if `f₁ a₁` terminates then `f₂ a₂` also terminates.\nSuch a relation `tr` is also known as a refinement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L866-L872","name":"Turing.reaches_eval","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.reaches_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L861-L863","name":"Turing.eval_maximal","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.eval_maximal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L854-L858","name":"Turing.eval_maximal₁","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.eval_maximal₁","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L833-L851","name":"Turing.mem_eval","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.mem_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L827-L830","name":"Turing.evalInduction","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.evalInduction","doc":"(co-)Induction principle for `eval`. If a property `C` holds of any point `a` evaluating to `b`\nwhich is either terminal (meaning `a = b`) or where the next point also satisfies `C`, then it\nholds of any point where `eval f a` evaluates to `b`. This formalizes the notion that if\n`eval f a` evaluates to `b` then it reaches terminal state `b` in finitely many steps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L817-L819","name":"Turing.Reaches₀.tail'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.tail'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L813-L814","name":"Turing.Reaches.to₀","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches.to₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L809-L810","name":"Turing.Reaches₁.to₀","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₁.to₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L805-L806","name":"Turing.reaches₀_eq","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.reaches₀_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L800-L802","name":"Turing.Reaches₀.tail","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L795-L797","name":"Turing.Reaches₀.head","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L791-L792","name":"Turing.Reaches₀.single","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L787-L788","name":"Turing.Reaches₀.refl","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L781-L783","name":"Turing.Reaches₀.trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L777-L778","name":"Turing.Reaches₀","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₀","doc":"A variation on `Reaches`. `Reaches₀ f a b` holds if whenever `Reaches₁ f b c` then\n`Reaches₁ f a c`. This is a weaker property than `Reaches` and is useful for replacing states with\nequivalent states without taking a step. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L768-L771","name":"Turing.reaches₁_fwd","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.reaches₁_fwd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L763-L765","name":"Turing.reaches_total","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.reaches_total","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L758-L760","name":"Turing.reaches₁_eq","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.reaches₁_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L754-L755","name":"Turing.Reaches₁","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches₁","doc":"The transitive closure of a state transition function. `Reaches₁ f a b` means there is a\nnonempty finite sequence of steps `f a = some a₁`, `f a₁ = some a₂`, ... such that `aₙ = b`.\nThis relation does not permit zero steps of the state transition function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L747-L748","name":"Turing.Reaches","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Reaches","doc":"The reflexive transitive closure of a state transition function. `Reaches f a b` means\nthere is a finite sequence of steps `f a = some a₁`, `f a₁ = some a₂`, ... such that `aₙ = b`.\nThis relation permits zero steps of the state transition function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L740-L741","name":"Turing.eval","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.eval","doc":"Run a state transition function `σ → Option σ` \"to completion\". The return value is the last\nstate returned before a `none` result. If the state transition function always returns `some`,\nthen the computation diverges, returning `Part.none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L732-L734","name":"Turing.Tape.map_mk₁","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_mk₁","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L727-L729","name":"Turing.Tape.map_mk₂","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_mk₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L721-L724","name":"Turing.Tape.map_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L714-L718","name":"Turing.Tape.map_move","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_move","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L704-L711","name":"Turing.Tape.write_move_right_n","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.write_move_right_n","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L696-L698","name":"Turing.Tape.map_write","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_write","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L690-L692","name":"Turing.Tape.map_fst","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L685-L686","name":"Turing.Tape.map","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.map","doc":"Apply a pointed map to a tape to change the alphabet. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L678-L681","name":"Turing.Tape.write_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.write_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L670-L674","name":"Turing.Tape.write_nth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.write_nth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L665-L666","name":"Turing.Tape.write_self","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.write_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L660-L661","name":"Turing.Tape.write","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.write","doc":"Replace the current value of the head on the tape. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L652-L656","name":"Turing.Tape.move_right_n_head","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_right_n_head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L645-L648","name":"Turing.Tape.move_right_nth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_right_nth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L633-L641","name":"Turing.Tape.move_left_nth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_left_nth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L627-L629","name":"Turing.Tape.mk'_nth_nat","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_nth_nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L621-L623","name":"Turing.Tape.right₀_nth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.right₀_nth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L617-L618","name":"Turing.Tape.nth_zero","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.nth_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L610-L613","name":"Turing.Tape.nth","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.nth","doc":"The `nth` function of a tape is integer-valued, with index `0` being the head, negative indexes\non the left and positive indexes on the right. (Picture a number line.) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L604-L605","name":"Turing.Tape.mk₁","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk₁","doc":"Construct a tape from a list, with the head of the list at the TM head and the rest going\nto the right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L598-L599","name":"Turing.Tape.mk₂","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk₂","doc":"Construct a tape from a left side and an inclusive right side. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L591-L594","name":"Turing.Tape.move_right_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_right_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L584-L587","name":"Turing.Tape.move_left_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_left_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L579-L580","name":"Turing.Tape.exists_mk'","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.exists_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L573-L576","name":"Turing.Tape.mk'_left_right₀","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_left_right₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L568-L569","name":"Turing.Tape.mk'_right₀","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_right₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L563-L564","name":"Turing.Tape.mk'_right","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L558-L559","name":"Turing.Tape.mk'_head","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L553-L554","name":"Turing.Tape.mk'_left","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L548-L549","name":"Turing.Tape.mk'","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk'","doc":"Construct a tape from a left side and an inclusive right side. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L542-L544","name":"Turing.Tape.move_right_left","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_right_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L536-L538","name":"Turing.Tape.move_left_right","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move_left_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L530-L532","name":"Turing.Tape.move","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.move","doc":"Move the tape in response to a motion of the Turing machine. Note that `T.move Dir.left` makes\n`T.left` smaller; the Turing machine is moving left and the tape is moving right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L524-L525","name":"Turing.Tape.right₀","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.right₀","doc":"The \"inclusive\" right side of the tape, including both `right` and `head`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L519-L520","name":"Turing.Tape.left₀","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.left₀","doc":"The \"inclusive\" left side of the tape, including both `left` and `head`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L515-L515","name":"Turing.instInhabitedDir","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.instInhabitedDir","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L515-L515","name":"Turing.instDecidableEqDir","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.instDecidableEqDir","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L514-L514","name":"Turing.Dir.right","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Dir.right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L513-L513","name":"Turing.Dir.left","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Dir.left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L512-L515","name":"Turing.Dir","kind":"inductive","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Dir","doc":"A direction for the turing machine `move` command, either\nleft or right. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L506-L507","name":"Turing.Tape.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L503-L503","name":"Turing.Tape.right","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L502-L502","name":"Turing.Tape.left","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L501-L501","name":"Turing.Tape.head","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L500-L500","name":"Turing.Tape.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L500-L503","name":"Turing.Tape","kind":"structure","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.Tape","doc":"The tape of a Turing machine is composed of a head element (which we imagine to be the\ncurrent position of the head), together with two `ListBlank`s denoting the portions of the tape\ngoing off to the left and right. When the Turing machine moves right, an element is pulled from the\nright side and becomes the new head, while the head element is consed onto the left side. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L488-L493","name":"Turing.ListBlank.cons_bind","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.cons_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L482-L484","name":"Turing.ListBlank.bind_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.bind_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L472-L478","name":"Turing.ListBlank.bind","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.bind","doc":"The `bind` function on lists is well defined on `ListBlank`s provided that the default element\nis sent to a sequence of default elements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L462-L467","name":"Turing.ListBlank.append_assoc","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.append_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L456-L459","name":"Turing.ListBlank.append_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.append_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L450-L452","name":"Turing.ListBlank.append","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.append","doc":"Append a list on the left side of a `ListBlank`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L441-L445","name":"Turing.ListBlank.map_modifyNth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.map_modifyNth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L436-L438","name":"Turing.proj_map_nth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.proj_map_nth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L431-L433","name":"Turing.proj","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.proj","doc":"The `i`-th projection as a pointed map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L419-L427","name":"Turing.ListBlank.nth_map","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L412-L415","name":"Turing.ListBlank.map_cons","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.map_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L405-L408","name":"Turing.ListBlank.tail_map","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.tail_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L398-L401","name":"Turing.ListBlank.head_map","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.head_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L392-L394","name":"Turing.ListBlank.map_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.map_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L384-L388","name":"Turing.ListBlank.map","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.map","doc":"The `map` function on lists is well defined on `ListBlank`s provided that the map is\npointed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L377-L379","name":"Turing.PointedMap.headI_map","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.headI_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L371-L373","name":"Turing.PointedMap.map_pt","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.map_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L365-L367","name":"Turing.PointedMap.mk_val","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.mk_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L361-L362","name":"Turing.instCoeFunPointedMapForAll","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.instCoeFunPointedMapForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L358-L359","name":"Turing.instInhabitedPointedMap","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.instInhabitedPointedMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L355-L355","name":"Turing.PointedMap.map_pt'","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.map_pt'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L354-L354","name":"Turing.PointedMap.f","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.f","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L352-L352","name":"Turing.PointedMap.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L352-L355","name":"Turing.PointedMap","kind":"structure","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.PointedMap","doc":"A pointed map of `Inhabited` types is a map that sends one default value to the other. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L340-L348","name":"Turing.ListBlank.nth_modifyNth","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth_modifyNth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L335-L337","name":"Turing.ListBlank.modifyNth","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.modifyNth","doc":"Apply a function to a value stored at the nth position of the list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L315-L330","name":"Turing.ListBlank.ext","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L308-L311","name":"Turing.ListBlank.nth_succ","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L302-L304","name":"Turing.ListBlank.nth_zero","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L296-L298","name":"Turing.ListBlank.nth_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L284-L292","name":"Turing.ListBlank.nth","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.nth","doc":"The n-th element of a `ListBlank` is well defined for all `n : ℕ`, unlike in a `List`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L278-L280","name":"Turing.ListBlank.exists_cons","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.exists_cons","doc":"The `cons` and `head`/`tail` functions are mutually inverse, unlike in the case of `List` where\nthis only holds for nonempty lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L268-L273","name":"Turing.ListBlank.cons_head_tail","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.cons_head_tail","doc":"The `cons` and `head`/`tail` functions are mutually inverse, unlike in the case of `List` where\nthis only holds for nonempty lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L261-L262","name":"Turing.ListBlank.tail_cons","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.tail_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L256-L257","name":"Turing.ListBlank.head_cons","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.head_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L250-L252","name":"Turing.ListBlank.cons_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.cons_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L243-L246","name":"Turing.ListBlank.cons","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.cons","doc":"We can cons an element onto a `ListBlank`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L237-L239","name":"Turing.ListBlank.tail_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.tail_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L227-L233","name":"Turing.ListBlank.tail","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.tail","doc":"The tail of a `ListBlank` is well defined (up to the tail of blanks). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L221-L223","name":"Turing.ListBlank.head_mk","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.head_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L212-L217","name":"Turing.ListBlank.head","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.head","doc":"The head of a `ListBlank` is well defined. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L206-L208","name":"Turing.ListBlank.induction_on","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L201-L202","name":"Turing.ListBlank.mk","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.mk","doc":"The quotient map turning a `List` into a `ListBlank`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L195-L197","name":"Turing.ListBlank.liftOn","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.liftOn","doc":"A modified version of `Quotient.liftOn'` specialized for `ListBlank`, with the stronger\nprecondition `BlankExtends` instead of `BlankRel`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L188-L189","name":"Turing.ListBlank.hasEmptyc","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.hasEmptyc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L184-L185","name":"Turing.ListBlank.inhabited","kind":"instance","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L180-L181","name":"Turing.ListBlank","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.ListBlank","doc":"A `ListBlank Γ` is a quotient of `List Γ` by extension by blanks at the end. This is used to\nrepresent half-tapes of a Turing machine, so that we can pretend that the list continues\ninfinitely with blanks. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L173-L174","name":"Turing.BlankRel.setoid","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.setoid","doc":"Construct a setoid instance for `BlankRel`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L168-L169","name":"Turing.BlankRel.equivalence","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L159-L165","name":"Turing.BlankRel.below","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.below","doc":"Given two `BlankRel` lists, there exists (constructively) a common meet. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L149-L155","name":"Turing.BlankRel.above","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.above","doc":"Given two `BlankRel` lists, there exists (constructively) a common join. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L135-L145","name":"Turing.BlankRel.trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L130-L131","name":"Turing.BlankRel.symm","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L125-L126","name":"Turing.BlankRel.refl","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L120-L121","name":"Turing.BlankRel","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankRel","doc":"`BlankRel` is the symmetric closure of `BlankExtends`, turning it into an equivalence\nrelation. Two lists are related by `BlankRel` if one extends the other by blanks. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L108-L115","name":"Turing.BlankExtends.above_of_le","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends.above_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L102-L105","name":"Turing.BlankExtends.above","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends.above","doc":"Any two extensions by blank `l₁,l₂` of `l` have a common join (which can be taken to be the\nlonger of `l₁` and `l₂`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L93-L97","name":"Turing.BlankExtends.below_of_le","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends.below_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L87-L90","name":"Turing.BlankExtends.trans","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L82-L83","name":"Turing.BlankExtends.refl","kind":"theorem","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L77-L78","name":"Turing.BlankExtends","kind":"def","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.BlankExtends","doc":"The `BlankExtends` partial order holds of `l₁` and `l₂` if `l₂` is obtained by adding\nblanks (`default : Γ`) to the end of `l₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1-L1","name":"Turing.TM0.Cfg.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM0.Cfg.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1-L1","name":"Turing.TM2.Cfg.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM2.Cfg.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Computability/TuringMachine.lean#L1-L1","name":"Turing.TM1.Cfg.mk","kind":"ctor","docLink":"./Mathlib/Computability/TuringMachine.html#Turing.TM1.Cfg.mk","doc":""}]}