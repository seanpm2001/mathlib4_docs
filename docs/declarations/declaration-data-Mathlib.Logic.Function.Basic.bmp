{"name":"Mathlib.Logic.Function.Basic","instances":[{"typeNames":["Eq"],"name":"Function.decidableEqPfun","className":"Decidable"},{"typeNames":[],"name":"Function.hasUncurryBase","className":"Function.HasUncurry"},{"typeNames":["Prod"],"name":"Function.hasUncurryInduction","className":"Function.HasUncurry"},{"typeNames":["Function.uncurry","_builtin_prop"],"name":"instDecidableUncurryProp","className":"Decidable"},{"typeNames":["Function.curry","_builtin_prop"],"name":"instDecidableCurryProp","className":"Decidable"}],"imports":["Init","Mathlib.Logic.Nonempty","Mathlib.Init.Data.Nat.Lemmas","Mathlib.Init.Set"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1073-L1075","name":"instDecidableCurryProp","kind":"instance","docLink":"./Mathlib/Logic/Function/Basic.html#instDecidableCurryProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1069-L1071","name":"instDecidableUncurryProp","kind":"instance","docLink":"./Mathlib/Logic/Function/Basic.html#instDecidableUncurryProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1064-L1066","name":"InvImage.equivalence","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#InvImage.equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1060-L1061","name":"IsSymmOp.flip_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#IsSymmOp.flip_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1056-L1057","name":"Set.SeparatesPoints","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Set.SeparatesPoints","doc":"A set of functions \"separates points\"\nif for each pair of distinct points there is a function taking different values on them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1048-L1051","name":"Function.LeftInverse.cast_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.cast_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1041-L1045","name":"Function.LeftInverse.eq_rec_on_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.eq_rec_on_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1034-L1038","name":"Function.LeftInverse.eq_rec_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.eq_rec_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1030-L1031","name":"cast_inj","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#cast_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1024-L1026","name":"eq_rec_inj","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#eq_rec_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1014-L1016","name":"cast_bijective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#cast_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1009-L1011","name":"eq_mpr_bijective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#eq_mpr_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L1002-L1006","name":"eq_mp_bijective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#eq_mp_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L997-L999","name":"eq_rec_on_bijective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#eq_rec_on_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L989-L991","name":"Set.piecewise","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Set.piecewise","doc":"`s.piecewise f g` is the function equal to `f` on the set `s`, and to `g` on its complement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L979-L981","name":"Function.sometimes_spec","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.sometimes_spec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L975-L976","name":"Function.sometimes_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.sometimes_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L971-L972","name":"Function.sometimes","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.sometimes","doc":"`sometimes f` evaluates to some value of `f`, if it exists. This function is especially\ninteresting in the case where `α` is a proposition, in which case `f` is necessarily a\nconstant function, so that `sometimes f = f a` for all `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L958-L959","name":"Function.Injective2.eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L952-L955","name":"Function.Injective2.right'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.right'","doc":"As a map from the right argument to a unary function, `f` is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L946-L948","name":"Function.Injective2.left'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.left'","doc":"As a map from the left argument to a unary function, `f` is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L940-L942","name":"Function.Injective2.uncurry","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.uncurry","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L936-L937","name":"Function.Injective2.right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.right","doc":"A binary injective function is injective when only the right argument varies. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L931-L932","name":"Function.Injective2.left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2.left","doc":"A binary injective function is injective when only the left argument varies. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L922-L923","name":"Function.Injective2","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective2","doc":"The property of a binary function `f : α → β → γ` being injective.\nMathematically this should be thought of as the corresponding function `α × β → γ` being injective.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L913-L914","name":"Function.Involutive.eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.eq_iff","doc":"An involution commutes across an equality. Compare to `Function.Injective.eq_iff`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L908-L909","name":"Function.Involutive.ite_not","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.ite_not","doc":"Involuting an `ite` of an involuted value `x : α` negates the `Prop` condition in the `ite`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L904-L904","name":"Function.Involutive.bijective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L901-L901","name":"Function.Involutive.surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L898-L898","name":"Function.Involutive.injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L895-L895","name":"Function.Involutive.rightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L892-L892","name":"Function.Involutive.leftInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.leftInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L888-L889","name":"Function.Involutive.comp_self","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive.comp_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L880-L881","name":"Bool.involutive_not","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Bool.involutive_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L876-L877","name":"Function.involutive_iff_iter_2_eq_id","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.involutive_iff_iter_2_eq_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L872-L873","name":"Function.Involutive","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Involutive","doc":"A function is involutive, if `f ∘ f = id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L866-L867","name":"Function.hasUncurryInduction","kind":"instance","docLink":"./Mathlib/Logic/Function/Basic.html#Function.hasUncurryInduction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L863-L864","name":"Function.hasUncurryBase","kind":"instance","docLink":"./Mathlib/Logic/Function/Basic.html#Function.hasUncurryBase","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L861-L861","name":"Function.«term↿_»","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.«term↿_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L858-L858","name":"Function.HasUncurry.uncurry","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.HasUncurry.uncurry","doc":"Uncurrying operator. The most generic use is to recursively uncurry. For instance\n`f : α → β → γ → δ` will be turned into `↿f : α × β × γ → δ`. One can also add instances\nfor bundled maps."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L854-L854","name":"Function.HasUncurry.mk","kind":"ctor","docLink":"./Mathlib/Logic/Function/Basic.html#Function.HasUncurry.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L854-L858","name":"Function.HasUncurry","kind":"class","docLink":"./Mathlib/Logic/Function/Basic.html#Function.HasUncurry","doc":"Records a way to turn an element of `α` into a function from `β` to `γ`. The most generic use\nis to recursively uncurry. For instance `f : α → β → γ → δ` will be turned into\n`↿f : α × β × γ → δ`. One can also add instances for bundled maps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L840-L842","name":"Function.uncurry_bicompl","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.uncurry_bicompl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L836-L837","name":"Function.uncurry_bicompr","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.uncurry_bicompr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L829-L830","name":"Function.bicompr","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.bicompr","doc":"Compose a unary function `f` with a binary function `g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L824-L825","name":"Function.bicompl","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.bicompl","doc":"Compose a binary function `f` with a pair of unary functions `g` and `h`.\nIf both arguments of `f` have the same type and `g = h`, then `bicompl f g g = f on g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L814-L815","name":"Function.curry_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.curry_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L809-L810","name":"Function.uncurry_apply_pair","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.uncurry_apply_pair","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L804-L805","name":"Function.uncurry_def","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.uncurry_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L796-L799","name":"Function.Bijective.comp_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L791-L793","name":"Function.Injective.surjective_comp_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.surjective_comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L786-L788","name":"Function.Injective.surjective_comp_right'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.surjective_comp_right'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L782-L783","name":"Function.extend_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.extend_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L776-L778","name":"Function.FactorsThrough.extend_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough.extend_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L768-L773","name":"Function.extend_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.extend_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L763-L765","name":"Function.Injective.apply_extend","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.apply_extend","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L746-L760","name":"Function.FactorsThrough.apply_extend","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough.apply_extend","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L739-L743","name":"Function.factorsThrough_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.factorsThrough_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L734-L736","name":"Function.extend_apply'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.extend_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L728-L730","name":"Function.Injective.extend_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.extend_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L721-L724","name":"Function.FactorsThrough.extend_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough.extend_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L717-L718","name":"Function.Injective.FactorsThrough","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.FactorsThrough","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L711-L714","name":"Function.extend_def","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.extend_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L707-L708","name":"Function.FactorsThrough","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough","doc":"g factors through f : `f a = f b → g a = g b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L702-L703","name":"Function.extend","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.extend","doc":"`extend f g e'` extends a function `g : α → γ`\nalong a function `f : α → β` to a function `β → γ`,\nby using the values of `g` on the range of `f`\nand the values of an auxiliary function `e' : β → γ` elsewhere.\n\nMostly useful when `f` is injective, or more generally when `g.factors_through f` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L681-L684","name":"Function.update_idem","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_idem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L668-L677","name":"Function.update_comm","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L663-L665","name":"Function.comp_update","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.comp_update","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L653-L659","name":"Function.apply_update₂","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.apply_update₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L644-L650","name":"Function.apply_update","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.apply_update","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L638-L641","name":"Function.update_comp_eq_of_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_comp_eq_of_injective","doc":"Non-dependent version of `Function.update_comp_eq_of_injective'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L632-L634","name":"Function.update_comp_eq_of_injective'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_comp_eq_of_injective'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L627-L629","name":"Function.update_comp_eq_of_forall_ne","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_comp_eq_of_forall_ne","doc":"Non-dependent version of `Function.update_comp_eq_of_forall_ne'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L621-L623","name":"Function.update_comp_eq_of_forall_ne'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_comp_eq_of_forall_ne'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L617-L618","name":"Function.update_eq_self","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L613-L613","name":"Function.update_ne_self_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_ne_self_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L610-L610","name":"Function.ne_update_self_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.ne_update_self_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L607-L607","name":"Function.eq_update_self_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.eq_update_self_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L604-L604","name":"Function.update_eq_self_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_eq_self_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L599-L601","name":"Function.eq_update_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.eq_update_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L594-L596","name":"Function.update_eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L588-L591","name":"Function.exists_update_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.exists_update_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L582-L585","name":"Function.forall_update_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.forall_update_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L578-L579","name":"Function.update_noteq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_noteq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L572-L574","name":"Function.update_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L566-L569","name":"Function.surjective_eval","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjective_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L562-L563","name":"Function.update_same","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_same","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L550-L558","name":"Function.update_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update_apply","doc":"On non-dependent functions, `Function.update` can be expressed as an `ite` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L545-L546","name":"Function.update","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.update","doc":"Replacing the value of a function at a given point by a given value. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L531-L533","name":"Function.Bijective.comp_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.comp_left","doc":"Composition by a bijective function on the left is itself bijective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L525-L527","name":"Function.Surjective.comp_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.comp_left","doc":"Composition by a surjective function on the left is itself surjective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L519-L521","name":"Function.surjective_to_subsingleton","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjective_to_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L515-L516","name":"Function.injective_surjInv","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.injective_surjInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L510-L512","name":"Function.bijective_iff_has_inverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.bijective_iff_has_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L506-L507","name":"Function.surjective_iff_hasRightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjective_iff_hasRightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L502-L503","name":"Function.Surjective.hasRightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.hasRightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L498-L499","name":"Function.leftInverse_surjInv","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.leftInverse_surjInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L494-L495","name":"Function.rightInverse_surjInv","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.rightInverse_surjInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L490-L491","name":"Function.surjInv_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjInv_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L486-L487","name":"Function.surjInv","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjInv","doc":"The inverse of a surjective function. (Unlike `invFun`, this does not require\n`α` to be inhabited.) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L474-L475","name":"Function.injective_iff_hasLeftInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.injective_iff_hasLeftInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L470-L471","name":"Function.Injective.hasLeftInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.hasLeftInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L466-L467","name":"Function.invFun_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L462-L463","name":"Function.invFun_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L458-L459","name":"Function.leftInverse_invFun","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.leftInverse_invFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L454-L455","name":"Function.rightInverse_invFun","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.rightInverse_invFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L445-L451","name":"Function.invFun_eq_of_injective_of_rightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun_eq_of_injective_of_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L441-L442","name":"Function.invFun_neg","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L437-L438","name":"Function.invFun_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L433-L434","name":"Function.invFun","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.invFun","doc":"The inverse of a function (which is a left inverse if `f` is injective\nand a right inverse if `f` is surjective). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L418-L419","name":"Function.partialInv_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.partialInv_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L403-L415","name":"Function.partialInv_of_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.partialInv_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L399-L400","name":"Function.partialInv","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.partialInv","doc":"We can use choice to construct explicitly a partial inverse for\na given injective function `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L388-L392","name":"Function.LeftInverse.eq_rightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.eq_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L383-L385","name":"Function.RightInverse.leftInverse_of_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.leftInverse_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L378-L380","name":"Function.RightInverse.leftInverse_of_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.leftInverse_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L373-L375","name":"Function.LeftInverse.rightInverse_of_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.rightInverse_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L368-L370","name":"Function.LeftInverse.rightInverse_of_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.rightInverse_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L364-L365","name":"Function.RightInverse.injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L360-L361","name":"Function.LeftInverse.surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L356-L357","name":"Function.RightInverse.leftInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.leftInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L352-L353","name":"Function.LeftInverse.rightInverse","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L347-L349","name":"Function.RightInverse.comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L342-L344","name":"Function.LeftInverse.comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L338-L339","name":"Function.rightInverse_iff_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.rightInverse_iff_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L334-L335","name":"Function.RightInverse.comp_eq_id","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.RightInverse.comp_eq_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L330-L331","name":"Function.leftInverse_iff_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.leftInverse_iff_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L326-L327","name":"Function.LeftInverse.comp_eq_id","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.LeftInverse.comp_eq_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L321-L323","name":"Function.injective_of_isPartialInv_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.injective_of_isPartialInv_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L316-L318","name":"Function.injective_of_isPartialInv","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.injective_of_isPartialInv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L312-L313","name":"Function.isPartialInv_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.isPartialInv_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L308-L309","name":"Function.IsPartialInv","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.IsPartialInv","doc":"`g` is a partial inverse to `f` (an injective but not necessarily\nsurjective function) if `g y = some x` implies `f x = y`, and `g y = none`\nimplies that `y` is not in the range of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L291-L302","name":"Function.not_surjective_Type","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.not_surjective_Type","doc":"There is no surjection from `α : Type u` into `Type u`. This theorem\ndemonstrates why `Type : Type` would be inconsistent in Lean. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L283-L286","name":"Function.cantor_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.cantor_injective","doc":"**Cantor's diagonal argument** implies that there are no injective functions from `Set α`\nto `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L276-L278","name":"Function.cantor_surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.cantor_surjective","doc":"**Cantor's diagonal argument** implies that there are no surjective functions from `α`\nto `Set α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L269-L271","name":"Function.Bijective.of_comp_iff'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.of_comp_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L264-L266","name":"Function.Bijective.of_comp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.of_comp_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L253-L261","name":"Function.Bijective.existsUnique_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.existsUnique_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L248-L250","name":"Function.Bijective.existsUnique","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.existsUnique","doc":"Shorthand for using projection notation with `Function.bijective_iff_existsUnique`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L240-L244","name":"Function.bijective_iff_existsUnique","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.bijective_iff_existsUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L234-L237","name":"Function.surjective_of_right_cancellable_Prop","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.surjective_of_right_cancellable_Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L229-L231","name":"Function.Surjective.right_cancellable","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.right_cancellable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L225-L226","name":"Function.Surjective.injective_comp_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.injective_comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L220-L222","name":"Function.Surjective.exists₃","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.exists₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L215-L217","name":"Function.Surjective.exists₂","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.exists₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L207-L212","name":"Function.Surjective.exists","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.exists","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L202-L204","name":"Function.Surjective.forall₃","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.forall₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L197-L199","name":"Function.Surjective.forall₂","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.forall₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L190-L194","name":"Function.Surjective.forall","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L186-L188","name":"Function.decidableEqPfun","kind":"instance","docLink":"./Mathlib/Logic/Function/Basic.html#Function.decidableEqPfun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L178-L183","name":"Function.Surjective.of_comp_iff'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.of_comp_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L173-L175","name":"Function.Surjective.of_comp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.of_comp_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L168-L170","name":"Function.Surjective.of_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Surjective.of_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L154-L165","name":"Function.Injective.dite","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.dite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L150-L151","name":"Function.injective_of_subsingleton","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.injective_of_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L145-L147","name":"Function.Injective.comp_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.comp_left","doc":"Composition by an injective function on the left is itself injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L136-L141","name":"Function.Injective.of_comp_iff'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.of_comp_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L131-L133","name":"Function.Injective.of_comp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.of_comp_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L127-L128","name":"Function.Injective.of_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.of_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L123-L124","name":"Function.Injective.decidableEq","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.decidableEq","doc":"If the co-domain `β` of an injective function `f : α → β` has decidable equality, then\nthe domain `α` also has decidable equality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L117-L118","name":"Function.Injective.ne_iff'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.ne_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L113-L114","name":"Function.Injective.ne_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.ne_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L109-L110","name":"Function.Injective.ne","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L105-L106","name":"Function.Injective.eq_iff'","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.eq_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L101-L103","name":"Function.Injective.beq_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.beq_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L97-L98","name":"Function.Injective.eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Injective.eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L94-L94","name":"Function.Bijective.surjective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L92-L92","name":"Function.Bijective.injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.Bijective.injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L88-L89","name":"Function.ne_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.ne_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L84-L85","name":"Function.funext_iff","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.funext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L72-L81","name":"Function.hfunext","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.hfunext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L68-L69","name":"Function.onFun_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.onFun_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L62-L63","name":"Function.id_def","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.id_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L58-L59","name":"Function.const_inj","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.const_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L52-L54","name":"Function.const_injective","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.const_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L48-L49","name":"Function.comp_const","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.comp_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L43-L44","name":"Function.const_comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.const_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L38-L39","name":"Function.const_def","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.const_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L34-L35","name":"Function.eval_apply","kind":"theorem","docLink":"./Mathlib/Logic/Function/Basic.html#Function.eval_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Basic.lean#L31-L31","name":"Function.eval","kind":"def","docLink":"./Mathlib/Logic/Function/Basic.html#Function.eval","doc":"Evaluate a function at an argument. Useful if you want to talk about the partially applied\n`Function.eval x : (∀ x, β x) → β x`. "}]}