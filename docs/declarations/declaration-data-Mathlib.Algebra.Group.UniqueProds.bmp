{"name":"Mathlib.Algebra.Group.UniqueProds","instances":[{"typeNames":["Multiplicative","Multiplicative.mul"],"name":"Multiplicative.instUniqueProdsMultiplicativeMul","className":"UniqueProds"},{"typeNames":["Additive","Additive.add"],"name":"Additive.instUniqueSumsAdditiveAdd","className":"UniqueSums"},{"typeNames":[],"name":"Covariants.to_uniqueSums","className":"UniqueSums"},{"typeNames":[],"name":"Covariants.to_uniqueProds","className":"UniqueProds"}],"imports":["Init","Mathlib.Data.Finset.Preimage"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L228-L233","name":"Covariants.to_uniqueProds","kind":"instance","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#Covariants.to_uniqueProds","doc":"This instance asserts that if `A` has a multiplication, a linear order, and multiplication\nis 'very monotone', then `A` also has `UniqueProds`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L225-L227","name":"Covariants.to_uniqueSums.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#Covariants.to_uniqueSums.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L225-L227","name":"Covariants.to_uniqueSums","kind":"instance","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#Covariants.to_uniqueSums","doc":"This instance asserts that if `A` has an addition, a linear order, and addition\nis 'very monotone', then `A` also has `UniqueSums`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L210-L218","name":"eq_and_eq_of_le_of_le_of_mul_le","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#eq_and_eq_of_le_of_le_of_mul_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L209-L209","name":"eq_and_eq_of_le_of_le_of_add_le","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#eq_and_eq_of_le_of_le_of_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L200-L205","name":"Additive.instUniqueSumsAdditiveAdd","kind":"instance","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#Additive.instUniqueSumsAdditiveAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L189-L194","name":"Multiplicative.instUniqueProdsMultiplicativeMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#Multiplicative.instUniqueProdsMultiplicativeMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L181-L181","name":"UniqueProds.uniqueMul_of_nonempty","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueProds.uniqueMul_of_nonempty","doc":"For `A B` two nonempty finite sets, there always exist `a0 ∈ A, b0 ∈ B` such that\n`UniqueMul A B a0 b0` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L178-L178","name":"UniqueProds.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueProds.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L178-L182","name":"UniqueProds","kind":"class","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueProds","doc":"Let `G` be a Type with multiplication.  `UniqueProds G` asserts that any two non-empty\nfinite subsets of `G` have the `UniqueMul` property, with respect to some element of their\nproduct `A * B`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L171-L171","name":"UniqueSums.uniqueAdd_of_nonempty","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueSums.uniqueAdd_of_nonempty","doc":"For `A B` two nonempty finite sets, there always exist `a0 ∈ A, b0 ∈ B` such that\n`UniqueAdd A B a0 b0` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L168-L168","name":"UniqueSums.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueSums.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L168-L172","name":"UniqueSums","kind":"class","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueSums","doc":"Let `G` be a Type with addition.  `UniqueSums G` asserts that any two non-empty\nfinite subsets of `A` have the `UniqueAdd` property, with respect to some element of their\nsum `A + B`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L154-L159","name":"UniqueMul.mulHom_map_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.mulHom_map_iff","doc":"`UniqueMul` is preserved under embeddings that are multiplicative.\n\nSee `UniqueMul.mulHom_image_iff` for a version with swapped bundling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L150-L153","name":"UniqueAdd.addHom_map_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.addHom_map_iff","doc":"`UniqueAdd` is preserved under embeddings that are additive.\n\nSee `UniqueAdd.addHom_image_iff` for a version with swapped bundling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L131-L143","name":"UniqueMul.mulHom_image_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.mulHom_image_iff","doc":"`Unique_Mul` is preserved under multiplicative maps that are injective.\n\nSee `UniqueMul.mulHom_map_iff` for a version with swapped bundling. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L127-L130","name":"UniqueAdd.addHom_image_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.addHom_image_iff","doc":"`UniqueAdd` is preserved under additive maps that are injective.\n\nSee `UniqueAdd.addHom_map_iff` for a version with swapped bundling."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L113-L120","name":"UniqueMul.mulHom_preimage","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.mulHom_preimage","doc":"`UniqueMul` is preserved by inverse images under injective, multiplicative maps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L112-L112","name":"UniqueAdd.addHom_preimage","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.addHom_preimage","doc":"`UniqueAdd` is preserved by inverse images under injective, additive maps."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L100-L107","name":"UniqueMul.exists_iff_exists_existsUnique","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.exists_iff_exists_existsUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L99-L99","name":"UniqueAdd.exists_iff_exists_existsUnique","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.exists_iff_exists_existsUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L99-L99","name":"UniqueAdd.exists_iff_exists_existsUnique.match_2","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.exists_iff_exists_existsUnique.match_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L99-L99","name":"UniqueAdd.exists_iff_exists_existsUnique.match_1","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.exists_iff_exists_existsUnique.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L86-L93","name":"UniqueMul.iff_existsUnique","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.iff_existsUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L85-L85","name":"UniqueAdd.iff_existsUnique","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.iff_existsUnique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L73-L79","name":"UniqueMul.set_subsingleton","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.set_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L72-L72","name":"UniqueAdd.set_subsingleton","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.set_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L63-L68","name":"UniqueMul.subsingleton","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L62-L62","name":"UniqueAdd.subsingleton.match_1","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.subsingleton.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L62-L62","name":"UniqueAdd.subsingleton","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd.subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L56-L59","name":"UniqueMul.mt","kind":"theorem","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul.mt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L47-L48","name":"UniqueMul","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueMul","doc":"Let `G` be a Type with multiplication, let `A B : Finset G` be finite subsets and\nlet `a0 b0 : G` be two elements.  `UniqueMul A B a0 b0` asserts `a0 * b0` can be written in at\nmost one way as a product of an element of `A` and an element of `B`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/UniqueProds.lean#L43-L46","name":"UniqueAdd","kind":"def","docLink":"./Mathlib/Algebra/Group/UniqueProds.html#UniqueAdd","doc":"Let `G` be a Type with addition, let `A B : Finset G` be finite subsets and\nlet `a0 b0 : G` be two elements.  `UniqueAdd A B a0 b0` asserts `a0 + b0` can be written in at\nmost one way as a sum of an element from `A` and an element from `B`."}]}