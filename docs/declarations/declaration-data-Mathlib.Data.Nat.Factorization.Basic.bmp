{"name":"Mathlib.Data.Nat.Factorization.Basic","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Finsupp","Mathlib.Data.Finsupp.Multiset","Mathlib.Data.Nat.PrimeFin","Mathlib.NumberTheory.Padics.PadicVal","Mathlib.Data.Nat.Interval","Mathlib.Tactic.IntervalCases"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L951-L960","name":"Nat.Ioc_filter_dvd_card_eq_div","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Ioc_filter_dvd_card_eq_div","doc":"Exactly `n / p` naturals in `(0, n]` are multiples of `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L943-L947","name":"Nat.card_multiples","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.card_multiples","doc":"Exactly `n / p` naturals in `[1, n]` are multiples of `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L918-L935","name":"Nat.prod_pow_prime_padicValNat","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prod_pow_prime_padicValNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L906-L915","name":"Nat.eq_iff_prime_padicValNat_eq","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.eq_iff_prime_padicValNat_eq","doc":"Two positive naturals are equal if their prime padic valuations are equal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L889-L902","name":"Nat.multiplicative_factorization'","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.multiplicative_factorization'","doc":"For any multiplicative function `f` with `f 1 = 1` and `f 0 = 1`,\nwe can evaluate `f n` by evaluating `f` at `p ^ k` over the factorization of `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L869-L884","name":"Nat.multiplicative_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.multiplicative_factorization","doc":"For any multiplicative function `f` with `f 1 = 1` and any `n ≠ 0`,\nwe can evaluate `f n` by evaluating `f` at `p ^ k` over the factorization of `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L856-L864","name":"Nat.recOnMul","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.recOnMul","doc":"Given `P 0`, `P 1`, `P p` for all primes, and a way to extend `P a` and `P b` to\n`P (a * b)`, we can define `P` for all natural numbers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L848-L850","name":"Nat.recOnPrimeCoprime","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.recOnPrimeCoprime","doc":"Given `P 0`, `P (p ^ n)` for all prime powers, and a way to extend `P a` and `P b` to\n`P (a * b)` when `a, b` are positive coprime, we can define `P` for all natural numbers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L831-L842","name":"Nat.recOnPosPrimePosCoprime","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.recOnPosPrimePosCoprime","doc":"Given `P 0`, `P 1`, and `P (p ^ n)` for positive prime powers, and a way to extend `P a` and\n`P b` to `P (a * b)` when `a, b` are positive coprime, we can define `P` for all natural numbers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L796-L823","name":"Nat.recOnPrimePow","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.recOnPrimePow","doc":"Given `P 0, P 1` and a way to extend `P a` to `P (p ^ n * a)` for prime `p` not dividing `a`,\nwe can define `P` for all natural numbers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L784-L787","name":"Nat.factorization_mul_support_of_coprime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_mul_support_of_coprime","doc":"For coprime `a` and `b` the prime factorization `a * b` is the union of those of `a` and `b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L777-L780","name":"Nat.factorization_disjoint_of_coprime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_disjoint_of_coprime","doc":"The prime factorizations of coprime `a` and `b` are disjoint "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L770-L773","name":"Nat.factorization_eq_of_coprime_right","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_of_coprime_right","doc":"If `p` is a prime factor of `b` then the power of `p` in `b` is the same that in `a * b`,\nfor any `a` coprime to `b`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L762-L765","name":"Nat.factorization_eq_of_coprime_left","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_of_coprime_left","doc":"If `p` is a prime factor of `a` then the power of `p` in `a` is the same that in `a * b`,\nfor any `b` coprime to `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L754-L757","name":"Nat.factorization_mul_of_coprime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_mul_of_coprime","doc":"For coprime `a` and `b`, the power of `p` in `a * b` is the sum of the powers in `a` and `b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L748-L750","name":"Nat.factorization_mul_apply_of_coprime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_mul_apply_of_coprime","doc":"For coprime `a` and `b`, the power of `p` in `a * b` is the sum of the powers in `a` and `b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L735-L741","name":"Nat.Ico_filter_pow_dvd_eq","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Ico_filter_pow_dvd_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L730-L732","name":"Nat.factorization_eq_card_pow_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_card_pow_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L720-L727","name":"Nat.Icc_factorization_eq_pow_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Icc_factorization_eq_pow_dvd","doc":"The set of positive powers of prime `p` that divide `n` is exactly the set of\npositive natural numbers up to `n.factorization p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L712-L715","name":"Nat.setOf_pow_dvd_eq_Icc_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.setOf_pow_dvd_eq_Icc_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L698-L708","name":"Nat.prod_factors_gcd_mul_prod_factors_mul","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prod_factors_gcd_mul_prod_factors_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L697-L697","name":"Nat.sum_factors_gcd_add_sum_factors_mul","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.sum_factors_gcd_add_sum_factors_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L688-L694","name":"Nat.factorization_lcm","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_lcm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L663-L685","name":"Nat.factorization_gcd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_gcd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L656-L660","name":"Nat.prod_prime_factors_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prod_prime_factors_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L642-L653","name":"Nat.dvd_iff_prime_pow_dvd_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_iff_prime_pow_dvd_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L626-L639","name":"Nat.ord_compl_dvd_ord_compl_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_dvd_ord_compl_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L608-L623","name":"Nat.ord_compl_dvd_ord_compl_of_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_dvd_ord_compl_of_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L598-L605","name":"Nat.ord_proj_dvd_ord_proj_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_dvd_ord_proj_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L590-L595","name":"Nat.ord_proj_dvd_ord_proj_of_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_dvd_ord_proj_of_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L577-L587","name":"Nat.dvd_iff_div_factorization_eq_tsub","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_iff_div_factorization_eq_tsub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L569-L574","name":"Nat.exists_eq_pow_mul_and_not_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.exists_eq_pow_mul_and_not_dvd","doc":"If `n` is a nonzero natural number and `p ≠ 1`, then there are natural numbers `e`\nand `n'` such that `n'` is not divisible by `p` and `n = p^e * n'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L555-L564","name":"Nat.dvd_ord_compl_of_dvd_not_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_ord_compl_of_dvd_not_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L537-L551","name":"Nat.factorization_ord_compl","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_ord_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L533-L534","name":"Nat.coprime_ord_compl","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.coprime_ord_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L527-L530","name":"Nat.not_dvd_ord_compl","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.not_dvd_ord_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L523-L524","name":"Nat.dvd_ord_proj_of_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_ord_proj_of_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L512-L520","name":"Nat.factorization_div","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L503-L508","name":"Nat.exists_factorization_lt_of_lt","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.exists_factorization_lt_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L498-L500","name":"Nat.Prime.dvd_iff_one_le_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.dvd_iff_one_le_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L493-L495","name":"Nat.Prime.pow_dvd_iff_dvd_ord_proj","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.pow_dvd_iff_dvd_ord_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L488-L490","name":"Nat.Prime.pow_dvd_iff_le_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.pow_dvd_iff_le_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L482-L485","name":"Nat.factorization_le_factorization_mul_right","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_le_factorization_mul_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L474-L479","name":"Nat.factorization_le_factorization_mul_left","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_le_factorization_mul_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L467-L471","name":"Nat.pow_succ_factorization_not_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.pow_succ_factorization_not_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L460-L464","name":"Nat.factorization_prime_le_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_prime_le_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L447-L457","name":"Nat.factorization_le_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_le_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L439-L444","name":"Nat.factorization_le_of_le_pow","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_le_of_le_pow","doc":"An upper bound on `n.factorization p` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L428-L435","name":"Nat.factorization_lt","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_lt","doc":"A crude upper bound on `n.factorization p` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L421-L424","name":"Nat.dvd_of_mem_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_of_mem_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L409-L415","name":"Nat.ord_compl_mul","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L404-L406","name":"Nat.ord_proj_mul","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L400-L401","name":"Nat.ord_proj_mul_ord_compl_eq_self","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_mul_ord_compl_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L396-L397","name":"Nat.ord_compl_le","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L390-L393","name":"Nat.ord_compl_pos","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L386-L387","name":"Nat.ord_proj_le","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L380-L383","name":"Nat.ord_proj_pos","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L376-L377","name":"Nat.ord_compl_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L366-L373","name":"Nat.ord_proj_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L362-L363","name":"Nat.ord_compl_of_not_prime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_compl_of_not_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L357-L358","name":"Nat.ord_proj_of_not_prime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.ord_proj_of_not_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L354-L354","name":"Nat.«termOrd_compl[_]_»","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.«termOrd_compl[_]_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L352-L352","name":"Nat.«termOrd_proj[_]_»","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.«termOrd_proj[_]_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L336-L338","name":"Nat.factorizationEquiv_inv_apply","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorizationEquiv_inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L331-L333","name":"Nat.factorizationEquiv_apply","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorizationEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L323-L328","name":"Nat.factorizationEquiv","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorizationEquiv","doc":"The equiv between `ℕ+` and `ℕ →₀ ℕ` with support in the primes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L316-L319","name":"Nat.eq_factorization_iff","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.eq_factorization_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L305-L313","name":"Nat.prod_pow_factorization_eq_self","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prod_pow_factorization_eq_self","doc":"Any Finsupp `f : ℕ →₀ ℕ` whose support is in the primes is equal to the factorization of\nthe product `∏ (a : ℕ) in f.support, a ^ f a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L296-L297","name":"Nat.Prime.eq_of_factorization_pos","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.eq_of_factorization_pos","doc":"The only prime factor of prime `p` is `p` itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L288-L292","name":"Nat.eq_pow_of_factorization_eq_single","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.eq_pow_of_factorization_eq_single","doc":"If the factorization of `n` contains just one number `p` then `n` is a power of `p` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L283-L284","name":"Nat.Prime.factorization_pow","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.factorization_pow","doc":"For prime `p` the only prime factor of `p^k` is `p` with multiplicity `k` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L279-L279","name":"Nat.Prime.factorization_self","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.factorization_self","doc":"The multiplicity of prime `p` in `p` is `1` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L271-L274","name":"Nat.Prime.factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.factorization","doc":"The only prime factor of prime `p` is `p` itself, with multiplicity `1` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L258-L263","name":"Nat.factorization_pow","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_pow","doc":"For any `p`, the power of `p` in `n^k` is `k` times the power in `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L245-L253","name":"Nat.factorization_prod","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_prod","doc":"For any `p : ℕ` and any function `g : α → ℕ` that's non-zero on `S : Finset α`,\nthe power of `p` in `S.prod g` equals the sum over `x ∈ S` of the powers of `p` in `g x`.\nGeneralises `factorization_mul`, which is the special case where `S.card = 2` and `g = id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L236-L239","name":"Nat.prod_factorization_eq_prod_factors","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prod_factorization_eq_prod_factors","doc":"If a product over `n.factorization` doesn't use the multiplicities of the prime factors\nthen it's equal to the corresponding product over `n.factors.toFinset` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L227-L231","name":"Nat.factorization_mul_support","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_mul_support","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L220-L224","name":"Nat.factorization_mul","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_mul","doc":"For nonzero `a` and `b`, the power of `p` in `a * b` is the sum of the powers in `a` and `b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L210-L212","name":"Nat.factorization_eq_zero_iff'","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_iff'","doc":"The only numbers with empty prime factorization are `0` and `1` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L198-L206","name":"Nat.factorization_eq_zero_iff_remainder","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_iff_remainder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L192-L195","name":"Nat.factorization_eq_zero_of_remainder","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_of_remainder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L188-L189","name":"Nat.Prime.factorization_pos_of_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.Prime.factorization_pos_of_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L184-L185","name":"Nat.dvd_of_factorization_pos","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.dvd_of_factorization_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L180-L181","name":"Nat.factorization_one_right","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_one_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L175-L176","name":"Nat.factorization_zero_right","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_zero_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L170-L171","name":"Nat.factorization_eq_zero_of_lt","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L166-L167","name":"Nat.factorization_eq_zero_of_not_dvd","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_of_not_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L162-L163","name":"Nat.factorization_eq_zero_of_non_prime","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_of_non_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L153-L158","name":"Nat.factorization_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L146-L147","name":"Nat.le_of_mem_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.le_of_mem_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L142-L143","name":"Nat.pos_of_mem_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.pos_of_mem_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L138-L139","name":"Nat.prime_of_mem_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.prime_of_mem_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L134-L135","name":"Nat.factor_iff_mem_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factor_iff_mem_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L130-L131","name":"Nat.support_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.support_factorization","doc":"The support of `n.factorization` is exactly `n.factors.toFinset` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L125-L125","name":"Nat.factorization_one","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L121-L121","name":"Nat.factorization_zero","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L116-L117","name":"Nat.factorization_inj","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_inj","doc":"Every nonzero natural number has a unique prime factorization "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L110-L112","name":"Nat.eq_of_factorization_eq","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.eq_of_factorization_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L104-L107","name":"Nat.factorization_prod_pow_eq_self","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_prod_pow_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L95-L97","name":"Nat.multiplicity_eq_factorization","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.multiplicity_eq_factorization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L89-L92","name":"Nat.factorization_eq_factors_multiset","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_eq_factors_multiset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L76-L86","name":"Nat.factors_count_eq","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factors_count_eq","doc":"We can write both `n.factorization p` and `n.factors.count p` to represent the power\nof `p` in the factorization of `n`: we declare the former to be the simp-normal form. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L69-L70","name":"Nat.factorization_def","kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Nat/Factorization/Basic.lean#L56-L66","name":"Nat.factorization","kind":"def","docLink":"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization","doc":"`n.factorization` is the finitely supported function `ℕ →₀ ℕ`\nmapping each prime factor of `n` to its multiplicity in `n`. "}]}