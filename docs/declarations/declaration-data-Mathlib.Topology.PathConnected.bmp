{"name":"Mathlib.Topology.PathConnected","instances":[{"typeNames":["Path","Set.Elem","Real","unitInterval","instTopologicalSpaceSubtype","Real","Membership.mem","Set","Set.instMembershipSet","unitInterval","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace"],"name":"Path.continuousMapClass","className":"ContinuousMapClass"},{"typeNames":["Path","Prod","Set.Elem","Real","unitInterval"],"name":"Path.hasUncurryPath","className":"Function.HasUncurry"},{"typeNames":["Path"],"name":"Path.topologicalSpace","className":"TopologicalSpace"},{"typeNames":["ZerothHomotopy","Real","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace"],"name":"ZerothHomotopy.inhabited","className":"Inhabited"},{"typeNames":[],"name":"PathConnectedSpace.connectedSpace","className":"ConnectedSpace"}],"imports":["Init","Mathlib.Topology.Algebra.Order.ProjIcc","Mathlib.Topology.CompactOpen","Mathlib.Topology.ContinuousFunction.Basic","Mathlib.Topology.UnitInterval"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1262-L1266","name":"IsOpen.isConnected_iff_isPathConnected","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsOpen.isConnected_iff_isPathConnected","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1240-L1259","name":"locPathConnected_of_isOpen","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#locPathConnected_of_isOpen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1235-L1237","name":"pathConnected_subset_basis","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathConnected_subset_basis","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1213-L1232","name":"pathConnectedSpace_iff_connectedSpace","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathConnectedSpace_iff_connectedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1200-L1210","name":"locPathConnected_of_bases","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#locPathConnected_of_bases","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1195-L1195","name":"LocPathConnectedSpace.path_connected_basis","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#LocPathConnectedSpace.path_connected_basis","doc":"Each neighborhood filter has a basis of path-connected neighborhoods. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1193-L1193","name":"LocPathConnectedSpace.mk","kind":"ctor","docLink":"./Mathlib/Topology/PathConnected.html#LocPathConnectedSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1193-L1195","name":"LocPathConnectedSpace","kind":"class","docLink":"./Mathlib/Topology/PathConnected.html#LocPathConnectedSpace","doc":"A topological space is locally path connected, at every point, path connected\nneighborhoods form a neighborhood basis. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1179-L1183","name":"PathConnectedSpace.exists_path_through_family'","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.exists_path_through_family'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1172-L1176","name":"PathConnectedSpace.exists_path_through_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.exists_path_through_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1162-L1165","name":"IsPathConnected.isConnected","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.isConnected","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1153-L1159","name":"PathConnectedSpace.connectedSpace","kind":"instance","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.connectedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1148-L1149","name":"pathConnectedSpace_iff_eq","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathConnectedSpace_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1134-L1145","name":"pathConnectedSpace_iff_univ","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathConnectedSpace_iff_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1120-L1131","name":"isPathConnected_iff_pathConnectedSpace","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#isPathConnected_iff_pathConnectedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1114-L1115","name":"PathConnectedSpace.somePath","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.somePath","doc":"Use path-connectedness to build a path between two points. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1095-L1106","name":"pathConnectedSpace_iff_zerothHomotopy","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathConnectedSpace_iff_zerothHomotopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1092-L1092","name":"PathConnectedSpace.Joined","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.Joined","doc":"Any two points in a path-connected space must be joined by a continuous path. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1090-L1090","name":"PathConnectedSpace.Nonempty","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.Nonempty","doc":"A path-connected space must be nonempty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1088-L1088","name":"PathConnectedSpace.mk","kind":"ctor","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1088-L1092","name":"PathConnectedSpace","kind":"class","docLink":"./Mathlib/Topology/PathConnected.html#PathConnectedSpace","doc":"A topological space is path-connected if it is non-empty and every two points can be\njoined by a continuous path. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1072-L1080","name":"IsPathConnected.exists_path_through_family'","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.exists_path_through_family'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1016-L1069","name":"IsPathConnected.exists_path_through_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.exists_path_through_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L1008-L1013","name":"IsPathConnected.preimage_coe","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.preimage_coe","doc":"If a set `W` is path-connected, then it is also path-connected when seen as a set in a smaller\nambient type `U` (when `U` contains `W`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L997-L1003","name":"IsPathConnected.union","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L993-L994","name":"IsPathConnected.subset_pathComponent","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.subset_pathComponent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L988-L990","name":"IsPathConnected.mem_pathComponent","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.mem_pathComponent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L980-L985","name":"IsPathConnected.image","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L973-L977","name":"isPathConnected_iff","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#isPathConnected_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L967-L970","name":"IsPathConnected.joinedIn","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected.joinedIn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L959-L964","name":"isPathConnected_iff_eq","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#isPathConnected_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L955-L956","name":"IsPathConnected","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#IsPathConnected","doc":"A set `F` is path connected if it contains a point that can be joined to all other in `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L946-L948","name":"Joined.mem_pathComponent","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Joined.mem_pathComponent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L942-L943","name":"pathComponentIn_univ","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathComponentIn_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L937-L938","name":"pathComponentIn","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#pathComponentIn","doc":"The path component of `x` in `F` is the set of points that can be joined to `x` in `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L931-L933","name":"pathComponent_subset_component","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathComponent_subset_component","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L920-L928","name":"pathComponent_congr","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathComponent_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L916-L917","name":"pathComponent_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathComponent_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L912-L913","name":"mem_pathComponent_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#mem_pathComponent_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L908-L909","name":"pathComponent.nonempty","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#pathComponent.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L903-L904","name":"mem_pathComponent_self","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#mem_pathComponent_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L898-L899","name":"pathComponent","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#pathComponent","doc":"The path component of `x` is the set of points that can be joined to `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L887-L891","name":"JoinedIn.trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L881-L884","name":"JoinedIn.symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L876-L877","name":"JoinedIn.refl","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L872-L873","name":"JoinedIn.mono","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L868-L869","name":"joinedIn_univ","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#joinedIn_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L862-L864","name":"joinedIn_iff_joined","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#joinedIn_iff_joined","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L858-L859","name":"JoinedIn.joined","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.joined","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L853-L855","name":"JoinedIn.ofLine","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.ofLine","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L845-L850","name":"JoinedIn.joined_subtype","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.joined_subtype","doc":"If `x` and `y` are joined in the set `F`, then they are joined in the subtype `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L840-L841","name":"JoinedIn.somePath_mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.somePath_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L836-L837","name":"JoinedIn.somePath","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.somePath","doc":"When `x` and `y` are joined in `F`, choose a path from `x` to `y` inside `F` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L831-L832","name":"JoinedIn.target_mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.target_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L827-L828","name":"JoinedIn.source_mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.source_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L821-L824","name":"JoinedIn.mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn.mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L815-L816","name":"JoinedIn","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#JoinedIn","doc":"The relation \"being joined by a path in `F`\". Not quite an equivalence relation since it's not\nreflexive for points that do not belong to `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L805-L806","name":"ZerothHomotopy.inhabited","kind":"instance","docLink":"./Mathlib/Topology/PathConnected.html#ZerothHomotopy.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L801-L802","name":"ZerothHomotopy","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#ZerothHomotopy","doc":"The quotient type of points of a topological space modulo being joined by a continuous path. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L795-L797","name":"pathSetoid","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#pathSetoid","doc":"The setoid corresponding the equivalence relation of being joined by a continuous path. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L788-L789","name":"Joined.trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Joined.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L783-L784","name":"Joined.symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Joined.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L778-L779","name":"Joined.somePath","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Joined.somePath","doc":"When two points are joined, choose some path from `x` to `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L773-L774","name":"Joined.refl","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Joined.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L768-L769","name":"Joined","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Joined","doc":"The relation \"being joined by a path\". This is an equivalence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L756-L759","name":"Path.refl_reparam","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_reparam","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L741-L753","name":"Path.range_reparam","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.range_reparam","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L736-L738","name":"Path.reparam_id","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.reparam_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L729-L731","name":"Path.coe_reparam","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.coe_reparam","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L720-L725","name":"Path.reparam","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.reparam","doc":"Given a path `γ` and a function `f : I → I` where `f 0 = 0` and `f 1 = 1`, `γ.reparam f` is the\npath defined by `γ ∘ f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L706-L711","name":"Path.truncate_zero_one","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_zero_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L700-L702","name":"Path.truncate_one_one","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_one_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L694-L696","name":"Path.truncate_zero_zero","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_zero_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L685-L690","name":"Path.truncate_self","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L678-L681","name":"Path.truncate_const_continuous_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_const_continuous_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L670-L674","name":"Path.truncate_continuous_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_continuous_family","doc":"For a path `γ`, `γ.truncate` gives a \"continuous family of paths\", by which we\nmean the uncurried function which maps `(t₀, t₁, s)` to `γ.truncate t₀ t₁ s` is continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L659-L664","name":"Path.truncate_range","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L654-L656","name":"Path.truncateOfLE","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncateOfLE","doc":"`γ.truncateOfLE t₀ t₁ h`, where `h : t₀ ≤ t₁` is `γ.truncate t₀ t₁`\ncasted as a path from `γ.extend t₀` to `γ.extend t₁`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L626-L649","name":"Path.truncate","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.truncate","doc":"`γ.truncate t₀ t₁` is the path which follows the path `γ` on the\ntime interval `[t₀, t₁]` and stays still otherwise. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L615-L617","name":"Path.mul_apply","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.mul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L614-L614","name":"Path.add_apply","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L608-L610","name":"Path.mul","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.mul","doc":"Pointwise multiplication of paths in a topological group. The additive version is probably more\nuseful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L607-L607","name":"Path.add","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.add","doc":"Pointwise addition of paths in a topological additive group."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L592-L597","name":"Path.trans_pi_eq_pi_trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_pi_eq_pi_trans","doc":"Path composition commutes with products "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L587-L588","name":"Path.pi_coe","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.pi_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L580-L583","name":"Path.pi","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.pi","doc":"Given a family of paths, one in each Xᵢ, we take their pointwise product to get a path in\nΠ i, Xᵢ. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L563-L569","name":"Path.trans_prod_eq_prod_trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_prod_eq_prod_trans","doc":"Path composition commutes with products "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L557-L559","name":"Path.prod_coe","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.prod_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L550-L553","name":"Path.prod","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.prod","doc":"Given a path in `X` and a path in `Y`, we can take their pointwise product to get a path in\n`X × Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L537-L538","name":"Path.continuous_trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L529-L533","name":"Continuous.path_trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Continuous.path_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L507-L525","name":"Path.trans_continuous_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_continuous_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L499-L503","name":"Path.continuous_uncurry_extend_of_continuous_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_uncurry_extend_of_continuous_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L494-L495","name":"Path.continuous_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L487-L490","name":"Path.symm_continuous_family","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm_continuous_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L482-L483","name":"Path.cast_coe","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.cast_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L475-L478","name":"Path.trans_cast","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L469-L471","name":"Path.symm_cast","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L461-L465","name":"Path.cast","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.cast","doc":"Casting a path from `x` to `y` to a path from `x'` to `y'` when `x' = x` and `y' = y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L453-L457","name":"Path.map_map","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.map_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L447-L449","name":"Path.map_id","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L439-L443","name":"Path.map_trans","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.map_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L433-L435","name":"Path.map_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.map_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L426-L429","name":"Path.map_coe","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.map_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L417-L422","name":"Path.map","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.map","doc":"Image of a path from `x` to `y` by a continuous map "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L379-L413","name":"Path.trans_range","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L372-L376","name":"Path.refl_trans_refl","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_trans_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L340-L368","name":"Path.trans_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L332-L336","name":"Path.trans_apply","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L321-L329","name":"Path.trans","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.trans","doc":"Concatenation of two paths from `x` to `y` and from `y` to `z`, putting the first\npath on `[0, 1/2]` and the second one on `[1/2, 1]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L312-L313","name":"Path.ofLine_mem","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.ofLine_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L305-L309","name":"Path.ofLine","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.ofLine","doc":"The path obtained from a map defined on `ℝ` by restriction to the unit interval. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L300-L301","name":"Path.refl_extend","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_extend","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L294-L296","name":"Path.extend_of_one_le","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_of_one_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L289-L291","name":"Path.extend_of_le_zero","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_of_le_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L284-L286","name":"Path.extend_range","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L278-L280","name":"Path.extend_extends'","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_extends'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L274-L274","name":"Path.extend_one","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L271-L271","name":"Path.extend_zero","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L266-L268","name":"Path.extend_extends","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend_extends","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L259-L262","name":"ContinuousAt.path_extend","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#ContinuousAt.path_extend","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L252-L256","name":"Filter.Tendsto.path_extend","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Filter.Tendsto.path_extend","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L248-L249","name":"Path.continuous_extend","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_extend","doc":"A useful special case of `Continuous.path_extend`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L241-L243","name":"Continuous.path_extend","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Continuous.path_extend","doc":"See Note [continuity lemma statement]. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L236-L237","name":"Path.extend","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.extend","doc":"A continuous map extending a path to `ℝ`, constant before `0` and after `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L228-L232","name":"Path.continuous_uncurry_iff","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_uncurry_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L223-L225","name":"Continuous.path_eval","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Continuous.path_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L218-L219","name":"Path.continuous_eval","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L215-L216","name":"Path.topologicalSpace","kind":"instance","docLink":"./Mathlib/Topology/PathConnected.html#Path.topologicalSpace","doc":"The following instance defines the topology on the path space to be induced from the\ncompact-open topology on the space `C(I,X)` of continuous maps from `I` to `X`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L192-L198","name":"Path.symm_range","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L186-L188","name":"Path.refl_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L179-L182","name":"Path.symm_symm","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L171-L175","name":"Path.symm","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm","doc":"The reverse of a path from `x` to `y`, as a path from `y` to `x` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L170-L170","name":"Path.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L166-L166","name":"Path.refl_range","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L158-L162","name":"Path.refl","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl","doc":"The constant path from a point to itself "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L157-L157","name":"Path.refl_apply","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L151-L153","name":"Path.hasUncurryPath","kind":"instance","docLink":"./Mathlib/Topology/PathConnected.html#Path.hasUncurryPath","doc":"Any function `φ : Π (a : α), Path (x a) (y a)` can be seen as a function `α × I → X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L147-L148","name":"Path.coe_mk","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L141-L142","name":"Path.coe_toContinuousMap","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.coe_toContinuousMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L134-L135","name":"Path.simps.apply","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.simps.apply","doc":"See Note [custom simps projection]. We need to specify this projection explicitly in this case,\nbecause it is a composition of multiple projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L128-L129","name":"Path.target","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L123-L124","name":"Path.source","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L118-L119","name":"Path.continuous","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L109-L111","name":"Path.coe_mk_mk","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.coe_mk_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L101-L103","name":"Path.ext","kind":"theorem","docLink":"./Mathlib/Topology/PathConnected.html#Path.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L87-L92","name":"Path.continuousMapClass","kind":"instance","docLink":"./Mathlib/Topology/PathConnected.html#Path.continuousMapClass","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L82-L82","name":"Path.target'","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.target'","doc":"The end point of a `Path`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L80-L80","name":"Path.source'","kind":"def","docLink":"./Mathlib/Topology/PathConnected.html#Path.source'","doc":"The start point of a `Path`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L78-L78","name":"Path.mk","kind":"ctor","docLink":"./Mathlib/Topology/PathConnected.html#Path.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/PathConnected.lean#L78-L82","name":"Path","kind":"structure","docLink":"./Mathlib/Topology/PathConnected.html#Path","doc":"Continuous path connecting two points `x` and `y` in a topological space "}]}