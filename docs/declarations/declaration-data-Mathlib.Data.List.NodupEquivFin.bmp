{"name":"Mathlib.Data.List.NodupEquivFin","instances":[],"imports":["Init","Mathlib.Data.Fin.Basic","Mathlib.Data.List.Sort","Mathlib.Data.List.Duplicate"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L244-L250","name":"List.duplicate_iff_exists_distinct_nthLe","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.duplicate_iff_exists_distinct_nthLe","doc":"An element `x : α` of `l : List α` is a duplicate iff it can be found\nat two distinct indices `n m : ℕ` inside the list `l`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L215-L238","name":"List.duplicate_iff_exists_distinct_get","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.duplicate_iff_exists_distinct_get","doc":"An element `x : α` of `l : List α` is a duplicate iff it can be found\nat two distinct indices `n m : ℕ` inside the list `l`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L172-L209","name":"List.sublist_iff_exists_fin_orderEmbedding_get_eq","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.sublist_iff_exists_fin_orderEmbedding_get_eq","doc":"A `l : List α` is `Sublist l l'` for `l' : List α` iff\nthere is `f`, an order-preserving embedding of `Fin l.length` into `Fin l'.length` such that\nany element of `l` found at index `ix` can be found at index `f ix` in `l'`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L148-L165","name":"List.sublist_iff_exists_orderEmbedding_get?_eq","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.sublist_iff_exists_orderEmbedding_get?_eq","doc":"A `l : List α` is `Sublist l l'` for `l' : List α` iff\nthere is `f`, an order-preserving embedding of `ℕ` into `ℕ` such that\nany element of `l` found at index `ix` can be found at index `f ix` in `l'`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L120-L141","name":"List.sublist_of_orderEmbedding_get?_eq","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.sublist_of_orderEmbedding_get?_eq","doc":"If there is `f`, an order-preserving embedding of `ℕ` into `ℕ` such that\nany element of `l` found at index `ix` can be found at index `f ix` in `l'`,\nthen `Sublist l l'`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L108-L109","name":"List.Sorted.coe_getIso_symm_apply","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Sorted.coe_getIso_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L103-L104","name":"List.Sorted.coe_getIso_apply","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Sorted.coe_getIso_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L95-L97","name":"List.Sorted.getIso","kind":"def","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Sorted.getIso","doc":"If `l` is a list sorted w.r.t. `(<)`, then `List.get` defines an order isomorphism between\n`Fin (length l)` and the set of elements of `l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L88-L88","name":"List.Sorted.get_strictMono","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Sorted.get_strictMono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L85-L85","name":"List.Sorted.get_mono","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Sorted.get_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L71-L76","name":"List.Nodup.getEquivOfForallMemList","kind":"def","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquivOfForallMemList","doc":"If `l` lists all the elements of `α` without duplicates, then `List.get` defines\nan equivalence between `Fin l.length` and `α`.\n\nSee `List.Nodup.getBijectionOfForallMemList` for a version without\ndecidable equality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L70-L70","name":"List.Nodup.getEquivOfForallMemList_apply","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquivOfForallMemList_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L70-L70","name":"List.Nodup.getEquivOfForallMemList_symm_apply_val","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquivOfForallMemList_symm_apply_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L58-L62","name":"List.Nodup.getEquiv","kind":"def","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquiv","doc":"If `l` has no duplicates, then `List.get` defines an equivalence between `Fin (length l)` and\nthe set of elements of `l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L57-L57","name":"List.Nodup.getEquiv_apply_coe","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquiv_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L57-L57","name":"List.Nodup.getEquiv_symm_apply_val","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getEquiv_symm_apply_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L45-L50","name":"List.Nodup.getBijectionOfForallMemList","kind":"def","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getBijectionOfForallMemList","doc":"If `l` lists all the elements of `α` without duplicates, then `List.get` defines\na bijection `Fin l.length → α`.  See `List.Nodup.getEquivOfForallMemList`\nfor a version giving an equivalence when there is decidable equality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/NodupEquivFin.lean#L44-L44","name":"List.Nodup.getBijectionOfForallMemList_coe","kind":"theorem","docLink":"./Mathlib/Data/List/NodupEquivFin.html#List.Nodup.getBijectionOfForallMemList_coe","doc":""}]}