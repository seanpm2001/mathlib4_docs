{"name":"Counterexamples.Phillips","instances":[{"typeNames":["Counterexample.DiscreteCopy"],"name":"Counterexample.instTopologicalSpaceDiscreteCopy","className":"TopologicalSpace"},{"typeNames":["Counterexample.DiscreteCopy","Counterexample.instTopologicalSpaceDiscreteCopy"],"name":"Counterexample.instDiscreteTopologyDiscreteCopyInstTopologicalSpaceDiscreteCopy","className":"DiscreteTopology"},{"typeNames":["Counterexample.DiscreteCopy"],"name":"Counterexample.instInhabitedDiscreteCopy","className":"Inhabited"},{"typeNames":["Counterexample.Phillips1940.BoundedAdditiveMeasure"],"name":"Counterexample.Phillips1940.instInhabitedBoundedAdditiveMeasure","className":"Inhabited"},{"typeNames":["Counterexample.Phillips1940.BoundedAdditiveMeasure","Counterexample.Phillips1940.BoundedAdditiveMeasure","Set","Real"],"name":"Counterexample.Phillips1940.instCoeFunBoundedAdditiveMeasureForAllSetReal","className":"CoeFun"},{"typeNames":["Counterexample.Phillips1940.BoundedAdditiveMeasure"],"name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.instNegBoundedAdditiveMeasure","className":"Neg"}],"imports":["Init","Mathlib.Analysis.NormedSpace.HahnBanach.Extension","Mathlib.MeasureTheory.Integral.SetIntegral","Mathlib.MeasureTheory.Measure.Lebesgue.Basic","Mathlib.Topology.ContinuousFunction.Bounded"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L638-L651","name":"Counterexample.Phillips1940.no_pettis_integral","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.no_pettis_integral","doc":"The function `f Hcont : ℝ → (DiscreteCopy ℝ →ᵇ ℝ)` has no Pettis integral. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L633-L634","name":"Counterexample.Phillips1940.norm_bound","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.norm_bound","doc":"The function `f Hcont : ℝ → (DiscreteCopy ℝ →ᵇ ℝ)` is uniformly bounded by `1` in norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L625-L629","name":"Counterexample.Phillips1940.measurable_comp","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.measurable_comp","doc":"The function `f Hcont : ℝ → (DiscreteCopy ℝ →ᵇ ℝ)` is scalarly measurable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L609-L612","name":"Counterexample.Phillips1940.integral_comp","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.integral_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L600-L606","name":"Counterexample.Phillips1940.integrable_comp","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.integrable_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L591-L597","name":"Counterexample.Phillips1940.comp_ae_eq_const","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.comp_ae_eq_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L570-L588","name":"Counterexample.Phillips1940.countable_ne","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.countable_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L559-L567","name":"Counterexample.Phillips1940.apply_f_eq_continuousPart","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.apply_f_eq_continuousPart","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L555-L556","name":"Counterexample.Phillips1940.f","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.f","doc":"A family of bounded functions `f_x` from `ℝ` (seen with the discrete topology) to `ℝ` (in fact\ntaking values in `{0, 1}`), indexed by a real parameter `x`, corresponding to the characteristic\nfunctions of the different fibers of the Sierpinski pathological family "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L534-L535","name":"Counterexample.Phillips1940.countable_spf_mem","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.countable_spf_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L530-L531","name":"Counterexample.Phillips1940.countable_compl_spf","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.countable_compl_spf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L526-L527","name":"Counterexample.Phillips1940.spf","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.spf","doc":"A family of sets in `ℝ` which only miss countably many points, but such that any point is\ncontained in only countably many of them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L501-L521","name":"Counterexample.Phillips1940.sierpinski_pathological_family","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.sierpinski_pathological_family","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L475-L486","name":"Counterexample.Phillips1940.toFunctions_toMeasure_continuousPart","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.toFunctions_toMeasure_continuousPart","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L457-L472","name":"Counterexample.Phillips1940.toFunctions_toMeasure","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.toFunctions_toMeasure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L446-L454","name":"Counterexample.Phillips1940.continuousPart_evalClm_eq_zero","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.continuousPart_evalClm_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L425-L442","name":"ContinuousLinearMap.toBoundedAdditiveMeasure","kind":"def","docLink":"./Counterexamples/Phillips.html#ContinuousLinearMap.toBoundedAdditiveMeasure","doc":"A functional in the dual space of bounded functions gives rise to a bounded additive measure,\nby applying the functional to the indicator functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L419-L420","name":"Counterexample.Phillips1940.norm_indicator_le_one","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.norm_indicator_le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L400-L405","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart_apply_diff","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart_apply_diff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L392-L397","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart_apply_eq_zero_of_countable","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart_apply_eq_zero_of_countable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L387-L389","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.discretePart_apply","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.discretePart_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L378-L384","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.eq_add_parts","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.eq_add_parts","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L374-L375","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.continuousPart","doc":"The continuous part of a bounded additive measure, giving zero measure to every countable\nset. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L368-L369","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.discretePart","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.discretePart","doc":"The discrete part of a bounded additive measure, obtained by restricting the measure to its\ncountable support. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L361-L363","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.apply_countable","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.apply_countable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L357-L358","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.countable_discreteSupport","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.countable_discreteSupport","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L353-L354","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.discreteSupport","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.discreteSupport","doc":"A countable set outside of which the measure gives zero mass to countable sets. We are not\nclaiming this set is unique, but we make an arbitrary choice of such a set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L336-L348","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_discrete_support","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_discrete_support","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L251-L333","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_discrete_support_nonpos","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_discrete_support_nonpos","doc":"There is a maximal countable set of positive measure, in the sense that any countable set\nnot intersecting it has nonpositive measure. Auxiliary lemma to prove `exists_discrete_support`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L245-L246","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.restrict_apply","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.restrict_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L235-L241","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.restrict","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.restrict","doc":"Restricting a bounded additive measure to a subset still gives a bounded additive measure. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L230-L231","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.neg_apply","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.neg_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L223-L227","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.instNegBoundedAdditiveMeasure","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.instNegBoundedAdditiveMeasure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L217-L220","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.empty","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L212-L213","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.le_bound","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.le_bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L208-L209","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.abs_le_bound","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.abs_le_bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L203-L205","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.additive","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.additive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L198-L199","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.C","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.C","doc":"A constant bounding the mass of any set for `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L192-L193","name":"Counterexample.Phillips1940.instCoeFunBoundedAdditiveMeasureForAllSetReal","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.instCoeFunBoundedAdditiveMeasureForAllSetReal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L187-L190","name":"Counterexample.Phillips1940.instInhabitedBoundedAdditiveMeasure","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.instInhabitedBoundedAdditiveMeasure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L182-L182","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_bound","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.exists_bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L181-L181","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.additive'","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.additive'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L180-L180","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.toFun","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L179-L179","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure.mk","kind":"ctor","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L179-L182","name":"Counterexample.Phillips1940.BoundedAdditiveMeasure","kind":"structure","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.BoundedAdditiveMeasure","doc":"A bounded signed finitely additive measure defined on *all* subsets of a type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L164-L167","name":"Counterexample.Phillips1940.extensionToBoundedFunctions_apply","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.extensionToBoundedFunctions_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L159-L161","name":"MeasureTheory.Measure.extensionToBoundedFunctions","kind":"def","docLink":"./Counterexamples/Phillips.html#MeasureTheory.Measure.extensionToBoundedFunctions","doc":"An arbitrary extension of the integral to all bounded functions, as a continuous linear map.\nIt is not at all canonical, and constructed using Hahn-Banach. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L149-L154","name":"Counterexample.Phillips1940.exists_linear_extension_to_boundedFunctions","kind":"theorem","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.exists_linear_extension_to_boundedFunctions","doc":"Given a measure, there exists a continuous linear form on the space of all bounded functions\n(not necessarily measurable) that coincides with the integral on bounded measurable functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L132-L144","name":"Counterexample.Phillips1940.boundedIntegrableFunctionsIntegralCLM","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.boundedIntegrableFunctionsIntegralCLM","doc":"The integral, as a continuous linear map on the subspace of integrable functions in the space\nof all bounded functions on a type. This is a technical device, that we will extend through\nHahn-Banach. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L121-L126","name":"Counterexample.Phillips1940.boundedIntegrableFunctions","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.Phillips1940.boundedIntegrableFunctions","doc":"The subspace of integrable functions in the space of all bounded functions on a type.\nThis is a technical device, used to apply Hahn-Banach theorem to construct an extension of the\nintegral to all bounded functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L106-L107","name":"Counterexample.instInhabitedDiscreteCopy","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.instInhabitedDiscreteCopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L103-L104","name":"Counterexample.instDiscreteTopologyDiscreteCopyInstTopologicalSpaceDiscreteCopy","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.instDiscreteTopologyDiscreteCopyInstTopologicalSpaceDiscreteCopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L100-L101","name":"Counterexample.instTopologicalSpaceDiscreteCopy","kind":"instance","docLink":"./Counterexamples/Phillips.html#Counterexample.instTopologicalSpaceDiscreteCopy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/Phillips.lean#L96-L97","name":"Counterexample.DiscreteCopy","kind":"def","docLink":"./Counterexamples/Phillips.html#Counterexample.DiscreteCopy","doc":"A copy of a type, endowed with the discrete topology "}]}