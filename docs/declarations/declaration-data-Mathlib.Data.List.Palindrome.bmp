{"name":"Mathlib.Data.List.Palindrome","instances":[{"typeNames":["List.Palindrome"],"name":"List.Palindrome.instDecidablePalindrome","className":"Decidable"}],"imports":["Init","Mathlib.Data.List.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L80-L81","name":"List.Palindrome.instDecidablePalindrome","kind":"instance","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.instDecidablePalindrome","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L76-L77","name":"List.Palindrome.map","kind":"theorem","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L71-L73","name":"List.Palindrome.append_reverse","kind":"theorem","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.append_reverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L67-L68","name":"List.Palindrome.iff_reverse_eq","kind":"theorem","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.iff_reverse_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L58-L64","name":"List.Palindrome.of_reverse_eq","kind":"theorem","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.of_reverse_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L53-L55","name":"List.Palindrome.reverse_eq","kind":"theorem","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.reverse_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L46-L46","name":"List.Palindrome.cons_concat","kind":"ctor","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.cons_concat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L45-L45","name":"List.Palindrome.singleton","kind":"ctor","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L44-L44","name":"List.Palindrome.nil","kind":"ctor","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome.nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Palindrome.lean#L43-L46","name":"List.Palindrome","kind":"inductive","docLink":"./Mathlib/Data/List/Palindrome.html#List.Palindrome","doc":"`Palindrome l` asserts that `l` is a palindrome. This is defined inductively:\n\n* The empty list is a palindrome;\n* A list with one element is a palindrome;\n* Adding the same element to both ends of a palindrome results in a bigger palindrome.\n"}]}