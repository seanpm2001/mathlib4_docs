{"name":"Mathlib.Topology.FiberBundle.Trivialization","instances":[{"typeNames":["Pretrivialization","Pretrivialization","Prod"],"name":"Pretrivialization.instCoeFunPretrivializationForAllProd","className":"CoeFun"},{"typeNames":["Trivialization","Trivialization","Prod"],"name":"Trivialization.instCoeFunTrivializationForAllProd","className":"CoeFun"},{"typeNames":["Trivialization","Pretrivialization"],"name":"Trivialization.instCoeTrivializationPretrivialization","className":"Coe"}],"imports":["Init","Mathlib.Data.Bundle","Mathlib.Topology.Algebra.Order.Field","Mathlib.Topology.LocalHomeomorph"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L827-L849","name":"Trivialization.disjointUnion","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.disjointUnion","doc":"Given two bundle trivializations `e`, `e'` over disjoint sets, `e.disjoint_union e' H` is the\nbundle trivialization over the union of the base sets that agrees with `e` and `e'` over their\nbase sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L815-L821","name":"Trivialization.piecewiseLe","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.piecewiseLe","doc":"Given two bundle trivializations `e`, `e'` of a topological fiber bundle `proj : Z → B` over a\nlinearly ordered base `B` and a point `a ∈ e.baseSet ∩ e'.baseSet`, `e.piecewise_le e' a He He'`\nis the bundle trivialization over `Set.ite (Iic a) e.baseSet e'.baseSet` that is equal to `e` on\npoints `p` such that `proj p ≤ a` and is equal to `((e' p).1, h (e' p).2)` otherwise, where\n`h = e'.coord_change_homeomorph e _ _` is the homeomorphism of the fiber such that\n`h (e' p).2 = (e p).2` whenever `e p = a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L799-L806","name":"Trivialization.piecewiseLeOfEq","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.piecewiseLeOfEq","doc":"Given two bundle trivializations `e`, `e'` of a topological fiber bundle `proj : Z → B`\nover a linearly ordered base `B` and a point `a ∈ e.baseSet ∩ e'.baseSet` such that\n`e` equals `e'` on `proj ⁻¹' {a}`, `e.piecewise_le_of_eq e' a He He' Heq` is the bundle\ntrivialization over `Set.ite (Iic a) e.baseSet e'.baseSet` that is equal to `e` on points `p`\nsuch that `proj p ≤ a` and is equal to `e'` otherwise. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L776-L791","name":"Trivialization.piecewise","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.piecewise","doc":"Given two bundle trivializations `e`, `e'` of `proj : Z → B` and a set `s : Set B` such that\nthe base sets of `e` and `e'` intersect `frontier s` on the same set and `e p = e' p` whenever\n`proj p ∈ e.baseSet ∩ frontier s`, `e.piecewise e' s Hs Heq` is the bundle trivialization over\n`Set.ite s e.baseSet e'.baseSet` that is equal to `e` on `proj ⁻¹ s` and is equal to `e'`\notherwise. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L765-L768","name":"Trivialization.frontier_preimage","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.frontier_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L752-L760","name":"Trivialization.restrOpen","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.restrOpen","doc":"Restrict a `Trivialization` to an open set in the base. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L747-L748","name":"Trivialization.isImage_preimage_prod","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.isImage_preimage_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L740-L742","name":"Trivialization.coordChangeHomeomorph_coe","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChangeHomeomorph_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L729-L736","name":"Trivialization.coordChangeHomeomorph","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChangeHomeomorph","doc":"Coordinate transformation in the fiber induced by a pair of bundle trivializations,\nas a homeomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L717-L724","name":"Trivialization.continuous_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuous_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L710-L714","name":"Trivialization.coordChange_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChange_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L705-L707","name":"Trivialization.coordChange_same","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChange_same","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L701-L702","name":"Trivialization.coordChange_same_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChange_same_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L696-L698","name":"Trivialization.coordChange_apply_snd","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChange_apply_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L687-L693","name":"Trivialization.mk_coordChange","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk_coordChange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L683-L684","name":"Trivialization.coordChange","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coordChange","doc":"Coordinate transformation in the fiber induced by a pair of bundle trivializations. See also\n`Trivialization.coordChangeHomeomorph` for a version bundled as `F ≃ₜ F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L676-L678","name":"Trivialization.transFiberHomeomorph_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.transFiberHomeomorph_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L665-L672","name":"Trivialization.transFiberHomeomorph","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.transFiberHomeomorph","doc":"If `e` is a `Trivialization` of `proj : Z → B` with fiber `F` and `h` is a homeomorphism\n`F ≃ₜ F'`, then `e.trans_fiber_homeomorph h` is the trivialization of `proj` with the fiber `F'`\nthat sends `p : Z` to `((e p).1, h (e p).2)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L649-L657","name":"Trivialization.continuousOn_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuousOn_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L644-L646","name":"Trivialization.apply_mk_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.apply_mk_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L639-L641","name":"Trivialization.symm_apply_apply_mk","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_apply_apply_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L634-L636","name":"Trivialization.symm_proj_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_proj_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L629-L631","name":"Trivialization.mk_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L624-L626","name":"Trivialization.symm_apply_of_not_mem","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_apply_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L619-L621","name":"Trivialization.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L615-L616","name":"Trivialization.symm","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm","doc":"A fiberwise inverse to `e'`. The function `F → E x` that induces a local inverse\n`B × F → total_space E` of `e'` on `e'.baseSet`. It is defined to be `0` outside `e'.baseSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L604-L606","name":"Trivialization.symm_coe_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_coe_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L598-L600","name":"Trivialization.symm_apply_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L594-L595","name":"Trivialization.mk_mem_target","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk_mem_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L590-L591","name":"Trivialization.coe_coe_fst","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_coe_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L586-L586","name":"Trivialization.open_target'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.open_target'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L581-L582","name":"Trivialization.coe_mem_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_mem_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L577-L578","name":"Trivialization.continuousOn","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuousOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L566-L572","name":"Trivialization.continuousAt_of_comp_left","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuousAt_of_comp_left","doc":"Read off the continuity of a function `f : X → Z` at `x : X` by transferring via a\ntrivialization of `Z` containing `f x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L554-L561","name":"Trivialization.continuousAt_of_comp_right","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuousAt_of_comp_right","doc":"Read off the continuity of a function `f : Z → X` at `z : Z` by transferring via a\ntrivialization of `Z` containing `z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L540-L549","name":"Trivialization.compHomeomorph","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.compHomeomorph","doc":"Composition of a `Trivialization` and a `Homeomorph`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L535-L536","name":"Trivialization.continuousAt_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.continuousAt_proj","doc":"In the domain of a bundle trivialization, the projection is continuous"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L528-L531","name":"Trivialization.preimageSingletonHomeomorph_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageSingletonHomeomorph_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L522-L524","name":"Trivialization.preimageSingletonHomeomorph_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageSingletonHomeomorph_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L515-L518","name":"Trivialization.preimageSingletonHomeomorph","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageSingletonHomeomorph","doc":"Each fiber of a trivialization is homeomorphic to the specified fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L508-L511","name":"Trivialization.sourceHomeomorphBaseSetProd_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.sourceHomeomorphBaseSetProd_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L502-L504","name":"Trivialization.sourceHomeomorphBaseSetProd_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.sourceHomeomorphBaseSetProd_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L497-L498","name":"Trivialization.sourceHomeomorphBaseSetProd","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.sourceHomeomorphBaseSetProd","doc":"The source is homeomorphic to the product of the base set with the fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L491-L493","name":"Trivialization.preimageHomeomorph_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageHomeomorph_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L485-L487","name":"Trivialization.preimageHomeomorph_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageHomeomorph_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L478-L481","name":"Trivialization.preimageHomeomorph","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimageHomeomorph","doc":"The preimage of a subset of the base set is homeomorphic to the product with the fiber. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L471-L475","name":"Trivialization.nhds_eq_inf_comap","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.nhds_eq_inf_comap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L458-L469","name":"Trivialization.tendsto_nhds_iff","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.tendsto_nhds_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L448-L455","name":"Trivialization.image_preimage_eq_prod_univ","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.image_preimage_eq_prod_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L444-L445","name":"Trivialization.preimage_subset_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.preimage_subset_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L439-L441","name":"Trivialization.map_proj_nhds","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.map_proj_nhds","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L435-L436","name":"Trivialization.coe_fst_eventuallyEq_proj'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_fst_eventuallyEq_proj'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L431-L432","name":"Trivialization.coe_fst_eventuallyEq_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_fst_eventuallyEq_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L426-L428","name":"Trivialization.symm_trans_target_eq","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_trans_target_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L421-L423","name":"Trivialization.symm_trans_source_eq","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_trans_source_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L417-L418","name":"Trivialization.symm_apply_mk_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.symm_apply_mk_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L411-L413","name":"Trivialization.apply_symm_apply'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.apply_symm_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L407-L408","name":"Trivialization.apply_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.apply_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L403-L404","name":"Trivialization.proj_surjOn_baseSet","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.proj_surjOn_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L398-L400","name":"Trivialization.proj_symm_apply'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.proj_symm_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L394-L395","name":"Trivialization.proj_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.proj_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L390-L391","name":"Trivialization.map_target","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.map_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L386-L387","name":"Trivialization.mem_target","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mem_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L381-L383","name":"Trivialization.coe_mk","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L375-L377","name":"Trivialization.source_inter_preimage_target_inter","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.source_inter_preimage_target_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L371-L372","name":"Trivialization.mk_proj_snd'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk_proj_snd'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L367-L368","name":"Trivialization.mk_proj_snd","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk_proj_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L363-L364","name":"Trivialization.coe_fst'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_fst'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L360-L360","name":"Trivialization.mem_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mem_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L357-L357","name":"Trivialization.eqOn","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.eqOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L353-L354","name":"Trivialization.coe_fst","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L348-L349","name":"Trivialization.coe_coe","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L340-L344","name":"Trivialization.toPretrivialization_injective","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.toPretrivialization_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L337-L338","name":"Trivialization.instCoeTrivializationPretrivialization","kind":"instance","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.instCoeTrivializationPretrivialization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L335-L335","name":"Trivialization.instCoeFunTrivializationForAllProd","kind":"instance","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.instCoeFunTrivializationForAllProd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L331-L332","name":"Trivialization.toPretrivialization","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.toPretrivialization","doc":"Natural identification as a `Pretrivialization`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L328-L328","name":"Trivialization.toFun'","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.toFun'","doc":"Coercion of a trivialization to a function. We don't use `e.toFun` in the `CoeFun` instance\nbecause it is actually `e.toLocalEquiv.toFun`, so `simp` will apply lemmas about\n`toLocalEquiv`. While we may want to switch to this behavior later, doing it mid-port will break a\nlot of proofs.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L319-L321","name":"Trivialization.ext'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.ext'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L310-L310","name":"Trivialization.proj_toFun","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.proj_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L309-L309","name":"Trivialization.target_eq","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.target_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L308-L308","name":"Trivialization.source_eq","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.source_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L307-L307","name":"Trivialization.open_baseSet","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.open_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L306-L306","name":"Trivialization.baseSet","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L305-L305","name":"Trivialization.mk","kind":"ctor","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L305-L310","name":"Trivialization","kind":"structure","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Trivialization","doc":"A structure extending local homeomorphisms, defining a local trivialization of a projection\n`proj : Z → B` with fiber `F`, as a local homeomorphism between `Z` and `B × F` defined between two\nsets of the form `proj ⁻¹' baseSet` and `baseSet × F`, acting trivially on the first coordinate.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L289-L291","name":"Pretrivialization.apply_mk_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.apply_mk_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L284-L286","name":"Pretrivialization.symm_apply_apply_mk","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_apply_apply_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L279-L281","name":"Pretrivialization.symm_proj_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_proj_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L274-L276","name":"Pretrivialization.mk_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mk_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L269-L271","name":"Pretrivialization.coe_symm_of_not_mem","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_symm_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L264-L266","name":"Pretrivialization.symm_apply_of_not_mem","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_apply_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L259-L261","name":"Pretrivialization.symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L253-L256","name":"Pretrivialization.symm","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm","doc":"A fiberwise inverse to `e`. This is the function `F → E b` that induces a local inverse\n`B × F → total_space E` of `e` on `e.baseSet`. It is defined to be `0` outside `e.baseSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L242-L244","name":"Pretrivialization.symm_coe_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_coe_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L238-L239","name":"Pretrivialization.mk_mem_target","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mk_mem_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L234-L235","name":"Pretrivialization.coe_coe_fst","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_coe_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L229-L230","name":"Pretrivialization.coe_mem_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_mem_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L222-L224","name":"Pretrivialization.symm_trans_target_eq","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_trans_target_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L216-L219","name":"Pretrivialization.symm_trans_source_eq","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_trans_source_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L211-L213","name":"Pretrivialization.symm_trans_symm","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_trans_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L206-L208","name":"Pretrivialization.trans_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.trans_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L201-L203","name":"Pretrivialization.target_inter_preimage_symm_source_eq","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.target_inter_preimage_symm_source_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L192-L198","name":"Pretrivialization.preimage_symm_proj_inter","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.preimage_symm_proj_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L184-L188","name":"Pretrivialization.preimage_symm_proj_baseSet","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.preimage_symm_proj_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L178-L180","name":"Pretrivialization.symm_apply_mk_proj","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_apply_mk_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L173-L174","name":"Pretrivialization.symm_apply_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.symm_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L168-L170","name":"Pretrivialization.apply_symm_apply'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.apply_symm_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L164-L165","name":"Pretrivialization.apply_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.apply_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L158-L161","name":"Pretrivialization.proj_surjOn_baseSet","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.proj_surjOn_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L153-L155","name":"Pretrivialization.proj_symm_apply'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.proj_symm_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L148-L150","name":"Pretrivialization.proj_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.proj_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L144-L145","name":"Pretrivialization.mem_target","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mem_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L140-L141","name":"Pretrivialization.setSymm","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.setSymm","doc":"Composition of inverse and coercion from the subtype of the target. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L135-L136","name":"Pretrivialization.mk_proj_snd'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mk_proj_snd'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L131-L132","name":"Pretrivialization.mk_proj_snd","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mk_proj_snd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L128-L128","name":"Pretrivialization.eqOn","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.eqOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L124-L125","name":"Pretrivialization.coe_fst'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_fst'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L121-L121","name":"Pretrivialization.mem_source","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mem_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L117-L118","name":"Pretrivialization.coe_fst","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L112-L113","name":"Pretrivialization.coe_coe","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L105-L109","name":"Pretrivialization.toLocalEquiv_injective","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.toLocalEquiv_injective","doc":"If the fiber is nonempty, then the projection to "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L96-L102","name":"Pretrivialization.ext","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L90-L92","name":"Pretrivialization.ext'","kind":"theorem","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.ext'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L87-L87","name":"Pretrivialization.instCoeFunPretrivializationForAllProd","kind":"instance","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.instCoeFunPretrivializationForAllProd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L85-L85","name":"Pretrivialization.toFun'","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.toFun'","doc":"Coercion of a pretrivialization to a function. We don't use `e.toFun` in the `CoeFun` instance\nbecause it is actually `e.toLocalEquiv.toFun`, so `simp` will apply lemmas about\n`toLocalEquiv`. While we may want to switch to this behavior later, doing it mid-port will break a\nlot of proofs.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L73-L73","name":"Pretrivialization.proj_toFun","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.proj_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L72-L72","name":"Pretrivialization.target_eq","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.target_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L71-L71","name":"Pretrivialization.source_eq","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.source_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L70-L70","name":"Pretrivialization.open_baseSet","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.open_baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L69-L69","name":"Pretrivialization.baseSet","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.baseSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L68-L68","name":"Pretrivialization.open_target","kind":"def","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.open_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L67-L67","name":"Pretrivialization.mk","kind":"ctor","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/FiberBundle/Trivialization.lean#L67-L73","name":"Pretrivialization","kind":"structure","docLink":"./Mathlib/Topology/FiberBundle/Trivialization.html#Pretrivialization","doc":"This structure contains the information left for a local trivialization (which is implemented\nbelow as `Trivialization F proj`) if the total space has not been given a topology, but we\nhave a topology on both the fiber and the base space. Through the construction\n`topological_fiber_prebundle F proj` it will be possible to promote a\n`Pretrivialization F proj` to a `Trivialization F proj`. "}]}