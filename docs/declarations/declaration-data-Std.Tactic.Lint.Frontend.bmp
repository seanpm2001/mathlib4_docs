{"name":"Std.Tactic.Lint.Frontend","instances":[{"typeNames":["Std.Tactic.Lint.LintVerbosity"],"name":"Std.Tactic.Lint.instInhabitedLintVerbosity","className":"Inhabited"},{"typeNames":["Eq","Std.Tactic.Lint.LintVerbosity"],"name":"Std.Tactic.Lint.instDecidableEqLintVerbosity","className":"Decidable"},{"typeNames":["Std.Tactic.Lint.LintVerbosity"],"name":"Std.Tactic.Lint.instReprLintVerbosity","className":"Repr"}],"imports":["Init","Lean.Util.Paths","Std.Tactic.Lint.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L252-L260","name":"Std.Tactic.Lint.«command#list_linters»","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.«command#list_linters»","doc":"The command `#list_linters` prints a list of all available linters. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L211-L249","name":"Std.Tactic.Lint.«command#lint+-*Only___»","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.«command#lint+-*Only___»","doc":"The command `#lint` runs the linters on the current file (by default). "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L207-L208","name":"Std.Tactic.Lint.inProject","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.inProject","doc":"The `in foo` config argument allows running the linter on a specified project. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L198-L205","name":"Std.Tactic.Lint.getDeclsInPackage","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.getDeclsInPackage","doc":"Get the list of all declarations in the specified package. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L194-L195","name":"Std.Tactic.Lint.getAllDecls","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.getAllDecls","doc":"Get the list of all declarations in the environment. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L190-L191","name":"Std.Tactic.Lint.getDeclsInCurrModule","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.getDeclsInCurrModule","doc":"Get the list of declarations in the current module. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L159-L187","name":"Std.Tactic.Lint.formatLinterResults","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.formatLinterResults","doc":"Formats the linter results as Lean code with comments and `#check` commands.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L136-L154","name":"Std.Tactic.Lint.groupedByFilename","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.groupedByFilename","doc":"Formats a map of linter warnings grouped by filename with `-- filename` comments.\nThe first `drop_fn_chars` characters are stripped from the filename.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L126-L130","name":"Std.Tactic.Lint.printWarnings","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.printWarnings","doc":"Formats a map of linter warnings using `print_warning`, sorted by line number. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L117-L123","name":"Std.Tactic.Lint.printWarning","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.printWarning","doc":"Formats a linter warning as `#check` command with comment. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L109-L114","name":"Std.Tactic.Lint.sortResults","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.sortResults","doc":"Sorts a map with declaration keys as names by line number. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L85-L106","name":"Std.Tactic.Lint.lintCore","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.lintCore","doc":"Runs all the specified linters on all the specified declarations in parallel,\nproducing a list of results.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L70-L79","name":"Std.Tactic.Lint.getChecks","kind":"def","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.getChecks","doc":"`getChecks slow extra use_only` produces a list of linters.\n`extras` is a list of names that should resolve to declarations with type `linter`.\nIf `useOnly` is true, it only uses the linters in `extra`.\nOtherwise, it uses all linters in the environment tagged with `@[std_linter]`.\nIf `slow` is false, it only uses the fast default tests. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L63-L63","name":"Std.Tactic.Lint.instReprLintVerbosity","kind":"instance","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.instReprLintVerbosity","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L63-L63","name":"Std.Tactic.Lint.instDecidableEqLintVerbosity","kind":"instance","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.instDecidableEqLintVerbosity","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L63-L63","name":"Std.Tactic.Lint.instInhabitedLintVerbosity","kind":"instance","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.instInhabitedLintVerbosity","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L61-L62","name":"Std.Tactic.Lint.LintVerbosity.high","kind":"ctor","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.LintVerbosity.high","doc":"`high`: print output of every check. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L59-L60","name":"Std.Tactic.Lint.LintVerbosity.medium","kind":"ctor","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.LintVerbosity.medium","doc":"`medium`: only print failing checks, print confirmation on success. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L57-L58","name":"Std.Tactic.Lint.LintVerbosity.low","kind":"ctor","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.LintVerbosity.low","doc":"`low`: only print failing checks, print nothing on success. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Tactic/Lint/Frontend.lean#L56-L63","name":"Std.Tactic.Lint.LintVerbosity","kind":"inductive","docLink":"./Std/Tactic/Lint/Frontend.html#Std.Tactic.Lint.LintVerbosity","doc":"Verbosity for the linter output. "}]}