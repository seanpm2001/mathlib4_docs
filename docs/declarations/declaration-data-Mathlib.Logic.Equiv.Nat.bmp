{"name":"Mathlib.Logic.Equiv.Nat","instances":[],"imports":["Init","Mathlib.Data.Nat.Pairing"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L63-L67","name":"Equiv.prodEquivOfEquivNat","kind":"def","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.prodEquivOfEquivNat","doc":"An equivalence between `α × α` and `α`, given that there is an equivalence between `α` and `ℕ`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L57-L58","name":"Equiv.intEquivNat","kind":"def","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.intEquivNat","doc":"An equivalence between `ℤ` and `ℕ`, through `ℤ ≃ ℕ ⊕ ℕ` and `ℕ ⊕ ℕ ≃ ℕ`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L51-L52","name":"Equiv.natSumNatEquivNat_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.natSumNatEquivNat_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L44-L45","name":"Equiv.natSumNatEquivNat","kind":"def","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.natSumNatEquivNat","doc":"An equivalence between `ℕ ⊕ ℕ` and `ℕ`, by mapping `(Sum.inl x)` to `2 * x` and `(Sum.inr x)` to\n`2 * x + 1`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L43-L43","name":"Equiv.natSumNatEquivNat_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.natSumNatEquivNat_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L31-L35","name":"Equiv.boolProdNatEquivNat","kind":"def","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.boolProdNatEquivNat","doc":"An equivalence between `Bool × ℕ` and `ℕ`, by mapping `(true, x)` to `2 * x + 1` and\n`(false, x)` to `2 * x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L30-L30","name":"Equiv.boolProdNatEquivNat_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.boolProdNatEquivNat_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Nat.lean#L30-L30","name":"Equiv.boolProdNatEquivNat_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Nat.html#Equiv.boolProdNatEquivNat_symm_apply","doc":""}]}