{"name":"Mathlib.Data.Polynomial.Module","instances":[{"typeNames":["PolynomialModule"],"name":"instInhabitedPolynomialModule","className":"Inhabited"},{"typeNames":["PolynomialModule"],"name":"instAddCommGroupPolynomialModule","className":"AddCommGroup"},{"typeNames":["PolynomialModule","CommSemiring.toSemiring","AddCommGroup.toAddCommMonoid","PolynomialModule","instAddCommGroupPolynomialModule"],"name":"PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","className":"Module"},{"typeNames":["PolynomialModule","Nat","Nat"],"name":"PolynomialModule.funLike","className":"FunLike"},{"typeNames":["PolynomialModule","PolynomialModule","Nat"],"name":"PolynomialModule.instCoeFunPolynomialModuleForAllNat","className":"CoeFun"},{"typeNames":["Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","PolynomialModule","Polynomial.semiring","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","PolynomialModule","instAddCommGroupPolynomialModule"],"name":"PolynomialModule.polynomialModule","className":"Module"},{"typeNames":["PolynomialModule","Algebra.toSMul","CommSemiring.toSemiring","CommRing.toCommSemiring","SMulZeroClass.toSMul","PolynomialModule","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","instAddCommGroupPolynomialModule","SMulWithZero.toSMulZeroClass","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","CommRing.toCommSemiring","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","CommSemiring.toSemiring","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","SMulZeroClass.toSMul","PolynomialModule","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","instAddCommGroupPolynomialModule","SMulWithZero.toSMulZeroClass","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","CommSemiring.toSemiring","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule"],"name":"PolynomialModule.instIsScalarTowerPolynomialModuleToSMulToSemiringToCommSemiringToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidInstAddCommGroupPolynomialModuleToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToMulActionWithZeroToAddCommMonoidInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModuleToSMulToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","className":"IsScalarTower"},{"typeNames":["Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","PolynomialModule","Algebra.toSMul","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","Polynomial.semiring","Polynomial.algebraOfAlgebra","SMulZeroClass.toSMul","Polynomial","CommSemiring.toSemiring","CommRing.toCommSemiring","PolynomialModule","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","instAddCommGroupPolynomialModule","SMulWithZero.toSMulZeroClass","Polynomial.zero","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","Polynomial.semiring","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","PolynomialModule.polynomialModule","SMulZeroClass.toSMul","PolynomialModule","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","instAddCommGroupPolynomialModule","SMulWithZero.toSMulZeroClass","CommMonoidWithZero.toZero","CommSemiring.toCommMonoidWithZero","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","CommSemiring.toSemiring","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule"],"name":"PolynomialModule.isScalarTower'","className":"IsScalarTower"}],"imports":["Init","Mathlib.RingTheory.FiniteType"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L349-L352","name":"PolynomialModule.comp_smul","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.comp_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L337-L346","name":"PolynomialModule.comp_eval","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.comp_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L331-L334","name":"PolynomialModule.comp_single","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.comp_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L325-L328","name":"PolynomialModule.comp","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.comp","doc":"`comp p q` is the composition of `p : R[X]` and `q : M[X]` as `q(p(x))`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L324-L324","name":"PolynomialModule.comp_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L316-L318","name":"PolynomialModule.eval_map'","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_map'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L305-L312","name":"PolynomialModule.eval_map","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L291-L301","name":"PolynomialModule.eval_smul","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L287-L288","name":"PolynomialModule.eval_lsingle","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_lsingle","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L282-L283","name":"PolynomialModule.eval_single","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L269-L278","name":"PolynomialModule.eval","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval","doc":"Evaluate a polynomial `p : PolynomialModule R M` at `r : R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L268-L268","name":"PolynomialModule.eval_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.eval_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L254-L264","name":"PolynomialModule.map_smul","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.map_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L250-L251","name":"PolynomialModule.map_single","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.map_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L245-L246","name":"PolynomialModule.map","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.map","doc":"The image of a polynomial under a linear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L235-L237","name":"PolynomialModule.equivPolynomial","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.equivPolynomial","doc":"`PolynomialModule R S` is isomorphic to `S[X]` as an `R` module. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L198-L231","name":"PolynomialModule.equivPolynomialSelf","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.equivPolynomialSelf","doc":"`PolynomialModule R R` is isomorphic to `R[X]` as an `R[X]` module. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L180-L194","name":"PolynomialModule.smul_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.smul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L165-L177","name":"PolynomialModule.smul_single_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.smul_single_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L147-L161","name":"PolynomialModule.monomial_smul_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.monomial_smul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L131-L143","name":"PolynomialModule.monomial_smul_single","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.monomial_smul_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L122-L127","name":"PolynomialModule.isScalarTower'","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.isScalarTower'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L118-L120","name":"PolynomialModule.instIsScalarTowerPolynomialModuleToSMulToSemiringToCommSemiringToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidInstAddCommGroupPolynomialModuleToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToMulActionWithZeroToAddCommMonoidInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModuleToSMulToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.instIsScalarTowerPolynomialModuleToSMulToSemiringToCommSemiringToSMulToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoidInstAddCommGroupPolynomialModuleToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToMulActionWithZeroToAddCommMonoidInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModuleToSMulToSMulZeroClassToZeroToCommMonoidWithZeroToSMulWithZeroToMonoidWithZeroToSemiringToMulActionWithZeroInstModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L114-L115","name":"PolynomialModule.polynomialModule","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.polynomialModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L108-L110","name":"PolynomialModule.induction_linear","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.induction_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L102-L103","name":"PolynomialModule.single_smul","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.single_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L98-L99","name":"PolynomialModule.lsingle_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.lsingle_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L94-L95","name":"PolynomialModule.lsingle","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.lsingle","doc":"`PolynomialModule.single` as a linear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L89-L90","name":"PolynomialModule.single_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.single_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L85-L86","name":"PolynomialModule.single","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.single","doc":"The monomial `m * x ^ i`. This is defeq to `Finsupp.singleAddHom`, and is redefined here\nso that it has the desired type signature.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L80-L81","name":"PolynomialModule.add_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L77-L78","name":"PolynomialModule.zero_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L74-L75","name":"PolynomialModule.instCoeFunPolynomialModuleForAllNat","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.instCoeFunPolynomialModuleForAllNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L71-L72","name":"PolynomialModule.funLike","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.funLike","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L68-L69","name":"PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule.instModulePolynomialModuleToSemiringToAddCommMonoidInstAddCommGroupPolynomialModule","doc":"This is required to have the `IsScalarTower S R M` instance to avoid diamonds. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L58-L58","name":"instAddCommGroupPolynomialModule","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#instAddCommGroupPolynomialModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L57-L57","name":"instInhabitedPolynomialModule","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Module.html#instInhabitedPolynomialModule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Module.lean#L51-L51","name":"PolynomialModule","kind":"def","docLink":"./Mathlib/Data/Polynomial/Module.html#PolynomialModule","doc":"The `R[X]`-module `M[X]` for an `R`-module `M`.\nThis is isomorphic (as an `R`-module) to `M[X]` when `M` is a ring.\n\nWe require all the module instances `Module S (PolynomialModule R M)` to factor through `R` except\n`Module R[X] (PolynomialModule R M)`.\nIn this constraint, we have the following instances for example :\n- `R` acts on `PolynomialModule R R[X]`\n- `R[X]` acts on `PolynomialModule R R[X]` as `R[Y]` acting on `R[X][Y]`\n- `R` acts on `PolynomialModule R[X] R[X]`\n- `R[X]` acts on `PolynomialModule R[X] R[X]` as `R[X]` acting on `R[X][Y]`\n- `R[X][X]` acts on `PolynomialModule R[X] R[X]` as `R[X][Y]` acting on itself\n\nThis is also the reason why `R` is included in the alias, or else there will be two different\ninstances of `Module R[X] (PolynomialModule R[X])`.\n\nSee https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2315065.20polynomial.20modules\nfor the full discussion.\n"}]}