{"name":"Mathlib.Data.Seq.Computation","instances":[{"typeNames":["Computation"],"name":"Computation.instCoeTCComputation","className":"CoeTC"},{"typeNames":["Computation"],"name":"Computation.instInhabitedComputation","className":"Inhabited"},{"typeNames":["Computation"],"name":"Computation.instMembershipComputation","className":"Membership"},{"typeNames":["Computation.pure"],"name":"Computation.ret_terminates","className":"Computation.Terminates"},{"typeNames":["Computation.think"],"name":"Computation.think_terminates","className":"Computation.Terminates"},{"typeNames":["Computation.thinkN"],"name":"Computation.thinkN_terminates","className":"Computation.Terminates"},{"typeNames":["Computation"],"name":"Computation.instBindComputation","className":"Bind"},{"typeNames":["Computation.bind"],"name":"Computation.terminates_bind","className":"Computation.Terminates"},{"typeNames":["Computation"],"name":"Computation.monad","className":"Monad"},{"typeNames":["Computation","Computation.monad"],"name":"Computation.instLawfulMonadComputationMonad","className":"LawfulMonad"},{"typeNames":["Computation.map"],"name":"Computation.terminates_map","className":"Computation.Terminates"},{"typeNames":["Computation"],"name":"Computation.instAlternativeComputation","className":"Alternative"}],"imports":["Init","Mathlib.Data.Stream.Init","Mathlib.Tactic.Common"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1303-L1309","name":"Computation.lift_rel_rec","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.lift_rel_rec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1289-L1300","name":"Computation.LiftRelRec.lem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelRec.lem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1284-L1286","name":"Computation.LiftRelAux.ret_right","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux.ret_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1278-L1280","name":"Computation.LiftRelAux.swap","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1267-L1275","name":"Computation.LiftRelAux.ret_left","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux.ret_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1262-L1264","name":"Computation.LiftRelAux_inr_inr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux_inr_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1259-L1261","name":"Computation.LiftRelAux_inr_inl","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux_inr_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1256-L1258","name":"Computation.LiftRelAux_inl_inr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux_inl_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1255-L1255","name":"Computation.LiftRelAux_inl_inl","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux_inl_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1245-L1250","name":"Computation.LiftRelAux","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRelAux","doc":"Alternate definition of `LiftRel` over relations between `Computation`s"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1238-L1241","name":"Computation.map_congr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1226-L1234","name":"Computation.liftRel_map","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1219-L1223","name":"Computation.liftRel_congr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1214-L1216","name":"Computation.liftRel_mem_cases","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_mem_cases","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1209-L1211","name":"Computation.liftRel_think_right","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_think_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1201-L1205","name":"Computation.liftRel_think_left","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_think_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1194-L1197","name":"Computation.liftRel_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1187-L1188","name":"Computation.liftRel_pure_right","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_pure_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1179-L1183","name":"Computation.liftRel_pure_left","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_pure_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1160-L1175","name":"Computation.liftRel_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1145-L1157","name":"Computation.liftRel_def","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1140-L1142","name":"Computation.exists_of_LiftRel_right","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.exists_of_LiftRel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1135-L1137","name":"Computation.exists_of_LiftRel_left","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.exists_of_LiftRel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1129-L1132","name":"Computation.liftRel_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.liftRel_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1122-L1126","name":"Computation.rel_of_LiftRel","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.rel_of_LiftRel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1111-L1119","name":"Computation.terminates_of_LiftRel","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_of_LiftRel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1100-L1108","name":"Computation.LiftRel.imp","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1091-L1097","name":"Computation.LiftRel.equiv","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1079-L1088","name":"Computation.LiftRel.trans","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1069-L1076","name":"Computation.LiftRel.symm","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1065-L1066","name":"Computation.LiftRel.refl","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1055-L1062","name":"Computation.lift_eq_iff_equiv","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.lift_eq_iff_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1050-L1052","name":"Computation.LiftRel.swap","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1046-L1047","name":"Computation.LiftRel","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.LiftRel","doc":"`LiftRel R ca cb` is a generalization of `Equiv` to relations other than\nequality. It asserts that if `ca` terminates with `a`, then `cb` terminates with\nsome `b` such that `R a b`, and if `cb` terminates with `b` then `ca` terminates\nwith some `a` such that `R a b`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1038-L1039","name":"Computation.equiv_pure_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.equiv_pure_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1028-L1035","name":"Computation.bind_congr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1024-L1024","name":"Computation.thinkN_equiv","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.thinkN_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1021-L1021","name":"Computation.think_equiv","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1016-L1018","name":"Computation.get_equiv","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1012-L1013","name":"Computation.promises_congr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.promises_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1008-L1009","name":"Computation.terminates_congr","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1004-L1005","name":"Computation.equiv_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.equiv_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L1000-L1001","name":"Computation.Equiv.equivalence","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Equiv.equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L996-L997","name":"Computation.Equiv.trans","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Equiv.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L992-L992","name":"Computation.Equiv.symm","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Equiv.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L988-L988","name":"Computation.Equiv.refl","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Equiv.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L984-L985","name":"Computation.«term_~_»","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.«term_~_»","doc":"equivalence relation for computations"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L979-L980","name":"Computation.Equiv","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Equiv","doc":"`c₁ ~ c₂` asserts that `c₁` and `c₂` either both terminate with the same result,\nor both loop forever. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L970-L974","name":"Computation.orelse_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.orelse_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L962-L966","name":"Computation.empty_orelse","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.empty_orelse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L954-L958","name":"Computation.orelse_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.orelse_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L945-L949","name":"Computation.orelse_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.orelse_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L936-L940","name":"Computation.ret_orElse","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.ret_orElse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L929-L932","name":"Computation.instAlternativeComputation","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instAlternativeComputation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L917-L926","name":"Computation.orElse","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.orElse","doc":"`c₁ <|> c₂` calculates `c₁` and `c₂` simultaneously, returning\nthe first one that gives a result. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L907-L911","name":"Computation.terminates_map_iff","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_map_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L903-L904","name":"Computation.terminates_map","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L895-L900","name":"Computation.exists_of_mem_map","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.exists_of_mem_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L891-L892","name":"Computation.mem_map","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L887-L888","name":"Computation.map_think'","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_think'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L882-L883","name":"Computation.map_pure'","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_pure'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L877-L878","name":"Computation.pure_def","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.pure_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L872-L873","name":"Computation.has_map_eq_map","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.has_map_eq_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L866-L870","name":"Computation.instLawfulMonadComputationMonad","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instLawfulMonadComputationMonad","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L861-L864","name":"Computation.monad","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.monad","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L855-L858","name":"Computation.bind_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L848-L852","name":"Computation.exists_of_mem_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.exists_of_mem_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L833-L845","name":"Computation.of_results_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.of_results_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L827-L830","name":"Computation.length_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.length_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L821-L823","name":"Computation.get_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L815-L817","name":"Computation.terminates_bind","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L808-L812","name":"Computation.mem_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L792-L805","name":"Computation.results_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L774-L789","name":"Computation.bind_assoc","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L762-L770","name":"Computation.bind_pure'","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind_pure'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L748-L757","name":"Computation.bind_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L743-L744","name":"Computation.think_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L727-L739","name":"Computation.ret_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.ret_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L719-L723","name":"Computation.map_comp","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L711-L716","name":"Computation.map_id","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L706-L707","name":"Computation.destruct_map","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L701-L702","name":"Computation.map_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L696-L697","name":"Computation.map_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L691-L692","name":"Computation.join","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.join","doc":"Flatten a computation of computations into a single computation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L686-L687","name":"Computation.has_bind_eq_bind","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.has_bind_eq_bind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L683-L684","name":"Computation.instBindComputation","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instBindComputation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L679-L680","name":"Computation.bind","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.bind","doc":"Compose two computations into a monadic `bind` operation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L668-L674","name":"Computation.Bind.f","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Bind.f","doc":"bind over a function mapping `α` to a `Computation`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L661-L663","name":"Computation.Bind.g","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Bind.g","doc":"bind over a `Sum` of `Computation`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L651-L657","name":"Computation.map","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.map","doc":"Map a function on the result of a computation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L642-L647","name":"Computation.terminatesRecOn","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminatesRecOn","doc":"Recursor based on assertion of `Terminates`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L633-L638","name":"Computation.memRecOn","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.memRecOn","doc":"Recursor based on membership"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L626-L628","name":"Computation.eq_thinkN'","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.eq_thinkN'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L611-L622","name":"Computation.eq_thinkN","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.eq_thinkN","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L605-L607","name":"Computation.length_thinkN","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.length_thinkN","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L599-L600","name":"Computation.results_thinkN_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_thinkN_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L592-L595","name":"Computation.results_thinkN","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_thinkN","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L586-L589","name":"Computation.results_think_iff","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_think_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L578-L582","name":"Computation.of_results_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.of_results_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L573-L575","name":"Computation.results_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L561-L570","name":"Computation.length_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.length_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L556-L557","name":"Computation.results_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L551-L553","name":"Computation.length_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.length_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L546-L547","name":"Computation.get_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L540-L542","name":"Computation.exists_results_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.exists_results_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L536-L537","name":"Computation.Results.len_unique","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results.len_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L531-L533","name":"Computation.Results.val_unique","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results.val_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L527-L528","name":"Computation.Results.length","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results.length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L523-L524","name":"Computation.Results.terminates","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results.terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L519-L520","name":"Computation.Results.mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results.mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L515-L516","name":"Computation.results_of_terminates'","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_of_terminates'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L510-L512","name":"Computation.results_of_terminates","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.results_of_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L506-L507","name":"Computation.Results","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Results","doc":"`Results s a n` completely characterizes a terminating computation:\nit asserts that `s` terminates after exactly `n` steps, with result `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L498-L499","name":"Computation.get_eq_of_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_eq_of_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L491-L495","name":"Computation.mem_of_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_of_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L488-L488","name":"Computation.get_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L483-L484","name":"Computation.get_thinkN","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_thinkN","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L476-L479","name":"Computation.get_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L472-L472","name":"Computation.mem_of_get_eq","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_of_get_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L468-L469","name":"Computation.get_eq_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_eq_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L464-L465","name":"Computation.get_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L460-L461","name":"Computation.get","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.get","doc":"`get s` returns the result of a terminating computation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L455-L456","name":"Computation.length","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.length","doc":"`length s` gets the number of steps of a terminating computation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L444-L444","name":"Computation.empty_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.empty_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L441-L441","name":"Computation.mem_promises","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_promises","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L437-L439","name":"Computation.«term_~>_»","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.«term_~>_»","doc":"`Promises s a`, or `s ~> a`, asserts that although the computation `s`\nmay not terminate, if it does, then the result is `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L432-L433","name":"Computation.Promises","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Promises","doc":"`Promises s a`, or `s ~> a`, asserts that although the computation `s`\nmay not terminate, if it does, then the result is `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L425-L426","name":"Computation.of_thinkN_terminates","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.of_thinkN_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L420-L421","name":"Computation.thinkN_terminates","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.thinkN_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L414-L416","name":"Computation.thinkN_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.thinkN_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L408-L411","name":"Computation.eq_empty_of_not_terminates","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.eq_empty_of_not_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L405-L405","name":"Computation.not_terminates_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.not_terminates_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L402-L402","name":"Computation.not_mem_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.not_mem_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L398-L399","name":"Computation.of_think_terminates","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.of_think_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L391-L395","name":"Computation.of_think_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.of_think_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L387-L388","name":"Computation.think_terminates","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L383-L384","name":"Computation.think_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L379-L380","name":"Computation.ret_terminates","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.ret_terminates","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L375-L376","name":"Computation.eq_of_pure_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.eq_of_pure_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L371-L372","name":"Computation.ret_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.ret_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L362-L368","name":"Computation.terminates_def","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L358-L359","name":"Computation.terminates_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L354-L355","name":"Computation.terminates_iff","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.terminates_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L351-L351","name":"Computation.Terminates.term","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Terminates.term","doc":"assertion that there is some term `a` such that the `Computation` terminates "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L349-L349","name":"Computation.Terminates.mk","kind":"ctor","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Terminates.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L349-L351","name":"Computation.Terminates","kind":"class","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Terminates","doc":"`Terminates s` asserts that the computation `s` eventually terminates with some value. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L344-L345","name":"Computation.Mem.left_unique","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Mem.left_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L338-L341","name":"Computation.mem_unique","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.mem_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L332-L335","name":"Computation.le_stable","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.le_stable","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L329-L330","name":"Computation.instMembershipComputation","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instMembershipComputation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L325-L326","name":"Computation.Mem","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Mem","doc":"Assertion that a `Computation` limits to a given value"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L294-L317","name":"Computation.eq_of_bisim","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.eq_of_bisim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L289-L290","name":"Computation.IsBisimulation","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.IsBisimulation","doc":"Attribute expressing bisimilarity over two `Computation`s"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L280-L283","name":"Computation.BisimO","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.BisimO","doc":"Bisimilarity over a sum of `Computation`s"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L254-L268","name":"Computation.corec_eq","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.corec_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L241-L243","name":"Computation.rmap","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.rmap","doc":"right map of `⊕` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L235-L237","name":"Computation.lmap","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.lmap","doc":"left map of `⊕` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L220-L231","name":"Computation.corec","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.corec","doc":"`corec f b` is the corecursor for `Computation α` as a coinductive type.\nIf `f b = inl a` then `corec f b = pure a`, and if `f b = inl b'` then\n`corec f b = think (corec f b')`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L207-L213","name":"Computation.Corec.f","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.Corec.f","doc":"Corecursor constructor for `corec`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L194-L203","name":"Computation.recOn","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.recOn","doc":"Recursion principle for computations, compare with `List.recOn`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L189-L190","name":"Computation.think_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L185-L186","name":"Computation.tail_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.tail_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L180-L181","name":"Computation.tail_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.tail_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L175-L176","name":"Computation.tail_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.tail_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L170-L171","name":"Computation.head_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.head_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L165-L166","name":"Computation.head_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.head_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L160-L161","name":"Computation.head_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.head_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L155-L156","name":"Computation.destruct_empty","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L150-L151","name":"Computation.destruct_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L145-L146","name":"Computation.destruct_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L131-L141","name":"Computation.destruct_eq_think","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_eq_think","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L119-L128","name":"Computation.destruct_eq_pure","kind":"theorem","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct_eq_pure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L112-L116","name":"Computation.run","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.run","doc":"`run c` is an unsound meta function that runs `c` to completion, possibly\nresulting in an infinite loop in the VM. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L104-L107","name":"Computation.destruct","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.destruct","doc":"`destruct c` is the destructor for `Computation α` as a coinductive type.\nIt returns `inl a` if `c = pure a` and `inr c'` if `c = think c'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L98-L99","name":"Computation.runFor","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.runFor","doc":"`run_for c n` evaluates `c` for `n` steps and returns the result, or `none`\nif it did not terminate after `n` steps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L93-L94","name":"Computation.instInhabitedComputation","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instInhabitedComputation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L89-L90","name":"Computation.empty","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.empty","doc":"`empty α` is the computation that never returns, an infinite sequence of\n`think`s. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L83-L84","name":"Computation.tail","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.tail","doc":"`tail c` is the remainder of computation, either `c` if `c = pure a`\nor `c'` if `c = think c'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L76-L77","name":"Computation.head","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.head","doc":"`head c` is the first step of computation, either `some a` if `c = pure a`\nor `none` if `c = think c'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L67-L69","name":"Computation.thinkN","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.thinkN","doc":"`thinkN c n` is the computation that delays for `n` ticks and then performs\ncomputation `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L58-L62","name":"Computation.think","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.think","doc":"`think c` is the computation that delays for one \"tick\" and then performs\ncomputation `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L51-L52","name":"Computation.instCoeTCComputation","kind":"instance","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.instCoeTCComputation","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L47-L48","name":"Computation.pure","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation.pure","doc":"`pure a` is the computation that immediately terminates with result `a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Seq/Computation.lean#L36-L37","name":"Computation","kind":"def","docLink":"./Mathlib/Data/Seq/Computation.html#Computation","doc":"`Computation α` is the type of unbounded computations returning `α`.\nAn element of `Computation α` is an infinite sequence of `Option α` such\nthat if `f n = some a` for some `n` then it is constantly `some a` after that. "}]}