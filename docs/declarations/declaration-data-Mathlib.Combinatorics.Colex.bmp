{"name":"Mathlib.Combinatorics.Colex","instances":[{"typeNames":["Finset.Colex"],"name":"instInhabitedColex","className":"Inhabited"},{"typeNames":["Finset.Colex"],"name":"instLTColex","className":"LT"},{"typeNames":["Finset.Colex"],"name":"instLEColex","className":"LE"},{"typeNames":["Finset.Colex","Finset.Colex","LT.lt","instLTColex"],"name":"Colex.instIsIrreflColexLtInstLTColex","className":"IsIrrefl"},{"typeNames":["Finset.Colex","Finset.Colex","LT.lt","instLTColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.instIsTransColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"IsTrans"},{"typeNames":["Finset.Colex","Finset.Colex","LT.lt","instLTColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.instIsTrichotomousColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"IsTrichotomous"},{"typeNames":["LT.lt","Finset.Colex","instLTColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.decidableLt","className":"Decidable"},{"typeNames":["Finset.Colex"],"name":"Colex.instLinearOrderColex","className":"LinearOrder"},{"typeNames":["Finset.Colex","instLEColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.instOrderBotColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"OrderBot"},{"typeNames":["Finset.Colex","instLEColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.instOrderTopColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"OrderTop"},{"typeNames":["Finset.Colex"],"name":"Colex.instLatticeColex","className":"Lattice"},{"typeNames":["Finset.Colex","instLEColex","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Colex.instBoundedOrderColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","className":"BoundedOrder"}],"imports":["Init","Mathlib.Data.Fintype.Basic","Mathlib.Algebra.GeomSum"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L424-L426","name":"Colex.sum_two_pow_le_iff_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.sum_two_pow_le_iff_lt","doc":"For subsets of ℕ, we can show that colex is equivalent to binary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L397-L420","name":"Colex.sum_two_pow_lt_iff_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.sum_two_pow_lt_iff_lt","doc":"For subsets of ℕ, we can show that colex is equivalent to binary. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L392-L394","name":"Colex.instBoundedOrderColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instBoundedOrderColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L388-L390","name":"Colex.instLatticeColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instLatticeColex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L383-L386","name":"Colex.instOrderTopColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instOrderTopColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L378-L381","name":"Colex.instOrderBotColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instOrderBotColexInstLEColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L371-L375","name":"Colex.toColexRelHom","kind":"def","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.toColexRelHom","doc":"The function from finsets to finsets with the colex order is a relation homomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L370-L370","name":"Colex.toColexRelHom_apply","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.toColexRelHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L363-L366","name":"Colex.colex_le_of_subset","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.colex_le_of_subset","doc":"If `A ⊆ B`, then `A ≤ B` in the colex order. Note the converse does not hold, as `⊆` is not a\nlinear order. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L355-L358","name":"Colex.empty_toColex_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.empty_toColex_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L348-L351","name":"Colex.colex_lt_of_ssubset","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.colex_lt_of_ssubset","doc":"If `A ⊂ B`, then `A` is less than `B` in the colex order. Note the converse does not hold, as\n`⊆` is not a linear order. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L337-L343","name":"Colex.empty_toColex_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.empty_toColex_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L332-L334","name":"Colex.sdiff_le_sdiff_iff_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.sdiff_le_sdiff_iff_le","doc":"Colex doesn't care if you remove the other set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L312-L327","name":"Colex.sdiff_lt_sdiff_iff_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.sdiff_lt_sdiff_iff_lt","doc":"Colex doesn't care if you remove the other set "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L305-L307","name":"Colex.singleton_le_iff_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.singleton_le_iff_le","doc":"Colex is an extension of the base ordering on α. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L300-L301","name":"Colex.singleton_lt_iff_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.singleton_lt_iff_lt","doc":"Colex is an extension of the base ordering on α. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L293-L296","name":"Colex.mem_le_of_singleton_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.mem_le_of_singleton_le","doc":"If `{r}` is less than or equal to s in the colexicographical sense,\nthen s contains an element greater than or equal to r. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L275-L287","name":"Colex.lt_singleton_iff_mem_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.lt_singleton_iff_mem_lt","doc":"`s.toColex < {r}.toColex` iff all elements of `s` are less than `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L262-L271","name":"Colex.forall_lt_of_colex_lt_of_forall_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.forall_lt_of_colex_lt_of_forall_lt","doc":"If `A` is before `B` in colex, and everything in `B` is small, then everything in `A` is small.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L253-L257","name":"Colex.hom_fin_le_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.hom_fin_le_iff","doc":"A special case of `hom_le_iff` which is sometimes useful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L245-L247","name":"Colex.hom_le_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.hom_le_iff","doc":"Strictly monotone functions preserve the colex ordering. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L214-L238","name":"Colex.instLinearOrderColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instLinearOrderColex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L202-L211","name":"Colex.decidableLt","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.decidableLt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L199-L200","name":"Colex.instIsTrichotomousColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instIsTrichotomousColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L171-L196","name":"Colex.lt_trichotomy","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.lt_trichotomy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L168-L169","name":"Colex.instIsTransColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instIsTransColexLtInstLTColexToLTToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLattice","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L164-L165","name":"Colex.le_trans","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.le_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L151-L160","name":"Colex.lt_trans","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.lt_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L147-L148","name":"Colex.instIsIrreflColexLtInstLTColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.instIsIrreflColexLtInstLTColex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L140-L144","name":"Colex.hom_fin_lt_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.hom_fin_lt_iff","doc":"A special case of `Colex.hom_lt_iff` which is sometimes useful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L117-L135","name":"Colex.hom_lt_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.hom_lt_iff","doc":"Strictly monotone functions preserve the colex ordering. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L105-L111","name":"Nat.sum_two_pow_lt","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Nat.sum_two_pow_lt","doc":"If everything in `A` is less than `k`, we can bound the sum of powers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L99-L101","name":"Colex.le_def","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.le_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L94-L96","name":"Colex.lt_def","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.lt_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L91-L92","name":"instLEColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#instLEColex","doc":"We can define (≤) in the obvious way. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L87-L88","name":"instLTColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#instLTColex","doc":"`A` is less than `B` in the colex ordering if the largest thing that's not in both sets is in B.\nIn other words, `max (A ∆ B) ∈ B` (if the maximum exists).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L80-L81","name":"Colex.eq_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Colex.html#Colex.eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L75-L76","name":"Finset.toColex","kind":"def","docLink":"./Mathlib/Combinatorics/Colex.html#Finset.toColex","doc":"A convenience constructor to turn a `Finset α` into a `Finset.Colex α`, useful in order to\nuse the colex ordering rather than the subset ordering.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L70-L70","name":"instInhabitedColex","kind":"instance","docLink":"./Mathlib/Combinatorics/Colex.html#instInhabitedColex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Colex.lean#L65-L66","name":"Finset.Colex","kind":"def","docLink":"./Mathlib/Combinatorics/Colex.html#Finset.Colex","doc":"We define this type synonym to refer to the colexicographic ordering on finsets\nrather than the natural subset ordering.\n"}]}