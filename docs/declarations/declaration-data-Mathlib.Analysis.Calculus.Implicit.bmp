{"name":"Mathlib.Analysis.Calculus.Implicit","instances":[],"imports":["Init","Mathlib.Analysis.Calculus.Inverse","Mathlib.Analysis.NormedSpace.Complemented"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L480-L483","name":"HasStrictFDerivAt.to_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.to_implicitFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L473-L477","name":"HasStrictFDerivAt.eq_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.eq_implicitFunction","doc":"Any point in some neighborhood of `a` can be represented as `HasStrictFDerivAt.implicitFunction`\nof some point. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L465-L468","name":"HasStrictFDerivAt.implicitFunction_apply_image","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitFunction_apply_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L458-L461","name":"HasStrictFDerivAt.map_implicitFunction_eq","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.map_implicitFunction_eq","doc":"`HasStrictFDerivAt.implicitFunction` sends `(z, y)` to a point in `f ⁻¹' z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L454-L454","name":"Filter.Tendsto.implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#Filter.Tendsto.implicitFunction","doc":"**Alias** of `HasStrictFDerivAt.tendsto_implicitFunction`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L444-L451","name":"HasStrictFDerivAt.tendsto_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.tendsto_implicitFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L438-L441","name":"HasStrictFDerivAt.mem_implicitToLocalHomeomorph_target","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.mem_implicitToLocalHomeomorph_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L432-L435","name":"HasStrictFDerivAt.mem_implicitToLocalHomeomorph_source","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.mem_implicitToLocalHomeomorph_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L426-L429","name":"HasStrictFDerivAt.implicitToLocalHomeomorph_self","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorph_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L418-L422","name":"HasStrictFDerivAt.implicitToLocalHomeomorph_apply_ker","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorph_apply_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L412-L414","name":"HasStrictFDerivAt.implicitToLocalHomeomorph_fst","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorph_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L405-L406","name":"HasStrictFDerivAt.implicitFunction","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitFunction","doc":"Implicit function `g` defined by `f (g z y) = z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L397-L401","name":"HasStrictFDerivAt.implicitToLocalHomeomorph","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorph","doc":"Given a map `f : E → F` to a finite dimensional space with a surjective derivative `f'`,\nreturns a local homeomorphism between `E` and `F × ker f'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L350-L367","name":"HasStrictFDerivAt.to_implicitFunctionOfComplemented","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.to_implicitFunctionOfComplemented","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L342-L347","name":"HasStrictFDerivAt.implicitFunctionOfComplemented_apply_image","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitFunctionOfComplemented_apply_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L334-L338","name":"HasStrictFDerivAt.eq_implicitFunctionOfComplemented","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.eq_implicitFunctionOfComplemented","doc":"Any point in some neighborhood of `a` can be represented as\n`HasStrictFDerivAt.implicitFunctionOfComplemented` of some point. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L323-L329","name":"HasStrictFDerivAt.map_implicitFunctionOfComplemented_eq","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.map_implicitFunctionOfComplemented_eq","doc":"`HasStrictFDerivAt.implicitFunctionOfComplemented` sends `(z, y)` to a point in `f ⁻¹' z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L314-L319","name":"HasStrictFDerivAt.mem_implicitToLocalHomeomorphOfComplemented_target","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.mem_implicitToLocalHomeomorphOfComplemented_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L308-L311","name":"HasStrictFDerivAt.mem_implicitToLocalHomeomorphOfComplemented_source","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.mem_implicitToLocalHomeomorphOfComplemented_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L302-L305","name":"HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_self","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L294-L298","name":"HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_apply_ker","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_apply_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L286-L290","name":"HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L280-L283","name":"HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_fst","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L272-L274","name":"HasStrictFDerivAt.implicitFunctionOfComplemented","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitFunctionOfComplemented","doc":"Implicit function `g` defined by `f (g z y) = z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L266-L268","name":"HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitToLocalHomeomorphOfComplemented","doc":"A local homeomorphism between `E` and `F × f'.ker` sending level surfaces of `f`\nto vertical subspaces. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L249-L261","name":"HasStrictFDerivAt.implicitFunctionDataOfComplemented","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#HasStrictFDerivAt.implicitFunctionDataOfComplemented","doc":"Data used to apply the generic implicit function theorem to the case of a strictly\ndifferentiable map such that its derivative is surjective and has a complemented kernel. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L202-L215","name":"ImplicitFunctionData.implicitFunction_hasStrictFDerivAt","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.implicitFunction_hasStrictFDerivAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L197-L199","name":"ImplicitFunctionData.map_nhds_eq","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.map_nhds_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L192-L194","name":"ImplicitFunctionData.implicitFunction_apply_image","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.implicitFunction_apply_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L187-L189","name":"ImplicitFunctionData.right_map_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.right_map_implicitFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L182-L184","name":"ImplicitFunctionData.left_map_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.left_map_implicitFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L177-L179","name":"ImplicitFunctionData.prod_map_implicitFunction","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.prod_map_implicitFunction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L172-L174","name":"ImplicitFunctionData.map_pt_mem_toLocalHomeomorph_target","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.map_pt_mem_toLocalHomeomorph_target","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L168-L169","name":"ImplicitFunctionData.pt_mem_toLocalHomeomorph_source","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.pt_mem_toLocalHomeomorph_source","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L164-L165","name":"ImplicitFunctionData.toLocalHomeomorph_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.toLocalHomeomorph_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L160-L161","name":"ImplicitFunctionData.toLocalHomeomorph_coe","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.toLocalHomeomorph_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L155-L156","name":"ImplicitFunctionData.implicitFunction","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.implicitFunction","doc":"Implicit function theorem. If `f : E → F` and `g : E → G` are two maps strictly differentiable\nat `a`, their derivatives `f'`, `g'` are surjective, and the kernels of these derivatives are\ncomplementary subspaces of `E`, then `implicitFunction` is the unique (germ of a) map\n`φ : F → G → E` such that `f (φ y z) = y` and `g (φ y z) = z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L147-L148","name":"ImplicitFunctionData.toLocalHomeomorph","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.toLocalHomeomorph","doc":"Implicit function theorem. If `f : E → F` and `g : E → G` are two maps strictly differentiable\nat `a`, their derivatives `f'`, `g'` are surjective, and the kernels of these derivatives are\ncomplementary subspaces of `E`, then `x ↦ (f x, g x)` defines a local homeomorphism between\n`E` and `F × G`. In particular, `{x | f x = f a}` is locally homeomorphic to `G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L134-L140","name":"ImplicitFunctionData.hasStrictFDerivAt","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.hasStrictFDerivAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L130-L131","name":"ImplicitFunctionData.prodFun_apply","kind":"theorem","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.prodFun_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L125-L126","name":"ImplicitFunctionData.prodFun","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.prodFun","doc":"The function given by `x ↦ (leftFun x, rightFun x)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L114-L114","name":"ImplicitFunctionData.isCompl_ker","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.isCompl_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L113-L113","name":"ImplicitFunctionData.right_range","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.right_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L112-L112","name":"ImplicitFunctionData.left_range","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.left_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L111-L111","name":"ImplicitFunctionData.right_has_deriv","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.right_has_deriv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L110-L110","name":"ImplicitFunctionData.left_has_deriv","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.left_has_deriv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L109-L109","name":"ImplicitFunctionData.pt","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L108-L108","name":"ImplicitFunctionData.rightDeriv","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.rightDeriv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L107-L107","name":"ImplicitFunctionData.rightFun","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.rightFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L106-L106","name":"ImplicitFunctionData.leftDeriv","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.leftDeriv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L105-L105","name":"ImplicitFunctionData.leftFun","kind":"def","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.leftFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L101-L104","name":"ImplicitFunctionData.mk","kind":"ctor","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/Calculus/Implicit.lean#L101-L114","name":"ImplicitFunctionData","kind":"structure","docLink":"./Mathlib/Analysis/Calculus/Implicit.html#ImplicitFunctionData","doc":"Data for the general version of the implicit function theorem. It holds two functions\n`f : E → F` and `g : E → G` (named `leftFun` and `rightFun`) and a point `a` (named `pt`) such that\n\n* both functions are strictly differentiable at `a`;\n* the derivatives are surjective;\n* the kernels of the derivatives are complementary subspaces of `E`. "}]}