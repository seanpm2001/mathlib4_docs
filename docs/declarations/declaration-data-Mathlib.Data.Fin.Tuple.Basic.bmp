{"name":"Mathlib.Data.Fin.Tuple.Basic","instances":[],"imports":["Init","Mathlib.Data.Fin.Basic","Mathlib.Data.Pi.Lex","Mathlib.Data.Set.Intervals.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L1001-L1004","name":"Fin.sigma_eq_iff_eq_comp_cast","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.sigma_eq_iff_eq_comp_cast","doc":"`Fin.sigma_eq_of_eq_comp_cast` as an `iff`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L992-L997","name":"Fin.sigma_eq_of_eq_comp_cast","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.sigma_eq_of_eq_comp_cast","doc":"To show two sigma pairs of tuples agree, it to show the second elements are related via\n`Fin.cast`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L978-L985","name":"Fin.contractNth_apply_of_ne","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.contractNth_apply_of_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L973-L975","name":"Fin.contractNth_apply_of_gt","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.contractNth_apply_of_gt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L967-L970","name":"Fin.contractNth_apply_of_eq","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.contractNth_apply_of_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L962-L964","name":"Fin.contractNth_apply_of_lt","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.contractNth_apply_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L957-L959","name":"Fin.contractNth","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.contractNth","doc":"Sends `(g₀, ..., gₙ)` to `(g₀, ..., op gⱼ gⱼ₊₁, ..., gₙ)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L945-L947","name":"Fin.mem_find_of_unique","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.mem_find_of_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L940-L942","name":"Fin.find_eq_some_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find_eq_some_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L930-L937","name":"Fin.mem_find_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.mem_find_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L918-L927","name":"Fin.nat_find_mem_find","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.nat_find_mem_find","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L913-L915","name":"Fin.find_min'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find_min'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L894-L910","name":"Fin.find_min","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find_min","doc":"If `find p` returns `some i`, then `p j` does not hold for `j < i`, i.e., `i` is minimal among\nthe indices where `p` holds. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L888-L889","name":"Fin.find_eq_none_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find_eq_none_iff","doc":"`find p` returns `none` if and only if `p i` never holds. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L868-L884","name":"Fin.isSome_find_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.isSome_find_iff","doc":"`find p` does not return `none` if and only if `p i` holds at some index `i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L849-L864","name":"Fin.find_spec","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find_spec","doc":"If `find p = some i`, then `p i` holds "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L839-L845","name":"Fin.find","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.find","doc":"`find p` returns the first index `n` where `p n` is satisfied, and `none` if it is never\nsatisfied. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L827-L830","name":"Fin.preimage_insertNth_Icc_of_not_mem","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.preimage_insertNth_Icc_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L821-L824","name":"Fin.preimage_insertNth_Icc_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.preimage_insertNth_Icc_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L814-L818","name":"Fin.insertNth_mem_Icc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_mem_Icc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L807-L809","name":"Fin.le_insertNth_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.le_insertNth_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L802-L804","name":"Fin.insertNth_le_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L795-L797","name":"Fin.insertNth_sub_same","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_sub_same","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L788-L791","name":"Fin.insertNth_sub","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L781-L784","name":"Fin.insertNth_div","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_div","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L774-L777","name":"Fin.insertNth_add","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L767-L770","name":"Fin.insertNth_mul","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L759-L763","name":"Fin.insertNth_binop","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_binop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L754-L756","name":"Fin.insertNth_zero_right","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_zero_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L749-L750","name":"Fin.insertNth_last'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_last'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L735-L745","name":"Fin.insertNth_last","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L731-L732","name":"Fin.insertNth_zero'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_zero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L722-L727","name":"Fin.insertNth_zero","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L716-L719","name":"Fin.insertNth_apply_above","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_apply_above","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L708-L711","name":"Fin.insertNth_apply_below","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_apply_below","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L701-L703","name":"Fin.eq_insertNth_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.eq_insertNth_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L696-L698","name":"Fin.insertNth_eq_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L691-L693","name":"Fin.insertNth_comp_succAbove","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_comp_succAbove","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L684-L685","name":"Fin.succAbove_cases_eq_insertNth","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.succAbove_cases_eq_insertNth","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L669-L680","name":"Fin.insertNth_apply_succAbove","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_apply_succAbove","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L664-L665","name":"Fin.insertNth_apply_same","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth_apply_same","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L658-L660","name":"Fin.insertNth","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth","doc":"Insert an element into a tuple at a given position. For `i = 0` see `Fin.cons`,\nfor `i = Fin.last n` see `Fin.snoc`. See also `Fin.succAboveCases` for a version elaborated\nas an eliminator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L650-L652","name":"Fin.forall_iff_succAbove","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.forall_iff_succAbove","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L642-L647","name":"Fin.succAboveCases","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.succAboveCases","doc":"Define a function on `Fin (n + 1)` from a value on `i : Fin (n + 1)` and values on each\n`Fin.succAbove i j`, `j : Fin n`. This version is elaborated as eliminator and works for\npropositions, see also `Fin.insertNth` for a version without an `@[elab_as_elim]`\nattribute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L623-L626","name":"Fin.comp_init","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.comp_init","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L611-L620","name":"Fin.append_right_eq_snoc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_right_eq_snoc","doc":"Appending a one-tuple to the right is the same as `Fin.snoc`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L601-L607","name":"Fin.comp_snoc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.comp_snoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L582-L598","name":"Fin.cons_snoc_eq_snoc_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_snoc_eq_snoc_cons","doc":"`cons` and `snoc` commute. We state this lemma in a non-dependent setting, as otherwise it\nwould involve a cast to convince Lean that the two types are equal, making it harder to use. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L574-L577","name":"Fin.tail_init_eq_init_tail","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail_init_eq_init_tail","doc":"`tail` and `init` commute. We state this lemma in a non-dependent setting, as otherwise it\nwould involve a cast to convince Lean that the two types are equal, making it harder to use. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L564-L569","name":"Fin.init_update_castSucc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.init_update_castSucc","doc":"Updating an element and taking the beginning commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L557-L559","name":"Fin.init_update_last","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.init_update_last","doc":"Updating the last element of a tuple does not change the beginning. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L544-L552","name":"Fin.snoc_init_self","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_init_self","doc":"Concatenating the first element of a tuple with its tail gives back the original tuple "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L533-L539","name":"Fin.update_snoc_last","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.update_snoc_last","doc":"Adding an element at the beginning of a tuple and then updating it amounts to adding it\ndirectly. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L501-L528","name":"Fin.snoc_update","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_update","doc":"Updating a tuple and adding an element at the end commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L494-L496","name":"Fin.snoc_comp_cast_add","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_comp_cast_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L487-L489","name":"Fin.snoc_cast_add","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_cast_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L475-L483","name":"Fin.snoc_comp_nat_add","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_comp_nat_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L471-L471","name":"Fin.snoc_last","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L465-L467","name":"Fin.snoc_comp_castSucc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_comp_castSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L459-L461","name":"Fin.snoc_castSucc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc_castSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L452-L455","name":"Fin.init_snoc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.init_snoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L446-L448","name":"Fin.snoc","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.snoc","doc":"Adding an element at the end of an `n`-tuple, to get an `n+1`-tuple. The name `snoc` comes from\n`cons` (i.e., adding an element to the left of a tuple) read in reverse order. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L439-L441","name":"Fin.init_def","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.init_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L435-L436","name":"Fin.init","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.init","doc":"The beginning of an `n+1` tuple, i.e., its first `n` entries "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L408-L415","name":"Fin.repeat_add","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L396-L404","name":"Fin.repeat_succ","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L388-L393","name":"Fin.repeat_one","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L382-L384","name":"Fin.repeat_zero","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L377-L379","name":"Fin.repeat_apply","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L371-L372","name":"Fin.repeat","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.repeat","doc":"Repeat `a` `m` times. For example `Fin.repeat 2 ![0, 3, 7] = ![0, 3, 7, 0, 3, 7]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L353-L362","name":"Fin.append_left_eq_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_left_eq_cons","doc":"Appending a one-tuple to the left is the same as `Fin.cons`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L337-L349","name":"Fin.append_assoc","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L332-L334","name":"Fin.elim0'_append","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.elim0'_append","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L322-L328","name":"Fin.append_left_nil","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_left_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L317-L319","name":"Fin.append_elim0'","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_elim0'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L307-L313","name":"Fin.append_right_nil","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_right_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L302-L304","name":"Fin.append_right","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L296-L298","name":"Fin.append_left","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L291-L292","name":"Fin.append","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append","doc":"Append a tuple of length `m` to a tuple of length `n` to get a tuple of length `m + n`.\nThis is a non-dependent version of `Fin.add_cases`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L282-L284","name":"Fin.range_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.range_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L276-L278","name":"Fin.range_fin_succ","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.range_fin_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L268-L273","name":"Fin.pi_lex_lt_cons_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.pi_lex_lt_cons_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L263-L265","name":"Fin.cons_le_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_le_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L258-L260","name":"Fin.cons_le","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L253-L255","name":"Fin.le_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.le_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L247-L250","name":"Fin.comp_tail","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.comp_tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L236-L244","name":"Fin.comp_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.comp_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L228-L233","name":"Fin.tail_update_succ","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail_update_succ","doc":"Updating a nonzero element and taking the tail commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L221-L223","name":"Fin.tail_update_zero","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail_update_zero","doc":"Updating the first element of a tuple does not change the tail. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L215-L216","name":"Fin.exists_fin_succ_pi","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.exists_fin_succ_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L211-L212","name":"Fin.forall_fin_succ_pi","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.forall_fin_succ_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L206-L208","name":"Fin.exists_fin_zero_pi","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.exists_fin_zero_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L200-L202","name":"Fin.forall_fin_zero_pi","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.forall_fin_zero_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L190-L196","name":"Fin.cons_injective_iff","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_injective_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L171-L187","name":"Fin.cons_injective_of_injective","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_injective_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L165-L168","name":"Fin.consInduction","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.consInduction","doc":"Recurse on a tuple by splitting into `Fin.elim0` and `Fin.cons`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L157-L160","name":"Fin.consCases_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.consCases_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L151-L153","name":"Fin.consCases","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.consCases","doc":"Recurse on an `n+1`-tuple by splitting it into a single element and an `n`-tuple. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L136-L145","name":"Fin.cons_self_tail","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_self_tail","doc":"Concatenating the first element of a tuple with its tail gives back the original tuple "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L123-L131","name":"Fin.update_cons_zero","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.update_cons_zero","doc":"Adding an element at the beginning of a tuple and then updating it amounts to adding it\ndirectly. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L117-L118","name":"Fin.cons_right_injective","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_right_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L113-L114","name":"Fin.cons_left_injective","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_left_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L108-L110","name":"Fin.cons_eq_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_eq_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L103-L104","name":"Fin.cons_injective2","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_injective2","doc":"As a binary function, `Fin.cons` is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L87-L99","name":"Fin.cons_update","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_update","doc":"Updating a tuple and adding an element at the beginning commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L82-L82","name":"Fin.cons_zero","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L78-L78","name":"Fin.cons_succ","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L74-L74","name":"Fin.tail_cons","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L70-L70","name":"Fin.cons","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons","doc":"Adding an element at the beginning of an `n`-tuple, to get an `n+1`-tuple. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L64-L66","name":"Fin.tail_def","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L61-L61","name":"Fin.tail","kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tail","doc":"The tail of an `n+1` tuple, i.e., its last `n` entries. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fin/Tuple/Basic.lean#L53-L54","name":"Fin.tuple0_le","kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.tuple0_le","doc":""}]}