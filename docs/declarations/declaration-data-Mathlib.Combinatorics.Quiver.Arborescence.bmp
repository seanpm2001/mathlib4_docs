{"name":"Mathlib.Combinatorics.Quiver.Arborescence","instances":[{"typeNames":["Quiver.Path","Quiver.root"],"name":"Quiver.instUniquePathRoot","className":"Unique"},{"typeNames":["WideSubquiver.toType","Quiver.geodesicSubtree","WideSubquiver.quiver","Quiver.geodesicSubtree"],"name":"Quiver.geodesicArborescence","className":"Quiver.Arborescence"}],"imports":["Init","Mathlib.Order.WellFounded","Mathlib.Data.Nat.Basic","Mathlib.Combinatorics.Quiver.Subquiver","Mathlib.Combinatorics.Quiver.Path"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L122-L136","name":"Quiver.geodesicArborescence","kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicArborescence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L118-L119","name":"Quiver.geodesicSubtree","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree","doc":"A subquiver which by construction is an arborescence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L113-L114","name":"Quiver.shortest_path_spec","kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortest_path_spec","doc":"The length of a path is at least the length of the shortest path "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L108-L109","name":"Quiver.shortestPath","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath","doc":"A path from `r` of minimal length. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L98-L98","name":"Quiver.RootedConnected.nonempty_path","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.nonempty_path","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L97-L97","name":"Quiver.RootedConnected.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L97-L98","name":"Quiver.RootedConnected","kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected","doc":"`RootedConnected r` means that there is a path from `r` to any other vertex. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L64-L93","name":"Quiver.arborescenceMk","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.arborescenceMk","doc":"To show that `[Quiver V]` is an arborescence with root `r : V`, it suffices to\n- provide a height function `V → ℕ` such that every arrow goes from a\n  lower vertex to a higher vertex,\n- show that every vertex has at most one arrow to it, and\n- show that every vertex other than `r` has an arrow to it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L56-L57","name":"Quiver.instUniquePathRoot","kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.instUniquePathRoot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L52-L53","name":"Quiver.root","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root","doc":"The root of an arborescence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L48-L48","name":"Quiver.Arborescence.uniquePath","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.uniquePath","doc":"There is a unique path from the root to any other vertex. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L46-L46","name":"Quiver.Arborescence.root","kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root","doc":"The root of the arborescence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L44-L44","name":"Quiver.Arborescence.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Quiver/Arborescence.lean#L44-L48","name":"Quiver.Arborescence","kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence","doc":"A quiver is an arborescence when there is a unique path from the default vertex\nto every other vertex. "}]}