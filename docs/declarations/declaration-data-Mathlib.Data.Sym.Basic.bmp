{"name":"Mathlib.Data.Sym.Basic","instances":[{"typeNames":["Sym","Multiset"],"name":"Sym.hasCoe","className":"CoeOut"},{"typeNames":["Eq","Sym"],"name":"instDecidableEqSym","className":"Decidable"},{"typeNames":["Vector","Sym"],"name":"Sym.instCoeVectorSym","className":"Coe"},{"typeNames":["Sym"],"name":"Sym.instMembershipSym","className":"Membership"},{"typeNames":["Membership.mem","Sym","Sym.instMembershipSym"],"name":"Sym.decidableMem","className":"Decidable"},{"typeNames":["Sym","OfNat.ofNat","Nat","instOfNatNat"],"name":"Sym.instZeroSymOfNatNatInstOfNatNat","className":"Zero"},{"typeNames":["Sym","OfNat.ofNat","Nat","instOfNatNat"],"name":"Sym.instEmptyCollectionSymOfNatNatInstOfNatNat","className":"EmptyCollection"},{"typeNames":["Sym","OfNat.ofNat","Nat","instOfNatNat"],"name":"Sym.uniqueZero","className":"Unique"},{"typeNames":["Sym"],"name":"Sym.instSubsingletonSym","className":"Subsingleton"},{"typeNames":["Sym"],"name":"Sym.inhabitedSym","className":"Inhabited"},{"typeNames":["Sym.Sym'"],"name":"Sym.inhabitedSym'","className":"Inhabited"},{"typeNames":["Sym","Nat.succ"],"name":"Sym.instIsEmptySymSucc","className":"IsEmpty"},{"typeNames":["Sym"],"name":"Sym.instUniqueSym","className":"Unique"},{"typeNames":["Sym","HAdd.hAdd","Nat","instHAdd","instAddNat","OfNat.ofNat","instOfNatNat"],"name":"Sym.instNontrivialSymHAddNatInstHAddInstAddNatOfNat","className":"Nontrivial"}],"imports":["Init","Mathlib.Data.Multiset.Basic","Mathlib.Data.Vector.Basic","Mathlib.Data.Setoid.Basic","Mathlib.Tactic.ApplyFun"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L672-L678","name":"symOptionSuccEquiv","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#symOptionSuccEquiv","doc":"The symmetric product over `Option` is a disjoint union over simpler symmetric products. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L654-L665","name":"SymOptionSuccEquiv.encode_decode","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.encode_decode","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L645-L650","name":"SymOptionSuccEquiv.decode_encode","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.decode_encode","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L641-L642","name":"SymOptionSuccEquiv.decode_inr","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.decode_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L636-L637","name":"SymOptionSuccEquiv.decode_inl","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.decode_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L629-L631","name":"SymOptionSuccEquiv.decode","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.decode","doc":"Inverse of `Sym_option_succ_equiv.decode`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L619-L624","name":"SymOptionSuccEquiv.encode_of_not_none_mem","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.encode_of_not_none_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L613-L615","name":"SymOptionSuccEquiv.encode_of_none_mem","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.encode_of_none_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L604-L609","name":"SymOptionSuccEquiv.encode","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#SymOptionSuccEquiv.encode","doc":"Function from the symmetric product over `Option` splitting on whether or not\nit contains a `none`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L577-L586","name":"Sym.filter_ne_fill","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.filter_ne_fill","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L565-L574","name":"Sym.fill_filterNe","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.fill_filterNe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L556-L562","name":"Sym.sigma_sub_ext","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.sigma_sub_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L544-L553","name":"Sym.filterNe","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.filterNe","doc":"Remove every `a` from a given `Sym α n`.\nYields the number of copies `i` and a term of `Sym α (n - i)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L535-L537","name":"Sym.mem_fill_iff","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_fill_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L530-L532","name":"Sym.coe_fill","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_fill","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L526-L527","name":"Sym.fill","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.fill","doc":"Fill a term `m : Sym α (n - i)` with `i` copies of `a` to obtain a term of `Sym α n`.\nThis is a convenience wrapper for `m.append (replicate i a)` that adjusts the term using\n`Sym.cast`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L519-L520","name":"Sym.mem_append_iff","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_append_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L515-L516","name":"Sym.coe_append","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_append","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L508-L511","name":"Sym.append_comm","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.append_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L504-L505","name":"Sym.append_inj_left","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.append_inj_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L499-L500","name":"Sym.append_inj_right","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.append_inj_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L494-L495","name":"Sym.append","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.append","doc":"Append a pair of `Sym` terms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L489-L490","name":"Sym.mem_cast","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L484-L485","name":"Sym.coe_cast","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L478-L480","name":"Sym.cast_cast","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cast_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L473-L474","name":"Sym.cast_rfl","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cast_rfl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L464-L469","name":"Sym.cast","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cast","doc":"Change the length of a `Sym` using an equality.\nThe simp-normal form is for the `cast` to be pushed outward. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L456-L459","name":"Sym.attach_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.attach_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L451-L452","name":"Sym.attach_nil","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.attach_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L446-L447","name":"Sym.mem_attach","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_attach","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L441-L442","name":"Sym.attach_map_coe","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.attach_map_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L436-L438","name":"Sym.coe_attach","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_attach","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L430-L432","name":"Sym.attach_mk","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.attach_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L425-L426","name":"Sym.attach","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.attach","doc":"\"Attach\" a proof that `a ∈ s` to each element `a` in `s` to produce\nan element of the symmetric power on `{x // x ∈ s}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L413-L418","name":"Sym.equivCongr","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.equivCongr","doc":"Mapping an equivalence `α ≃ β` using `Sym.map` gives an equivalence between `Sym α n` and\n`Sym β n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L412-L412","name":"Sym.equivCongr_symm_apply","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.equivCongr_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L412-L412","name":"Sym.equivCongr_apply","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.equivCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L405-L407","name":"Sym.map_injective","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L401-L402","name":"Sym.coe_map","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L395-L397","name":"Sym.map_mk","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L390-L391","name":"Sym.map_congr","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L385-L386","name":"Sym.map_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L380-L381","name":"Sym.map_zero","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L374-L376","name":"Sym.map_map","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L369-L370","name":"Sym.map_id","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L365-L366","name":"Sym.map_id'","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map_id'","doc":"Note: `Sym.map_id` is not simp-normal, as simp ends up unfolding `id` with `Sym.map_congr` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L358-L360","name":"Sym.mem_map","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L353-L354","name":"Sym.map","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.map","doc":"A function `α → β` induces a function `Sym α n → Sym β n` by applying it to every element of\nthe underlying `n`-tuple. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L348-L349","name":"Sym.instNontrivialSymHAddNatInstHAddInstAddNatOfNat","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instNontrivialSymHAddNatInstHAddInstAddNatOfNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L344-L345","name":"Sym.replicate_right_injective","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.replicate_right_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L340-L341","name":"Sym.replicate_right_inj","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.replicate_right_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L337-L338","name":"Sym.instUniqueSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instUniqueSym","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L332-L335","name":"Sym.instIsEmptySymSucc","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instIsEmptySymSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L328-L329","name":"Sym.inhabitedSym'","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.inhabitedSym'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L324-L325","name":"Sym.inhabitedSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.inhabitedSym","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L316-L322","name":"Sym.instSubsingletonSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instSubsingletonSym","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L311-L313","name":"Sym.eq_replicate_of_subsingleton","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.eq_replicate_of_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L307-L308","name":"Sym.eq_replicate","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.eq_replicate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L302-L304","name":"Sym.exists_eq_cons_of_succ","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.exists_eq_cons_of_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L298-L299","name":"Sym.exists_mem","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.exists_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L293-L295","name":"Sym.eq_replicate_iff","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.eq_replicate_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L289-L290","name":"Sym.mem_replicate","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_replicate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L284-L285","name":"Sym.coe_replicate","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_replicate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L280-L281","name":"Sym.replicate_succ","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.replicate_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L276-L277","name":"Sym.replicate","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.replicate","doc":"`replicate n a` is the sym containing only `a` with multiplicity `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L271-L272","name":"Sym.uniqueZero","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.uniqueZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L267-L268","name":"Sym.eq_nil_of_card_zero","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.eq_nil_of_card_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L264-L265","name":"Sym.instEmptyCollectionSymOfNatNatInstOfNatNat","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instEmptyCollectionSymOfNatNatInstOfNatNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L261-L262","name":"Sym.instZeroSymOfNatNatInstOfNatNat","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instZeroSymOfNatNatInstOfNatNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L255-L258","name":"Sym.cons_equiv_eq_equiv_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_equiv_eq_equiv_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L251-L252","name":"Sym.symEquivSym'","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.symEquivSym'","doc":"Multisets of cardinality n are equivalent to length-n vectors up to permutations.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L246-L247","name":"Sym.«term_::_»","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.«term_::_»","doc":"This is `cons` but for the alternative `Sym'` definition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L242-L243","name":"Sym.cons'","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons'","doc":"This is `cons` but for the alternative `Sym'` definition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L236-L237","name":"Sym.Sym'","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.Sym'","doc":"Another definition of the nth symmetric power, using vectors modulo permutations. (See `Sym`.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L229-L231","name":"Sym.erase_cons_head","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.erase_cons_head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L224-L225","name":"Sym.cons_erase","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_erase","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L218-L220","name":"Sym.coe_erase","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_erase","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L210-L214","name":"Sym.erase_mk","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.erase_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L205-L206","name":"Sym.erase","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.erase","doc":"`erase s a h` is the sym that subtracts 1 from the\nmultiplicity of `a` if a is present in the sym. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L199-L200","name":"Sym.sound","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.sound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L193-L196","name":"Sym.cons_of_coe_eq","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_of_coe_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L189-L190","name":"Sym.mem_cons_self","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_cons_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L184-L185","name":"Sym.mem_cons_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_cons_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L180-L181","name":"Sym.mem_coe","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L175-L176","name":"Sym.mem_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L170-L171","name":"Sym.mem_mk","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mem_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L165-L166","name":"Sym.decidableMem","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.decidableMem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L162-L163","name":"Sym.instMembershipSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instMembershipSym","doc":"`α ∈ s` means that `a` appears as one of the factors in `s`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L155-L157","name":"Sym.of_vector_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.of_vector_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L150-L151","name":"Sym.of_vector_nil","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.of_vector_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L147-L147","name":"Sym.instCoeVectorSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.instCoeVectorSym","doc":"This is the quotient map that takes a list of n elements as an n-tuple and produces an nth\nsymmetric power.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L141-L142","name":"Sym.ofVector","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.ofVector","doc":"This is the quotient map that takes a list of n elements as an n-tuple and produces an nth\nsymmetric power.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L134-L135","name":"Sym.coe_cons","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L130-L131","name":"Sym.cons_swap","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L126-L127","name":"Sym.cons_inj_left","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_inj_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L121-L122","name":"Sym.cons_inj_right","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons_inj_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L117-L118","name":"Sym.«term_::ₛ_»","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.«term_::ₛ_»","doc":"Inserts an element into the term of `Sym α n`, increasing the length by one.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L113-L114","name":"Sym.cons","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.cons","doc":"Inserts an element into the term of `Sym α n`, increasing the length by one.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L106-L107","name":"Sym.coe_nil","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L101-L102","name":"Sym.nil","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.nil","doc":"The unique element in `Sym α 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L95-L96","name":"Sym.mk","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.mk","doc":"Construct an element of the `n`th symmetric power from a multiset of cardinality `n`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L89-L90","name":"Sym.val_eq_coe","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.val_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L84-L85","name":"Sym.ext","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L79-L80","name":"Sym.coe_inj","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L74-L75","name":"Sym.coe_injective","kind":"theorem","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.coe_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L64-L65","name":"Vector.Perm.isSetoid","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Vector.Perm.isSetoid","doc":"This is the `List.Perm` setoid lifted to `Vector`.\n\nSee note [reducible non-instances].\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L57-L57","name":"instDecidableEqSym","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#instDecidableEqSym","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L52-L53","name":"Sym.hasCoe","kind":"instance","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.hasCoe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L49-L50","name":"Sym.toMultiset","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym.toMultiset","doc":"The canonical map to `Multiset α` that forgets that `s` has length `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Sym/Basic.lean#L43-L44","name":"Sym","kind":"def","docLink":"./Mathlib/Data/Sym/Basic.html#Sym","doc":"The nth symmetric power is n-tuples up to permutation.  We define it\nas a subtype of `Multiset` since these are well developed in the\nlibrary.  We also give a definition `Sym.sym'` in terms of vectors, and we\nshow these are equivalent in `Sym.symEquivSym'`.\n"}]}