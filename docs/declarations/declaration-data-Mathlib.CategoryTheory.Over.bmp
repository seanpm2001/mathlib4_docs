{"name":"Mathlib.CategoryTheory.Over","instances":[{"typeNames":["CategoryTheory.Over"],"name":"CategoryTheory.instCategoryOver","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Over","Inhabited.default"],"name":"CategoryTheory.Over.inhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Over","CategoryTheory.instCategoryOver","CategoryTheory.Over.forget"],"name":"CategoryTheory.Over.forget_reflects_iso","className":"CategoryTheory.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.Over","CategoryTheory.instCategoryOver","CategoryTheory.Over.forget"],"name":"CategoryTheory.Over.forget_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.Comma.left","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.id","CategoryTheory.Functor.fromPUnit","CategoryTheory.Comma.left","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.id","CategoryTheory.Functor.fromPUnit","CategoryTheory.CommaMorphism.left","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.id","CategoryTheory.Functor.fromPUnit"],"name":"CategoryTheory.Over.mono_left_of_mono","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Under"],"name":"CategoryTheory.instCategoryUnder","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Under","Inhabited.default"],"name":"CategoryTheory.Under.inhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Under","CategoryTheory.instCategoryUnder","CategoryTheory.Under.forget"],"name":"CategoryTheory.Under.forget_reflects_iso","className":"CategoryTheory.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.Under","CategoryTheory.instCategoryUnder","CategoryTheory.Under.forget"],"name":"CategoryTheory.Under.forget_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.Comma.right","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.fromPUnit","CategoryTheory.Functor.id","CategoryTheory.Comma.right","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.fromPUnit","CategoryTheory.Functor.id","CategoryTheory.CommaMorphism.right","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory","CategoryTheory.Functor.fromPUnit","CategoryTheory.Functor.id"],"name":"CategoryTheory.Under.epi_right_of_epi","className":"CategoryTheory.Epi"}],"imports":["Init","Mathlib.CategoryTheory.StructuredArrow","Mathlib.CategoryTheory.PUnit","Mathlib.CategoryTheory.Functor.ReflectsIso","Mathlib.CategoryTheory.Functor.EpiMono"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L506-L508","name":"CategoryTheory.Under.post","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.post","doc":"A functor `F : T ⥤ D` induces a functor `Under X ⥤ Under (F.obj X)` in the obvious way. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L505-L505","name":"CategoryTheory.Under.post_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.post_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L505-L505","name":"CategoryTheory.Under.post_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.post_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L491-L497","name":"CategoryTheory.Under.epi_right_of_epi","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.epi_right_of_epi","doc":"If `k` is an epimorphism, then `k.right` is an epimorphism. In other words, `Under.forget X`\npreserves epimorphisms.\nThe converse of `CategoryTheory.under.epi_of_epi_right`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L482-L483","name":"CategoryTheory.Under.epi_of_epi_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.epi_of_epi_right","doc":"If `k.right` is an epimorphism, then `k` is an epimorphism. In other words, `Under.forget X`\nreflects epimorphisms.\nThe converse of `CategoryTheory.Under.epi_right_of_epi`.\n\nThis lemma is not an instance, to avoid loops in type class inference.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L471-L472","name":"CategoryTheory.Under.mono_of_mono_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mono_of_mono_right","doc":"If `k.right` is a monomorphism, then `k` is a monomorphism. In other words, `Under.forget X`\nreflects epimorphisms.\nThe converse does not hold without additional assumptions on the underlying category, see\n`CategoryTheory.Under.mono_right_of_mono`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L462-L462","name":"CategoryTheory.Under.forget_faithful","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forget_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L453-L459","name":"CategoryTheory.Under.forget_reflects_iso","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forget_reflects_iso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L447-L448","name":"CategoryTheory.Under.mapComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mapComp","doc":"Mapping by the composite morphism `f ≫ g` is the same as mapping by `f` then by `g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L442-L443","name":"CategoryTheory.Under.mapId","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mapId","doc":"Mapping by the identity morphism is just the identity functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L437-L438","name":"CategoryTheory.Under.map_map_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.map_map_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L432-L433","name":"CategoryTheory.Under.map_obj_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.map_obj_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L427-L428","name":"CategoryTheory.Under.map_obj_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.map_obj_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L418-L419","name":"CategoryTheory.Under.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.map","doc":"A morphism `X ⟶ Y` induces a functor `Under Y ⥤ Under X` in the obvious way. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L412-L414","name":"CategoryTheory.Under.forgetCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forgetCone","doc":"The natural cone over the forgetful functor `Under X ⥤ T` with cone point `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L411-L411","name":"CategoryTheory.Under.forgetCone_π_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forgetCone_π_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L411-L411","name":"CategoryTheory.Under.forgetCone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forgetCone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L406-L407","name":"CategoryTheory.Under.forget_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forget_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L401-L402","name":"CategoryTheory.Under.forget_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forget_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L394-L395","name":"CategoryTheory.Under.forget","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.forget","doc":"The forgetful functor mapping an arrow to its domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L384-L386","name":"CategoryTheory.Under.isoMk_inv_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.isoMk_inv_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L378-L380","name":"CategoryTheory.Under.isoMk_hom_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.isoMk_hom_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L372-L374","name":"CategoryTheory.Under.isoMk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.isoMk","doc":"Construct an isomorphism in the over category given isomorphisms of the objects whose forward\ndirection gives a commutative triangle.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L362-L363","name":"CategoryTheory.Under.homMk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.homMk","doc":"To give a morphism in the under category, it suffices to give a morphism fitting in a\ncommutative triangle. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L361-L361","name":"CategoryTheory.Under.homMk_left_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.homMk_left_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L361-L361","name":"CategoryTheory.Under.homMk_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.homMk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L355-L356","name":"CategoryTheory.Under.mk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mk","doc":"To give an object in the under category, it suffices to give an arrow with domain `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L354-L354","name":"CategoryTheory.Under.mk_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mk_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L354-L354","name":"CategoryTheory.Under.mk_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.mk_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L350-L350","name":"CategoryTheory.Under.w","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.w","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L349-L349","name":"CategoryTheory.Under.w_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.w_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L345-L346","name":"CategoryTheory.Under.comp_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L340-L341","name":"CategoryTheory.Under.id_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.id_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L336-L336","name":"CategoryTheory.Under.under_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.under_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L329-L332","name":"CategoryTheory.Under.UnderMorphism.ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.UnderMorphism.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L317-L321","name":"CategoryTheory.Under.inhabited","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L314-L314","name":"CategoryTheory.instCategoryUnder","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.instCategoryUnder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L310-L311","name":"CategoryTheory.Under","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Under","doc":"The under category has as objects arrows with domain `X` and as morphisms commutative\ntriangles. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L298-L301","name":"CategoryTheory.Over.post","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.post","doc":"A functor `F : T ⥤ D` induces a functor `Over X ⥤ Over (F.obj X)` in the obvious way. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L297-L297","name":"CategoryTheory.Over.post_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.post_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L297-L297","name":"CategoryTheory.Over.post_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.post_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L285-L287","name":"CategoryTheory.Over.iteratedSliceBackward_forget_forget","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceBackward_forget_forget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L280-L282","name":"CategoryTheory.Over.iteratedSliceForward_forget","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceForward_forget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L272-L277","name":"CategoryTheory.Over.iteratedSliceEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceEquiv","doc":"Given f : Y ⟶ X, we have an equivalence between (T/X)/f and T/Y "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L271-L271","name":"CategoryTheory.Over.iteratedSliceEquiv_inverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceEquiv_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L271-L271","name":"CategoryTheory.Over.iteratedSliceEquiv_counitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceEquiv_counitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L271-L271","name":"CategoryTheory.Over.iteratedSliceEquiv_unitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceEquiv_unitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L271-L271","name":"CategoryTheory.Over.iteratedSliceEquiv_functor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceEquiv_functor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L264-L267","name":"CategoryTheory.Over.iteratedSliceBackward","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceBackward","doc":"Given f : Y ⟶ X, this is the obvious functor from T/Y to (T/X)/f "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L263-L263","name":"CategoryTheory.Over.iteratedSliceBackward_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceBackward_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L263-L263","name":"CategoryTheory.Over.iteratedSliceBackward_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceBackward_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L256-L259","name":"CategoryTheory.Over.iteratedSliceForward","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceForward","doc":"Given f : Y ⟶ X, this is the obvious functor from (T/X)/f to T/Y "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L255-L255","name":"CategoryTheory.Over.iteratedSliceForward_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceForward_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L255-L255","name":"CategoryTheory.Over.iteratedSliceForward_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.iteratedSliceForward_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L240-L247","name":"CategoryTheory.Over.mono_left_of_mono","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mono_left_of_mono","doc":"If `k` is a monomorphism, then `k.left` is a monomorphism. In other words, `Over.forget X` preserves\nmonomorphisms.\nThe converse of `CategoryTheory.Over.mono_of_mono_left`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L231-L232","name":"CategoryTheory.Over.mono_of_mono_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mono_of_mono_left","doc":"If `k.left` is a monomorphism, then `k` is a monomorphism. In other words, `Over.forget X` reflects\nmonomorphisms.\nThe converse of `CategoryTheory.Over.mono_left_of_mono`.\n\nThis lemma is not an instance, to avoid loops in type class inference.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L220-L221","name":"CategoryTheory.Over.epi_of_epi_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.epi_of_epi_left","doc":"If `k.left` is an epimorphism, then `k` is an epimorphism. In other words, `Over.forget X` reflects\nepimorphisms.\nThe converse does not hold without additional assumptions on the underlying category, see\n`CategoryTheory.Over.epi_left_of_epi`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L210-L210","name":"CategoryTheory.Over.forget_faithful","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forget_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L201-L207","name":"CategoryTheory.Over.forget_reflects_iso","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forget_reflects_iso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L195-L196","name":"CategoryTheory.Over.mapComp","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mapComp","doc":"Mapping by the composite morphism `f ≫ g` is the same as mapping by `f` then by `g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L190-L191","name":"CategoryTheory.Over.mapId","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mapId","doc":"Mapping by the identity morphism is just the identity functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L185-L186","name":"CategoryTheory.Over.map_map_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.map_map_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L180-L181","name":"CategoryTheory.Over.map_obj_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.map_obj_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L175-L176","name":"CategoryTheory.Over.map_obj_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.map_obj_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L166-L167","name":"CategoryTheory.Over.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.map","doc":"A morphism `f : X ⟶ Y` induces a functor `Over X ⥤ Over Y` in the obvious way.\n\nSee <https://stacks.math.columbia.edu/tag/001G>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L157-L159","name":"CategoryTheory.Over.forgetCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forgetCocone","doc":"The natural cocone over the forgetful functor `Over X ⥤ T` with cocone point `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L156-L156","name":"CategoryTheory.Over.forgetCocone_ι_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forgetCocone_ι_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L156-L156","name":"CategoryTheory.Over.forgetCocone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forgetCocone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L151-L152","name":"CategoryTheory.Over.forget_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forget_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L146-L147","name":"CategoryTheory.Over.forget_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forget_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L139-L140","name":"CategoryTheory.Over.forget","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.forget","doc":"The forgetful functor mapping an arrow to its domain.\n\nSee <https://stacks.math.columbia.edu/tag/001G>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L123-L125","name":"CategoryTheory.Over.isoMk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.isoMk","doc":"Construct an isomorphism in the over category given isomorphisms of the objects whose forward\ndirection gives a commutative triangle.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L122-L122","name":"CategoryTheory.Over.isoMk_hom_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.isoMk_hom_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L122-L122","name":"CategoryTheory.Over.isoMk_inv_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.isoMk_inv_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L122-L122","name":"CategoryTheory.Over.isoMk_hom_right_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.isoMk_hom_right_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L122-L122","name":"CategoryTheory.Over.isoMk_inv_right_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.isoMk_inv_right_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L112-L113","name":"CategoryTheory.Over.homMk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.homMk","doc":"To give a morphism in the over category, it suffices to give an arrow fitting in a commutative\ntriangle. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L111-L111","name":"CategoryTheory.Over.homMk_right_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.homMk_right_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L111-L111","name":"CategoryTheory.Over.homMk_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.homMk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L103-L104","name":"CategoryTheory.Over.coe_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.coe_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L95-L95","name":"CategoryTheory.Over.coeFromHom","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.coeFromHom","doc":"We can set up a coercion from arrows with codomain `X` to `over X`. This most likely should not\nbe a global instance, but it is sometimes useful. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L89-L90","name":"CategoryTheory.Over.mk","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mk","doc":"To give an object in the over category, it suffices to give a morphism with codomain `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L88-L88","name":"CategoryTheory.Over.mk_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mk_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L88-L88","name":"CategoryTheory.Over.mk_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.mk_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L84-L84","name":"CategoryTheory.Over.w","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.w","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L83-L83","name":"CategoryTheory.Over.w_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.w_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L79-L80","name":"CategoryTheory.Over.comp_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L74-L75","name":"CategoryTheory.Over.id_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.id_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L70-L70","name":"CategoryTheory.Over.over_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.over_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L62-L66","name":"CategoryTheory.Over.OverMorphism.ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.OverMorphism.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L50-L54","name":"CategoryTheory.Over.inhabited","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L47-L47","name":"CategoryTheory.instCategoryOver","kind":"instance","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.instCategoryOver","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Over.lean#L43-L44","name":"CategoryTheory.Over","kind":"def","docLink":"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over","doc":"The over category has as objects arrows in `T` with codomain `X` and as morphisms commutative\ntriangles.\n\nSee <https://stacks.math.columbia.edu/tag/001G>.\n"}]}