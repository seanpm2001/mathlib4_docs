{"name":"Mathlib.Tactic.Group","instances":[],"imports":["Init","Mathlib.Tactic.Ring","Mathlib.Tactic.FailIfNoProgress","Mathlib.Algebra.Group.Commutator"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L80-L96","name":"Mathlib.Tactic.Group.group","kind":"def","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.group","doc":"Tactic for normalizing expressions in multiplicative groups, without assuming\ncommutativity, using only the group axioms without any information about which group\nis manipulated.\n\n(For additive commutative groups, use the `abel` tactic instead.)\n\nExample:\n```lean\nexample {G : Type} [Group G] (a b c d : G) (h : c = (a*b^2)*((b*b)⁻¹*a⁻¹)*d) : a*c*d⁻¹ = a :=\nbegin\n  group at h, -- normalizes `h` which becomes `h : c = d`\n  rw h,       -- the goal is now `a*d*d⁻¹ = a`\n  group,      -- which then normalized and closed\nend\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L73-L74","name":"Mathlib.Tactic.Group.aux_group₂","kind":"def","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.aux_group₂","doc":"Auxiliary tactic for the `group` tactic. Calls `ring_nf` to normalize exponents. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L57-L58","name":"Mathlib.Tactic.Group.aux_group₁","kind":"def","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.aux_group₁","doc":"Auxiliary tactic for the `group` tactic. Calls the simplifier only. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L52-L53","name":"Mathlib.Tactic.Group.zpow_trick_one'","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zpow_trick_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L51-L51","name":"Mathlib.Tactic.Group.zsmul_trick_zero'","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zsmul_trick_zero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L46-L47","name":"Mathlib.Tactic.Group.zpow_trick_one","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zpow_trick_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L45-L45","name":"Mathlib.Tactic.Group.zsmul_trick_zero","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zsmul_trick_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L40-L41","name":"Mathlib.Tactic.Group.zpow_trick","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zpow_trick","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Group.lean#L39-L39","name":"Mathlib.Tactic.Group.zsmul_trick","kind":"theorem","docLink":"./Mathlib/Tactic/Group.html#Mathlib.Tactic.Group.zsmul_trick","doc":""}]}