{"name":"Mathlib.Data.Vector","instances":[{"typeNames":["Eq","Vector"],"name":"Vector.instDecidableEqVector","className":"Decidable"},{"typeNames":["Vector","Nat","Vector","Nat","LT.lt","instLTNat"],"name":"Vector.instGetElemVectorNatLtInstLTNat","className":"GetElem"}],"imports":["Init","Mathlib.Mathport.Rename","Std.Data.List.Basic","Std.Data.List.Lemmas","Mathlib.Init.Data.List.Basic","Mathlib.Init.Data.List.Lemmas"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L262-L263","name":"Vector.instGetElemVectorNatLtInstLTNat","kind":"instance","docLink":"./Mathlib/Data/Vector.html#Vector.instGetElemVectorNatLtInstLTNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L257-L259","name":"Vector.toList_take","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_take","doc":"`take` of vectors corresponds under `toList` to `take` of lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L250-L252","name":"Vector.toList_drop","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_drop","doc":"`drop` of vectors corresponds under `toList` to `drop` of lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L241-L245","name":"Vector.toList_append","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_append","doc":"Appending of vectors corresponds under `toList` to appending of lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L235-L236","name":"Vector.toList_cons","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_cons","doc":"`toList` of `cons` of a vector and an element is\nthe `cons` of the list obtained by `toList` and the element "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L228-L229","name":"Vector.toList_length","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_length","doc":"The length of the list to which a vector of length `n` maps is `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L222-L223","name":"Vector.toList_nil","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_nil","doc":"A nil vector maps to a nil list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L216-L217","name":"Vector.toList_mk","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.toList_mk","doc":"Vector of length from a list `v`\nwith witness that `v` has length `n` maps to `v` under `toList`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L209-L210","name":"Vector.eq_nil","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.eq_nil","doc":"A vector of length `0` is a `nil` vector. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L204-L205","name":"Vector.eq","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.eq","doc":"Vector is determined by the underlying list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L194-L198","name":"Vector.mapAccumr₂","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.mapAccumr₂","doc":"Runs a function over a pair of vectors returning the intermediate results and a\na final result.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L185-L188","name":"Vector.mapAccumr","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.mapAccumr","doc":"Runs a function over a vector returning the intermediate results and a\na final result.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L171-L173","name":"Vector.ofFn","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.ofFn","doc":"Vector of length `n` from a function on `Fin n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L166-L167","name":"Vector.removeNth","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.removeNth","doc":"Remove the element at position `i` from a vector of length `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L161-L162","name":"Vector.take","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.take","doc":"Take `i` elements from a vector of length `n`; we can have `i > n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L156-L157","name":"Vector.drop","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.drop","doc":"Drop `i` elements from a vector of length `n`; we can have `i > n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L151-L152","name":"Vector.replicate","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.replicate","doc":"Vector obtained by repeating an element. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L146-L147","name":"Vector.map₂","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.map₂","doc":"Mapping two vectors under a curried function of two variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L141-L142","name":"Vector.map_cons","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.map_cons","doc":"`map` is natural with respect to `cons`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L135-L136","name":"Vector.map_nil","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.map_nil","doc":"A `nil` vector maps to a `nil` vector. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L129-L130","name":"Vector.map","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.map","doc":"Map a vector under a function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L121-L125","name":"Vector.elim","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.elim","doc":"Elimination rule for `Vector`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L99-L100","name":"Vector.append","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.append","doc":"Appending a vector to another. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L94-L95","name":"Vector.get","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.get","doc":"nth element of a vector, indexed by a `Fin` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L88-L89","name":"Vector.toList","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.toList","doc":"The list obtained from a vector. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L82-L84","name":"Vector.cons_head_tail","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.cons_head_tail","doc":"Prepending the head of a vector to its tail gives the vector. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L76-L77","name":"Vector.tail_cons","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.tail_cons","doc":"The tail of a vector obtained by prepending is the vector prepended. to "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L70-L72","name":"Vector.tail","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.tail","doc":"The tail of a vector, with an empty vector having empty tail.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L65-L66","name":"Vector.head_cons","kind":"theorem","docLink":"./Mathlib/Data/Vector.html#Vector.head_cons","doc":"The head of a vector obtained by prepending is the element prepended. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L59-L61","name":"Vector.head","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.head","doc":"The first element of a vector with length at least `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L52-L53","name":"Vector.length","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.length","doc":"The length of a vector. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L45-L46","name":"Vector.cons","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.cons","doc":"If `a : α` and `l : Vector α n`, then `cons a l`, is the vector of length `n + 1`\nwhose first element is a and with l as the rest of the list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L38-L39","name":"Vector.nil","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector.nil","doc":"The empty vector with elements of type `α` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L33-L34","name":"Vector.instDecidableEqVector","kind":"instance","docLink":"./Mathlib/Data/Vector.html#Vector.instDecidableEqVector","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Vector.lean#L23-L24","name":"Vector","kind":"def","docLink":"./Mathlib/Data/Vector.html#Vector","doc":"`Vector α n` is the type of lists of length `n` with elements of type `α`. "}]}