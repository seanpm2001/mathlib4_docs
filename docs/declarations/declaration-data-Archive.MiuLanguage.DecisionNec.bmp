{"name":"Archive.MiuLanguage.DecisionNec","instances":[{"typeNames":["Miu.Goodm"],"name":"Miu.instDecidablePredMiustrGoodm","className":"Decidable"},{"typeNames":["Miu.Decstr"],"name":"Miu.instDecidablePredMiustrDecstr","className":"Decidable"}],"imports":["Init","Archive.MiuLanguage.Basic","Mathlib.Data.List.Count","Mathlib.Data.Nat.ModEq","Mathlib.Tactic.Ring"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L220-L224","name":"Miu.decstr_of_der","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.decstr_of_der","doc":"Suppose `en : Miustr`. If `en` is `Derivable`, then the condition `Decstr en` holds.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L216-L216","name":"Miu.instDecidablePredMiustrDecstr","kind":"instance","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.instDecidablePredMiustrDecstr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L212-L213","name":"Miu.Decstr","kind":"def","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.Decstr","doc":"`Decstr en` is the condition that `count I en` is 1 or 2 modulo 3, that `en` starts with `M`, and\nthat `en` has no `M` in its tail. We automatically derive that this is a decidable predicate.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L192-L199","name":"Miu.goodm_of_derivable","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodm_of_derivable","doc":"Any derivable string must begin with `M` and have no `M` in its tail.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L174-L187","name":"Miu.goodm_of_rule4","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodm_of_rule4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L153-L166","name":"Miu.goodm_of_rule3","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodm_of_rule3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L143-L150","name":"Miu.goodm_of_rule2","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodm_of_rule2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L127-L140","name":"Miu.goodm_of_rule1","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodm_of_rule1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L115-L118","name":"Miu.goodmi","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.goodmi","doc":"Demonstration that `\"MI\"` starts with `M` and has no `M` in its tail.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L111-L111","name":"Miu.instDecidablePredMiustrGoodm","kind":"instance","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.instDecidablePredMiustrGoodm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L107-L108","name":"Miu.Goodm","kind":"def","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.Goodm","doc":"`Goodm xs` holds if `xs : Miustr` begins with `M` and has no `M` in its tail.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L92-L94","name":"Miu.not_derivable_mu","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.not_derivable_mu","doc":"Using the above theorem, we solve the MU puzzle, showing that `\"MU\"` is not derivable.\nOnce we have proved that `Derivable` is an instance of `DecidablePred`, this will follow\nimmediately from `dec_trivial`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L73-L85","name":"Miu.count_equiv_one_or_two_mod3_of_derivable","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.count_equiv_one_or_two_mod3_of_derivable","doc":"`count_equiv_one_or_two_mod3_of_derivable` shows any derivable string must have a `count I` that\nis 1 or 2 modulo 3.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L61-L67","name":"Miu.mod3_eq_1_or_mod3_eq_2","kind":"theorem","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.mod3_eq_1_or_mod3_eq_2","doc":"If `a` is 1 or 2 mod 3 and if `b` is `a` or twice `a` mod 3, then `b` is 1 or 2 mod 3.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Archive/MiuLanguage/DecisionNec.lean#L47-L50","name":"Miu.CountEquivOrEquivTwoMulMod3","kind":"def","docLink":"./Archive/MiuLanguage/DecisionNec.html#Miu.CountEquivOrEquivTwoMulMod3","doc":"Given `st en : Miustr`, the relation `CountEquivOrEquivTwoMulMod3 st en` holds if `st` and\n`en` either have equal `count I`, modulo 3, or `count I en` is twice `count I st`, modulo 3.\n"}]}