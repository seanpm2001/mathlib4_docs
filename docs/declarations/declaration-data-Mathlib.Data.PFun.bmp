{"name":"Mathlib.Data.PFun","instances":[{"typeNames":["PFun"],"name":"PFun.inhabited","className":"Inhabited"},{"typeNames":["PFun"],"name":"PFun.coe","className":"Coe"},{"typeNames":["PFun"],"name":"PFun.monad","className":"Monad"},{"typeNames":["PFun","PFun.monad"],"name":"PFun.lawfulMonad","className":"LawfulMonad"}],"imports":["Init","Mathlib.Data.Part","Mathlib.Data.Rel"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L705-L710","name":"PFun.prodMap_comp_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.prodMap_comp_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L700-L701","name":"PFun.prodMap_id_id","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.prodMap_id_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L692-L696","name":"PFun.prodLift_fst_comp_snd_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.prodLift_fst_comp_snd_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L684-L688","name":"PFun.mem_prodMap","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_prodMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L679-L681","name":"PFun.prodMap_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.prodMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L673-L675","name":"PFun.get_prodMap","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.get_prodMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L668-L670","name":"PFun.dom_prodMap","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_prodMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L663-L664","name":"PFun.prodMap","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.prodMap","doc":"Product of partial functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L654-L659","name":"PFun.mem_prodLift","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_prodLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L649-L651","name":"PFun.prodLift_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.prodLift_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L643-L645","name":"PFun.get_prodLift","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.get_prodLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L638-L640","name":"PFun.dom_prodLift","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_prodLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L633-L634","name":"PFun.prodLift","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.prodLift","doc":"Product of partial functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L628-L629","name":"PFun.coe_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.coe_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L623-L624","name":"PFun.comp_assoc","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L614-L619","name":"PFun.Part.bind_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.Part.bind_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L605-L610","name":"PFun.preimage_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L597-L601","name":"PFun.dom_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L592-L593","name":"PFun.comp_id","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.comp_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L587-L588","name":"PFun.id_comp","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.id_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L582-L583","name":"PFun.comp_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.comp_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L578-L578","name":"PFun.comp","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.comp","doc":"Composition of partial functions as a partial function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L573-L574","name":"PFun.id_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L568-L569","name":"PFun.coe_id","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.coe_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L563-L564","name":"PFun.id","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.id","doc":"The identity as a partial function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L557-L559","name":"PFun.mem_toSubtype_iff","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_toSubtype_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L552-L554","name":"PFun.dom_toSubtype_apply_iff","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_toSubtype_apply_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L547-L549","name":"PFun.toSubtype_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.toSubtype_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L542-L543","name":"PFun.dom_toSubtype","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_toSubtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L538-L538","name":"PFun.toSubtype","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.toSubtype","doc":"Turns a function into a partial function to a subtype. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L526-L534","name":"PFun.preimage_asSubtype","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_asSubtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L521-L523","name":"PFun.core_eq","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L513-L518","name":"PFun.preimage_eq","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L507-L510","name":"PFun.preimage_subset_core","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_subset_core","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L503-L504","name":"PFun.core_restrict","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_restrict","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L495-L498","name":"PFun.core_res","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_res","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L487-L488","name":"PFun.mem_core_res","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_core_res","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L483-L484","name":"PFun.core_inter","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L479-L480","name":"PFun.core_mono","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L475-L476","name":"PFun.compl_dom_subset_core","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.compl_dom_subset_core","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L471-L472","name":"PFun.mem_core","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_core","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L466-L467","name":"PFun.core_def","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.core_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L462-L463","name":"PFun.core","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.core","doc":"Core of a set `s : Set β` with respect to a partial function `f : α →. β`. Set of all `a : α`\nsuch that `f a ∈ s`, if `f a` is defined. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L457-L457","name":"PFun.coe_preimage","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.coe_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L454-L454","name":"PFun.preimage_univ","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L450-L451","name":"PFun.preimage_union","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L446-L447","name":"PFun.preimage_inter","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L442-L443","name":"PFun.preimage_mono","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L438-L439","name":"PFun.preimage_subset_dom","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.preimage_subset_dom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L434-L435","name":"PFun.mem_preimage","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L429-L430","name":"PFun.Preimage_def","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.Preimage_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L425-L426","name":"PFun.preimage","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.preimage","doc":"Preimage of a set under a partial function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L420-L421","name":"PFun.image_union","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.image_union","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L416-L417","name":"PFun.image_inter","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.image_inter","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L412-L413","name":"PFun.image_mono","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.image_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L408-L409","name":"PFun.mem_image","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L404-L405","name":"PFun.image_def","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.image_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L400-L401","name":"PFun.image","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.image","doc":"Image of a set under a partial function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L382-L394","name":"PFun.fixInduction'_fwd","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fixInduction'_fwd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L368-L379","name":"PFun.fixInduction'_stop","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fixInduction'_stop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L357-L365","name":"PFun.fixInduction'","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.fixInduction'","doc":"Another induction lemma for `b ∈ f.fix a` which allows one to prove a predicate `P` holds for\n`a` given that `f a` inherits `P` from `a` and `P` holds for preimages of `b`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L343-L350","name":"PFun.fixInduction_spec","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fixInduction_spec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L331-L340","name":"PFun.fixInduction","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.fixInduction","doc":"A recursion principle for `PFun.fix`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L325-L326","name":"PFun.fix_fwd","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fix_fwd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L315-L322","name":"PFun.fix_fwd_eq","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fix_fwd_eq","doc":"If advancing one step from `a` on `f` leads to `a' : α`, then `f.fix a = f.fix a'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L309-L311","name":"PFun.fix_stop","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fix_stop","doc":"If advancing one step from `a` leads to `b : β`, then `f.fix a = b` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L269-L305","name":"PFun.mem_fix_iff","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_fix_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L264-L266","name":"PFun.dom_of_mem_fix","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_of_mem_fix","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L253-L261","name":"PFun.fix","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.fix","doc":"First return map. Transforms a partial function `f : α →. β ⊕ α` into the partial function\n`α →. β` which sends `a : α` to the first value in `β` it hits by iterating `f`, if such a value\nexists. By abusing notation to illustrate, either `f a` is in the `β` part of `β ⊕ α` (in which\ncase `f.fix a` returns `f a`), or it is undefined (in which case `f.fix a` is undefined as well), or\nit is in the `α` part of `β ⊕ α` (in which case we repeat the procedure, so `f.fix a` will return\n`f.fix (f a)`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L242-L244","name":"PFun.bind_defined","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.bind_defined","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L238-L239","name":"PFun.pure_defined","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.pure_defined","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L231-L235","name":"PFun.lawfulMonad","kind":"instance","docLink":"./Mathlib/Data/PFun.html#PFun.lawfulMonad","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L225-L228","name":"PFun.monad","kind":"instance","docLink":"./Mathlib/Data/PFun.html#PFun.monad","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L222-L222","name":"PFun.map","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.map","doc":"The monad `map` function, pointwise `Part.map` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L217-L218","name":"PFun.bind_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.bind_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L213-L213","name":"PFun.bind","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.bind","doc":"The monad `bind` function, pointwise `Part.bind` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L209-L209","name":"PFun.pure","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.pure","doc":"The monad `pure` function, the total constant `x` function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L204-L205","name":"PFun.lift_graph","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.lift_graph","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L200-L201","name":"PFun.dom_iff_graph","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_iff_graph","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L196-L197","name":"PFun.res_univ","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.res_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L192-L193","name":"PFun.mem_res","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_res","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L188-L189","name":"PFun.res","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.res","doc":"Turns a function into a partial function with a prescribed domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L183-L184","name":"PFun.mem_restrict","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_restrict","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L178-L179","name":"PFun.restrict","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.restrict","doc":"Restrict a partial function to a smaller domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L173-L174","name":"PFun.ran","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.ran","doc":"The range of a partial function is the set of values\n`f x` where `x` is in the domain of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L168-L168","name":"PFun.graph'","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.graph'","doc":"Graph of a partial function as a relation. `x` and `y` are related iff `f x` is defined and\n\"equals\" `y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L162-L163","name":"PFun.graph","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.graph","doc":"Graph of a partial function `f` as the set of pairs `(x, f x)` where `x` is in the domain of\n`f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L156-L157","name":"PFun.lift_injective","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.lift_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L152-L153","name":"PFun.dom_coe","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L147-L148","name":"PFun.coe_val","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.coe_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L142-L143","name":"PFun.coe","kind":"instance","docLink":"./Mathlib/Data/PFun.html#PFun.coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L139-L139","name":"PFun.lift","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.lift","doc":"Turn a total function into a partial function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L132-L134","name":"PFun.asSubtype_eq_of_mem","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.asSubtype_eq_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L127-L129","name":"PFun.equivSubtype","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.equivSubtype","doc":"The type of partial functions `α →. β` is equivalent to\nthe type of pairs `(p : α → Prop, f : Subtype p → β)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L121-L122","name":"PFun.asSubtype","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.asSubtype","doc":"Turns a partial function into a function out of its domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L116-L117","name":"PFun.ext","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L111-L113","name":"PFun.ext'","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.ext'","doc":"Partial function extensionality "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L106-L107","name":"PFun.evalOpt","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.evalOpt","doc":"Evaluate a partial function to return an `Option` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L101-L102","name":"PFun.fn_apply","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.fn_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L96-L97","name":"PFun.fn","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.fn","doc":"Evaluate a partial function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L91-L92","name":"PFun.dom_eq","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L87-L88","name":"PFun.dom_mk","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.dom_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L83-L83","name":"PFun.mem_dom","kind":"theorem","docLink":"./Mathlib/Data/PFun.html#PFun.mem_dom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L78-L79","name":"PFun.Dom","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun.Dom","doc":"The domain of a partial function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L73-L74","name":"PFun.inhabited","kind":"instance","docLink":"./Mathlib/Data/PFun.html#PFun.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L66-L67","name":"«term_→._»","kind":"def","docLink":"./Mathlib/Data/PFun.html#«term_→._»","doc":"`α  →. β` is notation for the type `PFun α β` of partial functions from `α` to `β`.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFun.lean#L62-L63","name":"PFun","kind":"def","docLink":"./Mathlib/Data/PFun.html#PFun","doc":"`PFun α β`, or `α →. β`, is the type of partial functions from\n`α` to `β`. It is defined as `α → Part β`. "}]}