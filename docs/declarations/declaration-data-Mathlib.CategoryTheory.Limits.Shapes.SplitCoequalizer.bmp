{"name":"Mathlib.CategoryTheory.Limits.Shapes.SplitCoequalizer","instances":[{"typeNames":["CategoryTheory.IsSplitCoequalizer","CategoryTheory.CategoryStruct.id","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.instInhabitedIsSplitCoequalizerIdToCategoryStruct","className":"Inhabited"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","Prefunctor.map","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","Prefunctor.map","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor"],"name":"CategoryTheory.map_is_split_pair","className":"CategoryTheory.HasSplitCoequalizer"},{"typeNames":[],"name":"CategoryTheory.Limits.hasCoequalizer_of_hasSplitCoequalizer","className":"CategoryTheory.Limits.HasColimit"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Equalizers"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L184-L186","name":"CategoryTheory.Limits.hasCoequalizer_of_hasSplitCoequalizer","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Limits.hasCoequalizer_of_hasSplitCoequalizer","doc":"If a pair has a split coequalizer, it has a coequalizer. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L176-L178","name":"CategoryTheory.map_is_split_pair","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.map_is_split_pair","doc":"If `f, g` is split, then `G f, G g` is split. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L170-L172","name":"CategoryTheory.HasSplitCoequalizer.isSplitCoequalizer","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer.isSplitCoequalizer","doc":"The coequalizer morphism `coequalizeπ` gives a split coequalizer on `f,g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L164-L166","name":"CategoryTheory.HasSplitCoequalizer.coequalizerπ","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer.coequalizerπ","doc":"Get the coequalizer morphism from the typeclass `IsSplitPair`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L159-L160","name":"CategoryTheory.HasSplitCoequalizer.coequalizerOfSplit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer.coequalizerOfSplit","doc":"Get the coequalizer object from the typeclass `IsSplitPair`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L154-L155","name":"CategoryTheory.Functor.IsSplitPair","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair","doc":"The pair `f,g` is a `G`-split pair if there is a `h : G Y ⟶ Z` so that `G f, G g, h` forms a split\ncoequalizer in `D`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L147-L147","name":"CategoryTheory.HasSplitCoequalizer.splittable","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer.splittable","doc":"There is some split coequalizer "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L145-L147","name":"CategoryTheory.HasSplitCoequalizer","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer","doc":"The pair `f,g` is a split pair if there is a `h : Y ⟶ Z` so that `f, g, h` forms a split coequalizer\nin `C`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L128-L134","name":"CategoryTheory.IsSplitCoequalizer.isCoequalizer","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.isCoequalizer","doc":"The cofork induced by a split coequalizer is a coequalizer, justifying the name. In some cases it\nis more convenient to show a given cofork is a coequalizer by showing it is split.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L120-L121","name":"CategoryTheory.IsSplitCoequalizer.asCofork_π","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.asCofork_π","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L115-L116","name":"CategoryTheory.IsSplitCoequalizer.asCofork","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.asCofork","doc":"A split coequalizer clearly induces a cofork. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L114-L114","name":"CategoryTheory.IsSplitCoequalizer.asCofork_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.asCofork_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L98-L106","name":"CategoryTheory.IsSplitCoequalizer.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.map","doc":"Split coequalizers are absolute: they are preserved by any functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L97-L97","name":"CategoryTheory.IsSplitCoequalizer.map_rightSection","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.map_rightSection","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L97-L97","name":"CategoryTheory.IsSplitCoequalizer.map_leftSection","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.map_leftSection","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L92-L92","name":"CategoryTheory.IsSplitCoequalizer.rightSection_π_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.rightSection_π_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L92-L92","name":"CategoryTheory.IsSplitCoequalizer.leftSection_top_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.leftSection_top_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L92-L92","name":"CategoryTheory.IsSplitCoequalizer.leftSection_bottom_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.leftSection_bottom_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L90-L90","name":"CategoryTheory.IsSplitCoequalizer.condition_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.condition_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L85-L86","name":"CategoryTheory.instInhabitedIsSplitCoequalizerIdToCategoryStruct","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.instInhabitedIsSplitCoequalizerIdToCategoryStruct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L77-L77","name":"CategoryTheory.IsSplitCoequalizer.leftSection_top","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.leftSection_top","doc":"`leftSection` composed with `f` is `pi` composed with `rightSection` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L75-L75","name":"CategoryTheory.IsSplitCoequalizer.leftSection_bottom","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.leftSection_bottom","doc":"`leftSection` splits `g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L73-L73","name":"CategoryTheory.IsSplitCoequalizer.rightSection_π","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.rightSection_π","doc":"`rightSection` splits `π` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L71-L71","name":"CategoryTheory.IsSplitCoequalizer.condition","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.condition","doc":"Composition of `π` with `f` and with `g` agree "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L69-L69","name":"CategoryTheory.IsSplitCoequalizer.leftSection","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.leftSection","doc":"A map in the opposite direction to `f` and `g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L67-L67","name":"CategoryTheory.IsSplitCoequalizer.rightSection","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.rightSection","doc":"A map from the coequalizer to `Y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L65-L65","name":"CategoryTheory.IsSplitCoequalizer.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L65-L77","name":"CategoryTheory.IsSplitCoequalizer","kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.IsSplitCoequalizer","doc":"A split coequalizer diagram consists of morphisms\n\n      f   π\n    X ⇉ Y → Z\n      g\n\nsatisfying `f ≫ π = g ≫ π` together with morphisms\n\n      t   s\n    X ← Y ← Z\n\nsatisfying `s ≫ π = 𝟙 Z`, `t ≫ g = 𝟙 Y` and `t ≫ f = π ≫ s`.\n\nThe name \"coequalizer\" is appropriate, since any split coequalizer is a coequalizer, see\n`Category_theory.IsSplitCoequalizer.isCoequalizer`.\nSplit coequalizers are also absolute, since a functor preserves all the structure above.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.lean#L1-L1","name":"CategoryTheory.HasSplitCoequalizer.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.HasSplitCoequalizer.mk","doc":""}]}