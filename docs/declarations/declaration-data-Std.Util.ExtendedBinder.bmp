{"name":"Std.Util.ExtendedBinder","instances":[],"imports":["Init","Lean.Elab.MacroArgUtil","Lean.Linter.MissingDocs"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L137-L138","name":"Std.ExtendedBinder.«binderTerm≤_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«binderTerm≤_»","doc":"Declare `∃ x ≤ y, ...` as syntax for `∃ x, x ≤ y ∧ ...` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L135-L136","name":"Std.ExtendedBinder.«binderTerm<_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«binderTerm<_»","doc":"Declare `∃ x < y, ...` as syntax for `∃ x, x < y ∧ ...` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L133-L134","name":"Std.ExtendedBinder.«binderTerm≥_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«binderTerm≥_»","doc":"Declare `∃ x ≥ y, ...` as syntax for `∃ x, x ≥ y ∧ ...` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L131-L132","name":"Std.ExtendedBinder.«binderTerm>_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«binderTerm>_»","doc":"Declare `∃ x > y, ...` as syntax for `∃ x, x > y ∧ ...` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L126-L129","name":"Std.ExtendedBinder.checkBinderPredicate","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.checkBinderPredicate","doc":"Missing docs handler for `binder_predicate` "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L92-L100","name":"Std.ExtendedBinder.binderPredicate","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.binderPredicate","doc":"Declares a binder predicate.  For example:\n```\nbinder_predicate x \" > \" y:term => `($x > $y)\n```\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L78-L79","name":"Std.ExtendedBinder.«term∀ᵉ_,_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∀ᵉ_,_»","doc":"The syntax `∀ᵉ (x < 2) (y < 3), p x y` is shorthand for `∀ x < 2, ∀ y < 3, p x y`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L67-L68","name":"Std.ExtendedBinder.«term∃ᵉ_,_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∃ᵉ_,_»","doc":"The syntax `∃ᵉ (x < 2) (y < 3), p x y` is shorthand for `∃ x < 2, ∃ y < 3, p x y`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L64-L65","name":"Std.ExtendedBinder.extBinders","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinders","doc":"A single (unparenthesized) binder, or a list of parenthesized binders "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L62-L63","name":"Std.ExtendedBinder.extBinderCollection","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderCollection","doc":"A list of parenthesized binders "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L60-L61","name":"Std.ExtendedBinder.extBinderParenthesized","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderParenthesized","doc":"A extended binder in parentheses "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L55-L59","name":"Std.ExtendedBinder.extBinder","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinder","doc":"An extended binder has the form `x`, `x : ty`, or `x pred`\nwhere `pred` is a `binderPred` like `< 2`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L34-L38","name":"Std.ExtendedBinder.«term∀__,_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∀__,_»","doc":"The notation `∀ x < 2, p x` is shorthand for `∀ x, x < 2 → p x`,\nand similarly for other binary operators.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L29-L33","name":"Std.ExtendedBinder.«term∃__,_»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∃__,_»","doc":"The notation `∃ x < 2, p x` is shorthand for `∃ x, x < 2 ∧ p x`,\nand similarly for other binary operators.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L22-L25","name":"Std.ExtendedBinder.«termSatisfies_binder_pred%__»","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«termSatisfies_binder_pred%__»","doc":"`satisfies_binder_pred% t pred` expands to a proposition expressing that `t` satisfies `pred`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L16-L20","name":"Lean.Parser.Category.binderPred","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Lean.Parser.Category.binderPred","doc":"The syntax category of binder predicates contains predicates like `> 0`, `∈ s`, etc.\n(`: t` should not be a binder predicate because it would clash with the built-in syntax for ∀/∃.)\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Util/ExtendedBinder.lean#L16-L20","name":"Std.ExtendedBinder.binderPred.quot","kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.binderPred.quot","doc":""}]}