{"name":"Mathlib.Tactic.ScopedNS","instances":[],"imports":["Init","Mathlib.Util.WithWeakNamespace"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/ScopedNS.lean#L17-L33","name":"Mathlib.Tactic.scopedNS","kind":"def","docLink":"./Mathlib/Tactic/ScopedNS.html#Mathlib.Tactic.scopedNS","doc":"`scoped[NS]` is similar to the `scoped` modifier on attributes and notations,\nbut it scopes the syntax in the specified namespace instead of the current namespace.\n```\nscoped[Matrix] infixl:75 \" ⬝ \" => Matrix.mul\n-- declares `⬝` as a notation for matrix multiplication\n-- which is only accessible if you `open Matrix` or `open scoped Matrix`.\n\nnamespace Nat\n\nscoped[Nat.Count] attribute [instance] CountSet.fintype\n-- make the definition Nat.CountSet.fintype an instance,\n-- but only if `Nat.Count` is open\n```\n"}]}