{"name":"Mathlib.Combinatorics.Composition","instances":[{"typeNames":["CompositionAsSet"],"name":"instInhabitedCompositionAsSet","className":"Inhabited"},{"typeNames":["Composition"],"name":"Composition.instToStringComposition","className":"ToString"},{"typeNames":["Composition"],"name":"Composition.instInhabitedComposition","className":"Inhabited"},{"typeNames":["CompositionAsSet"],"name":"compositionAsSetFintype","className":"Fintype"},{"typeNames":["Composition"],"name":"compositionFintype","className":"Fintype"}],"imports":["Init","Mathlib.Data.Finset.Sort","Mathlib.Algebra.BigOperators.Order","Mathlib.Algebra.BigOperators.Fin"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1091-L1093","name":"composition_card","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#composition_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1087-L1088","name":"compositionFintype","kind":"instance","docLink":"./Mathlib/Combinatorics/Composition.html#compositionFintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1075-L1084","name":"compositionEquiv","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#compositionEquiv","doc":"Equivalence between `Composition n` and `CompositionAsSet n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1069-L1071","name":"Composition.toCompositionAsSet_boundaries","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.toCompositionAsSet_boundaries","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1053-L1065","name":"CompositionAsSet.toComposition_boundaries","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.toComposition_boundaries","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1047-L1049","name":"CompositionAsSet.toComposition_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.toComposition_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1021-L1043","name":"Composition.toCompositionAsSet_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.toCompositionAsSet_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1015-L1017","name":"CompositionAsSet.toComposition_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.toComposition_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L1009-L1011","name":"Composition.toCompositionAsSet_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.toCompositionAsSet_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L991-L994","name":"CompositionAsSet.toComposition","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.toComposition","doc":"Associating a `Composition n` to a `CompositionAsSet n`, by registering the sizes of the\nblocks as a list of positive integers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L983-L986","name":"CompositionAsSet.blocks_sum","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocks_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L967-L980","name":"CompositionAsSet.mem_boundaries_iff_exists_blocks_sum_take_eq","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.mem_boundaries_iff_exists_blocks_sum_take_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L953-L964","name":"CompositionAsSet.blocks_partial_sum","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocks_partial_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L947-L948","name":"CompositionAsSet.blocks_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocks_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L942-L943","name":"CompositionAsSet.blocks","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocks","doc":"List of the sizes of the blocks in a `CompositionAsSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L935-L938","name":"CompositionAsSet.blocksFun_pos","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocksFun_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L931-L932","name":"CompositionAsSet.blocksFun","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.blocksFun","doc":"Size of the `i`-th block in a `CompositionAsSet`, seen as a function on `Fin c.length`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L925-L927","name":"CompositionAsSet.boundary_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.boundary_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L919-L921","name":"CompositionAsSet.boundary_zero","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.boundary_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L914-L915","name":"CompositionAsSet.boundary","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.boundary","doc":"Canonical increasing bijection from `Fin c.boundaries.card` to `c.boundaries`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L909-L910","name":"CompositionAsSet.lt_length'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.lt_length'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L905-L906","name":"CompositionAsSet.lt_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.lt_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L900-L902","name":"CompositionAsSet.length_lt_card_boundaries","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.length_lt_card_boundaries","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L896-L897","name":"CompositionAsSet.card_boundaries_eq_succ_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.card_boundaries_eq_succ_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L892-L893","name":"CompositionAsSet.length","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.length","doc":"Number of blocks in a `CompositionAsSet`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L887-L888","name":"CompositionAsSet.card_boundaries_pos","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.card_boundaries_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L883-L884","name":"CompositionAsSet.boundaries_nonempty","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.boundaries_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L873-L876","name":"compositionAsSet_card","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#compositionAsSet_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L869-L870","name":"compositionAsSetFintype","kind":"instance","docLink":"./Mathlib/Combinatorics/Composition.html#compositionAsSetFintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L798-L866","name":"compositionAsSetEquiv","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#compositionAsSetEquiv","doc":"Bijection between compositions of `n` and subsets of `{0, ..., n-2}`, defined by\nconsidering the restriction of the subset to `{1, ..., n-1}` and shifting to the left by one. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L780-L783","name":"List.splitWrtComposition_join","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.splitWrtComposition_join","doc":"If one joins a list of lists and then splits the join along the right composition, one gets\nback the original list of lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L772-L774","name":"List.join_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.join_splitWrtComposition","doc":"If one splits a list along a composition, and then joins the sublists, one gets back the\noriginal list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L759-L766","name":"List.join_splitWrtCompositionAux","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.join_splitWrtCompositionAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L754-L757","name":"List.get_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.get_splitWrtComposition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L747-L750","name":"List.nthLe_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.nthLe_splitWrtComposition","doc":"The `i`-th sublist in the splitting of a list `l` along a composition `c`, is the slice of `l`\nbetween the indices `c.sizeUpTo i` and `c.sizeUpTo (i+1)`, i.e., the indices in the `i`-th\nblock of the composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L727-L739","name":"List.nthLe_splitWrtCompositionAux","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.nthLe_splitWrtCompositionAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L719-L722","name":"List.sum_take_map_length_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.sum_take_map_length_splitWrtComposition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L711-L716","name":"List.length_pos_of_mem_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.length_pos_of_mem_splitWrtComposition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L706-L708","name":"List.map_length_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.map_length_splitWrtComposition","doc":"When one splits a list along a composition `c`, the lengths of the sublists thus created are\ngiven by the block sizes in `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L693-L701","name":"List.map_length_splitWrtCompositionAux","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.map_length_splitWrtCompositionAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L687-L689","name":"List.length_splitWrtComposition","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.length_splitWrtComposition","doc":"When one splits a list along a composition `c`, the number of sublists thus created is\n`c.length`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L677-L681","name":"List.length_splitWrtCompositionAux","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.length_splitWrtCompositionAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L672-L674","name":"List.splitWrtCompositionAux_cons","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#List.splitWrtCompositionAux_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L662-L663","name":"List.splitWrtComposition","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#List.splitWrtComposition","doc":"Given a list of length `n` and a composition `[i₁, ..., iₖ]` of `n`, split `l` into a list of\n`k` lists corresponding to the blocks of the composition, of respective lengths `i₁`, ..., `iₖ`.\nThis makes sense mostly when `n = l.length`, but this is not necessary for the definition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L652-L656","name":"List.splitWrtCompositionAux","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#List.splitWrtCompositionAux","doc":"Auxiliary for `List.splitWrtComposition`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L612-L631","name":"Composition.ne_single_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ne_single_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L598-L609","name":"Composition.eq_single_iff_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.eq_single_iff_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L592-L595","name":"Composition.single_embedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.single_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L587-L588","name":"Composition.single_blocksFun","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.single_blocksFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L582-L583","name":"Composition.single_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.single_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L577-L578","name":"Composition.single_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.single_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L572-L573","name":"Composition.single","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.single","doc":"The composition made of a single block of size `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L565-L566","name":"Composition.eq_ones_iff_le_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.eq_ones_iff_le_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L545-L562","name":"Composition.eq_ones_iff_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.eq_ones_iff_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L539-L542","name":"Composition.ne_ones_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ne_ones_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L526-L536","name":"Composition.eq_ones_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.eq_ones_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L520-L523","name":"Composition.ones_embedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L515-L516","name":"Composition.ones_sizeUpTo","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones_sizeUpTo","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L510-L511","name":"Composition.ones_blocksFun","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones_blocksFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L503-L504","name":"Composition.ones_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L498-L499","name":"Composition.ones_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L494-L495","name":"Composition.instInhabitedComposition","kind":"instance","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.instInhabitedComposition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L490-L491","name":"Composition.ones","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ones","doc":"The composition made of blocks all of size `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L474-L483","name":"Composition.sigma_eq_iff_blocks_eq","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sigma_eq_iff_blocks_eq","doc":"Two compositions (possibly of different integers) coincide if and only if they have the\nsame sequence of blocks. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L462-L469","name":"Composition.blocksFun_congr","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocksFun_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L448-L459","name":"Composition.blocksFinEquiv","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocksFinEquiv","doc":"Equivalence between the disjoint union of the blocks (each of them seen as\n`Fin (c.blocks_fun i)`) with `Fin n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L441-L443","name":"Composition.invEmbedding_comp","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.invEmbedding_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L434-L438","name":"Composition.index_embedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.index_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L423-L431","name":"Composition.mem_range_embedding_iff'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.mem_range_embedding_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L415-L420","name":"Composition.mem_range_embedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.mem_range_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L398-L412","name":"Composition.disjoint_range","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.disjoint_range","doc":"The embeddings of different blocks of a composition are disjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L378-L394","name":"Composition.mem_range_embedding_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.mem_range_embedding_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L373-L375","name":"Composition.embedding_comp_inv","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.embedding_comp_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L369-L370","name":"Composition.coe_invEmbedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.coe_invEmbedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L361-L365","name":"Composition.invEmbedding","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.invEmbedding","doc":"Mapping an element `j` of `Fin n` to the element in the block containing it, identified with\n`Fin (c.blocks_fun (c.index j))` through the canonical increasing bijection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L343-L356","name":"Composition.sizeUpTo_index_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_index_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L339-L340","name":"Composition.lt_sizeUpTo_index_succ","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.lt_sizeUpTo_index_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L335-L336","name":"Composition.index","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.index","doc":"`c.index j` is the index of the block in the composition `c` containing `j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L325-L331","name":"Composition.index_exists","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.index_exists","doc":"`index_exists` asserts there is some `i` with `j < c.size_up_to (i+1)`.\nIn the next definition `index` we use `nat.find` to produce the minimal such index.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L317-L319","name":"Composition.coe_embedding","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.coe_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L307-L313","name":"Composition.embedding","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.embedding","doc":"Embedding the `i`-th block of a composition (identified with `Fin (c.blocks_fun i)`) into\n`Fin n` at the relevant position. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L299-L302","name":"Composition.orderEmbOfFin_boundaries","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.orderEmbOfFin_boundaries","doc":"The canonical increasing bijection between `Fin (c.length + 1)` and `c.boundaries` is\nexactly `c.boundary`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L286-L294","name":"Composition.toCompositionAsSet","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.toCompositionAsSet","doc":"To `c : Composition n`, one can associate a `CompositionAsSet n` by registering the leftmost\npoint of each block, and adding a virtual point at the right of the last block. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L281-L281","name":"Composition.card_boundaries_eq_succ_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.card_boundaries_eq_succ_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L277-L278","name":"Composition.boundaries","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.boundaries","doc":"The boundaries of a composition, i.e., the leftmost point of all the blocks. We include\na virtual point at the right of the last block, to make for a nice equiv with\n`CompositionAsSet n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L270-L271","name":"Composition.boundary_last","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.boundary_last","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L266-L266","name":"Composition.boundary_zero","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.boundary_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L260-L262","name":"Composition.boundary","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.boundary","doc":"The `i`-th boundary of a composition, i.e., the leftmost point of the `i`-th block. We include\na virtual point at the right of the last block, to make for a nice equiv with\n`CompositionAsSet n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L253-L254","name":"Composition.monotone_sizeUpTo","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.monotone_sizeUpTo","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L248-L250","name":"Composition.sizeUpTo_strict_mono","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_strict_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L243-L245","name":"Composition.sizeUpTo_succ'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_succ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L237-L240","name":"Composition.sizeUpTo_succ","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L232-L234","name":"Composition.sizeUpTo_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L228-L229","name":"Composition.sizeUpTo_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L221-L224","name":"Composition.sizeUpTo_ofLength_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_ofLength_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L218-L218","name":"Composition.sizeUpTo_zero","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L213-L214","name":"Composition.sizeUpTo","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sizeUpTo","doc":"The sum of the sizes of the blocks in a composition up to `i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L206-L209","name":"Composition.length_pos_of_pos","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.length_pos_of_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L201-L203","name":"Composition.length_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.length_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L197-L198","name":"Composition.one_le_blocksFun","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.one_le_blocksFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L193-L194","name":"Composition.blocks_pos'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocks_pos'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L186-L187","name":"Composition.one_le_blocks'","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.one_le_blocks'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L179-L180","name":"Composition.one_le_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.one_le_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L174-L175","name":"Composition.blocksFun_mem_blocks","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocksFun_mem_blocks","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L168-L169","name":"Composition.sum_blocksFun","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.sum_blocksFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L164-L165","name":"Composition.ofFn_blocksFun","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ofFn_blocksFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L159-L159","name":"Composition.blocksFun","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocksFun","doc":"The blocks of a composition, seen as a function on `Fin c.length`. When composing analytic\nfunctions using compositions, this is the main player. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L151-L152","name":"Composition.blocks_length","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocks_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L147-L148","name":"Composition.length","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.length","doc":"The length of a composition, i.e., the number of blocks in the composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L142-L143","name":"Composition.instToStringComposition","kind":"instance","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.instToStringComposition","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L127-L128","name":"instInhabitedCompositionAsSet","kind":"instance","docLink":"./Mathlib/Combinatorics/Composition.html#instInhabitedCompositionAsSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L124-L124","name":"CompositionAsSet.getLast_mem","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.getLast_mem","doc":"Last element of the composition"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L122-L122","name":"CompositionAsSet.zero_mem","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.zero_mem","doc":"Proof that `0` is a member of `boundaries`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L120-L120","name":"CompositionAsSet.boundaries","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.boundaries","doc":"Combinatorial viewpoint on a composition of `n` as consecutive integers `{0, ..., n-1}`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L118-L118","name":"CompositionAsSet.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L118-L124","name":"CompositionAsSet","kind":"structure","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet","doc":"Combinatorial viewpoint on a composition of `n`, by seeing it as non-empty blocks of\nconsecutive integers in `{0, ..., n-1}`. We register every block by its left end-point, yielding\na finset containing `0`. As this does not make sense for `n = 0`, we add `n` to this finset, and\nget a finset of `{0, ..., n}` containing `0` and `n`. This is the data in the structure\n`CompositionAsSet n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L117-L117","name":"CompositionAsSet.ext","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L117-L117","name":"CompositionAsSet.ext_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#CompositionAsSet.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L109-L109","name":"Composition.blocks_sum","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocks_sum","doc":"Proof that `blocks` sums to `n`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L107-L107","name":"Composition.blocks_pos","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocks_pos","doc":"Proof of positivity for `blocks`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L105-L105","name":"Composition.blocks","kind":"def","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.blocks","doc":"List of positive integers summing to `n`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L103-L103","name":"Composition.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L103-L109","name":"Composition","kind":"structure","docLink":"./Mathlib/Combinatorics/Composition.html#Composition","doc":"A composition of `n` is a list of positive integers summing to `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L102-L102","name":"Composition.ext_iff","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Composition.lean#L102-L102","name":"Composition.ext","kind":"theorem","docLink":"./Mathlib/Combinatorics/Composition.html#Composition.ext","doc":""}]}