{"name":"Mathlib.Tactic.Alias","instances":[],"imports":["Init","Lean"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L184-L200","name":"Tactic.Alias.elabAliasLRDots","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.elabAliasLRDots","doc":"Elaborates an `alias ↔ ..` command. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L171-L181","name":"Tactic.Alias.elabAliasLR","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.elabAliasLR","doc":"Elaborates an `alias ↔` command. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L147-L168","name":"Tactic.Alias.aliasIff","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.aliasIff","doc":"Given a constant representing an iff decl, adds a decl for one of the implication\ndirections.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L136-L141","name":"Tactic.Alias.mkIffMpApp","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.mkIffMpApp","doc":"Given a possibly forall-quantified iff expression `prf`, produce a value for one\nof the implication directions (determined by `mp`).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L94-L130","name":"Tactic.Alias.elabAlias","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.elabAlias","doc":"Elaborates an `alias ←` command. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L88-L91","name":"Tactic.Alias.Target.toString","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target.toString","doc":"The docstring for an alias. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L82-L85","name":"Tactic.Alias.Target.toName","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target.toName","doc":"The name underlying an alias target "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L79-L79","name":"Tactic.Alias.Target.backwards","kind":"ctor","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target.backwards","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L78-L78","name":"Tactic.Alias.Target.forward","kind":"ctor","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target.forward","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L77-L77","name":"Tactic.Alias.Target.plain","kind":"ctor","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target.plain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L76-L79","name":"Tactic.Alias.Target","kind":"inductive","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.Target","doc":"An alias can be in one of three forms "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L69-L73","name":"Tactic.Alias.appendNamespace","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.appendNamespace","doc":"Like `++`, except that if the right argument starts with `_root_` the namespace will be\nignored.\n```\nappendNamespace `a.b `c.d = `a.b.c.d\nappendNamespace `a.b `_root_.c.d = `c.d\n```\n\nTODO: Move this declaration to a more central location.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L57-L58","name":"Tactic.Alias.aliasLRDots","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.aliasLRDots","doc":"Adds one-way implication declarations, inferring names for them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L53-L55","name":"Tactic.Alias.aliasLR","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.aliasLR","doc":"Adds one-way implication declarations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Alias.lean#L50-L51","name":"Tactic.Alias.alias","kind":"def","docLink":"./Mathlib/Tactic/Alias.html#Tactic.Alias.alias","doc":"Adds some copies of a theorem or definition. "}]}