{"name":"Mathlib.Tactic.Relation.Symm","instances":[],"imports":["Init","Mathlib.Lean.Meta","Lean.Elab.Tactic.Location"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L143-L145","name":"Mathlib.Tactic.tacticSymm_saturate","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Mathlib.Tactic.tacticSymm_saturate","doc":"For every hypothesis `h : a ~ b` where a `@[symm]` lemma is available,\nadd a hypothesis `h_symm : b ~ a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L132-L141","name":"Mathlib.Tactic.tacticSymm_","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Mathlib.Tactic.tacticSymm_","doc":"* `symm` applies to a goal whose target has the form `t ~ u` where `~` is a symmetric relation,\n  that is, a relation which has a symmetry lemma tagged with the attribute [symm].\n  It replaces the target with `u ~ t`.\n* `symm at h` will rewrite a hypothesis `h : t ~ u` to `h : u ~ t`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L114-L124","name":"Lean.MVarId.symmSaturate","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.MVarId.symmSaturate","doc":"For every hypothesis `h : a ~ b` where a `@[symm]` lemma is available,\nadd a hypothesis `h_symm : b ~ a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L108-L110","name":"Lean.MVarId.symmAt","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.MVarId.symmAt","doc":"Use a symmetry lemma (i.e. marked with `@[symm]`) to replace a hypothesis in a goal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L101-L105","name":"Lean.MVarId.symm","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.MVarId.symm","doc":"Apply a symmetry lemma (i.e. marked with `@[symm]`) to a metavariable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L93-L98","name":"Lean.MVarId.symmAux","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.MVarId.symmAux","doc":"Internal implementation of `Lean.MVarId.symm` and the user-facing tactic.\n\n`tgt` should be of the form `a ~ b`, and is used to index the symm lemmas.\n\n`k lem args body goal` should transform `goal` into a new goal,\ngiven a candidate `symm` lemma `lem`, which will have type `∀ args, body`.\nDepending on whether we are working on a hypothesis or a goal,\n`k` will internally use either `replace` or `assign`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L74-L77","name":"Lean.Expr.symm","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.Expr.symm","doc":"Given a term `e : a ~ b`, construct a term in `b ~ a` using `@[symm]` lemmas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L62-L71","name":"Lean.Expr.symmAux","kind":"def","docLink":"./Mathlib/Tactic/Relation/Symm.html#Lean.Expr.symmAux","doc":"Internal implementation of `Lean.Expr.symm`, `Lean.MVarId.symm`, and the user-facing tactic.\n\n`tgt` should be of the form `a ~ b`, and is used to index the symm lemmas.\n\n`k lem args body` should calculate a result,\ngiven a candidate `symm` lemma `lem`, which will have type `∀ args, body`.\n\nIn `Lean.Expr.symm` this result will be a new `Expr`,\nand in `Lean.MVarId.symm` and `Lean.MVarId.symmAt` this result will be a new goal.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Relation/Symm.lean#L20-L26","name":"Mathlib.Tactic.symmExt","kind":"opaque","docLink":"./Mathlib/Tactic/Relation/Symm.html#Mathlib.Tactic.symmExt","doc":"Environment extensions for symm lemmas "}]}