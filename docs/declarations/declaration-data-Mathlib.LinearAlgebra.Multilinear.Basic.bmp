{"name":"Mathlib.LinearAlgebra.Multilinear.Basic","instances":[{"typeNames":["MultilinearMap"],"name":"MultilinearMap.instFunLikeMultilinearMapForAll","className":"FunLike"},{"typeNames":["MultilinearMap"],"name":"MultilinearMap.instAddMultilinearMap","className":"Add"},{"typeNames":["MultilinearMap"],"name":"MultilinearMap.instZeroMultilinearMap","className":"Zero"},{"typeNames":["MultilinearMap"],"name":"MultilinearMap.instInhabitedMultilinearMap","className":"Inhabited"},{"typeNames":["MultilinearMap"],"name":"MultilinearMap.instSMulMultilinearMap","className":"SMul"},{"typeNames":["MultilinearMap"],"name":"MultilinearMap.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["MultilinearMap","AddCommMonoid.toAddMonoid","MultilinearMap","MultilinearMap.addCommMonoid"],"name":"MultilinearMap.instDistribMulActionMultilinearMapToAddMonoidAddCommMonoid","className":"DistribMulAction"},{"typeNames":["MultilinearMap","MultilinearMap.addCommMonoid"],"name":"MultilinearMap.instModuleMultilinearMapAddCommMonoid","className":"Module"},{"typeNames":["MultilinearMap","MonoidWithZero.toZero","Semiring.toMonoidWithZero","MultilinearMap.instZeroMultilinearMap","MultilinearMap.instSMulMultilinearMap","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","Module.toDistribMulAction"],"name":"MultilinearMap.instNoZeroSMulDivisorsMultilinearMapToZeroToMonoidWithZeroInstZeroMultilinearMapInstSMulMultilinearMapToMonoidToDistribMulAction","className":"NoZeroSMulDivisors"},{"typeNames":["MultilinearMap","AddCommGroup.toAddCommMonoid"],"name":"MultilinearMap.instNegMultilinearMapToAddCommMonoid","className":"Neg"},{"typeNames":["MultilinearMap","AddCommGroup.toAddCommMonoid"],"name":"MultilinearMap.instSubMultilinearMapToAddCommMonoid","className":"Sub"},{"typeNames":["MultilinearMap","AddCommGroup.toAddCommMonoid"],"name":"MultilinearMap.instAddCommGroupMultilinearMapToAddCommMonoid","className":"AddCommGroup"}],"imports":["Init","Mathlib.LinearAlgebra.Basic","Mathlib.Algebra.Algebra.Basic","Mathlib.Algebra.BigOperators.Order","Mathlib.Algebra.BigOperators.Ring","Mathlib.Data.List.FinRange","Mathlib.Data.Fintype.BigOperators","Mathlib.Data.Fintype.Sort","Mathlib.Tactic.Abel"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1646-L1647","name":"MultilinearMap.range","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.range","doc":"The range of a multilinear map, closed under scalar multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1640-L1642","name":"MultilinearMap.map_nonempty","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_nonempty","doc":"The map is always nonempty. This lemma is needed to apply `SubMulAction.zero_mem`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1625-L1636","name":"MultilinearMap.map","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map","doc":"The pushforward of an indexed collection of submodule `p i ⊆ M₁ i` by `f : M₁ → M₂`.\n\nNote that this is not a submodule - it is not closed under addition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1604-L1609","name":"MultilinearMap.curryFinFinset_apply_const_aux","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_apply_const_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1594-L1600","name":"MultilinearMap.curryFinFinset_apply_const","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_apply_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1586-L1590","name":"MultilinearMap.curryFinFinset_symm_apply_const","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_symm_apply_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1574-L1583","name":"MultilinearMap.curryFinFinset_symm_apply_piecewise_const_aux","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_symm_apply_piecewise_const_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1558-L1570","name":"MultilinearMap.curryFinFinset_symm_apply_piecewise_const","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_symm_apply_piecewise_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1547-L1554","name":"MultilinearMap.curryFinFinset_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1539-L1543","name":"MultilinearMap.curryFinFinset_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1529-L1533","name":"MultilinearMap.curryFinFinset","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryFinFinset","doc":"If `s : Finset (Fin n)` is a finite set of cardinality `k` and its complement has cardinality\n`l`, then the space of multilinear maps on `fun i : Fin n => M'` is isomorphic to the space of\nmultilinear maps on `fun i : Fin k => M'` taking values in the space of multilinear maps\non `fun i : Fin l => M'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1519-L1520","name":"MultilinearMap.coe_currySumEquiv_symm","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_currySumEquiv_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1513-L1514","name":"MultilinearMap.coe_currySumEquiv","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_currySumEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1493-L1507","name":"MultilinearMap.currySumEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.currySumEquiv","doc":"Linear equivalence between the space of multilinear maps on `∀ i : ι ⊕ ι', M'` and the space\nof multilinear maps on `∀ i : ι, M'` taking values in the space of multilinear maps\non `∀ i : ι', M'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1482-L1485","name":"MultilinearMap.uncurrySum_aux_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurrySum_aux_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1464-L1478","name":"MultilinearMap.uncurrySum","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurrySum","doc":"A multilinear map on `∀ i : ι, M'` taking values in the space of multilinear maps\non `∀ i : ι', M'` defines a multilinear map on `∀ i : ι ⊕ ι', M'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1457-L1459","name":"MultilinearMap.currySum_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.currySum_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1436-L1453","name":"MultilinearMap.currySum","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.currySum","doc":"A multilinear map on `∀ i : ι ⊕ ι', M'` defines a multilinear map on `∀ i : ι, M'`\ntaking values in the space of multilinear maps on `∀ i : ι', M'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1414-L1427","name":"multilinearCurryRightEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#multilinearCurryRightEquiv","doc":"The space of multilinear maps on `∀ (i : Fin (n+1)), M i` is canonically isomorphic to\nthe space of linear maps from the space of multilinear maps on `∀ (i : Fin n), M (castSucc i)` to\nthe space of linear maps on `M (last n)`, by separating the last variable. We register this\nisomorphism as a linear isomorphism in `multilinearCurryRightEquiv R M M₂`.\n\nThe direct and inverse maps are given by `f.uncurryRight` and `f.curryRight`. Use these\nunless you need the full framework of linear equivs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1399-L1402","name":"MultilinearMap.uncurry_curryRight","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurry_curryRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1390-L1395","name":"MultilinearMap.curry_uncurryRight","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curry_uncurryRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1384-L1386","name":"MultilinearMap.curryRight_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1365-L1380","name":"MultilinearMap.curryRight","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryRight","doc":"Given a multilinear map `f` in `n+1` variables, split the last variable to obtain\na multilinear map in `n` variables taking values in linear maps from `M (last n)` to `M₂`, given by\n`m ↦ (x ↦ f (snoc m x))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1356-L1359","name":"MultilinearMap.uncurryRight_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurryRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1319-L1352","name":"MultilinearMap.uncurryRight","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurryRight","doc":"Given a multilinear map `f` in `n` variables to the space of linear maps from `M (last n)` to\n`M₂`, construct the corresponding multilinear map on `n+1` variables obtained by concatenating\nthe variables, given by `m ↦ f (init m) (m (last n))`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1297-L1308","name":"multilinearCurryLeftEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#multilinearCurryLeftEquiv","doc":"The space of multilinear maps on `∀ (i : Fin (n+1)), M i` is canonically isomorphic to\nthe space of linear maps from `M 0` to the space of multilinear maps on\n`∀ (i : Fin n), M i.succ `, by separating the first variable. We register this isomorphism as a\nlinear isomorphism in `multilinearCurryLeftEquiv R M M₂`.\n\nThe direct and inverse maps are given by `f.uncurryLeft` and `f.curryLeft`. Use these\nunless you need the full framework of linear equivs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1282-L1285","name":"MultilinearMap.uncurry_curryLeft","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.uncurry_curryLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1274-L1278","name":"LinearMap.curry_uncurryLeft","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.curry_uncurryLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1268-L1270","name":"MultilinearMap.curryLeft_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1247-L1264","name":"MultilinearMap.curryLeft","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.curryLeft","doc":"Given a multilinear map `f` in `n+1` variables, split the first variable to obtain\na linear map into multilinear maps in `n` variables, given by `x ↦ (m ↦ f (cons x m))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1240-L1242","name":"LinearMap.uncurryLeft_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.uncurryLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1212-L1236","name":"LinearMap.uncurryLeft","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.uncurryLeft","doc":"Given a linear map `f` from `M 0` to multilinear maps on `n` variables,\nconstruct the corresponding multilinear map on `n+1` variables obtained by concatenating\nthe variables, given by `m ↦ f (m 0) (tail m)`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1167-L1177","name":"MultilinearMap.piRingEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.piRingEquiv","doc":"When `ι` is finite, multilinear maps on `R^ι` with values in `M₂` are in bijection with `M₂`,\nas such a multilinear map is completely determined by its value on the constant vector made of ones.\nWe register this bijection as a linear equivalence in `MultilinearMap.piRingEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1152-L1154","name":"MultilinearMap.map_sub","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1145-L1148","name":"MultilinearMap.map_neg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1120-L1135","name":"MultilinearMap.instAddCommGroupMultilinearMapToAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instAddCommGroupMultilinearMapToAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1116-L1117","name":"MultilinearMap.sub_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.sub_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1107-L1113","name":"MultilinearMap.instSubMultilinearMapToAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instSubMultilinearMapToAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1103-L1104","name":"MultilinearMap.neg_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.neg_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1099-L1100","name":"MultilinearMap.instNegMultilinearMapToAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instNegMultilinearMapToAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1088-L1089","name":"MultilinearMap.mkPiRing_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1084-L1085","name":"MultilinearMap.mkPiRing_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1075-L1081","name":"MultilinearMap.mkPiRing_eq_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1066-L1072","name":"MultilinearMap.mkPiRing_apply_one_eq_self","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing_apply_one_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1061-L1063","name":"MultilinearMap.mkPiRing_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1054-L1055","name":"MultilinearMap.mkPiRing","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiRing","doc":"The canonical multilinear map on `R^ι` when `ι` is finite, associating to `m` the product of\nall the `m i` (multiplied by a fixed reference element `z` in the target module). See also\n`mkPiAlgebra` for a more general version. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1044-L1046","name":"MultilinearMap.smulRight_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.smulRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1039-L1040","name":"MultilinearMap.smulRight","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.smulRight","doc":"Given an `R`-multilinear map `f` taking values in `R`, `f.smulRight z` is the map\nsending `m` to `f m • z`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1031-L1032","name":"MultilinearMap.mkPiAlgebraFin_apply_const","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiAlgebraFin_apply_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1026-L1028","name":"MultilinearMap.mkPiAlgebraFin_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiAlgebraFin_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L1008-L1020","name":"MultilinearMap.mkPiAlgebraFin","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiAlgebraFin","doc":"Given an `R`-algebra `A`, `mkPiAlgebraFin` is the multilinear map on `A^n` associating\nto `m` the product of all the `m i`.\n\nSee also `MultilinearMap.mkPiAlgebra` for a version that assumes `[CommSemiring A]` but works\nfor `A^ι` with any finite type `ι`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L992-L993","name":"MultilinearMap.mkPiAlgebra_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiAlgebra_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L983-L986","name":"MultilinearMap.mkPiAlgebra","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mkPiAlgebra","doc":"Given an `R`-algebra `A`, `mkPiAlgebra` is the multilinear map on `A^ι` associating\nto `m` the product of all the `m i`.\n\nSee also `MultilinearMap.mkPiAlgebraFin` for a version that works with a non-commutative\nalgebra `A` but requires `ι = Fin n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L961-L967","name":"MultilinearMap.constLinearEquivOfIsEmpty","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.constLinearEquivOfIsEmpty","doc":"The space of constant maps is equivalent to the space of maps that are multilinear with respect\nto an empty family. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L960-L960","name":"MultilinearMap.constLinearEquivOfIsEmpty_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.constLinearEquivOfIsEmpty_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L960-L960","name":"MultilinearMap.constLinearEquivOfIsEmpty_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.constLinearEquivOfIsEmpty_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L916-L953","name":"MultilinearMap.domDomCongrLinearEquiv'","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv'","doc":"The dependent version of `MultilinearMap.domDomCongrLinearEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L915-L915","name":"MultilinearMap.domDomCongrLinearEquiv'_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv'_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L915-L915","name":"MultilinearMap.domDomCongrLinearEquiv'_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv'_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L902-L908","name":"MultilinearMap.domDomCongrLinearEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv","doc":"`MultilinearMap.domDomCongr` as a `LinearEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L901-L901","name":"MultilinearMap.domDomCongrLinearEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L901-L901","name":"MultilinearMap.domDomCongrLinearEquiv_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrLinearEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L895-L896","name":"MultilinearMap.instNoZeroSMulDivisorsMultilinearMapToZeroToMonoidWithZeroInstZeroMultilinearMapInstSMulMultilinearMapToMonoidToDistribMulAction","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instNoZeroSMulDivisorsMultilinearMapToZeroToMonoidWithZeroInstZeroMultilinearMapInstSMulMultilinearMapToMonoidToDistribMulAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L891-L893","name":"MultilinearMap.instModuleMultilinearMapAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instModuleMultilinearMapAddCommMonoid","doc":"The space of multilinear maps over an algebra over `R` is a module over `R`, for the pointwise\naddition and scalar multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L876-L880","name":"MultilinearMap.instDistribMulActionMultilinearMapToAddMonoidAddCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instDistribMulActionMultilinearMapToAddMonoidAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L862-L868","name":"MultilinearMap.map_update_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_update_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L856-L858","name":"MultilinearMap.map_smul_univ","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_smul_univ","doc":"Multiplicativity of a multilinear map along all coordinates at the same time,\nwriting `f (fun i => c i • m i)` as `(∏ i, c i) • f m`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L838-L851","name":"MultilinearMap.map_piecewise_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_piecewise_smul","doc":"If one multiplies by `c i` the coordinates in a finset `s`, then the image under a multilinear\nmap is multiplied by `∏ i in s, c i`. This is mainly an auxiliary statement to prove the result when\n`s = univ`, given in `map_smul_univ`, although it can be useful in its own right as it does not\nrequire the index set `ι` to be finite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L818-L822","name":"LinearMap.compMultilinearMap_domDomCongr","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.compMultilinearMap_domDomCongr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L808-L812","name":"LinearMap.compMultilinearMap_codRestrict","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.compMultilinearMap_codRestrict","doc":"The multilinear version of `LinearMap.comp_codRestrict` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L801-L803","name":"LinearMap.subtype_compMultilinearMap_codRestrict","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.subtype_compMultilinearMap_codRestrict","doc":"The multilinear version of `LinearMap.subtype_comp_codRestrict` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L794-L796","name":"LinearMap.compMultilinearMap_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.compMultilinearMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L788-L790","name":"LinearMap.coe_compMultilinearMap","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.coe_compMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L781-L784","name":"LinearMap.compMultilinearMap","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#LinearMap.compMultilinearMap","doc":"Composing a multilinear map with a linear map gives again a multilinear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L764-L766","name":"MultilinearMap.domDomCongr_eq_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongr_eq_iff","doc":"The results of applying `domDomCongr` to two maps are equal if\nand only if those maps are. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L744-L756","name":"MultilinearMap.domDomCongrEquiv","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrEquiv","doc":"`MultilinearMap.domDomCongr` as an equivalence.\n\nThis is declared separately because it does not work with dot notation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L743-L743","name":"MultilinearMap.domDomCongrEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L743-L743","name":"MultilinearMap.domDomCongrEquiv_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongrEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L734-L737","name":"MultilinearMap.domDomCongr_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongr_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L728-L731","name":"MultilinearMap.domDomCongr_trans","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongr_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L714-L724","name":"MultilinearMap.domDomCongr","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongr","doc":"Transfer the arguments to a map along an equivalence between argument indices.\n\nThe naming is derived from `Finsupp.domCongr`, noting that here the permutation applies to the\ndomain of the domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L713-L713","name":"MultilinearMap.domDomCongr_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.domDomCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L699-L700","name":"MultilinearMap.coe_restrictScalars","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_restrictScalars","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L692-L695","name":"MultilinearMap.restrictScalars","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.restrictScalars","doc":"Reinterpret an `A`-multilinear map as an `R`-multilinear map, if `A` is an algebra over `R`\nand their actions on all involved modules agree with the action of `R` on `A`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L675-L679","name":"MultilinearMap.codRestrict","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.codRestrict","doc":"Restrict the codomain of a multilinear map to a submodule.\n\nThis is the multilinear version of `LinearMap.codRestrict`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L674-L674","name":"MultilinearMap.codRestrict_apply_coe","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.codRestrict_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L661-L666","name":"MultilinearMap.map_update_sum","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_update_sum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L656-L658","name":"MultilinearMap.map_sum","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_sum","doc":"If `f` is multilinear, then `f (Σ_{j₁} g₁ j₁, ..., Σ_{jₙ} gₙ jₙ)` is the sum of\n`f (g₁ (r 1), ..., gₙ (r n))` where `r` ranges over all functions `r`. This follows from\nmultilinearity by expanding successively with respect to each coordinate. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L648-L650","name":"MultilinearMap.map_sum_finset","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_sum_finset","doc":"If `f` is multilinear, then `f (Σ_{j₁ ∈ A₁} g₁ j₁, ..., Σ_{jₙ ∈ Aₙ} gₙ jₙ)` is the sum of\n`f (g₁ (r 1), ..., gₙ (r n))` where `r` ranges over all functions with `r 1 ∈ A₁`, ...,\n`r n ∈ Aₙ`. This follows from multilinearity by expanding successively with respect to each\ncoordinate. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L506-L641","name":"MultilinearMap.map_sum_finset_aux","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_sum_finset_aux","doc":"If `f` is multilinear, then `f (Σ_{j₁ ∈ A₁} g₁ j₁, ..., Σ_{jₙ ∈ Aₙ} gₙ jₙ)` is the sum of\n`f (g₁ (r 1), ..., gₙ (r n))` where `r` ranges over all functions with `r 1 ∈ A₁`, ...,\n`r n ∈ Aₙ`. This follows from multilinearity by expanding successively with respect to each\ncoordinate. Here, we give an auxiliary statement tailored for an inductive proof. Use instead\n`map_sum_finset`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L490-L492","name":"MultilinearMap.map_add_univ","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_add_univ","doc":"Additivity of a multilinear map along all coordinates at the same time,\nwriting `f (m + m')` as the sum  of `f (s.piecewise m m')` over all sets `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L456-L485","name":"MultilinearMap.map_piecewise_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_piecewise_add","doc":"If one adds to a vector `m'` another vector `m`, but only for coordinates in a finset `t`, then\nthe image under a multilinear map `f` is the sum of `f (s.piecewise m m')` along all subsets `s` of\n`t`. This is mainly an auxiliary statement to prove the result when `t = univ`, given in\n`map_add_univ`, although it can be useful in its own right as it does not require the index set `ι`\nto be finite."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L443-L446","name":"MultilinearMap.comp_linearEquiv_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.comp_linearEquiv_eq_zero_iff","doc":"Composing a multilinear map with a linear equiv on each argument gives the zero map\nif and only if the multilinear map is the zero map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L435-L437","name":"MultilinearMap.compLinearMap_inj","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L429-L432","name":"MultilinearMap.compLinearMap_injective","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap_injective","doc":"Composing with a family of surjective linear maps is injective. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L423-L425","name":"MultilinearMap.compLinearMap_id","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap_id","doc":"Composing a multilinear map with the identity linear map in each argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L416-L418","name":"MultilinearMap.zero_compLinearMap","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.zero_compLinearMap","doc":"Composing the zero multilinear map with a linear map in each argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L408-L411","name":"MultilinearMap.compLinearMap_assoc","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap_assoc","doc":"Composing a multilinear map twice with a linear map in each argument is\nthe same as composing with their composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L401-L403","name":"MultilinearMap.compLinearMap_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L387-L397","name":"MultilinearMap.compLinearMap","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.compLinearMap","doc":"If `g` is a multilinear map and `f` is a collection of linear maps,\nthen `g (f₁ m₁, ..., fₙ mₙ)` is again a multilinear map, that we call\n`g.compLinearMap f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L373-L375","name":"MultilinearMap.snoc_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.snoc_smul","doc":"In the specific case of multilinear maps on spaces indexed by `Fin (n+1)`, where one can build\nan element of `∀ (i : Fin (n+1)), M i` using `cons`, one can express directly the multiplicativity\nof a multilinear map along the first variable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L365-L367","name":"MultilinearMap.snoc_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.snoc_add","doc":"In the specific case of multilinear maps on spaces indexed by `Fin (n+1)`, where one can build\nan element of `∀ (i : Fin (n+1)), M i` using `snoc`, one can express directly the additivity of a\nmultilinear map along the first variable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L357-L359","name":"MultilinearMap.cons_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.cons_smul","doc":"In the specific case of multilinear maps on spaces indexed by `Fin (n+1)`, where one can build\nan element of `∀ (i : Fin (n+1)), M i` using `cons`, one can express directly the multiplicativity\nof a multilinear map along the first variable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L349-L351","name":"MultilinearMap.cons_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.cons_add","doc":"In the specific case of multilinear maps on spaces indexed by `Fin (n+1)`, where one can build\nan element of `∀ (i : Fin (n+1)), M i` using `cons`, one can express directly the additivity of a\nmultilinear map along the first variable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L326-L343","name":"MultilinearMap.restr","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.restr","doc":"Given a multilinear map `f` on `n` variables (parameterized by `Fin n`) and a subset `s` of `k`\nof these variables, one gets a new multilinear map on `Fin k` by varying these variables, and fixing\nthe other ones equal to a given value `z`. It is denoted by `f.restr s hk z`, where `hk` is a\nproof that the cardinality of `s` is `k`. The implicit identification between `Fin k` and `s` that\nwe use is the canonical (increasing) bijection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L311-L314","name":"MultilinearMap.constOfIsEmpty","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.constOfIsEmpty","doc":"The constant map is multilinear when `ι` is empty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L310-L310","name":"MultilinearMap.constOfIsEmpty_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.constOfIsEmpty_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L294-L301","name":"MultilinearMap.ofSubsingleton","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.ofSubsingleton","doc":"The evaluation map from `ι → M₂` to `M₂` is multilinear at a given `i` when `ι` is subsingleton.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L293-L293","name":"MultilinearMap.ofSubsingleton_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.ofSubsingleton_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L279-L283","name":"MultilinearMap.pi","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.pi","doc":"Combine a family of multilinear maps with the same domain and codomains `M' i` into a\nmultilinear map taking values in the space of functions `∀ i, M' i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L278-L278","name":"MultilinearMap.pi_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.pi_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L268-L272","name":"MultilinearMap.prod","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.prod","doc":"The cartesian product of two multilinear maps, as a multilinear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L267-L267","name":"MultilinearMap.prod_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.prod_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L259-L262","name":"MultilinearMap.toLinearMap","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.toLinearMap","doc":"If `f` is a multilinear map, then `f.toLinearMap m i` is the linear map obtained by fixing all\ncoordinates but `i` equal to those of `m`, and varying the `i`-th coordinate. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L258-L258","name":"MultilinearMap.toLinearMap_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.toLinearMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L245-L253","name":"MultilinearMap.sum_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.sum_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L240-L241","name":"MultilinearMap.addCommMonoid","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.addCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L234-L235","name":"MultilinearMap.coe_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L230-L231","name":"MultilinearMap.smul_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.smul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L224-L227","name":"MultilinearMap.instSMulMultilinearMap","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instSMulMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L215-L216","name":"MultilinearMap.zero_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L211-L212","name":"MultilinearMap.instInhabitedMultilinearMap","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instInhabitedMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L208-L209","name":"MultilinearMap.instZeroMultilinearMap","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instZeroMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L204-L205","name":"MultilinearMap.add_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.add_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L198-L201","name":"MultilinearMap.instAddMultilinearMap","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instAddMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L193-L195","name":"MultilinearMap.map_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L188-L189","name":"MultilinearMap.map_update_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_update_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L181-L184","name":"MultilinearMap.map_coord_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_coord_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L176-L178","name":"MultilinearMap.map_smul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L170-L172","name":"MultilinearMap.map_add","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L163-L166","name":"MultilinearMap.mk_coe","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mk_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L158-L159","name":"MultilinearMap.ext_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L154-L155","name":"MultilinearMap.ext","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L149-L150","name":"MultilinearMap.coe_inj","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L140-L145","name":"MultilinearMap.coe_injective","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L136-L137","name":"MultilinearMap.congr_arg","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.congr_arg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L132-L133","name":"MultilinearMap.congr_fun","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.congr_fun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L128-L129","name":"MultilinearMap.coe_mk","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.coe_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L123-L124","name":"MultilinearMap.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L116-L118","name":"MultilinearMap.instFunLikeMultilinearMapForAll","kind":"instance","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.instFunLikeMultilinearMapForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L99-L99","name":"MultilinearMap.map_smul'","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_smul'","doc":"A multilinear map is compatible with scalar multiplication in every argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L95-L95","name":"MultilinearMap.map_add'","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.map_add'","doc":"A multilinear map is additive in every argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L93-L93","name":"MultilinearMap.toFun","kind":"def","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.toFun","doc":"The underlying multivariate function of a multilinear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L90-L91","name":"MultilinearMap.mk","kind":"ctor","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/Multilinear/Basic.lean#L90-L101","name":"MultilinearMap","kind":"structure","docLink":"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap","doc":"Multilinear maps over the ring `R`, from `∀ i, M₁ i` to `M₂` where `M₁ i` and `M₂` are modules\nover `R`. "}]}