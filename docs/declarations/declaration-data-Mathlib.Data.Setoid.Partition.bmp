{"name":"Mathlib.Data.Setoid.Partition","instances":[{"typeNames":["Subtype","Set","Setoid.IsPartition"],"name":"Setoid.Partition.le","className":"LE"},{"typeNames":["Subtype","Set","Setoid.IsPartition"],"name":"Setoid.Partition.partialOrder","className":"PartialOrder"},{"typeNames":["Subtype","Set","Setoid.IsPartition"],"name":"Setoid.Partition.completeLattice","className":"CompleteLattice"},{"typeNames":["IndexedPartition","Set.univ"],"name":"IndexedPartition.instInhabitedIndexedPartitionUniv","className":"Inhabited"},{"typeNames":["IndexedPartition.Quotient"],"name":"IndexedPartition.instInhabitedQuotient","className":"Inhabited"}],"imports":["Init","Mathlib.Data.Fintype.Basic","Mathlib.Data.Set.Finite","Mathlib.Data.Setoid.Basic","Mathlib.Order.Partition.Finpartition"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L474-L478","name":"IndexedPartition.proj_fiber","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.proj_fiber","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L470-L471","name":"IndexedPartition.class_of","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.class_of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L466-L467","name":"IndexedPartition.proj_out","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.proj_out","doc":"This lemma is analogous to `Quotient.out_eq'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L460-L461","name":"IndexedPartition.index_out'","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.index_out'","doc":"The indices of `Quotient.out'` and `IndexedPartition.out` are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L455-L456","name":"IndexedPartition.out_proj","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.out_proj","doc":"This lemma is analogous to `Quotient.mk_out'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L449-L450","name":"IndexedPartition.out","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.out","doc":"A map choosing a representative for each element of the quotient associated to an indexed\npartition. This is a computable version of `Quotient.out'` using `IndexedPartition.some`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L443-L444","name":"IndexedPartition.equivQuotient_index","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.equivQuotient_index","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L439-L440","name":"IndexedPartition.equivQuotient_symm_proj_apply","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.equivQuotient_symm_proj_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L434-L435","name":"IndexedPartition.equivQuotient_index_apply","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.equivQuotient_index_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L429-L430","name":"IndexedPartition.equivQuotient","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.equivQuotient","doc":"The obvious equivalence between the quotient associated to an indexed partition and\nthe indexing type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L423-L424","name":"IndexedPartition.proj_some_index","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.proj_some_index","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L418-L419","name":"IndexedPartition.proj_eq_iff","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.proj_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L415-L416","name":"IndexedPartition.instInhabitedQuotient","kind":"instance","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.instInhabitedQuotient","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L411-L412","name":"IndexedPartition.proj","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.proj","doc":"The projection onto the quotient associated to an indexed partition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L406-L407","name":"IndexedPartition.Quotient","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.Quotient","doc":"The quotient associated to an indexed partition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L401-L402","name":"IndexedPartition.some_index","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.some_index","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L397-L398","name":"IndexedPartition.index_some","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.index_some","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L392-L393","name":"IndexedPartition.setoid","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.setoid","doc":"The equivalence relation associated to an indexed partition. Two\nelements are equivalent if they belong to the same set of the partition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L386-L387","name":"IndexedPartition.eq","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L382-L383","name":"IndexedPartition.mem_iff_index_eq","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.mem_iff_index_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L378-L379","name":"IndexedPartition.disjoint","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.disjoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L373-L375","name":"IndexedPartition.iUnion","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.iUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L369-L370","name":"IndexedPartition.exists_mem","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.exists_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L359-L364","name":"IndexedPartition.instInhabitedIndexedPartitionUniv","kind":"instance","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.instInhabitedIndexedPartitionUniv","doc":"On a unique index set there is the obvious trivial partition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L341-L349","name":"IndexedPartition.mk'","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.mk'","doc":"The non-constructive constructor for `IndexedPartition`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L337-L337","name":"IndexedPartition.mem_index","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.mem_index","doc":"membership invariance for `index`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L335-L335","name":"IndexedPartition.index","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.index","doc":"index for type `Î±`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L333-L333","name":"IndexedPartition.some_mem","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.some_mem","doc":"membership invariance for `some`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L331-L331","name":"IndexedPartition.some","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.some","doc":"sends an index to an element of the corresponding set"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L329-L329","name":"IndexedPartition.eq_of_mem","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.eq_of_mem","doc":"two indexes are equal if they are equal in membership  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L327-L327","name":"IndexedPartition.mk","kind":"ctor","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L327-L337","name":"IndexedPartition","kind":"structure","docLink":"./Mathlib/Data/Setoid/Partition.html#IndexedPartition","doc":"Constructive information associated with a partition of a type `Î±` indexed by another type `Î¹`,\n`s : Î¹ â Set Î±`.\n\n`IndexedPartition.index` sends an element to its index, while `IndexedPartition.some` sends\nan index to an element of the corresponding set.\n\nThis type is primarily useful for definitional control of `s` - if this is not needed, then\n`Setoid.ker index` by itself may be sufficient. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L312-L316","name":"Finpartition.isPartition_parts","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Finpartition.isPartition_parts","doc":"A finpartition gives rise to a setoid partition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L301-L306","name":"Setoid.IsPartition.finpartition","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition.finpartition","doc":"A finite setoid partition furnishes a finpartition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L300-L300","name":"Setoid.IsPartition.finpartition_parts","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition.finpartition_parts","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L291-L294","name":"Setoid.Partition.completeLattice","kind":"instance","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.Partition.completeLattice","doc":"A complete lattice instance for partitions; there is more infrastructure for the\nequivalent complete lattice on equivalence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L277-L284","name":"Setoid.Partition.orderIso","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.Partition.orderIso","doc":"The order-preserving bijection between equivalence relations on a type `Î±`, and\npartitions of `Î±` into subsets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L261-L270","name":"Setoid.Partition.partialOrder","kind":"instance","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.Partition.partialOrder","doc":"Defining a partial order on partitions as the partial order on their induced\nequivalence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L255-L256","name":"Setoid.Partition.le","kind":"instance","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.Partition.le","doc":"Defining `â¤` on partitions as the `â¤` defined on their induced equivalence relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L246-L251","name":"Setoid.classes_mkClasses","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.classes_mkClasses","doc":"The equivalence classes of the equivalence relation defined by a partition of Î± equal\nthe original partition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L238-L241","name":"Setoid.exists_of_mem_partition","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.exists_of_mem_partition","doc":"All elements of a partition of Î± are the equivalence class of some y â Î±. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L228-L234","name":"Setoid.IsPartition.sUnion_eq_univ","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition.sUnion_eq_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L223-L225","name":"Setoid.IsPartition.pairwiseDisjoint","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition.pairwiseDisjoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L219-L220","name":"Setoid.isPartition_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.isPartition_classes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L214-L216","name":"Setoid.nonempty_of_mem_partition","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.nonempty_of_mem_partition","doc":"A partition of `Î±` does not contain the empty set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L209-L210","name":"Setoid.IsPartition","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition","doc":"A collection `c : Set (Set Î±)` of sets is a partition of `Î±` into pairwise\ndisjoint sets if `â â c` and each element `a : Î±` belongs to a unique set `b â c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L199-L200","name":"Setoid.sUnion_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.sUnion_classes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L192-L195","name":"Setoid.mkClasses_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.mkClasses_classes","doc":"The equivalence relation made from the equivalence classes of an equivalence\nrelation r equals r. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L185-L187","name":"Setoid.setoidOfDisjointUnion","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.setoidOfDisjointUnion","doc":"Makes an equivalence relation from a set of disjoints sets covering Î±. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L178-L181","name":"Setoid.eqv_classes_of_disjoint_union","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eqv_classes_of_disjoint_union","doc":"A set of disjoint sets covering Î± partition Î± (classical). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L169-L172","name":"Setoid.eqv_classes_disjoint","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eqv_classes_disjoint","doc":"Distinct elements of a set of sets partitioning Î± are disjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L160-L163","name":"Setoid.eqv_class_mem'","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eqv_class_mem'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L153-L155","name":"Setoid.eqv_class_mem","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eqv_class_mem","doc":"The equivalence classes of the equivalence relation defined by a set of sets\npartitioning Î± are elements of the set of sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L140-L146","name":"Setoid.eq_eqv_class_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eq_eqv_class_of_mem","doc":"The elements of a set of sets partitioning Î± are the equivalence classes of the\nequivalence relation defined by the set of sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L131-L133","name":"Setoid.eq_of_mem_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eq_of_mem_classes","doc":"If x â Î± is in 2 equivalence classes, the equivalence classes are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L123-L127","name":"Setoid.classes_eqv_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.classes_eqv_classes","doc":"Equivalence classes partition the type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L116-L117","name":"Setoid.empty_not_mem_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.empty_not_mem_classes","doc":"The empty set is not an equivalence class. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L111-L112","name":"Setoid.classes_inj","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.classes_inj","doc":"Two equivalence relations are equal iff their equivalence classes are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L104-L107","name":"Setoid.rel_iff_exists_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.rel_iff_exists_classes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L99-L101","name":"Setoid.eq_iff_classes_eq","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eq_iff_classes_eq","doc":"Two equivalence relations are equal iff all their equivalence classes are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L92-L95","name":"Setoid.card_classes_ker_le","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.card_classes_ker_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L88-L89","name":"Setoid.finite_classes_ker","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.finite_classes_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L81-L85","name":"Setoid.classes_ker_subset_fiber_set","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.classes_ker_subset_fiber_set","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L77-L78","name":"Setoid.mem_classes","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.mem_classes","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L73-L74","name":"Setoid.classes","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.classes","doc":"Makes the equivalence classes of an equivalence relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L58-L69","name":"Setoid.mkClasses","kind":"def","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.mkClasses","doc":"Makes an equivalence relation from a set of sets partitioning Î±. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Setoid/Partition.lean#L50-L52","name":"Setoid.eq_of_mem_eqv_class","kind":"theorem","docLink":"./Mathlib/Data/Setoid/Partition.html#Setoid.eq_of_mem_eqv_class","doc":"If x â Î± is in 2 elements of a set of sets partitioning Î±, those 2 sets are equal. "}]}