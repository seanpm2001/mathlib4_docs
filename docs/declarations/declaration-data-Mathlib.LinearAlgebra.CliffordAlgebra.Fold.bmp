{"name":"Mathlib.LinearAlgebra.CliffordAlgebra.Fold","instances":[],"imports":["Init","Mathlib.LinearAlgebra.CliffordAlgebra.Conjugation"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L230-L240","name":"CliffordAlgebra.foldr'_ι_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'_ι_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L224-L227","name":"CliffordAlgebra.foldr'_ι","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L218-L221","name":"CliffordAlgebra.foldr'_algebraMap","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L213-L215","name":"CliffordAlgebra.foldr'","kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'","doc":"Fold a bilinear map along the generators of a term of the clifford algebra, with the rule\ngiven by `foldr' Q f hf n (ι Q m * x) = f m (x, foldr' Q f hf n x)`.\nNote this is like `CliffordAlgebra.foldr`, but with an extra `x` argument.\nImplement the recursion scheme `F[n0](m * x) = f(m, (x, F[n0](x)))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L201-L206","name":"CliffordAlgebra.foldr'Aux_foldr'Aux","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'Aux_foldr'Aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L196-L198","name":"CliffordAlgebra.foldr'Aux_apply_apply","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'Aux_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L181-L193","name":"CliffordAlgebra.foldr'Aux","kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr'Aux","doc":"Auxiliary definition for `CliffordAlgebra.foldr'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L167-L174","name":"CliffordAlgebra.left_induction","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.left_induction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L147-L164","name":"CliffordAlgebra.right_induction","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.right_induction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L140-L142","name":"CliffordAlgebra.foldl_prod_map_ι","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_prod_map_ι","doc":"This lemma demonstrates the origin of the `foldl` name. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L134-L136","name":"CliffordAlgebra.foldl_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L129-L130","name":"CliffordAlgebra.foldl_one","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L123-L125","name":"CliffordAlgebra.foldl_algebraMap","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L118-L119","name":"CliffordAlgebra.foldl_ι","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L111-L114","name":"CliffordAlgebra.foldr_reverse","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_reverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L104-L107","name":"CliffordAlgebra.foldl_reverse","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl_reverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L98-L100","name":"CliffordAlgebra.foldl","kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldl","doc":"Fold a bilinear map along the generators of a term of the clifford algebra, with the rule\ngiven by `foldl Q f hf n (ι Q m * x) = f m (foldl Q f hf n x)`.\n\nFor example, `foldl f hf n (r • ι R u + ι R v * ι R w) = r • f u n + f v (f w n)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L83-L87","name":"CliffordAlgebra.foldr_prod_map_ι","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_prod_map_ι","doc":"This lemma demonstrates the origin of the `foldr` name. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L77-L79","name":"CliffordAlgebra.foldr_mul","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L72-L73","name":"CliffordAlgebra.foldr_one","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L66-L68","name":"CliffordAlgebra.foldr_algebraMap","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L61-L62","name":"CliffordAlgebra.foldr_ι","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/CliffordAlgebra/Fold.lean#L55-L57","name":"CliffordAlgebra.foldr","kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Fold.html#CliffordAlgebra.foldr","doc":"Fold a bilinear map along the generators of a term of the clifford algebra, with the rule\ngiven by `foldr Q f hf n (ι Q m * x) = f m (foldr Q f hf n x)`.\n\nFor example, `foldr f hf n (r • ι R u + ι R v * ι R w) = r • f u n + f v (f w n)`. "}]}