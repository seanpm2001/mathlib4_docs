{"name":"Mathlib.Topology.Homotopy.HomotopyGroup","instances":[{"typeNames":["Path"],"name":"LoopSpace.inhabited","className":"Inhabited"},{"typeNames":["Set.Elem","ContinuousMap","Set.Elem","Real","unitInterval","Pi.topologicalSpace","instTopologicalSpaceSubtype","Membership.mem","Set","Set.instMembershipSet","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace","GenLoop","Set.Elem","Real","unitInterval","Set.Elem","Real","unitInterval"],"name":"GenLoop.funLike","className":"FunLike"},{"typeNames":["Set.Elem","ContinuousMap","Set.Elem","Real","unitInterval","Pi.topologicalSpace","instTopologicalSpaceSubtype","Membership.mem","Set","Set.instMembershipSet","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace","GenLoop"],"name":"GenLoop.inhabited","className":"Inhabited"},{"typeNames":["Set.Elem","ContinuousMap","Set.Elem","Real","unitInterval","Pi.topologicalSpace","instTopologicalSpaceSubtype","Membership.mem","Set","Set.instMembershipSet","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","Real.pseudoMetricSpace","GenLoop"],"name":"GenLoop.Homotopic.setoid","className":"Setoid"},{"typeNames":["HomotopyGroup"],"name":"instInhabitedHomotopyGroup","className":"Inhabited"},{"typeNames":["HomotopyGroup"],"name":"HomotopyGroup.group","className":"Group"},{"typeNames":["HomotopyGroup"],"name":"HomotopyGroup.commGroup","className":"CommGroup"}],"imports":["Init","Mathlib.AlgebraicTopology.FundamentalGroupoid.FundamentalGroup","Mathlib.GroupTheory.EckmannHilton","Mathlib.Logic.Equiv.TransferInstance","Mathlib.Algebra.Group.Ext"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L571-L578","name":"HomotopyGroup.commGroup","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.commGroup","doc":"Multiplication on `HomotopyGroup N X x` is commutative for nontrivial `N`.\nIn particular, multiplication on `π_(n+2)` is commutative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L565-L566","name":"HomotopyGroup.inv_spec","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.inv_spec","doc":"Characterization of multiplicative inverse "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L558-L561","name":"HomotopyGroup.mul_spec","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.mul_spec","doc":"Characterization of multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L553-L554","name":"HomotopyGroup.one_def","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.one_def","doc":"Characterization of multiplicative identity "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L545-L549","name":"HomotopyGroup.symmAt_indep","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.symmAt_indep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L538-L542","name":"HomotopyGroup.transAt_indep","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.transAt_indep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L528-L535","name":"HomotopyGroup.auxGroup_indep","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.auxGroup_indep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L523-L525","name":"HomotopyGroup.isUnital_auxGroup","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.isUnital_auxGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L519-L520","name":"HomotopyGroup.auxGroup","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.auxGroup","doc":"Group structure on `HomotopyGroup` obtained by pulling back path composition along the\n`i`th direction. The group structures for two different `i j : N` distribute over each\nother, and therefore are equal by the Eckmann-Hilton argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L511-L512","name":"HomotopyGroup.group","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.group","doc":"Group structure on `HomotopyGroup N X x` for nonempty `N` (in particular `π_(n+1) X x`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L504-L505","name":"HomotopyGroup.pi1EquivFundamentalGroup","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.pi1EquivFundamentalGroup","doc":"The first homotopy group at `x` is in bijection with the fundamental group. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L482-L500","name":"homotopyGroupEquivFundamentalGroupOfUnique","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#homotopyGroupEquivFundamentalGroupOfUnique","doc":"The homotopy group at `x` indexed by a singleton is in bijection with the fundamental group,\ni.e. the loops based at `x` up to homotopy. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L461-L472","name":"genLoopEquivOfUnique","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#genLoopEquivOfUnique","doc":"The 1-dimensional generalized loops based at `x` are in bijection with loops at `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L456-L457","name":"HomotopyGroup.pi0EquivZerothHomotopy","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.pi0EquivZerothHomotopy","doc":"The 0th homotopy \"group\" is in bijection with `ZerothHomotopy`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L438-L452","name":"homotopyGroupEquivZerothHomotopyOfIsEmpty","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#homotopyGroupEquivZerothHomotopyOfIsEmpty","doc":"The homotopy \"group\" indexed by an empty type is in bijection with\nthe path components of `X`, aka the `ZerothHomotopy`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L427-L433","name":"genLoopHomeoOfIsEmpty","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#genLoopHomeoOfIsEmpty","doc":"The 0-dimensional generalized loops based at `x` are in bijection with `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L424-L424","name":"Topology.termπ_","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Topology.termπ_","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L419-L420","name":"HomotopyGroup.Pi","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup.Pi","doc":"Homotopy group of finite index. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L410-L414","name":"homotopyGroupEquivFundamentalGroup","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#homotopyGroupEquivFundamentalGroup","doc":"Equivalence between the homotopy group of X and the fundamental group of\n`Ω^{j // j ≠ i} x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L401-L402","name":"instInhabitedHomotopyGroup","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#instInhabitedHomotopyGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L396-L397","name":"HomotopyGroup","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#HomotopyGroup","doc":"The `n`th homotopy group at `x` defined as the quotient of `Ω^n x` by the\n`GenLoop.Homotopic` relation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L386-L387","name":"GenLoop.fromLoop_symm_toLoop","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.fromLoop_symm_toLoop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L381-L383","name":"GenLoop.fromLoop_trans_toLoop","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.fromLoop_trans_toLoop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L373-L378","name":"GenLoop.transAt_distrib","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.transAt_distrib","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L368-L370","name":"GenLoop.symmAt","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.symmAt","doc":"Reversal of a `GenLoop` along the `i`th coordinate. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L353-L364","name":"GenLoop.transAt","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.transAt","doc":"Concatenation of two `GenLoop`s along the `i`th coordinate. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L327-L349","name":"GenLoop.homotopicFrom","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopicFrom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L318-L322","name":"GenLoop.homotopyFrom","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopyFrom","doc":"The converse to `GenLoop.homotopyTo`: a homotopy between two loops in the space of\n`n`-dimensional loops can be seen as a homotopy between two `n+1`-dimensional paths. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L318-L318","name":"GenLoop.homotopyFrom_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopyFrom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L300-L313","name":"GenLoop.homotopicTo","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopicTo","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L294-L297","name":"GenLoop.homotopyTo_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopyTo_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L287-L290","name":"GenLoop.homotopyTo","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.homotopyTo","doc":"A homotopy between `n+1`-dimensional loops `p` and `q` constant on the boundary\nseen as a homotopy between two paths in the space of `n`-dimensional paths. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L280-L282","name":"GenLoop.cCompInsert","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.cCompInsert","doc":"Composition with `Cube.insertAt` as a continuous map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L273-L275","name":"GenLoop.fromLoop_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.fromLoop_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L268-L270","name":"GenLoop.toLoop_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.toLoop_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L258-L265","name":"GenLoop.loopHomeo","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.loopHomeo","doc":"The `n+1`-dimensional loops are in bijection with the loops in the space of\n`n`-dimensional loops with base point `const`.\nWe allow an arbitrary indexing type `N` in place of `Fin n` here. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L257-L257","name":"GenLoop.loopHomeo_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.loopHomeo_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L257-L257","name":"GenLoop.loopHomeo_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.loopHomeo_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L248-L251","name":"GenLoop.to_from","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.to_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L241-L245","name":"GenLoop.continuous_fromLoop","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.continuous_fromLoop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L228-L238","name":"GenLoop.fromLoop","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.fromLoop","doc":"Generalized loop from a loop by uncurrying $I → (I^{N\\setminus\\{j\\}} → X)$ into $I^N → X$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L227-L227","name":"GenLoop.fromLoop_coe","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.fromLoop_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L215-L223","name":"GenLoop.continuous_toLoop","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.continuous_toLoop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L205-L211","name":"GenLoop.toLoop","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.toLoop","doc":"Loop from a generalized loop by currying $I^N → X$ into $I → (I^{N\\setminus\\{j\\}} → X)$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L204-L204","name":"GenLoop.toLoop_apply_coe","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.toLoop_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L193-L194","name":"GenLoop.Homotopic.setoid","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic.setoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L189-L190","name":"GenLoop.Homotopic.equiv","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic.equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L185-L186","name":"GenLoop.Homotopic.trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L180-L181","name":"GenLoop.Homotopic.symm","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L175-L176","name":"GenLoop.Homotopic.refl","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L166-L167","name":"GenLoop.Homotopic","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.Homotopic","doc":"The \"homotopic relative to boundary\" relation between `GenLoop`s. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L162-L163","name":"GenLoop.inhabited","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L158-L159","name":"GenLoop.const_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.const_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L153-L154","name":"GenLoop.const","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.const","doc":"The constant `GenLoop` at `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L148-L149","name":"GenLoop.boundary","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.boundary","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L143-L145","name":"GenLoop.copy_eq","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.copy_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L139-L140","name":"GenLoop.coe_copy","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.coe_copy","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L133-L134","name":"GenLoop.copy","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.copy","doc":"Copy of a `GenLoop` with a new map from the unit cube equal to the old one.\nUseful to fix definitional equalities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L127-L128","name":"GenLoop.mk_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.mk_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L122-L123","name":"GenLoop.ext","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L116-L118","name":"GenLoop.funLike","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop.funLike","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L110-L110","name":"Topology.«termΩ^»","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Topology.«termΩ^»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L106-L107","name":"GenLoop","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#GenLoop","doc":"The `n`-dimensional generalized loops based at `x` in a space `X` are\ncontinuous functions `I^n → X` that sends the boundary to `x`.\nWe allow an arbitrary indexing type `N` in place of `Fin n` here. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L99-L100","name":"LoopSpace.inhabited","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#LoopSpace.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L97-L97","name":"Topology.termΩ","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Topology.termΩ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L92-L93","name":"LoopSpace","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#LoopSpace","doc":"The space of paths with both endpoints equal to a specified point `x : X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L79-L83","name":"Cube.insertAt_boundary","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Cube.insertAt_boundary","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L75-L76","name":"Cube.insertAt","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Cube.insertAt","doc":"The backward direction of the homeomorphism\nbetween the cube $I^N$ and $I × I^{N\\setminus\\{j\\}}$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L68-L69","name":"Cube.splitAt","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Cube.splitAt","doc":"The forward direction of the homeomorphism\nbetween the cube $I^N$ and $I × I^{N\\setminus\\{j\\}}$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L59-L60","name":"Cube.boundary","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Cube.boundary","doc":"The points in a cube with at least one projection equal to 0 or 1. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/HomotopyGroup.lean#L54-L54","name":"Topology.«termI^_»","kind":"def","docLink":"./Mathlib/Topology/Homotopy/HomotopyGroup.html#Topology.«termI^_»","doc":""}]}