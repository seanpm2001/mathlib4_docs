{"name":"Mathlib.ModelTheory.Syntax","instances":[{"typeNames":["FirstOrder.Language.Term"],"name":"FirstOrder.Language.Term.inhabitedOfVar","className":"Inhabited"},{"typeNames":["FirstOrder.Language.Term"],"name":"FirstOrder.Language.Term.inhabitedOfConstant","className":"Inhabited"},{"typeNames":["FirstOrder.Language.BoundedFormula"],"name":"FirstOrder.Language.BoundedFormula.instInhabitedBoundedFormula","className":"Inhabited"},{"typeNames":["FirstOrder.Language.BoundedFormula"],"name":"FirstOrder.Language.BoundedFormula.instBotBoundedFormula","className":"Bot"},{"typeNames":["FirstOrder.Language.BoundedFormula"],"name":"FirstOrder.Language.BoundedFormula.instTopBoundedFormula","className":"Top"},{"typeNames":["FirstOrder.Language.BoundedFormula"],"name":"FirstOrder.Language.BoundedFormula.instInfBoundedFormula","className":"Inf"},{"typeNames":["FirstOrder.Language.BoundedFormula"],"name":"FirstOrder.Language.BoundedFormula.instSupBoundedFormula","className":"Sup"}],"imports":["Init","Mathlib.Data.List.ProdSigma","Mathlib.Data.Set.Prod","Mathlib.Logic.Equiv.Fin","Mathlib.ModelTheory.LanguageMap"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1137-L1152","name":"FirstOrder.Language.distinctConstantsTheory_eq_iUnion","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.distinctConstantsTheory_eq_iUnion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1132-L1134","name":"FirstOrder.Language.directed_distinctConstantsTheory","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.directed_distinctConstantsTheory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1127-L1129","name":"FirstOrder.Language.monotone_distinctConstantsTheory","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.monotone_distinctConstantsTheory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1118-L1120","name":"FirstOrder.Language.distinctConstantsTheory","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.distinctConstantsTheory","doc":"A theory indicating that each of a set of constants is distinct. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1113-L1114","name":"FirstOrder.Language.nonemptyTheory","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.nonemptyTheory","doc":"A theory that indicates a structure is nonempty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1108-L1109","name":"FirstOrder.Language.infiniteTheory","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.infiniteTheory","doc":"A theory indicating that a structure is infinite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1101-L1104","name":"FirstOrder.Language.Sentence.cardGe","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence.cardGe","doc":"A sentence indicating that a structure has `n` distinct elements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1090-L1091","name":"FirstOrder.Language.Relations.total","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.total","doc":"The sentence indicating that a basic relation symbol is total. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1085-L1086","name":"FirstOrder.Language.Relations.transitive","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.transitive","doc":"The sentence indicating that a basic relation symbol is transitive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1080-L1081","name":"FirstOrder.Language.Relations.antisymmetric","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.antisymmetric","doc":"The sentence indicating that a basic relation symbol is antisymmetric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1075-L1076","name":"FirstOrder.Language.Relations.symmetric","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.symmetric","doc":"The sentence indicating that a basic relation symbol is symmetric. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1070-L1071","name":"FirstOrder.Language.Relations.irreflexive","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.irreflexive","doc":"The sentence indicating that a basic relation symbol is irreflexive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1065-L1066","name":"FirstOrder.Language.Relations.reflexive","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.reflexive","doc":"The sentence indicating that a basic relation symbol is reflexive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1053-L1055","name":"FirstOrder.Language.Formula.equivSentence_inf","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.equivSentence_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1049-L1050","name":"FirstOrder.Language.Formula.equivSentence_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.equivSentence_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1045-L1046","name":"FirstOrder.Language.Formula.equivSentence","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.equivSentence","doc":"A bijection sending formulas to sentences with constants. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1040-L1041","name":"FirstOrder.Language.Formula.isAtomic_graph","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.isAtomic_graph","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1036-L1037","name":"FirstOrder.Language.Formula.iff","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.iff","doc":"The biimplication between formulas, as a formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1031-L1032","name":"FirstOrder.Language.Formula.imp","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.imp","doc":"The implication between formulas, as a formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1026-L1027","name":"FirstOrder.Language.Formula.not","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not","doc":"The negation of a formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1021-L1022","name":"FirstOrder.Language.Formula.graph","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.graph","doc":"The graph of a function as a first-order formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1016-L1017","name":"FirstOrder.Language.Formula.relabel","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.relabel","doc":"Relabels a formula's variables along a particular function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1010-L1010","name":"FirstOrder.«term∃'_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term∃'_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1007-L1007","name":"FirstOrder.«term_⇔_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term_⇔_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1004-L1004","name":"FirstOrder.«term∼_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term∼_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L1002-L1002","name":"FirstOrder.«term∀'_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term∀'_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L999-L999","name":"FirstOrder.«term_⟹_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term_⟹_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L996-L996","name":"FirstOrder.«term_='_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term_='_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L989-L990","name":"FirstOrder.Language.LEquiv.onSentence","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onSentence","doc":"Maps a sentence's symbols along a language equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L988-L988","name":"FirstOrder.Language.LEquiv.onSentence_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onSentence_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L988-L988","name":"FirstOrder.Language.LEquiv.onSentence_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onSentence_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L981-L983","name":"FirstOrder.Language.LEquiv.onFormula_symm","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onFormula_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L974-L976","name":"FirstOrder.Language.LEquiv.onFormula_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onFormula_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L968-L969","name":"FirstOrder.Language.LEquiv.onFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onFormula","doc":"Maps a formula's symbols along a language equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L960-L963","name":"FirstOrder.Language.LEquiv.onBoundedFormula_symm","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onBoundedFormula_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L948-L956","name":"FirstOrder.Language.LEquiv.onBoundedFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onBoundedFormula","doc":"Maps a bounded formula's symbols along a language equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L947-L947","name":"FirstOrder.Language.LEquiv.onBoundedFormula_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onBoundedFormula_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L947-L947","name":"FirstOrder.Language.LEquiv.onBoundedFormula_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LEquiv.onBoundedFormula_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L936-L938","name":"FirstOrder.Language.LHom.mem_onTheory","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.mem_onTheory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L930-L931","name":"FirstOrder.Language.LHom.onTheory","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.onTheory","doc":"Maps a theory's symbols along a language map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L924-L925","name":"FirstOrder.Language.LHom.onSentence","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.onSentence","doc":"Maps a sentence's symbols along a language map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L918-L919","name":"FirstOrder.Language.LHom.onFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.onFormula","doc":"Maps a formula's symbols along a language map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L903-L913","name":"FirstOrder.Language.LHom.comp_onBoundedFormula","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.comp_onBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L889-L898","name":"FirstOrder.Language.LHom.id_onBoundedFormula","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.id_onBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L879-L884","name":"FirstOrder.Language.LHom.onBoundedFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.onBoundedFormula","doc":"Maps a bounded formula's symbols along a language map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L864-L867","name":"FirstOrder.Language.BoundedFormula.toPrenex_isPrenex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.toPrenex_isPrenex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L856-L861","name":"FirstOrder.Language.BoundedFormula.toPrenex","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.toPrenex","doc":"For any bounded formula `φ`, `φ.toPrenex` is a semantically-equivalent formula in prenex normal\nform. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L844-L850","name":"FirstOrder.Language.BoundedFormula.isPrenex_toPrenexImp","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.isPrenex_toPrenexImp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L833-L841","name":"FirstOrder.Language.BoundedFormula.IsQF.toPrenexImp","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.toPrenexImp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L827-L830","name":"FirstOrder.Language.BoundedFormula.toPrenexImp","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.toPrenexImp","doc":"An auxiliary operation to `FirstOrder.Language.BoundedFormula.toPrenex`.\nIf `φ` and `ψ` are in prenex normal form, then `φ.toPrenexImp ψ`\nis a prenex normal form for `φ.imp ψ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L814-L820","name":"FirstOrder.Language.BoundedFormula.isPrenex_toPrenexImpRight","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.isPrenex_toPrenexImpRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L803-L811","name":"FirstOrder.Language.BoundedFormula.IsQF.toPrenexImpRight","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.toPrenexImpRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L797-L800","name":"FirstOrder.Language.BoundedFormula.toPrenexImpRight","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.toPrenexImpRight","doc":"An auxiliary operation to `FirstOrder.Language.BoundedFormula.toPrenex`.\nIf `φ` is quantifier-free and `ψ` is in prenex normal form, then `φ.toPrenexImpRight ψ`\nis a prenex normal form for `φ.imp ψ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L788-L790","name":"FirstOrder.Language.BoundedFormula.IsPrenex.liftAt","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.liftAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L781-L785","name":"FirstOrder.Language.BoundedFormula.IsPrenex.castLE","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.castLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L775-L778","name":"FirstOrder.Language.BoundedFormula.IsPrenex.relabel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L767-L772","name":"FirstOrder.Language.BoundedFormula.IsPrenex.induction_on_all_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.induction_on_all_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L763-L764","name":"FirstOrder.Language.BoundedFormula.IsAtomic.isPrenex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.isPrenex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L759-L760","name":"FirstOrder.Language.BoundedFormula.IsQF.isPrenex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.isPrenex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L756-L756","name":"FirstOrder.Language.BoundedFormula.IsPrenex.ex","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.ex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L755-L755","name":"FirstOrder.Language.BoundedFormula.IsPrenex.all","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.all","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L754-L754","name":"FirstOrder.Language.BoundedFormula.IsPrenex.of_isQF","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex.of_isQF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L753-L756","name":"FirstOrder.Language.BoundedFormula.IsPrenex","kind":"inductive","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsPrenex","doc":"Indicates that a bounded formula is in prenex normal form - that is, it consists of quantifiers\napplied to a quantifier-free formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L745-L748","name":"FirstOrder.Language.BoundedFormula.not_ex_isQF","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not_ex_isQF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L740-L742","name":"FirstOrder.Language.BoundedFormula.not_all_isQF","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not_all_isQF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L736-L737","name":"FirstOrder.Language.BoundedFormula.IsQF.castLE","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.castLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L732-L733","name":"FirstOrder.Language.BoundedFormula.IsQF.liftAt","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.liftAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L727-L729","name":"FirstOrder.Language.BoundedFormula.IsQF.relabel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L723-L724","name":"FirstOrder.Language.BoundedFormula.IsQF.not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L719-L720","name":"FirstOrder.Language.BoundedFormula.isQF_bot","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.isQF_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L715-L716","name":"FirstOrder.Language.BoundedFormula.IsAtomic.isQF","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.isQF","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L712-L712","name":"FirstOrder.Language.BoundedFormula.IsQF.imp","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L711-L711","name":"FirstOrder.Language.BoundedFormula.IsQF.of_isAtomic","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.of_isAtomic","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L710-L710","name":"FirstOrder.Language.BoundedFormula.IsQF.falsum","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF.falsum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L709-L712","name":"FirstOrder.Language.BoundedFormula.IsQF","kind":"inductive","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsQF","doc":"A quantifier-free formula is a formula defined without quantifiers. These are all equivalent\nto boolean combinations of atomic formulas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L703-L704","name":"FirstOrder.Language.BoundedFormula.IsAtomic.castLE","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.castLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L699-L700","name":"FirstOrder.Language.BoundedFormula.IsAtomic.liftAt","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.liftAt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L694-L696","name":"FirstOrder.Language.BoundedFormula.IsAtomic.relabel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L691-L691","name":"FirstOrder.Language.BoundedFormula.not_ex_isAtomic","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not_ex_isAtomic","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L687-L688","name":"FirstOrder.Language.BoundedFormula.not_all_isAtomic","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not_all_isAtomic","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L683-L684","name":"FirstOrder.Language.BoundedFormula.IsAtomic.rel","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L682-L682","name":"FirstOrder.Language.BoundedFormula.IsAtomic.equal","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic.equal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L681-L684","name":"FirstOrder.Language.BoundedFormula.IsAtomic","kind":"inductive","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.IsAtomic","doc":"An atomic formula is either equality or a relation symbol applied to terms.\nNote that `⊥` and `⊤` are not considered atomic in this convention. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L665-L672","name":"FirstOrder.Language.BoundedFormula.toFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.toFormula","doc":"Turns the extra variables of a bounded formula into free variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L658-L659","name":"FirstOrder.Language.BoundedFormula.constantsVarsEquiv","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.constantsVarsEquiv","doc":"A bijection sending formulas with constants to formulas with extra variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L652-L654","name":"FirstOrder.Language.BoundedFormula.subst","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.subst","doc":"Substitutes the variables in a given formula with terms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L639-L647","name":"FirstOrder.Language.BoundedFormula.relabel_sum_inl","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_sum_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L634-L635","name":"FirstOrder.Language.BoundedFormula.relabel_ex","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_ex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L627-L630","name":"FirstOrder.Language.BoundedFormula.relabel_all","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_all","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L622-L623","name":"FirstOrder.Language.BoundedFormula.relabel_not","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_not","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L616-L618","name":"FirstOrder.Language.BoundedFormula.relabel_imp","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L611-L612","name":"FirstOrder.Language.BoundedFormula.relabel_bot","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L605-L607","name":"FirstOrder.Language.BoundedFormula.relabel_falsum","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel_falsum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L599-L601","name":"FirstOrder.Language.BoundedFormula.relabelEquiv","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabelEquiv","doc":"Relabels a bounded formula's free variables along a bijection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L593-L595","name":"FirstOrder.Language.BoundedFormula.relabel","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabel","doc":"Relabels a bounded formula's variables along a particular function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L586-L589","name":"FirstOrder.Language.BoundedFormula.relabelAux_sum_inl","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabelAux_sum_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L575-L582","name":"FirstOrder.Language.BoundedFormula.sum_elim_comp_relabelAux","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.sum_elim_comp_relabelAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L570-L571","name":"FirstOrder.Language.BoundedFormula.relabelAux","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.relabelAux","doc":"A function to help relabel the variables in bounded formulas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L562-L566","name":"FirstOrder.Language.BoundedFormula.mapTermRelEquiv","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRelEquiv","doc":"An equivalence of bounded formulas given by an equivalence of terms and an equivalence of\nrelations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L561-L561","name":"FirstOrder.Language.BoundedFormula.mapTermRelEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRelEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L561-L561","name":"FirstOrder.Language.BoundedFormula.mapTermRelEquiv_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRelEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L549-L556","name":"FirstOrder.Language.BoundedFormula.mapTermRel_id_id_id","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRel_id_id_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L533-L545","name":"FirstOrder.Language.BoundedFormula.mapTermRel_mapTermRel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRel_mapTermRel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L526-L529","name":"FirstOrder.Language.BoundedFormula.liftAt","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.liftAt","doc":"Raises all of the `Fin`-indexed variables of a formula greater than or equal to `m` by `n'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L514-L522","name":"FirstOrder.Language.BoundedFormula.mapTermRel","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.mapTermRel","doc":"Maps bounded formulas along a map of terms and a map of relations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L507-L509","name":"FirstOrder.Language.BoundedFormula.exs","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.exs","doc":"Places existential quantifiers on all extra variables of a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L500-L502","name":"FirstOrder.Language.BoundedFormula.alls","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.alls","doc":"Places universal quantifiers on all extra variables of a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L483-L495","name":"FirstOrder.Language.BoundedFormula.restrictFreeVar","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.restrictFreeVar","doc":"Restricts a bounded formula to only use a particular set of free variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L474-L478","name":"FirstOrder.Language.BoundedFormula.castLE_comp_castLE","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.castLE_comp_castLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L460-L470","name":"FirstOrder.Language.BoundedFormula.castLE_castLE","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.castLE_castLE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L450-L456","name":"FirstOrder.Language.BoundedFormula.castLE_rfl","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.castLE_rfl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L440-L446","name":"FirstOrder.Language.BoundedFormula.castLE","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.castLE","doc":"Casts `L.BoundedFormula α m` as `L.BoundedFormula α n`, where `m ≤ n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L429-L434","name":"FirstOrder.Language.BoundedFormula.freeVarFinset","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.freeVarFinset","doc":"The `Finset` of variables used in a given formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L420-L421","name":"FirstOrder.Language.BoundedFormula.iff","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.iff","doc":"The biimplication between two bounded formulas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L416-L417","name":"FirstOrder.Language.BoundedFormula.instSupBoundedFormula","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.instSupBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L413-L414","name":"FirstOrder.Language.BoundedFormula.instInfBoundedFormula","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.instInfBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L410-L411","name":"FirstOrder.Language.BoundedFormula.instTopBoundedFormula","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.instTopBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L406-L407","name":"FirstOrder.Language.BoundedFormula.ex","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.ex","doc":"Puts an `∃` quantifier on a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L400-L401","name":"FirstOrder.Language.BoundedFormula.not","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not","doc":"The negation of a bounded formula is also a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L395-L396","name":"FirstOrder.Language.BoundedFormula.instBotBoundedFormula","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.instBotBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L392-L393","name":"FirstOrder.Language.BoundedFormula.instInhabitedBoundedFormula","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.instInhabitedBoundedFormula","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L386-L387","name":"FirstOrder.Language.Term.equal","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.equal","doc":"The equality of two terms as a first-order formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L381-L382","name":"FirstOrder.Language.Relations.formula₂","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.formula₂","doc":"Applies a binary relation to two terms as a formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L376-L377","name":"FirstOrder.Language.Relations.formula₁","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.formula₁","doc":"Applies a unary relation to a term as a formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L371-L372","name":"FirstOrder.Language.Relations.formula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.formula","doc":"Applies a relation to terms as a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L366-L367","name":"FirstOrder.Language.Term.bdEqual","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.bdEqual","doc":"The equality of two terms as a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L360-L362","name":"FirstOrder.Language.Relations.boundedFormula₂","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.boundedFormula₂","doc":"Applies a binary relation to two terms as a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L354-L356","name":"FirstOrder.Language.Relations.boundedFormula₁","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.boundedFormula₁","doc":"Applies a unary relation to a term as a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L348-L350","name":"FirstOrder.Language.Relations.boundedFormula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Relations.boundedFormula","doc":"Applies a relation to terms as a bounded formula. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L340-L341","name":"FirstOrder.Language.Theory","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory","doc":"A theory is a set of sentences. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L334-L335","name":"FirstOrder.Language.Sentence","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence","doc":"A sentence is a formula with no free variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L328-L329","name":"FirstOrder.Language.Formula","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula","doc":"`Formula α` is the type of formulas with all free variables indexed by `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L323-L323","name":"FirstOrder.Language.BoundedFormula.all","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L322-L322","name":"FirstOrder.Language.BoundedFormula.imp","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.imp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L321-L321","name":"FirstOrder.Language.BoundedFormula.rel","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.rel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L320-L320","name":"FirstOrder.Language.BoundedFormula.equal","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.equal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L319-L319","name":"FirstOrder.Language.BoundedFormula.falsum","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.falsum","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L318-L323","name":"FirstOrder.Language.BoundedFormula","kind":"inductive","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula","doc":"`BoundedFormula α n` is the type of formulas with free variables indexed by `α` and up to `n`\nadditional free variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L304-L310","name":"FirstOrder.Language.Lequiv.onTerm","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Lequiv.onTerm","doc":"Maps a term's symbols along a language equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L303-L303","name":"FirstOrder.Language.Lequiv.onTerm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Lequiv.onTerm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L303-L303","name":"FirstOrder.Language.Lequiv.onTerm_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Lequiv.onTerm_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L290-L296","name":"FirstOrder.Language.LHom.comp_onTerm","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.comp_onTerm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L280-L285","name":"FirstOrder.Language.LHom.id_onTerm","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.id_onTerm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L273-L275","name":"FirstOrder.Language.LHom.onTerm","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.LHom.onTerm","doc":"Maps a term's symbols along a language map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L264-L264","name":"FirstOrder.«term&_»","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.«term&_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L257-L259","name":"FirstOrder.Language.Term.subst","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.subst","doc":"Substitutes the variables in a given term with terms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L250-L251","name":"FirstOrder.Language.Term.liftAt","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.liftAt","doc":"Raises all of the `Fin`-indexed variables of a term greater than or equal to `m` by `n'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L245-L246","name":"FirstOrder.Language.Term.inhabitedOfConstant","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.inhabitedOfConstant","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L241-L242","name":"FirstOrder.Language.Term.inhabitedOfVar","kind":"instance","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.inhabitedOfVar","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L236-L238","name":"FirstOrder.Language.Term.constantsVarsEquivLeft_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquivLeft_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L230-L232","name":"FirstOrder.Language.Term.constantsVarsEquivLeft_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquivLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L225-L226","name":"FirstOrder.Language.Term.constantsVarsEquivLeft","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquivLeft","doc":"A bijection between terms with constants and terms with extra variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L206-L221","name":"FirstOrder.Language.Term.constantsVarsEquiv","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquiv","doc":"A bijection between terms with constants and terms with extra variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L205-L205","name":"FirstOrder.Language.Term.constantsVarsEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L205-L205","name":"FirstOrder.Language.Term.constantsVarsEquiv_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsVarsEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L198-L201","name":"FirstOrder.Language.Term.varsToConstants","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.varsToConstants","doc":"Sends a term with extra variables to a term with constants. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L187-L192","name":"FirstOrder.Language.Term.constantsToVars","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.constantsToVars","doc":"Sends a term with constants to a term with extra variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L178-L179","name":"FirstOrder.Language.Functions.apply₂","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Functions.apply₂","doc":"Applies a binary function to two terms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L173-L174","name":"FirstOrder.Language.Functions.apply₁","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Functions.apply₁","doc":"Applies a unary function to a term. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L168-L169","name":"FirstOrder.Language.Constants.term","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Constants.term","doc":"The representation of a constant symbol as a term. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L155-L162","name":"FirstOrder.Language.Term.restrictVarLeft","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.restrictVarLeft","doc":"Restricts a term to use only a set of the given variables on the left side of a sum. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L146-L150","name":"FirstOrder.Language.Term.restrictVar","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.restrictVar","doc":"Restricts a term to use only a set of the given variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L140-L141","name":"FirstOrder.Language.Term.relabelEquiv","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabelEquiv","doc":"Relabels a term's variables along a bijection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L139-L139","name":"FirstOrder.Language.Term.relabelEquiv_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabelEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L139-L139","name":"FirstOrder.Language.Term.relabelEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabelEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L133-L135","name":"FirstOrder.Language.Term.relabel_comp_relabel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabel_comp_relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L125-L129","name":"FirstOrder.Language.Term.relabel_relabel","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabel_relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L120-L121","name":"FirstOrder.Language.Term.relabel_id_eq_id","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabel_id_eq_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L113-L116","name":"FirstOrder.Language.Term.relabel_id","kind":"theorem","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabel_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L108-L110","name":"FirstOrder.Language.Term.relabel","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.relabel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L100-L103","name":"FirstOrder.Language.Term.varFinsetLeft","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.varFinsetLeft","doc":"The `Finset` of variables from the left side of a sum used in a given term. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L92-L94","name":"FirstOrder.Language.Term.varFinset","kind":"def","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.varFinset","doc":"The `Finset` of variables used in a given term. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L80-L80","name":"FirstOrder.Language.Term.func","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.func","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L79-L79","name":"FirstOrder.Language.Term.var","kind":"ctor","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term.var","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/ModelTheory/Syntax.lean#L78-L80","name":"FirstOrder.Language.Term","kind":"inductive","docLink":"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Term","doc":"A term on `α` is either a variable indexed by an element of `α`\nor a function symbol applied to simpler terms. "}]}