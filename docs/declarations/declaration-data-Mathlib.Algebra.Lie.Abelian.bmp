{"name":"Mathlib.Algebra.Lie.Abelian","instances":[{"typeNames":["Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","lieRingSelfModule","LieRingModule.toBracket","Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","lieRingSelfModule","LieIdeal.lieRing","Submodule.addCommGroup","CommRing.toRing","LieIdeal.lieRingModule","LieSubmodule.instLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","Submodule.zero","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","LieSubmodule.toSubmodule","lieRingSelfModule"],"name":"LieIdeal.isLieAbelian_of_trivial","className":"LieModule.IsTrivial"},{"typeNames":["Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","LieModule.maxTrivSubmodule","LieRingModule.toBracket","Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","LieModule.maxTrivSubmodule","Submodule.addCommGroup","CommRing.toRing","LieSubmodule.instLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","Submodule.zero","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieSubmodule.toSubmodule","LieModule.maxTrivSubmodule"],"name":"LieModule.instIsTrivialSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleMaxTrivSubmoduleToBracketAddCommGroupToRingInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","className":"LieModule.IsTrivial"},{"typeNames":["Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","lieRingSelfModule","LieAlgebra.center","LieRingModule.toBracket","Subtype","Membership.mem","Submodule","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","SetLike.instMembership","Submodule.setLike","LieSubmodule.toSubmodule","lieRingSelfModule","LieAlgebra.center","LieIdeal.lieRing","Submodule.addCommGroup","CommRing.toRing","LieIdeal.lieRingModule","LieSubmodule.instLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRing","Submodule.zero","CommSemiring.toSemiring","CommRing.toCommSemiring","AddCommGroup.toAddCommMonoid","LieRing.toAddCommGroup","LieAlgebra.toModule","LieSubmodule.toSubmodule","lieRingSelfModule","LieAlgebra.center"],"name":"LieAlgebra.instIsLieAbelianSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidToAddCommGroupToModuleInstMembershipSetLikeToSubmoduleLieRingSelfModuleCenterToBracketLieRingAddCommGroupToRingLieRingModuleInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","className":"LieModule.IsTrivial"}],"imports":["Init","Mathlib.Algebra.Lie.OfAssociative","Mathlib.Algebra.Lie.IdealOperations"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L308-L316","name":"LieSubmodule.lie_abelian_iff_lie_self_eq_bot","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieSubmodule.lie_abelian_iff_lie_self_eq_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L302-L305","name":"LieSubmodule.trivial_lie_oper_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieSubmodule.trivial_lie_oper_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L281-L282","name":"LieAlgebra.isLieAbelian_iff_center_eq_top","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.isLieAbelian_iff_center_eq_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L276-L278","name":"LieAlgebra.abelian_of_le_center","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.abelian_of_le_center","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L271-L273","name":"LieAlgebra.self_module_ker_eq_center","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.self_module_ker_eq_center","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L266-L267","name":"LieAlgebra.ad_ker_eq_self_module_ker","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.ad_ker_eq_self_module_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L262-L263","name":"LieAlgebra.instIsLieAbelianSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidToAddCommGroupToModuleInstMembershipSetLikeToSubmoduleLieRingSelfModuleCenterToBracketLieRingAddCommGroupToRingLieRingModuleInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","kind":"instance","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.instIsLieAbelianSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidToAddCommGroupToModuleInstMembershipSetLikeToSubmoduleLieRingSelfModuleCenterToBracketLieRingAddCommGroupToRingLieRingModuleInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L258-L259","name":"LieAlgebra.center","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.center","doc":"The center of a Lie algebra is the set of elements that commute with everything. It can\nbe viewed as the maximal trivial submodule of the Lie algebra as a Lie module over itself via the\nadjoint representation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L246-L248","name":"LieModule.coe_linearMap_maxTrivLinearMapEquivLieModuleHom_symm","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_linearMap_maxTrivLinearMapEquivLieModuleHom_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L241-L242","name":"LieModule.coe_linearMap_maxTrivLinearMapEquivLieModuleHom","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_linearMap_maxTrivLinearMapEquivLieModuleHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L235-L237","name":"LieModule.coe_maxTrivLinearMapEquivLieModuleHom_symm","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_maxTrivLinearMapEquivLieModuleHom_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L230-L231","name":"LieModule.coe_maxTrivLinearMapEquivLieModuleHom","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_maxTrivLinearMapEquivLieModuleHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L216-L226","name":"LieModule.maxTrivLinearMapEquivLieModuleHom","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivLinearMapEquivLieModuleHom","doc":"A linear map between two Lie modules is a morphism of Lie modules iff the Lie algebra action\non it is trivial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L209-L211","name":"LieModule.maxTrivEquiv_of_equiv_symm_eq_symm","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivEquiv_of_equiv_symm_eq_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L203-L205","name":"LieModule.maxTrivEquiv_of_refl_eq_refl","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivEquiv_of_refl_eq_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L197-L199","name":"LieModule.coe_maxTrivEquiv_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_maxTrivEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L188-L193","name":"LieModule.maxTrivEquiv","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivEquiv","doc":"The maximal trivial submodules of Lie-equivalent Lie modules are Lie-equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L182-L184","name":"LieModule.coe_maxTrivHom_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.coe_maxTrivHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L172-L178","name":"LieModule.maxTrivHom","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivHom","doc":"`maxTrivSubmodule` is functorial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L162-L166","name":"LieModule.isTrivial_iff_max_triv_eq_top","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.isTrivial_iff_max_triv_eq_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L156-L159","name":"LieModule.trivial_iff_le_maximal_trivial","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.trivial_iff_le_maximal_trivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L146-L153","name":"LieModule.le_max_triv_iff_bracket_eq_bot","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.le_max_triv_iff_bracket_eq_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L138-L143","name":"LieModule.ideal_oper_maxTrivSubmodule_eq_bot","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.ideal_oper_maxTrivSubmodule_eq_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L135-L135","name":"LieModule.instIsTrivialSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleMaxTrivSubmoduleToBracketAddCommGroupToRingInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","kind":"instance","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.instIsTrivialSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleMaxTrivSubmoduleToBracketAddCommGroupToRingInstLieRingModuleSubtypeMemSubmoduleToSemiringToCommSemiringToAddCommMonoidInstMembershipSetLikeToSubmoduleAddCommGroupToRingZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L131-L132","name":"LieModule.mem_maxTrivSubmodule","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.mem_maxTrivSubmodule","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L122-L127","name":"LieModule.maxTrivSubmodule","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.maxTrivSubmodule","doc":"The largest submodule of a Lie module `M` on which the Lie algebra `L` acts trivially. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L116-L118","name":"LieModule.mem_ker","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.mem_ker","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L111-L112","name":"LieModule.ker","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.ker","doc":"The kernel of the action of a Lie algebra `L` on a Lie module `M` as a Lie ideal in `L`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L93-L95","name":"LieAlgebra.isLieAbelian_bot","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieAlgebra.isLieAbelian_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L86-L90","name":"commutative_ring_iff_abelian_lie_ring","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#commutative_ring_iff_abelian_lie_ring","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L80-L83","name":"lie_abelian_iff_equiv_lie_abelian","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#lie_abelian_iff_equiv_lie_abelian","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L71-L77","name":"Function.Surjective.isLieAbelian","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#Function.Surjective.isLieAbelian","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L61-L68","name":"Function.Injective.isLieAbelian","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#Function.Injective.isLieAbelian","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L56-L58","name":"LieIdeal.isLieAbelian_of_trivial","kind":"instance","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieIdeal.isLieAbelian_of_trivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L52-L53","name":"IsLieAbelian","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#IsLieAbelian","doc":"A Lie algebra is Abelian iff it is trivial as a Lie module over itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L46-L48","name":"trivial_lie_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Lie/Abelian.html#trivial_lie_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L42-L42","name":"LieModule.IsTrivial.trivial","kind":"def","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.IsTrivial.trivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L41-L41","name":"LieModule.IsTrivial.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.IsTrivial.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Lie/Abelian.lean#L41-L42","name":"LieModule.IsTrivial","kind":"class","docLink":"./Mathlib/Algebra/Lie/Abelian.html#LieModule.IsTrivial","doc":"A Lie (ring) module is trivial iff all brackets vanish. "}]}