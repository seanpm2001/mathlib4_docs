{"name":"Mathlib.Topology.Homotopy.Equiv","instances":[{"typeNames":["ContinuousMap.HomotopyEquiv","ContinuousMap.HomotopyEquiv"],"name":"ContinuousMap.HomotopyEquiv.instCoeFunHomotopyEquivForAll","className":"CoeFun"},{"typeNames":["ContinuousMap.HomotopyEquiv","Unit","instTopologicalSpacePUnit"],"name":"ContinuousMap.HomotopyEquiv.instInhabitedHomotopyEquivUnitInstTopologicalSpacePUnit","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Homotopy.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L203-L205","name":"Homeomorph.trans_toHomotopyEquiv","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#Homeomorph.trans_toHomotopyEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L198-L199","name":"Homeomorph.symm_toHomotopyEquiv","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#Homeomorph.symm_toHomotopyEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L192-L194","name":"Homeomorph.refl_toHomotopyEquiv","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#Homeomorph.refl_toHomotopyEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L175-L181","name":"ContinuousMap.HomotopyEquiv.piCongrRight","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.piCongrRight","doc":"If `X i` is homotopy equivalent to `Y i` for each `i`, then the space of functions (a.k.a. the\nindexed product) `∀ i, X i` is homotopy equivalent to `∀ i, Y i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L167-L171","name":"ContinuousMap.HomotopyEquiv.prodCongr","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.prodCongr","doc":"If `X` is homotopy equivalent to `Y` and `Z` is homotopy equivalent to `Z'`, then `X × Z` is\nhomotopy equivalent to `Z × Z'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L162-L162","name":"ContinuousMap.HomotopyEquiv.symm_trans","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.symm_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L149-L157","name":"ContinuousMap.HomotopyEquiv.trans","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.trans","doc":"If `X` is homotopy equivalent to `Y`, and `Y` is homotopy equivalent to `Z`, then `X` is homotopy\nequivalent to `Z`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L148-L148","name":"ContinuousMap.HomotopyEquiv.trans_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.trans_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L148-L148","name":"ContinuousMap.HomotopyEquiv.trans_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.trans_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L141-L142","name":"ContinuousMap.HomotopyEquiv.instInhabitedHomotopyEquivUnitInstTopologicalSpacePUnit","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.instInhabitedHomotopyEquivUnitInstTopologicalSpacePUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L135-L136","name":"ContinuousMap.HomotopyEquiv.refl","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.refl","doc":"Any topological space is homotopy equivalent to itself.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L134-L134","name":"ContinuousMap.HomotopyEquiv.refl_symm_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.refl_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L134-L134","name":"ContinuousMap.HomotopyEquiv.refl_apply","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.refl_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L125-L126","name":"ContinuousMap.HomotopyEquiv.Simps.symm_apply","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.Simps.symm_apply","doc":"See Note [custom simps projection]. We need to specify this projection explicitly in this case,\nbecause it is a composition of multiple projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L119-L120","name":"ContinuousMap.HomotopyEquiv.Simps.apply","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.Simps.apply","doc":"See Note [custom simps projection]. We need to specify this projection explicitly in this case,\nbecause it is a composition of multiple projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L113-L114","name":"ContinuousMap.HomotopyEquiv.coe_invFun","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.coe_invFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L105-L109","name":"ContinuousMap.HomotopyEquiv.symm","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.symm","doc":"If `X` is homotopy equivalent to `Y`, then `Y` is homotopy equivalent to `X`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L93-L94","name":"Homeomorph.coe_toHomotopyEquiv","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#Homeomorph.coe_toHomotopyEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L85-L89","name":"Homeomorph.toHomotopyEquiv","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#Homeomorph.toHomotopyEquiv","doc":"Any homeomorphism is a homotopy equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L71-L72","name":"ContinuousMap.HomotopyEquiv.continuous","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L66-L67","name":"ContinuousMap.HomotopyEquiv.toFun_eq_coe","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.toFun_eq_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L63-L63","name":"ContinuousMap.HomotopyEquiv.instCoeFunHomotopyEquivForAll","kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.instCoeFunHomotopyEquivForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L61-L61","name":"ContinuousMap.HomotopyEquiv.toFun'","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.toFun'","doc":"Coercion of a `HomotopyEquiv` to function. While the Lean 4 way is to unfold coercions, this\nauxiliary definition will make porting of Lean 3 code easier.\n\nPorting note: TODO: drop this definition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L53-L53","name":"ContinuousMap.«term_≃ₕ_»","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.«term_≃ₕ_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L49-L49","name":"ContinuousMap.HomotopyEquiv.right_inv","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.right_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L48-L48","name":"ContinuousMap.HomotopyEquiv.left_inv","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.left_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L47-L47","name":"ContinuousMap.HomotopyEquiv.invFun","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.invFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L46-L46","name":"ContinuousMap.HomotopyEquiv.toFun","kind":"def","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L45-L45","name":"ContinuousMap.HomotopyEquiv.mk","kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L45-L49","name":"ContinuousMap.HomotopyEquiv","kind":"structure","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv","doc":"A homotopy equivalence between topological spaces `X` and `Y` are a pair of functions\n`toFun : C(X, Y)` and `invFun : C(Y, X)` such that `toFun.comp invFun` and `invFun.comp toFun`\nare both homotopic to corresponding identity maps.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L44-L44","name":"ContinuousMap.HomotopyEquiv.ext","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Homotopy/Equiv.lean#L44-L44","name":"ContinuousMap.HomotopyEquiv.ext_iff","kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv.ext_iff","doc":""}]}