{"name":"Mathlib.Tactic.CategoryTheory.Slice","instances":[],"imports":["Init","Mathlib.CategoryTheory.Category.Basic","Mathlib.Tactic.Conv"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/Slice.lean#L70-L74","name":"sliceRHS","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/Slice.html#sliceRHS","doc":"`slice_rhs a b => tac` zooms to the right hand side, uses associativity for categorical\ncomposition as needed, zooms in on the `a`-th through `b`-th morphisms, and invokes `tac`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/Slice.lean#L61-L65","name":"sliceLHS","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/Slice.html#sliceLHS","doc":"`slice_lhs a b => tac` zooms to the left hand side, uses associativity for categorical\ncomposition as needed, zooms in on the `a`-th through `b`-th morphisms, and invokes `tac`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/Slice.lean#L58-L59","name":"convSlice___","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/Slice.html#convSlice___","doc":"`slice` is implemented by `evalSlice`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/Slice.lean#L45-L56","name":"evalSlice","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/Slice.html#evalSlice","doc":"`evalSlice`\n- rewrites the target expression using `Category.assoc`.\n- uses `congr` to split off the first `a-1` terms and rotates to `a`-th (last) term\n- counts the number `k` of rewrites as it uses `←Category.assoc` to bring the target to\n  left associated form; from the first step this is the total number of remaining terms from `C`\n- it now splits off `b-a` terms from target using `congr` leaving the desired subterm\n- finally, it rewrites it once more using `Category.assoc` to bring it to right-associated\n  normal form\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/CategoryTheory/Slice.lean#L28-L33","name":"slice","kind":"def","docLink":"./Mathlib/Tactic/CategoryTheory/Slice.html#slice","doc":"`slice` is a conv tactic; if the current focus is a composition of several morphisms,\n`slice a b` reassociates as needed, and zooms in on the `a`-th through `b`-th morphisms.\nThus if the current focus is `(a ≫ b) ≫ ((c ≫ d) ≫ e)`, then `slice 2 3` zooms to `b ≫ c`.\n "}]}