{"name":"Mathlib.Tactic.Monotonicity.Basic","instances":[],"imports":["Init","Mathlib.Tactic.Monotonicity.Attr","Mathlib.Tactic.SolveByElim"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Monotonicity/Basic.lean#L32-L43","name":"Mathlib.Tactic.Monotonicity.mono","kind":"def","docLink":"./Mathlib/Tactic/Monotonicity/Basic.html#Mathlib.Tactic.Monotonicity.mono","doc":"`mono` applies monotonicity rules and local hypotheses repetitively.  For example,\n```lean\nexample (x y z k : ℤ)\n    (h : 3 ≤ (4 : ℤ))\n    (h' : z ≤ y) :\n    (k + 3 + x) - y ≤ (k + 4 + x) - z := by\n  mono\n```\n"}]}