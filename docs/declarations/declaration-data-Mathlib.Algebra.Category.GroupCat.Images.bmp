{"name":"Mathlib.Algebra.Category.GroupCat.Images","instances":[{"typeNames":["AddCommGroupCat","instAddCommGroupCatLargeCategory","AddCommGroupCat.image","AddCommGroupCat.image.ι"],"name":"AddCommGroupCat.instMonoAddCommGroupCatInstAddCommGroupCatLargeCategoryImageι","className":"CategoryTheory.Mono"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.Abelian","Mathlib.CategoryTheory.Limits.Shapes.Images"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L116-L118","name":"AddCommGroupCat.imageIsoRange","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.imageIsoRange","doc":"The categorical image of a morphism in `AddCommGroupCat`\nagrees with the usual group-theoretical range.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L108-L110","name":"AddCommGroupCat.isImage","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.isImage","doc":"the factorisation of any morphism in `AddCommGroupCat` through a mono has\nthe universal property of the image. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L100-L103","name":"AddCommGroupCat.monoFactorisation","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.monoFactorisation","doc":"the factorisation of any morphism in `AddCommGroupCat` through a mono. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L90-L94","name":"AddCommGroupCat.image.lift_fac","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.image.lift_fac","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L69-L87","name":"AddCommGroupCat.image.lift","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.image.lift","doc":"the universal property for the image factorisation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L59-L61","name":"AddCommGroupCat.image.fac","kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.image.fac","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L55-L56","name":"AddCommGroupCat.factorThruImage","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.factorThruImage","doc":"the corestriction map to the image "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L51-L52","name":"AddCommGroupCat.instMonoAddCommGroupCatInstAddCommGroupCatLargeCategoryImageι","kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.instMonoAddCommGroupCatInstAddCommGroupCatLargeCategoryImageι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L47-L48","name":"AddCommGroupCat.image.ι","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.image.ι","doc":"the inclusion of `image f` into the target "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Category/GroupCat/Images.lean#L42-L43","name":"AddCommGroupCat.image","kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Images.html#AddCommGroupCat.image","doc":"the image of a morphism in `AddCommGroupCat` is just the bundling of `AddMonoidHom.range f` "}]}