{"name":"Std.Data.AssocList","instances":[{"typeNames":["Std.AssocList"],"name":"Std.instInhabitedAssocList","className":"Inhabited"},{"typeNames":["Std.AssocList"],"name":"Std.AssocList.instEmptyCollectionAssocList","className":"EmptyCollection"},{"typeNames":["Std.AssocList","Prod"],"name":"Std.AssocList.instForInAssocListProd","className":"ForIn"},{"typeNames":["Std.AssocList","Std.AssocList"],"name":"Std.AssocList.instToStreamAssocList","className":"ToStream"},{"typeNames":["Std.AssocList","Prod"],"name":"Std.AssocList.instStreamAssocListProd","className":"Stream"}],"imports":["Init","Std.Data.List.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L237-L238","name":"Std.AssocList.toList_toAssocList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.toList_toAssocList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L234-L235","name":"List.toAssocList_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#List.toAssocList_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L230-L232","name":"List.toAssocList","kind":"def","docLink":"./Std/Data/AssocList.html#List.toAssocList","doc":"Converts a list into an `AssocList`. This is the inverse function to `AssocList.toList`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L227-L227","name":"Std.AssocList.instStreamAssocListProd","kind":"instance","docLink":"./Std/Data/AssocList.html#Std.AssocList.instStreamAssocListProd","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L226-L226","name":"Std.AssocList.instToStreamAssocList","kind":"instance","docLink":"./Std/Data/AssocList.html#Std.AssocList.instToStreamAssocList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L222-L224","name":"Std.AssocList.pop?","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.pop?","doc":"Split the list into head and tail, if possible. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L215-L219","name":"Std.AssocList.forIn_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.forIn_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L212-L213","name":"Std.AssocList.instForInAssocListProd","kind":"instance","docLink":"./Std/Data/AssocList.html#Std.AssocList.instForInAssocListProd","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L203-L210","name":"Std.AssocList.forIn","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.forIn","doc":"The implementation of `ForIn`, which enables `for (k, v) in aList do ...` notation. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L195-L200","name":"Std.AssocList.modify_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.modify_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L189-L193","name":"Std.AssocList.modify","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.modify","doc":"`O(n)`. Replace the first entry `a', b` in the list\nwith key equal to `a` to have key `a` and value `f a' b`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L182-L183","name":"Std.AssocList.erase_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.erase_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L179-L180","name":"Std.AssocList.erase","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.erase","doc":"`O(n)`. Remove the first entry in the list with key equal to `a`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L174-L176","name":"Std.AssocList.eraseP_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.eraseP_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L170-L172","name":"Std.AssocList.eraseP","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.eraseP","doc":"`O(n)`. Remove the first entry in the list with key equal to `a`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L164-L167","name":"Std.AssocList.replace_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.replace_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L158-L162","name":"Std.AssocList.replace","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.replace","doc":"`O(n)`. Replace the first entry in the list\nwith key equal to `a` to have key `a` and value `b`.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L150-L152","name":"Std.AssocList.contains_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.contains_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L148-L148","name":"Std.AssocList.contains","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.contains","doc":"`O(n)`. Returns true if there is an element in the list whose key is equal to `a`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L145-L145","name":"Std.AssocList.All","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.All","doc":"Returns true if every entry in the list satisfies `p`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L141-L142","name":"Std.AssocList.all_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.all_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L137-L139","name":"Std.AssocList.all","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.all","doc":"`O(n)`. Returns true if every entry in the list satisfies `p`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L133-L134","name":"Std.AssocList.any_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.any_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L129-L131","name":"Std.AssocList.any","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.any","doc":"`O(n)`. Returns true if any entry in the list satisfies `p`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L125-L126","name":"Std.AssocList.find?_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.find?_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L121-L123","name":"Std.AssocList.find?_eq_findEntry?","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.find?_eq_findEntry?","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L115-L119","name":"Std.AssocList.find?","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.find?","doc":"`O(n)`. Returns the first value in the list whose key is equal to `a`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L111-L112","name":"Std.AssocList.findEntry?_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.findEntry?_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L108-L109","name":"Std.AssocList.findEntry?","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.findEntry?","doc":"`O(n)`. Returns the first entry in the list whose key is equal to `a`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L103-L105","name":"Std.AssocList.findEntryP?_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.findEntryP?_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L99-L101","name":"Std.AssocList.findEntryP?","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.findEntryP?","doc":"`O(n)`. Returns the first entry in the list whose entry satisfies `p`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L94-L96","name":"Std.AssocList.mapVal_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapVal_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L90-L92","name":"Std.AssocList.mapVal","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapVal","doc":"`O(n)`. Map a function `f` over the values of the list. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L85-L87","name":"Std.AssocList.mapKey_toList","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapKey_toList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L81-L83","name":"Std.AssocList.mapKey","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.mapKey","doc":"`O(n)`. Map a function `f` over the keys of the list. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L76-L78","name":"Std.AssocList.forM_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.forM_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L72-L74","name":"Std.AssocList.forM","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.forM","doc":"`O(n)`. Run monadic function `f` on all elements in the list, from head to tail. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L67-L69","name":"Std.AssocList.toList_eq_toListTR","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.toList_eq_toListTR","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L64-L65","name":"Std.AssocList.toListTR","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.toListTR","doc":"Optimized version of `toList`. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L59-L61","name":"Std.AssocList.foldl_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldl_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L56-L57","name":"Std.AssocList.foldl","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldl","doc":"`O(n)`. Fold a function over the list, from head to tail. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L51-L53","name":"Std.AssocList.foldlM_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldlM_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L47-L49","name":"Std.AssocList.foldlM","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.foldlM","doc":"`O(n)`. Fold a monadic function over the list, from head to tail. "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L43-L44","name":"Std.AssocList.isEmpty_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.isEmpty_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L39-L41","name":"Std.AssocList.isEmpty","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.isEmpty","doc":"`O(1)`. Is the list empty? "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L36-L36","name":"Std.AssocList.empty_eq","kind":"theorem","docLink":"./Std/Data/AssocList.html#Std.AssocList.empty_eq","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L34-L34","name":"Std.AssocList.instEmptyCollectionAssocList","kind":"instance","docLink":"./Std/Data/AssocList.html#Std.AssocList.instEmptyCollectionAssocList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L30-L32","name":"Std.AssocList.toList","kind":"def","docLink":"./Std/Data/AssocList.html#Std.AssocList.toList","doc":"`O(n)`. Convert an `AssocList α β` into the equivalent `List (α × β)`.\nThis is used to give specifications for all the `AssocList` functions\nin terms of corresponding list functions.\n"},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L21-L21","name":"Std.instInhabitedAssocList","kind":"instance","docLink":"./Std/Data/AssocList.html#Std.instInhabitedAssocList","doc":""},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L19-L20","name":"Std.AssocList.cons","kind":"ctor","docLink":"./Std/Data/AssocList.html#Std.AssocList.cons","doc":"Add a `key, value` pair to the list "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L17-L18","name":"Std.AssocList.nil","kind":"ctor","docLink":"./Std/Data/AssocList.html#Std.AssocList.nil","doc":"An empty list "},{"sourceLink":"https://github.com/leanprover/std4/blob/e68aa8f5fe47aad78987df45f99094afbcb5e936/Std/Data/AssocList.lean#L16-L21","name":"Std.AssocList","kind":"inductive","docLink":"./Std/Data/AssocList.html#Std.AssocList","doc":"`AssocList α β` is \"the same as\" `List (α × β)`, but flattening the structure\nleads to one fewer pointer indirection (in the current code generator).\nIt is mainly intended as a component of `HashMap`, but it can also be used as a plain\nkey-value map.\n"}]}