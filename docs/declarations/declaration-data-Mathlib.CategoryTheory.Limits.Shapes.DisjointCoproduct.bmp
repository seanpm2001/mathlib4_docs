{"name":"Mathlib.CategoryTheory.Limits.Shapes.DisjointCoproduct","instances":[{"typeNames":["CategoryTheory.Limits.coprod","CategoryTheory.Limits.coprod.inl"],"name":"CategoryTheory.Limits.instMonoCoprodInl","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Limits.coprod","CategoryTheory.Limits.coprod.inr"],"name":"CategoryTheory.Limits.instMonoCoprodInr","className":"CategoryTheory.Mono"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.BinaryProducts","Mathlib.CategoryTheory.Limits.Shapes.Pullbacks"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L128-L135","name":"CategoryTheory.Limits.initialMonoClass_of_disjoint_coproducts","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.initialMonoClass_of_disjoint_coproducts","doc":"If `C` has disjoint coproducts, any morphism out of initial is mono. Note it isn't true in\ngeneral that `C` has strict initial objects, for instance consider the category of types and\npartial functions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L120-L120","name":"CategoryTheory.Limits.CoproductsDisjoint.CoproductDisjoint","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductsDisjoint.CoproductDisjoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L119-L119","name":"CategoryTheory.Limits.CoproductsDisjoint.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductsDisjoint.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L119-L120","name":"CategoryTheory.Limits.CoproductsDisjoint","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductsDisjoint","doc":"`C` has disjoint coproducts if every coproduct is disjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L114-L116","name":"CategoryTheory.Limits.instMonoCoprodInr","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.instMonoCoprodInr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L110-L112","name":"CategoryTheory.Limits.instMonoCoprodInl","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.instMonoCoprodInl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L104-L107","name":"CategoryTheory.Limits.isInitialOfPullbackOfCoproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.isInitialOfPullbackOfCoproduct","doc":"If the coproduct of `X₁` and `X₂` is disjoint, the pullback of `X₁ ⟶ X₁ ⨿ X₂` and `X₂ ⟶ X₁ ⨿ X₂`\nis initial.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L95-L98","name":"CategoryTheory.Limits.isInitialOfPullbackOfIsCoproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.isInitialOfPullbackOfIsCoproduct","doc":"If the coproduct of `X₁` and `X₂` is disjoint, then provided `X₁ ⟶ X ← X₂` is a coproduct the\npullback is an initial object:\n\n        X₁\n        ↓\nX₂ ⟶  X\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L81-L85","name":"CategoryTheory.Limits.isInitialOfIsPullbackOfCoproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.isInitialOfIsPullbackOfCoproduct","doc":"If the coproduct of `X₁` and `X₂` is disjoint, then given any pullback square\n\nZ  ⟶  X₁\n↓       ↓\nX₂ ⟶  X₁ ⨿ X₂\n\n`Z` is initial.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L67-L70","name":"CategoryTheory.Limits.isInitialOfIsPullbackOfIsCoproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.isInitialOfIsPullbackOfIsCoproduct","doc":"If the coproduct of `X₁` and `X₂` is disjoint, then given any pullback square\n\nZ  ⟶  X₁\n↓      ↓\nX₂ ⟶  X\n\nwhere `X₁ ⟶ X ← X₂` is a coproduct, then `Z` is initial.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L56-L56","name":"CategoryTheory.Limits.CoproductDisjoint.mono_inr","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductDisjoint.mono_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L55-L55","name":"CategoryTheory.Limits.CoproductDisjoint.mono_inl","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductDisjoint.mono_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L51-L51","name":"CategoryTheory.Limits.CoproductDisjoint.isInitialOfIsPullbackOfIsCoproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductDisjoint.isInitialOfIsPullbackOfIsCoproduct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L50-L50","name":"CategoryTheory.Limits.CoproductDisjoint.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductDisjoint.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.lean#L50-L56","name":"CategoryTheory.Limits.CoproductDisjoint","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/DisjointCoproduct.html#CategoryTheory.Limits.CoproductDisjoint","doc":"Given any pullback diagram of the form\n\nZ  ⟶  X₁\n↓      ↓\nX₂ ⟶  X\n\nwhere `X₁ ⟶ X ← X₂` is a coproduct diagram, then `Z` is initial, and both `X₁ ⟶ X` and `X₂ ⟶ X`\nare mono.\n"}]}