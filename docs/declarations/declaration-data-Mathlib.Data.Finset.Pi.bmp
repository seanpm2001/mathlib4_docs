{"name":"Mathlib.Data.Finset.Pi","instances":[],"imports":["Init","Mathlib.Data.Finset.Image","Mathlib.Data.Multiset.Pi"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L134-L138","name":"Finset.pi_disjoint_of_disjoint","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_disjoint_of_disjoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L130-L131","name":"Finset.pi_subset","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L125-L127","name":"Finset.pi_const_singleton","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_const_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L114-L122","name":"Finset.pi_singletons","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_singletons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L95-L111","name":"Finset.pi_insert","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_insert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L90-L91","name":"Finset.pi_empty","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L77-L86","name":"Finset.Pi.cons_injective","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.Pi.cons_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L72-L74","name":"Finset.Pi.cons_ne","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.Pi.cons_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L67-L69","name":"Finset.Pi.cons_same","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.Pi.cons_same","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L61-L63","name":"Finset.Pi.cons","kind":"def","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.Pi.cons","doc":"Given a function `f` defined on a finset `s`, define a new function on the finset `s ∪ {a}`,\nequal to `f` on `s` and sending `a` to a given value `b`. This function is denoted\n`s.Pi.cons a b f`. If `a` already belongs to `s`, the new function takes the value `b` at `a`\nanyway. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L52-L54","name":"Finset.mem_pi","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.mem_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L47-L48","name":"Finset.pi_val","kind":"theorem","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L42-L43","name":"Finset.pi","kind":"def","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.pi","doc":"Given a finset `s` of `α` and for all `a : α` a finset `t a` of `δ a`, then one can define the\nfinset `s.pi t` of all functions defined on elements of `s` taking values in `t a` for `a ∈ s`.\nNote that the elements of `s.pi t` are only partially defined, on `s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Finset/Pi.lean#L32-L33","name":"Finset.Pi.empty","kind":"def","docLink":"./Mathlib/Data/Finset/Pi.html#Finset.Pi.empty","doc":"The empty dependent product function, defined on the empty set. The assumption `a ∈ ∅` is never\nsatisfied. "}]}