{"name":"Mathlib.Data.Polynomial.Inductions","instances":[],"imports":["Init","Mathlib.Algebra.MonoidAlgebra.Division","Mathlib.Data.Nat.Interval","Mathlib.Data.Polynomial.Degree.Definitions","Mathlib.Data.Polynomial.Induction"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L160-L181","name":"Polynomial.natDegree_ne_zero_induction_on","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.natDegree_ne_zero_induction_on","doc":"A property holds for all polynomials of non-zero `natDegree` with coefficients in a\nsemiring `R` if it holds for\n* `p + a`, with `a ∈ R`, `p ∈ R[X]`,\n* `p + q`, with `p, q ∈ R[X]`,\n* monomials with nonzero coefficient and non-zero exponent,\nwith appropriate restrictions on each term.\nNote that multiplication is \"hidden\" in the assumption on monomials, so there is no explicit\nmultiplication in the statement.\nSee `degree_pos_induction_on` for a similar statement involving more explicit multiplications.\n "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L132-L146","name":"Polynomial.degree_pos_induction_on","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.degree_pos_induction_on","doc":"A property holds for all polynomials of positive `degree` with coefficients in a semiring `R`\nif it holds for\n* `a * X`, with `a ∈ R`,\n* `p * X`, with `p ∈ R[X]`,\n* `p + a`, with `a ∈ R`, `p ∈ R[X]`,\nwith appropriate restrictions on each term.\n\nSee `natDegree_ne_zero_induction_on` for a similar statement involving no explicit multiplication.\n "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L103-L119","name":"Polynomial.recOnHorner","kind":"def","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.recOnHorner","doc":"An induction principle for polynomials, valued in Sort _ instead of Prop. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L73-L97","name":"Polynomial.degree_divX_lt","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.degree_divX_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L68-L69","name":"Polynomial.divX_add","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.divX_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L63-L64","name":"Polynomial.divX_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.divX_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L58-L59","name":"Polynomial.divX_C","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.divX_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L52-L53","name":"Polynomial.divX_mul_X_add","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.divX_mul_X_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L47-L48","name":"Polynomial.coeff_divX","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.coeff_divX","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Inductions.lean#L41-L42","name":"Polynomial.divX","kind":"def","docLink":"./Mathlib/Data/Polynomial/Inductions.html#Polynomial.divX","doc":"`divX p` returns a polynomial `q` such that `q * X + C (p.coeff 0) = p`.\nIt can be used in a semiring where the usual division algorithm is not possible "}]}