{"name":"Mathlib.Data.Fintype.Card","instances":[{"typeNames":[],"name":"Finite.of_fintype","className":"Finite"},{"typeNames":["Nat","LinearOrderedCommMonoidWithZero.toZero","Nat","Nat.linearOrderedCommMonoidWithZero","Fintype.card"],"name":"Fintype.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroCard","className":"NeZero"},{"typeNames":["LT.lt","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finite.LinearOrder.isWellOrder_lt","className":"IsWellOrder"},{"typeNames":["GT.gt","Preorder.toLT","PartialOrder.toPreorder","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice"],"name":"Finite.LinearOrder.isWellOrder_gt","className":"IsWellOrder"},{"typeNames":[],"name":"Infinite.instNontrivial","className":"Nontrivial"},{"typeNames":["Nat"],"name":"instInfiniteNat","className":"Infinite"},{"typeNames":["Int"],"name":"Int.infinite","className":"Infinite"},{"typeNames":["Multiset"],"name":"instInfiniteMultiset","className":"Infinite"},{"typeNames":["List"],"name":"instInfiniteList","className":"Infinite"},{"typeNames":["String"],"name":"String.infinite","className":"Infinite"},{"typeNames":["Set"],"name":"Infinite.set","className":"Infinite"},{"typeNames":["Finset"],"name":"instInfiniteFinset","className":"Infinite"},{"typeNames":["Option"],"name":"instInfiniteOption","className":"Infinite"},{"typeNames":["Sum"],"name":"Sum.infinite_of_left","className":"Infinite"},{"typeNames":["Sum"],"name":"Sum.infinite_of_right","className":"Infinite"},{"typeNames":["Prod"],"name":"Prod.infinite_of_right","className":"Infinite"},{"typeNames":["Prod"],"name":"Prod.infinite_of_left","className":"Infinite"},{"typeNames":["Function.Embedding"],"name":"Function.Embedding.is_empty","className":"IsEmpty"}],"imports":["Init","Mathlib.Data.Fintype.Basic","Mathlib.Data.Finset.Card","Mathlib.Data.List.NodupEquivFin","Mathlib.Tactic.Positivity"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1202-L1215","name":"Fintype.induction_subsingleton_or_nontrivial","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.induction_subsingleton_or_nontrivial","doc":"A custom induction principle for fintypes. The base case is a subsingleton type,\nand the induction step is for non-trivial types, and one can assume the hypothesis for\nsmaller types (via `Fintype.card`).\n\nThe major premise is `Fintype α`, so to use this with the `induction` tactic you have to give a name\nto that instance and use that name.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1187-L1189","name":"truncOfCardPos","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#truncOfCardPos","doc":"A `Fintype` with positive cardinality constructively contains an element.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1179-L1180","name":"not_surjective_finite_infinite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#not_surjective_finite_infinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1167-L1176","name":"Finite.exists_infinite_fiber","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.exists_infinite_fiber","doc":"The strong pigeonhole principle for infinitely many pigeons in\nfinitely many pigeonholes.  If there are infinitely many pigeons in\nfinitely many pigeonholes, then there is a pigeonhole with infinitely\nmany pigeons.\n\nSee also: `Finite.exists_ne_map_eq_of_infinite`\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1156-L1157","name":"Function.Embedding.is_empty","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.is_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1151-L1153","name":"Finite.exists_ne_map_eq_of_infinite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.exists_ne_map_eq_of_infinite","doc":"The pigeonhole principle for infinitely many pigeons in finitely many pigeonholes. If there are\ninfinitely many pigeons in finitely many pigeonholes, then there are at least two pigeons in the\nsame pigeonhole.\n\nSee also: `Fintype.exists_ne_map_eq_of_card_lt`, `Finite.exists_infinite_fiber`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1141-L1142","name":"not_injective_infinite_finite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#not_injective_infinite_finite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1131-L1138","name":"fintypeOfFinsetCardLe","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#fintypeOfFinsetCardLe","doc":"If every finset in a type has bounded cardinality, that type is finite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1116-L1125","name":"Infinite.exists_superset_card_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.exists_superset_card_eq","doc":"See `Infinite.exists_subset_card_eq` for a version that provides an arbitrary\n`s : Finset α` for any cardinality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1110-L1111","name":"Infinite.exists_subset_card_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.exists_subset_card_eq","doc":"See `Infinite.exists_superset_card_eq` for a version that, for a `s : Finset α`,\nprovides a superset `t : Finset α`, `s ⊆ t` such that `t.card` is fixed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1104-L1105","name":"Infinite.natEmbedding","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.natEmbedding","doc":"Embedding of `ℕ` into an infinite type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1066-L1067","name":"Prod.infinite_of_left","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Prod.infinite_of_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1062-L1063","name":"Prod.infinite_of_right","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Prod.infinite_of_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1058-L1059","name":"Sum.infinite_of_right","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Sum.infinite_of_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1054-L1055","name":"Sum.infinite_of_left","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Sum.infinite_of_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1051-L1052","name":"instInfiniteOption","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#instInfiniteOption","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1048-L1049","name":"instInfiniteFinset","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#instInfiniteFinset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1044-L1045","name":"Infinite.set","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.set","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1038-L1042","name":"String.infinite","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#String.infinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1035-L1036","name":"instInfiniteList","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#instInfiniteList","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1031-L1033","name":"instInfiniteMultiset","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#instInfiniteMultiset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1028-L1029","name":"Int.infinite","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Int.infinite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1023-L1026","name":"instInfiniteNat","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#instInfiniteNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1017-L1018","name":"Infinite.of_surjective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1013-L1014","name":"Infinite.of_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1010-L1010","name":"Infinite.nonempty","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1005-L1008","name":"Infinite.instNontrivial","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.instNontrivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L1000-L1001","name":"Infinite.exists_not_mem_finset","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.exists_not_mem_finset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L995-L997","name":"Infinite.of_surjective_from_set","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.of_surjective_from_set","doc":"If `s : Set α` is a proper subset of `α` and `f : s → α` is surjective, then `α` is infinite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L981-L991","name":"Infinite.of_injective_to_set","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.of_injective_to_set","doc":"If `s : Set α` is a proper subset of `α` and `f : α → s` is injective, then `α` is infinite. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L976-L977","name":"Infinite.of_not_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Infinite.of_not_fintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L969-L971","name":"Finset.exists_maximal","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.exists_maximal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L961-L966","name":"Finset.exists_minimal","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.exists_minimal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L955-L956","name":"fintypeOrInfinite","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#fintypeOrInfinite","doc":"Any type is (classically) either a `Fintype`, or `Infinite`.\n\nOne can obtain the relevant typeclasses via `cases fintypeOrInfinite α; resetI`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L943-L944","name":"fintypeOfNotInfinite","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#fintypeOfNotInfinite","doc":"A non-infinite type is a fintype. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L938-L939","name":"is_empty_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#is_empty_fintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L933-L934","name":"Fintype.false","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.false","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L926-L927","name":"Finite.LinearOrder.isWellOrder_gt","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.LinearOrder.isWellOrder_gt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L922-L923","name":"Finite.LinearOrder.isWellOrder_lt","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.LinearOrder.isWellOrder_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L918-L919","name":"Finite.Preorder.wellFounded_gt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.Preorder.wellFounded_gt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L914-L915","name":"Finite.Preorder.wellFounded_lt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.Preorder.wellFounded_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L897-L911","name":"Finite.wellFounded_of_trans_of_irrefl","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.wellFounded_of_trans_of_irrefl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L885-L890","name":"univ_eq_singleton_of_card_one","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#univ_eq_singleton_of_card_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L879-L882","name":"Fintype.card_quotient_lt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_quotient_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L874-L876","name":"Fintype.card_quotient_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_quotient_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L866-L871","name":"Fintype.card_compl_eq_card_compl","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_compl_eq_card_compl","doc":"If two subtypes of a fintype have equal cardinality, so do their complements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L860-L862","name":"Fintype.card_subtype_mono","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L849-L857","name":"Fintype.card_subtype_compl","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L842-L845","name":"Fintype.card_subtype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L836-L839","name":"Fintype.card_subtype_lt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L831-L833","name":"Fintype.card_subtype_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L822-L826","name":"Fintype.card_lt_of_surjective_not_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_lt_of_surjective_not_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L816-L817","name":"Finset.univ_map_embedding","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.univ_map_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L806-L810","name":"Function.Embedding.exists_of_card_le_finset","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.exists_of_card_le_finset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L801-L803","name":"Function.Embedding.nonempty_iff_card_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.nonempty_iff_card_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L797-L798","name":"Function.Embedding.nonempty_of_card_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.nonempty_of_card_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L790-L794","name":"Function.Embedding.truncOfCardLe","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.truncOfCardLe","doc":"A constructive embedding of a fintype `α` in another fintype `β` when `card α ≤ card β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L782-L786","name":"Function.Embedding.is_empty_of_card_lt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.is_empty_of_card_lt","doc":"If `‖β‖ < ‖α‖` there are no embeddings `α ↪ β`.\nThis is a formulation of the pigeonhole principle.\n\nNote this cannot be an instance as it needs `h`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L771-L774","name":"Function.Embedding.equiv_of_fintype_self_embedding_to_embedding","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.equiv_of_fintype_self_embedding_to_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L766-L767","name":"Function.Embedding.equivOfFintypeSelfEmbedding","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Embedding.equivOfFintypeSelfEmbedding","doc":"An embedding from a `Fintype` to itself can be promoted to an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L758-L760","name":"set_fintype_card_eq_univ_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#set_fintype_card_eq_univ_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L753-L755","name":"set_fintype_card_le_univ","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#set_fintype_card_le_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L749-L750","name":"Fintype.card_Prop","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L744-L745","name":"Finset.equivOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.equivOfCardEq","doc":"Noncomputable equivalence between two finsets `s` and `t` as fintypes when there is a proof\nthat `s.card = t.card`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L738-L739","name":"Finset.equivFinOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.equivFinOfCardEq","doc":"Noncomputable equivalence between a finset `s` as a fintype and `Fin n`, when there is a\nproof that `s.card = n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L732-L733","name":"Finset.equivFin","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.equivFin","doc":"Noncomputable equivalence between a finset `s` coerced to a type and `Fin s.card`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L727-L728","name":"Fintype.card_coe","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L714-L719","name":"Equiv.ofRightInverseOfCardLe","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofRightInverseOfCardLe","doc":"Construct an equivalence from functions that are inverse to each other. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L713-L713","name":"Equiv.ofRightInverseOfCardLe_symm_apply","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofRightInverseOfCardLe_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L713-L713","name":"Equiv.ofRightInverseOfCardLe_apply","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofRightInverseOfCardLe_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L702-L707","name":"Equiv.ofLeftInverseOfCardLe","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofLeftInverseOfCardLe","doc":"Construct an equivalence from functions that are inverse to each other. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L701-L701","name":"Equiv.ofLeftInverseOfCardLe_apply","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofLeftInverseOfCardLe_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L701-L701","name":"Equiv.ofLeftInverseOfCardLe_symm_apply","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Equiv.ofLeftInverseOfCardLe_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L687-L689","name":"Function.RightInverse.leftInverse_of_card_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.RightInverse.leftInverse_of_card_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L678-L684","name":"Function.LeftInverse.rightInverse_of_card_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.LeftInverse.rightInverse_of_card_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L672-L675","name":"Fintype.bijective_iff_surjective_and_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.bijective_iff_surjective_and_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L666-L669","name":"Fintype.bijective_iff_injective_and_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.bijective_iff_injective_and_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L655-L656","name":"Function.Injective.surjective_of_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Injective.surjective_of_fintype","doc":"**Alias** of the forward direction of `Finite.injective_iff_surjective_of_equiv`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L655-L656","name":"Function.Surjective.injective_of_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Surjective.injective_of_fintype","doc":"**Alias** of the reverse direction of `Finite.injective_iff_surjective_of_equiv`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L652-L652","name":"Function.Surjective.bijective_of_finite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Surjective.bijective_of_finite","doc":"**Alias** of the forward direction of `Finite.surjective_iff_bijective`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L649-L649","name":"Function.Injective.bijective_of_finite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Function.Injective.bijective_of_finite","doc":"**Alias** of the forward direction of `Finite.injective_iff_bijective`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L641-L646","name":"Finite.injective_iff_surjective_of_equiv","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.injective_iff_surjective_of_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L637-L638","name":"Finite.surjective_iff_bijective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.surjective_iff_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L633-L634","name":"Finite.injective_iff_bijective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.injective_iff_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L626-L630","name":"Finite.injective_iff_surjective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.injective_iff_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L615-L624","name":"Finite.surjective_of_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.surjective_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L604-L605","name":"Fintype.card_of_bijective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_of_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L600-L601","name":"Fintype.two_lt_card_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.two_lt_card_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L596-L597","name":"Fintype.one_lt_card_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.one_lt_card_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L592-L593","name":"Fintype.one_lt_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.one_lt_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L588-L589","name":"Fintype.card_eq_one_of_forall_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq_one_of_forall_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L583-L585","name":"Fintype.exists_pair_of_one_lt_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.exists_pair_of_one_lt_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L578-L580","name":"Fintype.exists_ne_of_one_lt_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.exists_ne_of_one_lt_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L571-L575","name":"Fintype.one_lt_card_iff_nontrivial","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.one_lt_card_iff_nontrivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L567-L568","name":"Fintype.card_le_one_iff_subsingleton","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_le_one_iff_subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L552-L564","name":"Fintype.card_le_one_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_le_one_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L550-L550","name":"Fintype.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroCard","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroCard","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L546-L547","name":"Fintype.card_ne_zero","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L542-L543","name":"Fintype.card_pos","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L538-L539","name":"Fintype.card_pos_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_pos_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L534-L535","name":"Fintype.cardEqZeroEquivEquivEmpty","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.cardEqZeroEquivEquivEmpty","doc":"A `Fintype` with cardinality zero is equivalent to `Empty`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L525-L530","name":"Fintype.card_eq_one_iff_nonempty_unique","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq_one_iff_nonempty_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L521-L522","name":"Fintype.card_eq_zero","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L517-L518","name":"Fintype.card_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L508-L514","name":"Fintype.card_eq_one_iff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq_one_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L502-L505","name":"Fintype.exists_ne_map_eq_of_card_lt","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.exists_ne_map_eq_of_card_lt","doc":"The pigeonhole principle for finitely many pigeons and pigeonholes.\nThis is the `Fintype` version of `Finset.exists_ne_map_eq_of_card_lt_of_maps_to`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L494-L496","name":"Fintype.card_range","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L489-L491","name":"Fintype.card_range_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_range_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L485-L486","name":"Fintype.card_le_of_surjective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_le_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L479-L482","name":"Fintype.card_lt_of_injective_not_surjective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_lt_of_injective_not_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L471-L476","name":"Fintype.card_lt_of_injective_of_not_mem","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_lt_of_injective_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L467-L468","name":"Fintype.card_le_of_embedding","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_le_of_embedding","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L463-L464","name":"Fintype.card_le_of_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_le_of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L454-L456","name":"List.Nodup.length_le_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#List.Nodup.length_le_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L447-L451","name":"Finite.exists_univ_list","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.exists_univ_list","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L443-L444","name":"Finite.of_surjective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L436-L440","name":"Finite.of_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.of_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L432-L433","name":"Fintype.ofFinite","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.ofFinite","doc":"Noncomputably get a `Fintype` instance from a `Finite` instance. This is not an\ninstance because we want `Fintype` instances to be useful for computations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L426-L427","name":"nonempty_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#nonempty_fintype","doc":"See also `nonempty_encodable`, `nonempty_denumerable`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L418-L422","name":"finite_iff_nonempty_fintype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#finite_iff_nonempty_fintype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L414-L415","name":"Finite.of_fintype","kind":"instance","docLink":"./Mathlib/Data/Fintype/Card.html#Finite.of_fintype","doc":"For efficiency reasons, we want `Finite` instances to have higher\npriority than ones coming from `Fintype` instances. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L407-L408","name":"Fintype.finite","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.finite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L395-L396","name":"Fintype.sumRight","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.sumRight","doc":"Given that `α ⊕ β` is a fintype, `β` is also a fintype. This is non-computable as it uses\nthat `Sum.inr` is an injection, but there's no clear inverse if `β` is empty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L389-L390","name":"Fintype.sumLeft","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.sumLeft","doc":"Given that `α ⊕ β` is a fintype, `α` is also a fintype. This is non-computable as it uses\nthat `Sum.inl` is an injection, but there's no clear inverse if `α` is empty. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L383-L384","name":"Fintype.card_lex","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_lex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L378-L379","name":"Fintype.card_orderDual","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_orderDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L373-L374","name":"Fintype.card_plift","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_plift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L368-L369","name":"Fintype.card_ulift","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_ulift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L363-L364","name":"Fintype.card_bool","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_bool","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L358-L359","name":"Fintype.card_punit","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_punit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L353-L354","name":"Fintype.card_unit","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_unit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L349-L350","name":"Fintype.card_pempty","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_pempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L344-L345","name":"Fintype.card_empty","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L338-L340","name":"Fintype.card_subtype_eq'","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L332-L334","name":"Fintype.card_subtype_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_subtype_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L327-L328","name":"Fin.equiv_iff_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fin.equiv_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L323-L324","name":"card_finset_fin_le","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#card_finset_fin_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L317-L320","name":"Fin.cast_eq_cast'","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fin.cast_eq_cast'","doc":"A reversed version of `Fin.cast_eq_cast` that is easier to rewrite with. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L312-L313","name":"fin_injective","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#fin_injective","doc":"`Fin` as a map from `ℕ` to `Type` is injective. Note that since this is a statement about\nequality of types, using it should be avoided if possible. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L306-L307","name":"Finset.card_fin","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_fin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L301-L302","name":"Fintype.card_fin","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_fin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L295-L297","name":"Fintype.card_compl_set","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_compl_set","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L290-L292","name":"Finset.card_compl","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L285-L287","name":"Finset.card_univ_diff","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_univ_diff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L280-L282","name":"Finset.card_compl_lt_iff_nonempty","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_compl_lt_iff_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L275-L277","name":"Finset.card_lt_iff_ne_univ","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_lt_iff_ne_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L270-L272","name":"Finset.card_lt_univ_of_not_mem","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_lt_univ_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L266-L267","name":"Finset.card_le_univ","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_le_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L259-L263","name":"Finset.card_eq_iff_eq_univ","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_eq_iff_eq_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L254-L256","name":"Finset.eq_univ_of_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.eq_univ_of_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L250-L251","name":"Finset.card_univ","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Finset.card_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L244-L245","name":"Set.toFinset_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Set.toFinset_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L231-L232","name":"Fintype.card_of_isEmpty","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_of_isEmpty","doc":"Note: this lemma is specifically about `Fintype.of_is_empty`. For a statement about\narbitrary `Fintype` instances, use `Fintype.card_eq_zero_iff`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L224-L225","name":"Fintype.card_unique","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L219-L220","name":"Fintype.card_ofSubsingleton","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_ofSubsingleton","doc":"Note: this lemma is specifically about `Fintype.ofSubsingleton`. For a statement about\narbitrary `Fintype` instances, use either `Fintype.card_le_one_iff_subsingleton` or\n`Fintype.card_unique`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L208-L212","name":"Fintype.card_eq","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L200-L203","name":"Fintype.equivOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.equivOfCardEq","doc":"Two `Fintype`s with the same cardinality are (noncomputably) in bijection.\n\nSee `Fintype.truncEquivOfCardEq` for the computable version,\nand `Fintype.truncEquivFinOfCardEq` and `Fintype.equivFinOfCardEq` for\nthe specialization to `Fin`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L190-L191","name":"Fintype.truncEquivOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.truncEquivOfCardEq","doc":"Two `Fintype`s with the same cardinality are (computably) in bijection.\n\nSee `Fintype.equivOfCardEq` for the noncomputable version,\nand `Fintype.truncEquivFinOfCardEq` and `Fintype.equivFinOfCardEq` for\nthe specialization to `Fin`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L179-L181","name":"Fintype.equivFinOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.equivFinOfCardEq","doc":"If the cardinality of `α` is `n`, there is noncomputably a bijection between `α` and `Fin n`.\n\nSee `Fintype.truncEquivFinOfCardEq` for the computable definition,\nand `Fintype.truncEquivFin` and `Fintype.equivFin` for the bijection `α ≃ Fin (card α)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L170-L171","name":"Fintype.truncEquivFinOfCardEq","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.truncEquivFinOfCardEq","doc":"If the cardinality of `α` is `n`, there is computably a bijection between `α` and `Fin n`.\n\nSee `Fintype.equivFinOfCardEq` for the noncomputable definition,\nand `Fintype.truncEquivFin` and `Fintype.equivFin` for the bijection `α ≃ Fin (card α)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L157-L158","name":"Fintype.card_congr'","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_congr'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L152-L153","name":"Fintype.card_congr","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L148-L149","name":"Fintype.ofEquiv_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.ofEquiv_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L140-L141","name":"Fintype.card_of_finset'","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_of_finset'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L135-L137","name":"Fintype.card_ofFinset","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_ofFinset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L127-L131","name":"Fintype.card_of_subtype","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card_of_subtype","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L122-L124","name":"Fintype.subtype_card","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.subtype_card","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L111-L119","name":"Fintype.truncFinBijection","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.truncFinBijection","doc":"There is (computably) a bijection between `Fin (card α)` and `α`.\n\nSince it is not unique and depends on which permutation\nof the universe list is used, the bijection is wrapped in `Trunc` to\npreserve computability.\n\nSee `Fintype.truncEquivFin` for a version that gives an equivalence\ngiven `[DecidableEq α]`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L97-L99","name":"Fintype.equivFin","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.equivFin","doc":"There is (noncomputably) an equivalence between `α` and `Fin (card α)`.\n\nSee `Fintype.truncEquivFin` for the computable version,\nand `Fintype.truncEquivFinOfCardEq` and `Fintype.equivFinOfCardEq`\nfor an equiv `α ≃ Fin n` given `Fintype.card α = n`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L80-L88","name":"Fintype.truncEquivFin","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.truncEquivFin","doc":"There is (computably) an equivalence between `α` and `Fin (card α)`.\n\nSince it is not unique and depends on which permutation\nof the universe list is used, the equivalence is wrapped in `Trunc` to\npreserve computability.\n\nSee `Fintype.equivFin` for the noncomputable version,\nand `Fintype.truncEquivFinOfCardEq` and `Fintype.equivFinOfCardEq`\nfor an equiv `α ≃ Fin n` given `Fintype.card α = n`.\n\nSee `Fintype.truncFinBijection` for a version without `[DecidableEq α]`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Card.lean#L64-L65","name":"Fintype.card","kind":"def","docLink":"./Mathlib/Data/Fintype/Card.html#Fintype.card","doc":"`card α` is the number of elements in `α`, defined when `α` is a fintype. "}]}