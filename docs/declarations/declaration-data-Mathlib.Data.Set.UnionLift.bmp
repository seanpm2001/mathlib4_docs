{"name":"Mathlib.Data.Set.UnionLift","instances":[],"imports":["Init","Mathlib.Data.Set.Lattice","Mathlib.Order.Directed"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L179-L182","name":"Set.preimage_liftCover","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.preimage_liftCover","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L174-L176","name":"Set.liftCover_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.liftCover_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L170-L171","name":"Set.liftCover_coe","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.liftCover_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L163-L166","name":"Set.liftCover","kind":"def","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.liftCover","doc":"Glue together functions defined on each of a collection `S` of sets that cover a type. See\nalso `Set.iUnionLift`.   "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L130-L152","name":"Set.iUnionLift_binary","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_binary","doc":"`iUnionLift_binary` is useful for proving that `iUnionLift` is a homomorphism\nof algebraic structures when defined on the Union of algebraic subobjects.\nFor example, it could be used to prove that the lift of a collection\nof group homomorphisms on a union of subgroups preserves `*`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L110-L123","name":"Set.iUnionLift_unary","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_unary","doc":"`iUnionLift_unary` is useful for proving that `iUnionLift` is a homomorphism\nof algebraic structures when defined on the Union of algebraic subobjects.\nFor example, it could be used to prove that the lift of a collection\nof linear_maps on a union of submodules preserves scalar multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L99-L103","name":"Set.iUnionLift_const","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_const","doc":"`iUnionLift_const` is useful for proving that `iUnionLift` is a homomorphism\nof algebraic structures when defined on the Union of algebraic subobjects.\nFor example, it could be used to prove that the lift of a collection\nof group homomorphisms on a union of subgroups preserves `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L82-L93","name":"Set.preimage_iUnionLift","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.preimage_iUnionLift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L78-L79","name":"Set.iUnionLift_of_mem","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L73-L75","name":"Set.iUnionLift_inclusion","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_inclusion","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L68-L69","name":"Set.iUnionLift_mk","kind":"theorem","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Set/UnionLift.lean#L56-L60","name":"Set.iUnionLift","kind":"def","docLink":"./Mathlib/Data/Set/UnionLift.html#Set.iUnionLift","doc":"Given a union of sets `iUnion S`, define a function on the Union by defining\nit on each component, and proving that it agrees on the intersections. "}]}