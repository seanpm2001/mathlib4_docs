{"name":"Mathlib.Data.W.Basic","instances":[{"typeNames":["WType","Unit","Empty"],"name":"instInhabitedWTypeUnitEmpty","className":"Inhabited"},{"typeNames":["WType"],"name":"WType.instIsEmptyWType","className":"IsEmpty"},{"typeNames":["WType"],"name":"WType.instEncodableWType","className":"Encodable"}],"imports":["Init","Mathlib.Logic.Equiv.List"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L188-L193","name":"WType.instEncodableWType","kind":"instance","docLink":"./Mathlib/Data/W/Basic.html#WType.instEncodableWType","doc":"`WType` is encodable when `α` is an encodable fintype and for every `a : α`, `β a` is\nencodable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L138-L139","name":"WType.depth_lt_depth_mk","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.depth_lt_depth_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L133-L135","name":"WType.depth_pos","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.depth_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L129-L130","name":"WType.depth","kind":"def","docLink":"./Mathlib/Data/W/Basic.html#WType.depth","doc":"The depth of a finitely branching tree. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L107-L123","name":"WType.infinite_of_nonempty_of_isEmpty","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.infinite_of_nonempty_of_isEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L104-L105","name":"WType.instIsEmptyWType","kind":"instance","docLink":"./Mathlib/Data/W/Basic.html#WType.instIsEmptyWType","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L96-L101","name":"WType.elim_injective","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.elim_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L92-L93","name":"WType.elim","kind":"def","docLink":"./Mathlib/Data/W/Basic.html#WType.elim","doc":"The canonical map from `WType β` into any type `γ` given a map `(Σ a : α, β a → γ) → γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L78-L83","name":"WType.equivSigma","kind":"def","docLink":"./Mathlib/Data/W/Basic.html#WType.equivSigma","doc":"The canonical bijection with the sigma type, showing that `WType` is a fixed point of\nthe polynomial functor `X ↦ Σ a : α, β a → X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L77-L77","name":"WType.equivSigma_apply","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.equivSigma_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L77-L77","name":"WType.equivSigma_symm_apply","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.equivSigma_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L69-L70","name":"WType.toSigma_ofSigma","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.toSigma_ofSigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L64-L65","name":"WType.ofSigma_toSigma","kind":"theorem","docLink":"./Mathlib/Data/W/Basic.html#WType.ofSigma_toSigma","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L59-L60","name":"WType.ofSigma","kind":"def","docLink":"./Mathlib/Data/W/Basic.html#WType.ofSigma","doc":"The canonical map from the sigma type into a `WType`. Given a node `a : α`, and\nits children as a function `β a → WType β`, return the corresponding tree. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L53-L54","name":"WType.toSigma","kind":"def","docLink":"./Mathlib/Data/W/Basic.html#WType.toSigma","doc":"The canonical map to the corresponding sigma type, returning the label of a node as an\nelement `a` of `α`, and the children of the node as a function `β a → WType β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L44-L45","name":"instInhabitedWTypeUnitEmpty","kind":"instance","docLink":"./Mathlib/Data/W/Basic.html#instInhabitedWTypeUnitEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L41-L41","name":"WType.mk","kind":"ctor","docLink":"./Mathlib/Data/W/Basic.html#WType.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/W/Basic.lean#L40-L41","name":"WType","kind":"inductive","docLink":"./Mathlib/Data/W/Basic.html#WType","doc":"Given `β : α → Type _`, `WType β` is the type of finitely branching trees where nodes are labeled by\nelements of `α` and the children of a node labeled `a` are indexed by elements of `β a`.\n"}]}