{"name":"Mathlib.Topology.Sheaves.Sheaf","instances":[{"typeNames":["TopCat.Sheaf"],"name":"TopCat.SheafCat","className":"CategoryTheory.Category"},{"typeNames":["TopCat.Sheaf","CategoryTheory.Discrete","PUnit","CategoryTheory.discreteCategory"],"name":"TopCat.sheafInhabited","className":"Inhabited"},{"typeNames":["TopCat.Sheaf","TopCat.SheafCat","TopCat.Presheaf","TopCat.instCategoryPresheaf","TopCat.Sheaf.forget"],"name":"TopCat.Sheaf.forgetFull","className":"CategoryTheory.Full"},{"typeNames":["TopCat.Sheaf","TopCat.SheafCat","TopCat.Presheaf","TopCat.instCategoryPresheaf","TopCat.Sheaf.forget"],"name":"TopCat.Sheaf.forgetFaithful","className":"CategoryTheory.Faithful"}],"imports":["Init","Mathlib.Topology.Sheaves.Presheaf","Mathlib.CategoryTheory.Sites.Sheaf","Mathlib.CategoryTheory.Sites.Spaces"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L166-L168","name":"TopCat.Sheaf.comp_app","kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.comp_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L161-L162","name":"TopCat.Sheaf.id_app","kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.id_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L157-L158","name":"TopCat.Sheaf.forgetFaithful","kind":"instance","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.forgetFaithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L153-L154","name":"TopCat.Sheaf.forgetFull","kind":"instance","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.forgetFull","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L147-L148","name":"TopCat.Sheaf.forget","kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.forget","doc":"The forgetful functor from sheaves to presheaves.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L138-L139","name":"TopCat.sheafInhabited","kind":"instance","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.sheafInhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L130-L131","name":"TopCat.Sheaf.presheaf","kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf","doc":"The underlying presheaf of a sheaf "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L124-L125","name":"TopCat.SheafCat","kind":"instance","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.SheafCat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L118-L119","name":"TopCat.Sheaf","kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf","doc":"A `TopCat.Sheaf C X` is a presheaf of objects from `C` over a (bundled) topological space `X`,\nsatisfying the sheaf condition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L106-L107","name":"TopCat.Presheaf.isSheaf_of_iso","kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Presheaf.isSheaf_of_iso","doc":"Transfer the sheaf condition across an isomorphism of presheaves.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L99-L100","name":"TopCat.Presheaf.isSheaf_iso_iff","kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Presheaf.isSheaf_iso_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L94-L95","name":"TopCat.Presheaf.isSheaf_unit","kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Presheaf.isSheaf_unit","doc":"The presheaf valued in `Unit` over any topological space is a sheaf.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/Sheaves/Sheaf.lean#L87-L88","name":"TopCat.Presheaf.IsSheaf","kind":"def","docLink":"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Presheaf.IsSheaf","doc":"The sheaf condition has several different equivalent formulations.\nThe official definition chosen here is in terms of grothendieck topologies so that the results on\nsites could be applied here easily, and this condition does not require additional constraints on\nthe value category.\nThe equivalent formulations of the sheaf condition on `presheaf C X` are as follows :\n\n1. `TopCat.Presheaf.IsSheaf`: (the official definition)\n  It is a sheaf with respect to the grothendieck topology on `opens X`, which is to say:\n  For each open cover `{ Uᵢ }` of `U`, and a family of compatible functions `A ⟶ F(Uᵢ)` for an\n  `A : X`, there exists a unique gluing `A ⟶ F(U)` compatible with the restriction.\n\n2. `TopCat.Presheaf.IsSheafEqualizerProducts`: (requires `C` to have all products)\n  For each open cover `{ Uᵢ }` of `U`, `F(U) ⟶ ∏ F(Uᵢ)` is the equalizer of the two morphisms\n  `∏ F(Uᵢ) ⟶ ∏ F(Uᵢ ∩ Uⱼ)`.\n  See `TopCat.Presheaf.isSheaf_iff_isSheafEqualizerProducts`.\n\n3. `TopCat.Presheaf.IsSheafOpensLeCover`:\n  For each open cover `{ Uᵢ }` of `U`, `F(U)` is the limit of the diagram consisting of arrows\n  `F(V₁) ⟶ F(V₂)` for every pair of open sets `V₁ ⊇ V₂` that are contained in some `Uᵢ`.\n  See `TopCat.Presheaf.isSheaf_iff_isSheafOpensLeCover`.\n\n4. `TopCat.Presheaf.IsSheafPairwiseIntersections`:\n  For each open cover `{ Uᵢ }` of `U`, `F(U)` is the limit of the diagram consisting of arrows\n  from `F(Uᵢ)` and `F(Uⱼ)` to `F(Uᵢ ∩ Uⱼ)` for each pair `(i, j)`.\n  See `TopCat.Presheaf.isSheaf_iff_isSheafPairwiseIntersections`.\n\nThe following requires `C` to be concrete and complete, and `forget C` to reflect isomorphisms and\npreserve limits. This applies to most \"algebraic\" categories, e.g. groups, abelian groups and rings.\n\n5. `TopCat.Presheaf.IsSheafUniqueGluing`:\n  (requires `C` to be concrete and complete; `forget C` to reflect isomorphisms and preserve limits)\n  For each open cover `{ Uᵢ }` of `U`, and a compatible family of elements `x : F(Uᵢ)`, there exists\n  a unique gluing `x : F(U)` that restricts to the given elements.\n  See `TopCat.Presheaf.isSheaf_iff_isSheafUniqueGluing`.\n\n6. The underlying sheaf of types is a sheaf.\n  See `TopCat.Presheaf.isSheaf_iff_isSheaf_comp` and\n  `CategoryTheory.Presheaf.isSheaf_iff_isSheaf_forget`.\n"}]}