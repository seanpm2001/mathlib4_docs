{"name":"Mathlib.AlgebraicTopology.FundamentalGroupoid.Basic","instances":[{"typeNames":["FundamentalGroupoid"],"name":"FundamentalGroupoid.instInhabitedFundamentalGroupoid","className":"Inhabited"},{"typeNames":["FundamentalGroupoid"],"name":"FundamentalGroupoid.instGroupoidFundamentalGroupoid","className":"CategoryTheory.Groupoid"}],"imports":["Init","Mathlib.CategoryTheory.Category.Grpd","Mathlib.CategoryTheory.Groupoid","Mathlib.Topology.Category.TopCat.Basic","Mathlib.Topology.Homotopy.Path"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L396-L396","name":"FundamentalGroupoid.fromPath","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromPath","doc":"Help the typechecker by converting a path in a topological space to an arrow in the\nfundamental groupoid of that space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L390-L390","name":"FundamentalGroupoid.toPath","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.toPath","doc":"Help the typechecker by converting an arrow in the fundamental groupoid of\na topological space back to a path in that space (i.e., `Path.Homotopic.Quotient`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L383-L383","name":"FundamentalGroupoid.fromTop","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop","doc":"Help the typechecker by converting a point in a topological space to a\npoint in the fundamental groupoid of that space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L377-L377","name":"FundamentalGroupoid.toTop","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.toTop","doc":"Help the typechecker by converting a point in a groupoid back to a point in\nthe underlying topological space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L370-L371","name":"FundamentalGroupoid.map_eq","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.map_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L368-L368","name":"FundamentalGroupoid.termπₘ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.termπₘ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L367-L367","name":"FundamentalGroupoid.termπₓ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.termπₓ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L366-L366","name":"FundamentalGroupoid.termπ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.termπ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L340-L363","name":"FundamentalGroupoid.fundamentalGroupoidFunctor","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor","doc":"The functor sending a topological space `X` to its fundamental groupoid. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L336-L336","name":"FundamentalGroupoid.id_eq_path_refl","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.id_eq_path_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L333-L333","name":"FundamentalGroupoid.comp_eq","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L302-L331","name":"FundamentalGroupoid.instGroupoidFundamentalGroupoid","kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.instGroupoidFundamentalGroupoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L296-L296","name":"FundamentalGroupoid.instInhabitedFundamentalGroupoid","kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.instInhabitedFundamentalGroupoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L291-L291","name":"FundamentalGroupoid","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid","doc":"The fundamental groupoid of a space `X` is defined to be a type synonym for `X`, and we\nsubsequently put a `CategoryTheory.Groupoid` structure on it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L275-L280","name":"Path.Homotopy.transAssoc","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transAssoc","doc":"For paths `p q r`, we have a homotopy from `(p.trans q).trans r` to `p.trans (q.trans r)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L231-L271","name":"Path.Homotopy.trans_assoc_reparam","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.trans_assoc_reparam","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L225-L228","name":"Path.Homotopy.transAssocReparamAux_one","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transAssocReparamAux_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L219-L222","name":"Path.Homotopy.transAssocReparamAux_zero","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transAssocReparamAux_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L213-L215","name":"Path.Homotopy.transAssocReparamAux_mem_I","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transAssocReparamAux_mem_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L201-L210","name":"Path.Homotopy.continuous_transAssocReparamAux","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.continuous_transAssocReparamAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L196-L197","name":"Path.Homotopy.transAssocReparamAux","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transAssocReparamAux","doc":"Auxiliary function for `trans_assoc_reparam`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L187-L188","name":"Path.Homotopy.reflTrans","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.reflTrans","doc":"For any path `p` from `x₀` to `x₁`, we have a homotopy from `(Path.refl x₀).trans p` to `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L179-L183","name":"Path.Homotopy.transRefl","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transRefl","doc":"For any path `p` from `x₀` to `x₁`, we have a homotopy from `p.trans (Path.refl x₁)` to `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L164-L175","name":"Path.Homotopy.trans_refl_reparam","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.trans_refl_reparam","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L158-L161","name":"Path.Homotopy.transReflReparamAux_one","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transReflReparamAux_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L152-L155","name":"Path.Homotopy.transReflReparamAux_zero","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transReflReparamAux_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L146-L148","name":"Path.Homotopy.transReflReparamAux_mem_I","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transReflReparamAux_mem_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L138-L143","name":"Path.Homotopy.continuous_transReflReparamAux","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.continuous_transReflReparamAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L133-L134","name":"Path.Homotopy.transReflReparamAux","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.transReflReparamAux","doc":"Auxiliary function for `trans_refl_reparam`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L124-L125","name":"Path.Homotopy.reflSymmTrans","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.reflSymmTrans","doc":"For any path `p` from `x₀` to `x₁`, we have a homotopy from the constant path based at `x₁` to\n`p.symm.trans p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L89-L119","name":"Path.Homotopy.reflTransSymm","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.reflTransSymm","doc":"For any path `p` from `x₀` to `x₁`, we have a homotopy from the constant path based at `x₀` to\n`p.trans p.symm`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L60-L83","name":"Path.Homotopy.reflTransSymmAux_mem_I","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.reflTransSymmAux_mem_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L48-L57","name":"Path.Homotopy.continuous_reflTransSymmAux","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.continuous_reflTransSymmAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean#L43-L44","name":"Path.Homotopy.reflTransSymmAux","kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#Path.Homotopy.reflTransSymmAux","doc":"Auxiliary function for `reflTransSymm`. "}]}