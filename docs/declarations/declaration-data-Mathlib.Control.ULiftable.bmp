{"name":"Mathlib.Control.ULiftable","instances":[{"typeNames":["id","_builtin_typeu","id","_builtin_typeu"],"name":"instULiftableIdTypeIdType","className":"ULiftable"},{"typeNames":["StateT","StateT","ULift"],"name":"instULiftableStateTStateTULift","className":"ULiftable"},{"typeNames":["ReaderT","ReaderT","ULift"],"name":"instULiftableReaderTReaderTULift","className":"ULiftable"},{"typeNames":["ContT","ContT","ULift"],"name":"instULiftableContTContTULift","className":"ULiftable"},{"typeNames":["WriterT","WriterT","ULift"],"name":"instULiftableWriterTWriterTULift","className":"ULiftable"}],"imports":["Init","Mathlib.Control.Monad.Basic","Mathlib.Control.Monad.Cont","Mathlib.Control.Monad.Writer","Mathlib.Logic.Equiv.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L147-L148","name":"instULiftableWriterTWriterTULift","kind":"instance","docLink":"./Mathlib/Control/ULiftable.html#instULiftableWriterTWriterTULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L142-L144","name":"WriterT.uliftable'","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#WriterT.uliftable'","doc":"for specific writer monads, this function helps to create a uliftable instance "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L138-L139","name":"instULiftableContTContTULift","kind":"instance","docLink":"./Mathlib/Control/ULiftable.html#instULiftableContTContTULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L133-L135","name":"ContT.uliftable'","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ContT.uliftable'","doc":"for specific continuation passing monads, this function helps to create a uliftable instance "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L129-L130","name":"instULiftableReaderTReaderTULift","kind":"instance","docLink":"./Mathlib/Control/ULiftable.html#instULiftableReaderTReaderTULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L124-L126","name":"ReaderT.uliftable'","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ReaderT.uliftable'","doc":"for specific reader monads, this function helps to create a uliftable instance "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L120-L121","name":"instULiftableStateTStateTULift","kind":"instance","docLink":"./Mathlib/Control/ULiftable.html#instULiftableStateTStateTULift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L114-L117","name":"StateT.uliftable'","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#StateT.uliftable'","doc":"for specific state types, this function helps to create a uliftable instance "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L110-L111","name":"instULiftableIdTypeIdType","kind":"instance","docLink":"./Mathlib/Control/ULiftable.html#instULiftableIdTypeIdType","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L101-L103","name":"ULiftable.down_up","kind":"theorem","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.down_up","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L95-L97","name":"ULiftable.up_down","kind":"theorem","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.up_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L89-L91","name":"ULiftable.downMap","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.downMap","doc":"map function that moves down universes "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L83-L85","name":"ULiftable.upMap","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.upMap","doc":"map function that moves up universes "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L77-L79","name":"ULiftable.adaptDown","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.adaptDown","doc":"convenient shortcut to avoid manipulating `ULift` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L71-L73","name":"ULiftable.adaptUp","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.adaptUp","doc":"convenient shortcut to avoid manipulating `ULift` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L65-L67","name":"ULiftable.down","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.down","doc":"The most common practical use of `ULiftable` (together with `up`), this function takes\n`x : M.{max u v} (ulift.{v} α)` and lowers it to `M.{u} α` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L57-L59","name":"ULiftable.up","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.up","doc":"The most common practical use `ULiftable` (together with `up`), this function takes\n`x : M.{u} α` and lifts it to `M.{max u v} (ULift.{v} α)` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L49-L49","name":"ULiftable.congr","kind":"def","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L48-L48","name":"ULiftable.mk","kind":"ctor","docLink":"./Mathlib/Control/ULiftable.html#ULiftable.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/ULiftable.lean#L48-L49","name":"ULiftable","kind":"class","docLink":"./Mathlib/Control/ULiftable.html#ULiftable","doc":"Given a universe polymorphic type family `M.{u} : Type u₁ → Type\nu₂`, this class convert between instantiations, from\n`M.{u} : Type u₁ → Type u₂` to `M.{v} : Type v₁ → Type v₂` and back "}]}