{"name":"Mathlib.Data.LazyList","instances":[{"typeNames":["LazyList"],"name":"LazyList.instInhabitedLazyList","className":"Inhabited"}],"imports":["Init","Mathlib.Mathport.Rename"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L146-L147","name":"LazyList.iota","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.iota","doc":"The infinite lazy list `[i, i+1, i+2, ...]` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L141-L142","name":"LazyList.iterates","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.iterates","doc":"The infinite lazy list `[x, f x, f (f x), ...]` of iterates of a function.\nThis definition is meta because it creates an infinite list.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L132-L135","name":"LazyList.nth","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.nth","doc":"The nth element of a lazy list as an option (like `List.get?`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L126-L128","name":"LazyList.filter","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.filter","doc":"The lazy list of all elements satisfying the predicate.\nIf the lazy list is infinite and none of the elements satisfy the predicate,\nthen this function will not terminate.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L116-L119","name":"LazyList.approx","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.approx","doc":"The list containing the first `n` elements of a lazy list.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L111-L112","name":"LazyList.for","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.for","doc":"Maps a function over a lazy list.\nSame as `LazyList.map`, but with swapped arguments.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L103-L105","name":"LazyList.join","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.join","doc":"The monadic join operation for lazy lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L98-L99","name":"LazyList.zip","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.zip","doc":"Zips two lazy lists. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L91-L94","name":"LazyList.map₂","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.map₂","doc":"Maps a binary function over two lazy list.\nLike `LazyList.zip`, the result is only as long as the smaller input.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L83-L85","name":"LazyList.map","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.map","doc":"Maps a function over a lazy list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L77-L79","name":"LazyList.append","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.append","doc":"Appends two lazy lists.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L71-L73","name":"LazyList.tail","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.tail","doc":"Removes the first element of the lazy list.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L64-L66","name":"LazyList.headI","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.headI","doc":"Returns the first element of the lazy list,\nor `default` if the lazy list is empty.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L56-L58","name":"LazyList.toList","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.toList","doc":"Converts a lazy list to a list.\nIf the lazy list is infinite,\nthen this function does not terminate.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L47-L49","name":"LazyList.ofList","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.ofList","doc":"Constructs a lazy list from a list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L42-L43","name":"LazyList.singleton","kind":"def","docLink":"./Mathlib/Data/LazyList.html#LazyList.singleton","doc":"The singleton lazy list.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L38-L39","name":"LazyList.instInhabitedLazyList","kind":"instance","docLink":"./Mathlib/Data/LazyList.html#LazyList.instInhabitedLazyList","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L31-L31","name":"LazyList.cons","kind":"ctor","docLink":"./Mathlib/Data/LazyList.html#LazyList.cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L30-L30","name":"LazyList.nil","kind":"ctor","docLink":"./Mathlib/Data/LazyList.html#LazyList.nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/LazyList.lean#L29-L31","name":"LazyList","kind":"inductive","docLink":"./Mathlib/Data/LazyList.html#LazyList","doc":"Lazy list.\nAll elements (except the first) are computed lazily.\n"}]}