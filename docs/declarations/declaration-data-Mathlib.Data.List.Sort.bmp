{"name":"Mathlib.Data.List.Sort","instances":[{"typeNames":["List.Sorted"],"name":"List.decidableSorted","className":"Decidable"}],"imports":["Init","Mathlib.Data.List.OfFn","Mathlib.Data.List.Perm"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L472-L472","name":"List.mergeSort_singleton","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L468-L468","name":"List.mergeSort_nil","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L457-L460","name":"List.mergeSort_eq_insertionSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort_eq_insertionSort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L453-L454","name":"List.mergeSort_eq_self","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L442-L450","name":"List.sorted_mergeSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_mergeSort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L411-L437","name":"List.Sorted.merge","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.merge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L403-L404","name":"List.length_mergeSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.length_mergeSort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L389-L399","name":"List.perm_mergeSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.perm_mergeSort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L377-L386","name":"List.perm_merge","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.perm_merge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L370-L372","name":"List.mergeSort_cons_cons","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort_cons_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L355-L366","name":"List.mergeSort","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.mergeSort","doc":"Implementation of a merge sort algorithm to sort a list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L347-L351","name":"List.merge","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.merge","doc":"Merge two sorted lists into one in linear time.\n\nmerge [1, 2, 4, 5] [0, 1, 3, 4] = [0, 1, 1, 2, 3, 4, 4, 5] "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L336-L341","name":"List.perm_split","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.perm_split","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L328-L333","name":"List.length_split_lt","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.length_split_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L318-L325","name":"List.length_split_le","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.length_split_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L314-L315","name":"List.split_cons_of_eq","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.split_cons_of_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L307-L311","name":"List.split","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.split","doc":"Split `l` into two lists of approximately equal length.\n\nsplit [1, 2, 3, 4, 5] = ([1, 3, 5], [2, 4]) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L285-L287","name":"List.sorted_insertionSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_insertionSort","doc":"The list `List.insertionSort r l` is `List.Sorted` with respect to `r`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L265-L279","name":"List.Sorted.orderedInsert","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.orderedInsert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L253-L258","name":"List.Sorted.insertionSort_eq","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.insertionSort_eq","doc":"If `l` is already `List.Sorted` with respect to `r`, then `insertionSort` does not change\nit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L243-L246","name":"List.perm_insertionSort","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.perm_insertionSort","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L237-L240","name":"List.orderedInsert_count","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.orderedInsert_count","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L229-L234","name":"List.perm_orderedInsert","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.perm_orderedInsert","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L218-L222","name":"List.insertionSort_cons_eq_take_drop","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.insertionSort_cons_eq_take_drop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L209-L215","name":"List.orderedInsert_eq_take_drop","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.orderedInsert_eq_take_drop","doc":"An alternative definition of `orderedInsert` using `takeWhile` and `dropWhile`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L201-L205","name":"List.orderedInsert_length","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.orderedInsert_length","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L197-L198","name":"List.orderedInsert_nil","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.orderedInsert_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L191-L193","name":"List.insertionSort","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.insertionSort","doc":"`insertionSort l` returns `l` sorted using the insertion sort algorithm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L184-L186","name":"List.orderedInsert","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.orderedInsert","doc":"`orderedInsert a l` inserts `a` into `l` at such that\n`orderedInsert a l` is sorted if `l` is. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L164-L165","name":"Monotone.ofFn_sorted","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#Monotone.ofFn_sorted","doc":"The list obtained from a monotone tuple is sorted. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L161-L161","name":"List.monotone_iff_ofFn_sorted","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.monotone_iff_ofFn_sorted","doc":"A tuple is monotone if and only if the list obtained from it is sorted. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L156-L157","name":"List.sorted_le_ofFn_iff","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_le_ofFn_iff","doc":"The list `List.ofFn f` is sorted with respect to `(· ≤ ·)` if and only if `f` is monotone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L153-L153","name":"List.sorted_lt_ofFn_iff","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_lt_ofFn_iff","doc":"The list `List.ofFn f` is strictly sorted with respect to `(· ≤ ·)` if and only if `f` is\nstrictly monotone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L147-L149","name":"List.sorted_ofFn_iff","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_ofFn_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L132-L138","name":"List.Sorted.rel_of_mem_take_of_mem_drop","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.rel_of_mem_take_of_mem_drop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L127-L129","name":"List.Sorted.rel_nthLe_of_le","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.rel_nthLe_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L122-L125","name":"List.Sorted.rel_get_of_le","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.rel_get_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L117-L119","name":"List.Sorted.rel_nthLe_of_lt","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.rel_nthLe_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L113-L115","name":"List.Sorted.rel_get_of_lt","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.rel_get_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L109-L110","name":"List.sorted_singleton","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L102-L105","name":"List.sublist_of_subperm_of_sorted","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sublist_of_subperm_of_sorted","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L83-L99","name":"List.eq_of_perm_of_sorted","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.eq_of_perm_of_sorted","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L78-L80","name":"List.Sorted.nodup","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.nodup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L74-L75","name":"List.sorted_cons","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L69-L70","name":"List.rel_of_sorted_cons","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.rel_of_sorted_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L65-L66","name":"List.Sorted.tail","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L61-L62","name":"List.Sorted.of_cons","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.of_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L57-L58","name":"List.sorted_nil","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.sorted_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L52-L54","name":"List.Sorted.lt_of_le","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.lt_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L48-L50","name":"List.Sorted.le_of_lt","kind":"theorem","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted.le_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L44-L45","name":"List.decidableSorted","kind":"instance","docLink":"./Mathlib/Data/List/Sort.html#List.decidableSorted","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/List/Sort.lean#L40-L41","name":"List.Sorted","kind":"def","docLink":"./Mathlib/Data/List/Sort.html#List.Sorted","doc":"`Sorted r l` is the same as `Pairwise r l`, preferred in the case that `r`\nis a `<` or `≤`-like relation (transitive and antisymmetric or asymmetric) "}]}