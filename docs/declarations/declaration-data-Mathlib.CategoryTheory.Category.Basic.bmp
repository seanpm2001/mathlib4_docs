{"name":"Mathlib.CategoryTheory.Category.Basic","instances":[{"typeNames":["CategoryTheory.CategoryStruct.id","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.instEpiIdToCategoryStruct","className":"CategoryTheory.Epi"},{"typeNames":["CategoryTheory.CategoryStruct.id","CategoryTheory.Category.toCategoryStruct"],"name":"CategoryTheory.instMonoIdToCategoryStruct","className":"CategoryTheory.Mono"},{"typeNames":["ULift"],"name":"CategoryTheory.uliftCategory","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.CategoryTheory.Category.Init","Mathlib.Combinatorics.Quiver.Basic","Mathlib.Tactic.RestateAxiom"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L360-L363","name":"CategoryTheory.uliftCategory","kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.uliftCategory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L345-L347","name":"CategoryTheory.epi_of_epi_fac","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.epi_of_epi_fac","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L336-L342","name":"CategoryTheory.epi_of_epi","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.epi_of_epi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L330-L333","name":"CategoryTheory.mono_of_mono_fac","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.mono_of_mono_fac","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L321-L327","name":"CategoryTheory.mono_of_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.mono_of_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L313-L318","name":"CategoryTheory.mono_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.mono_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L305-L310","name":"CategoryTheory.epi_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.epi_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L300-L302","name":"CategoryTheory.cancel_mono_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.cancel_mono_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L295-L297","name":"CategoryTheory.cancel_epi_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.cancel_epi_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L290-L292","name":"CategoryTheory.cancel_mono","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.cancel_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L286-L287","name":"CategoryTheory.cancel_epi","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.cancel_epi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L283-L284","name":"CategoryTheory.instMonoIdToCategoryStruct","kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.instMonoIdToCategoryStruct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L280-L281","name":"CategoryTheory.instEpiIdToCategoryStruct","kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.instEpiIdToCategoryStruct","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L277-L277","name":"CategoryTheory.Mono.right_cancellation","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono.right_cancellation","doc":"A morphism `f` is a monomorphism if it can be cancelled when postcomposed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L275-L275","name":"CategoryTheory.Mono.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L275-L277","name":"CategoryTheory.Mono","kind":"class","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono","doc":"A morphism `f` is a monomorphism if it can be cancelled when postcomposed:\n`g ≫ f = h ≫ f` implies `g = h`.\n\nSee <https://stacks.math.columbia.edu/tag/003B>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L267-L267","name":"CategoryTheory.Epi.left_cancellation","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi.left_cancellation","doc":"A morphism `f` is an epimorphism if it can be cancelled when precomposed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L265-L265","name":"CategoryTheory.Epi.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L265-L267","name":"CategoryTheory.Epi","kind":"class","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi","doc":"A morphism `f` is an epimorphism if it can be cancelled when precomposed:\n`f ≫ g = f ≫ h` implies `g = h`.\n\nSee <https://stacks.math.columbia.edu/tag/003B>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L255-L257","name":"CategoryTheory.dite_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.dite_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L250-L252","name":"CategoryTheory.comp_dite","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.comp_dite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L246-L247","name":"CategoryTheory.ite_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.ite_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L242-L243","name":"CategoryTheory.comp_ite","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.comp_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L237-L239","name":"CategoryTheory.id_of_comp_right_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.id_of_comp_right_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L232-L234","name":"CategoryTheory.id_of_comp_left_id","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.id_of_comp_left_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L227-L229","name":"CategoryTheory.eq_of_comp_right_eq'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.eq_of_comp_right_eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L222-L224","name":"CategoryTheory.eq_of_comp_left_eq'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.eq_of_comp_left_eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L216-L219","name":"CategoryTheory.eq_of_comp_right_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.eq_of_comp_right_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L210-L213","name":"CategoryTheory.eq_of_comp_left_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.eq_of_comp_left_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L204-L208","name":"CategoryTheory.«term_≫=_»","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.«term_≫=_»","doc":"Notation for whiskering an equation by a morphism (on the left).\nIf `g h : Y ⟶ Z` and `w : g = h` and `h : X ⟶ Y`, then `f ≫= w : f ≫ g = f ≫ h`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L198-L202","name":"CategoryTheory.«term_=≫_»","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.«term_=≫_»","doc":"Notation for whiskering an equation by a morphism (on the right).\nIf `f g : X ⟶ Y` and `w : f = g` and `h : Y ⟶ Z`, then `w =≫ h : f ≫ h = g ≫ h`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L195-L195","name":"CategoryTheory.whisker_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.whisker_eq","doc":"precompose an equation between morphisms by another morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L191-L191","name":"CategoryTheory.eq_whisker","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.eq_whisker","doc":"postcompose an equation between morphisms by another morphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L181-L181","name":"CategoryTheory.SmallCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory","doc":"A `SmallCategory` has objects and morphisms in the same universe level.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L176-L176","name":"CategoryTheory.LargeCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory","doc":"A `LargeCategory` has objects in one universe level higher than the universe level of\nthe morphisms. It is useful for examples such as the category of types, or the category\nof groups, etc.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L155-L155","name":"CategoryTheory.Category.assoc","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category.assoc","doc":"Composition in a category is associative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L153-L153","name":"CategoryTheory.Category.comp_id","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category.comp_id","doc":"Identity morphisms are right identities for composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L151-L151","name":"CategoryTheory.Category.id_comp","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category.id_comp","doc":"Identity morphisms are left identities for composition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L149-L149","name":"CategoryTheory.Category.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L149-L156","name":"CategoryTheory.Category","kind":"class","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category","doc":"The typeclass `Category C` describes morphisms associated to objects of type `C`.\nThe universe levels of the objects and morphisms are unconstrained, and will often need to be\nspecified explicitly, as `Category.{v} C`. (See also `LargeCategory` and `SmallCategory`.)\n\nSee <https://stacks.math.columbia.edu/tag/0014>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L129-L132","name":"CategoryTheory.aesop_cat_nonterminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.aesop_cat_nonterminal","doc":"A variant of `aesop_cat` which does not fail when it is unable to solve the\ngoal. Use this only for exploration! Nonterminal `aesop` is even worse than\nnonterminal `simp`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L119-L122","name":"CategoryTheory.aesop_cat","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.aesop_cat","doc":"A thin wrapper for `aesop` which adds the `CategoryTheory` rule set and\nallows `aesop` to look through semireducible definitions when calling `intros`.\nThis tactic fails when it is unable to solve the goal, making it suitable for\nuse in auto-params.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L110-L111","name":"CategoryTheory.«term_≫_»","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.«term_≫_»","doc":"Notation for composition of morphisms in a category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L107-L108","name":"CategoryTheory.«term𝟙»","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.«term𝟙»","doc":"Notation for the identity morphism in a category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L102-L102","name":"CategoryTheory.CategoryStruct.comp","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp","doc":"Composition of morphisms in a category, written `f ≫ g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L100-L100","name":"CategoryTheory.CategoryStruct.id","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id","doc":"The identity morphism on an object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L98-L98","name":"CategoryTheory.CategoryStruct.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L98-L102","name":"CategoryTheory.CategoryStruct","kind":"class","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct","doc":"A preliminary structure on the way to defining a category,\ncontaining the data, but none of the axioms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Category/Basic.lean#L87-L88","name":"Std.Tactic.Ext.extCore'","kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Basic.html#Std.Tactic.Ext.extCore'","doc":"A wrapper for `ext` that we can pass to `aesop`. "}]}