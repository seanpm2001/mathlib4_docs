{"name":"Mathlib.Data.Quot","instances":[{"typeNames":["Quot"],"name":"Quot.instInhabitedQuot","className":"Inhabited"},{"typeNames":["Quot"],"name":"Quot.Subsingleton","className":"Subsingleton"},{"typeNames":["Quot.lift","_builtin_prop"],"name":"Quot.lift.decidablePred","className":"Decidable"},{"typeNames":["Quot.lift₂","_builtin_prop"],"name":"Quot.lift₂.decidablePred","className":"Decidable"},{"typeNames":["Quot.liftOn","_builtin_prop"],"name":"Quot.instDecidableLiftOnProp","className":"Decidable"},{"typeNames":["Quot.liftOn₂","_builtin_prop"],"name":"Quot.instDecidableLiftOn₂Prop","className":"Decidable"},{"typeNames":["Quotient"],"name":"Quotient.instInhabitedQuotient","className":"Inhabited"},{"typeNames":["Quotient"],"name":"Quotient.instSubsingletonQuotient","className":"Subsingleton"},{"typeNames":["HasEquiv.Equiv","instHasEquiv"],"name":"Quotient.instIsEquivEquivInstHasEquiv","className":"IsEquiv"},{"typeNames":["Quotient.lift","_builtin_prop"],"name":"Quotient.lift.decidablePred","className":"Decidable"},{"typeNames":["Quotient.lift₂","_builtin_prop"],"name":"Quotient.lift₂.decidablePred","className":"Decidable"},{"typeNames":["Quotient.liftOn","_builtin_prop"],"name":"Quotient.instDecidableLiftOnProp","className":"Decidable"},{"typeNames":["Quotient.liftOn₂","_builtin_prop"],"name":"Quotient.instDecidableLiftOn₂Prop","className":"Decidable"},{"typeNames":[],"name":"piSetoid","className":"Setoid"},{"typeNames":["Trunc"],"name":"Trunc.instInhabitedTrunc","className":"Inhabited"},{"typeNames":["Trunc"],"name":"Trunc.instSubsingletonTrunc","className":"Subsingleton"},{"typeNames":["Trunc"],"name":"Trunc.instMonadTrunc","className":"Monad"},{"typeNames":["Trunc","Trunc.instMonadTrunc"],"name":"Trunc.instLawfulMonadTruncInstMonadTrunc","className":"LawfulMonad"},{"typeNames":["Quotient.liftOn'","_builtin_prop"],"name":"Quotient.instDecidableLiftOn'Prop","className":"Decidable"},{"typeNames":["Quotient.liftOn₂'","_builtin_prop"],"name":"Quotient.instDecidableLiftOn₂'Prop","className":"Decidable"}],"imports":["Init","Mathlib.Init.Data.Quot","Mathlib.Logic.Relator"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L830-L834","name":"Quotient.instDecidableLiftOn₂'Prop","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instDecidableLiftOn₂'Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L825-L828","name":"Quotient.instDecidableLiftOn'Prop","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instDecidableLiftOn'Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L818-L820","name":"Quotient.map'_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.map'_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L812-L814","name":"Quotient.liftOn₂'_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn₂'_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L807-L808","name":"Quotient.liftOn'_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn'_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L803-L804","name":"Quotient.mk''_eq_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.mk''_eq_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L795-L796","name":"Quotient.mk_out'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.mk_out'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L791-L792","name":"Quotient.out_eq'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.out_eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L786-L787","name":"Quotient.out'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.out'","doc":"A version of `Quotient.out` taking `{s₁ : Setoid α}` as an implicit argument instead of an\ninstance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L780-L781","name":"Quotient.eq''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.eq''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L774-L776","name":"Quotient.eq'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L769-L770","name":"Quotient.sound'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.sound'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L764-L766","name":"Quotient.exact'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.exact'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L759-L762","name":"Quotient.map₂'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.map₂'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L753-L755","name":"Quotient.map₂'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.map₂'","doc":"A version of `Quotient.map₂` using curly braces and unification. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L748-L750","name":"Quotient.map'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.map'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L743-L744","name":"Quotient.map'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.map'","doc":"Map a function `f : α → β` that sends equivalent elements to equivalent elements\nto a function `Quotient sa → Quotient sb`. Useful to define unary operations on quotients. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L734-L738","name":"Quotient.hrecOn₂'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.hrecOn₂'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L726-L730","name":"Quotient.hrecOn₂'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.hrecOn₂'","doc":"Recursion on two `Quotient` arguments `a` and `b`, result type depends on `⟦a⟧` and `⟦b⟧`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L719-L722","name":"Quotient.hrecOn'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.hrecOn'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L713-L715","name":"Quotient.hrecOn'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.hrecOn'","doc":"Recursion on a `Quotient` argument `a`, result type depends on `⟦a⟧`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L705-L709","name":"Quotient.recOnSubsingleton₂'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.recOnSubsingleton₂'","doc":"A version of `Quotient.recOnSubsingleton₂` taking `{s₁ : Setoid α} {s₂ : Setoid α}`\nas implicit arguments instead of instance arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L695-L698","name":"Quotient.recOnSubsingleton'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.recOnSubsingleton'","doc":"A version of `Quotient.recOnSubsingleton` taking `{s₁ : Setoid α}` as an implicit argument\ninstead of an instance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L685-L689","name":"Quotient.inductionOn₃'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.inductionOn₃'","doc":"A version of `Quotient.inductionOn₃` taking `{s₁ : Setoid α} {s₂ : Setoid β} {s₃ : Setoid γ}`\nas implicit arguments instead of instance arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L676-L679","name":"Quotient.inductionOn₂'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.inductionOn₂'","doc":"A version of `Quotient.inductionOn₂` taking `{s₁ : Setoid α} {s₂ : Setoid β}` as implicit\narguments instead of instance arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L668-L670","name":"Quotient.inductionOn'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.inductionOn'","doc":"A version of `Quotient.inductionOn` taking `{s : Setoid α}` as an implicit argument instead\nof an instance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L659-L662","name":"Quotient.ind₂'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.ind₂'","doc":"A version of `Quotient.ind₂` taking `{s₁ : Setoid α} {s₂ : Setoid β}` as implicit arguments\ninstead of instance arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L651-L653","name":"Quotient.ind'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.ind'","doc":"A version of `Quotient.ind` taking `{s : Setoid α}` as an implicit argument instead of an\ninstance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L644-L646","name":"Quotient.liftOn₂'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn₂'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L638-L640","name":"Quotient.liftOn₂'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn₂'","doc":"A version of `Quotient.liftOn₂` taking `{s₁ : Setoid α} {s₂ : Setoid β}` as implicit arguments\ninstead of instance arguments. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L629-L631","name":"Quotient.surjective_liftOn'","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.surjective_liftOn'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L625-L627","name":"Quotient.liftOn'_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn'_mk''","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L619-L621","name":"Quotient.liftOn'","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn'","doc":"A version of `Quotient.liftOn` taking `{s : Setoid α}` as an implicit argument instead of an\ninstance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L611-L612","name":"Quotient.surjective_Quotient_mk''","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.surjective_Quotient_mk''","doc":"`Quotient.mk''` is a surjective function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L605-L606","name":"Quotient.mk''","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.mk''","doc":"A version of `Quotient.mk` taking `{s : Setoid α}` as an implicit argument instead of an\ninstance argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L583-L584","name":"Trunc.nonempty","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L579-L580","name":"Trunc.out_eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.out_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L574-L575","name":"Trunc.out","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.out","doc":"Noncomputably extract a representative of `Trunc α` (using the axiom of choice). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L568-L570","name":"Trunc.recOnSubsingleton","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.recOnSubsingleton","doc":"A version of `Trunc.recOn` assuming the codomain is a `Subsingleton`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L560-L562","name":"Trunc.recOn","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.recOn","doc":"A version of `Trunc.rec` taking `q : Trunc α` as the first argument. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L551-L554","name":"Trunc.rec","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.rec","doc":"Recursion/induction principle for `Trunc`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L534-L544","name":"Trunc.instLawfulMonadTruncInstMonadTrunc","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Trunc.instLawfulMonadTruncInstMonadTrunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L530-L532","name":"Trunc.instMonadTrunc","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Trunc.instMonadTrunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L526-L527","name":"Trunc.map","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.map","doc":"A function `f : α → β` defines a function `map f : Trunc α → Trunc β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L521-L522","name":"Trunc.bind","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.bind","doc":"The `bind` operator for the `Trunc` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L517-L518","name":"Trunc.instSubsingletonTrunc","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Trunc.instSubsingletonTrunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L513-L514","name":"Trunc.eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L508-L510","name":"Trunc.induction_on₂","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.induction_on₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L503-L504","name":"Trunc.exists_rep","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.exists_rep","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L499-L500","name":"Trunc.induction_on","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L494-L495","name":"Trunc.liftOn","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.liftOn","doc":"Lift a constant function on `q : Trunc α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L487-L488","name":"Trunc.lift_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.lift_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L483-L484","name":"Trunc.ind","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Trunc.ind","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L479-L480","name":"Trunc.lift","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.lift","doc":"Any constant function lifts to a function out of the truncation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L475-L476","name":"Trunc.instInhabitedTrunc","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Trunc.instInhabitedTrunc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L471-L472","name":"Trunc.mk","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc.mk","doc":"Constructor for `Trunc α` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L464-L465","name":"Trunc","kind":"def","docLink":"./Mathlib/Data/Quot.html#Trunc","doc":"`Trunc α` is the quotient of `α` by the always-true relation. This\nis related to the propositional truncation in HoTT, and is similar\nin effect to `Nonempty α`, but unlike `Nonempty α`, `Trunc α` is data,\nso the VM representation is the same as `α`, and so this can be used to\nmaintain computability. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L455-L456","name":"trueSetoid","kind":"def","docLink":"./Mathlib/Data/Quot.html#trueSetoid","doc":"Always-true relation as a `Setoid`.\n\nNote that in later files the preferred spelling is `⊤ : Setoid α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L448-L449","name":"true_equivalence","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#true_equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L441-L442","name":"nonempty_quotient_iff","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#nonempty_quotient_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L432-L436","name":"Quotient.induction_on_pi","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.induction_on_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L426-L428","name":"Quotient.choice_eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.choice_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L419-L422","name":"Quotient.choice","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.choice","doc":"Given a function `f : Π i, Quotient (S i)`, returns the class of functions `Π i, α i` sending\neach `i` to an element of the class `f i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L411-L415","name":"piSetoid","kind":"instance","docLink":"./Mathlib/Data/Quot.html#piSetoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L405-L406","name":"Quotient.out_inj","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.out_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L400-L401","name":"Quotient.out_injective","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.out_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L396-L397","name":"Quotient.out_equiv_out","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.out_equiv_out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L389-L392","name":"Quotient.eq_mk_iff_out","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.eq_mk_iff_out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L383-L386","name":"Quotient.mk_eq_iff_out","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.mk_eq_iff_out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L379-L380","name":"Quotient.mk_out","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.mk_out","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L375-L376","name":"Quotient.out_eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.out_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L370-L371","name":"Quotient.out","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.out","doc":"Choose an element of the equivalence class using the axiom of choice.\nSound but noncomputable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L364-L365","name":"Quot.out_eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.out_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L360-L361","name":"Quot.unquot","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.unquot","doc":"Unwrap the VM representation of a quotient to obtain an element of the equivalence class.\nComputable but unsound. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L354-L355","name":"Quot.out","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.out","doc":"Choose an element of the equivalence class using the axiom of choice.\nSound but noncomputable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L347-L349","name":"surjective_quotient_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#surjective_quotient_mk","doc":"`Quotient.mk` is a surjective function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L342-L343","name":"surjective_quot_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#surjective_quot_mk","doc":"`Quot.mk r` is a surjective function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L335-L338","name":"Quotient.liftOn₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L329-L331","name":"Quotient.liftOn_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.liftOn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L321-L326","name":"Quotient.lift₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.lift₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L315-L317","name":"Quotient.lift_comp_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.lift_comp_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L309-L311","name":"Quotient.lift_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.lift_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L303-L305","name":"forall_quotient_iff","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#forall_quotient_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L300-L301","name":"Quotient.eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L294-L296","name":"Quot.eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L287-L290","name":"Quotient.instDecidableLiftOn₂Prop","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instDecidableLiftOn₂Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L283-L285","name":"Quotient.instDecidableLiftOnProp","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instDecidableLiftOnProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L277-L281","name":"Quotient.lift₂.decidablePred","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.lift₂.decidablePred","doc":"Note that this provides `DecidableRel (Quotient.lift₂ f h)` when `α = β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L272-L274","name":"Quotient.lift.decidablePred","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.lift.decidablePred","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L267-L269","name":"Quotient.map₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.map₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L261-L263","name":"Quotient.map₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.map₂","doc":"Map a function `f : α → β → γ` that sends equivalent elements to equivalent elements\nto a function `f : Quotient sa → Quotient sb → Quotient sc`.\nUseful to define binary operations on quotients. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L251-L253","name":"Quotient.map_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quotient.map_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L246-L247","name":"Quotient.map","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.map","doc":"Map a function `f : α → β` that sends equivalent elements to equivalent elements\nto a function `Quotient sa → Quotient sb`. Useful to define unary operations on quotients. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L239-L241","name":"Quotient.hrecOn₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.hrecOn₂","doc":"Induction on two `Quotient` arguments `a` and `b`, result type depends on `⟦a⟧` and `⟦b⟧`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L233-L236","name":"Quotient.instIsEquivEquivInstHasEquiv","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instIsEquivEquivInstHasEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L230-L231","name":"Quotient.instSubsingletonQuotient","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instSubsingletonQuotient","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L227-L228","name":"Quotient.instInhabitedQuotient","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quotient.instInhabitedQuotient","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L224-L225","name":"Quotient.«term⟦_⟧»","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quotient.«term⟦_⟧»","doc":"The canonical quotient map into a `Quotient`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L205-L209","name":"Quot.instDecidableLiftOn₂Prop","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.instDecidableLiftOn₂Prop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L200-L203","name":"Quot.instDecidableLiftOnProp","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.instDecidableLiftOnProp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L194-L198","name":"Quot.lift₂.decidablePred","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.lift₂.decidablePred","doc":"Note that this provides `DecidableRel (Quot.Lift₂ f ha hb)` when `α = β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L188-L191","name":"Quot.lift.decidablePred","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.lift.decidablePred","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L181-L185","name":"Quot.induction_on₃","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.induction_on₃","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L175-L177","name":"Quot.induction_on₂","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.induction_on₂","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L166-L171","name":"Quot.recOnSubsingleton₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.recOnSubsingleton₂","doc":"A binary version of `Quot.recOnSubsingleton`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L157-L160","name":"Quot.map₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.map₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L150-L153","name":"Quot.map₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.map₂","doc":"Descends a function `f : α → β → γ` to quotients of `α` and `β` with values in a quotient of\n`γ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L140-L143","name":"Quot.liftOn₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.liftOn₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L134-L136","name":"Quot.liftOn₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.liftOn₂","doc":"Descends a function `f : α → β → γ` to quotients of `α` and `β` and applies it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L125-L128","name":"Quot.lift₂_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.lift₂_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L118-L121","name":"Quot.lift₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.lift₂","doc":"Descends a function `f : α → β → γ` to quotients of `α` and `β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L110-L112","name":"Quot.surjective_lift","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.surjective_lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L105-L107","name":"Quot.liftOn_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.liftOn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L99-L101","name":"Quot.lift_mk","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.lift_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L91-L93","name":"Quot.factor_mk_eq","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.factor_mk_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L87-L88","name":"Quot.factor","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.factor","doc":"Weaken the relation of a quotient. This is the same as `Quot.map id`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L81-L83","name":"Quot.mapRight","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.mapRight","doc":"If `ra` is a subrelation of `ra'`, then we have a natural map `Quot ra → Quot ra'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L76-L77","name":"Quot.map","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.map","doc":"Map a function `f : α → β` such that `ra x y` implies `rb (f x) (f y)`\nto a map `Quot ra → Quot rb`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L59-L71","name":"Quot.hrecOn₂","kind":"def","docLink":"./Mathlib/Data/Quot.html#Quot.hrecOn₂","doc":"Recursion on two `Quotient` arguments `a` and `b`, result type depends on `⟦a⟧` and `⟦b⟧`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L54-L55","name":"Quot.Subsingleton","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.Subsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L51-L52","name":"Quot.instInhabitedQuot","kind":"instance","docLink":"./Mathlib/Data/Quot.html#Quot.instInhabitedQuot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L47-L49","name":"Quot.induction_on","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Quot.induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Quot.lean#L28-L33","name":"Setoid.ext","kind":"theorem","docLink":"./Mathlib/Data/Quot.html#Setoid.ext","doc":""}]}