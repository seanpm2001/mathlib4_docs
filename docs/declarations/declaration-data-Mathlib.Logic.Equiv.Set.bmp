{"name":"Mathlib.Logic.Equiv.Set","instances":[],"imports":["Init","Mathlib.Data.Set.Function","Mathlib.Logic.Equiv.Defs"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L710-L727","name":"dite_comp_equiv_update","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#dite_comp_equiv_update","doc":"The composition of an updated function with an equiv on a subtype can be expressed as an\nupdated function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L701-L703","name":"Set.BijOn.equiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Set.BijOn.equiv","doc":"If a function is a bijection between two sets `s` and `t`, then it induces an\nequivalence between the types `↥s` and `↥t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L692-L694","name":"Equiv.ofPreimageEquiv_map","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofPreimageEquiv_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L686-L687","name":"Equiv.ofPreimageEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofPreimageEquiv","doc":"A family of equivalences between preimages of points gives an equivalence between domains. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L685-L685","name":"Equiv.ofPreimageEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofPreimageEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L685-L685","name":"Equiv.ofPreimageEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofPreimageEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L676-L677","name":"Equiv.sigmaPreimageEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.sigmaPreimageEquiv","doc":"`sigmaPreimageEquiv f` for `f : α → β` is the natural equivalence between\nthe type of all preimages of points under `f` and the total space `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L675-L675","name":"Equiv.sigmaPreimageEquiv_symm_apply_fst","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.sigmaPreimageEquiv_symm_apply_fst","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L675-L675","name":"Equiv.sigmaPreimageEquiv_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.sigmaPreimageEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L675-L675","name":"Equiv.sigmaPreimageEquiv_symm_apply_snd_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.sigmaPreimageEquiv_symm_apply_snd_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L658-L669","name":"Equiv.preimage_piEquivPiSubtypeProd_symm_pi","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.preimage_piEquivPiSubtypeProd_symm_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L653-L655","name":"Equiv.set_forall_iff","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.set_forall_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L647-L650","name":"Equiv.ofLeftInverse'_eq_ofInjective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse'_eq_ofInjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L638-L644","name":"Equiv.ofLeftInverse_eq_ofInjective","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse_eq_ofInjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L633-L635","name":"Equiv.self_comp_ofInjective_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.self_comp_ofInjective_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L625-L629","name":"Equiv.coe_ofInjective_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.coe_ofInjective_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L619-L622","name":"Equiv.ofInjective_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofInjective_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L613-L615","name":"Equiv.apply_ofInjective_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.apply_ofInjective_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L608-L609","name":"Equiv.ofInjective","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofInjective","doc":"If `f : α → β` is an injective function, then domain `α` is equivalent to the range of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L607-L607","name":"Equiv.ofInjective_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofInjective_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L601-L603","name":"Equiv.ofLeftInverse'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse'","doc":"If `f : α → β` has a left-inverse, then `α` is computably equivalent to the range of `f`.\n\nNote that if `α` is empty, no such `f_inv` exists and so this definition can't be used, unlike\nthe stronger but less convenient `ofLeftInverse`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L585-L592","name":"Equiv.ofLeftInverse","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse","doc":"If `f : α → β` has a left-inverse when `α` is nonempty, then `α` is computably equivalent to the\nrange of `f`.\n\nWhile awkward, the `Nonempty α` hypothesis on `f_inv` and `hf` allows this to be used when `α` is\nempty too. This hypothesis is absent on analogous definitions on stronger `Equiv`s like\n`LinearEquiv.ofLeftInverse` and `RingEquiv.ofLeftInverse` as their typeclass assumptions\nare already sufficient to ensure non-emptiness. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L584-L584","name":"Equiv.ofLeftInverse_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L584-L584","name":"Equiv.ofLeftInverse_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.ofLeftInverse_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L571-L573","name":"Equiv.Set.rangeInr_apply_inr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInr_apply_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L563-L569","name":"Equiv.Set.rangeInr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInr","doc":"Equivalence between the range of `Sum.inr : β → α ⊕ β` and `β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L562-L562","name":"Equiv.Set.rangeInr_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInr_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L557-L559","name":"Equiv.Set.rangeInl_apply_inl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInl_apply_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L549-L555","name":"Equiv.Set.rangeInl","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInl","doc":"Equivalence between the range of `Sum.inl : α → α ⊕ β` and `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L548-L548","name":"Equiv.Set.rangeInl_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeInl_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L532-L542","name":"Equiv.Set.rangeSplittingImageEquiv","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeSplittingImageEquiv","doc":"If `s` is a set in `range f`,\nthen its image under `rangeSplitting f` is in bijection (via `f`) with `s`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L531-L531","name":"Equiv.Set.rangeSplittingImageEquiv_apply_coe_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeSplittingImageEquiv_apply_coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L531-L531","name":"Equiv.Set.rangeSplittingImageEquiv_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.rangeSplittingImageEquiv_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L520-L525","name":"Equiv.Set.powerset","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.powerset","doc":"The set `𝒫 S := {x | x ⊆ S}` is equivalent to the type `Set S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L514-L516","name":"Equiv.Set.sep","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sep","doc":"The set `{x ∈ s | t x}` is equivalent to the set of `x : s` such that `t x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L507-L508","name":"Equiv.Set.congr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.congr","doc":"If `α` is equivalent to `β`, then `Set α` is equivalent to `Set β`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L506-L506","name":"Equiv.Set.congr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.congr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L506-L506","name":"Equiv.Set.congr_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.congr_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L498-L502","name":"Equiv.Set.image_symm_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image_symm_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L492-L495","name":"Equiv.Set.image_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L486-L487","name":"Equiv.Set.image","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image","doc":"If `f` is an injective function, then `s` is equivalent to `f '' s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L485-L485","name":"Equiv.Set.image_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.image_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L474-L481","name":"Equiv.Set.imageOfInjOn","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.imageOfInjOn","doc":"If a function `f` is injective on a set `s`, then `s` is equivalent to `f '' s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L459-L468","name":"Equiv.Set.univPi","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.univPi","doc":"The set `Set.pi Set.univ s` is equivalent to `Π a, s a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L458-L458","name":"Equiv.Set.univPi_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.univPi_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L458-L458","name":"Equiv.Set.univPi_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.univPi_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L453-L454","name":"Equiv.Set.prod","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.prod","doc":"The set product of two sets is equivalent to the type product of their coercions to types. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L417-L449","name":"Equiv.Set.compl","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.compl","doc":"Given an equivalence `e₀` between sets `s : Set α` and `t : Set β`, the set of equivalences\n`e : α ≃ β` such that `e ↑x = ↑(e₀ x)` for each `x : s` is equivalent to the set of equivalences\nbetween `sᶜ` and `tᶜ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L396-L411","name":"Equiv.Set.unionSumInter","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.unionSumInter","doc":"If `s` is a set with decidable membership, then the sum of `s ∪ t` and `s ∩ t` is equivalent\nto `s ⊕ t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L387-L391","name":"Equiv.Set.sumDiffSubset_symm_apply_of_not_mem","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumDiffSubset_symm_apply_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L380-L384","name":"Equiv.Set.sumDiffSubset_symm_apply_of_mem","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumDiffSubset_symm_apply_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L375-L377","name":"Equiv.Set.sumDiffSubset_apply_inr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumDiffSubset_apply_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L369-L371","name":"Equiv.Set.sumDiffSubset_apply_inl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumDiffSubset_apply_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L360-L365","name":"Equiv.Set.sumDiffSubset","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumDiffSubset","doc":"`sumDiffSubset s t` is the natural equivalence between\n`s ⊕ (t \\ s)` and `t`, where `s` and `t` are two sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L353-L355","name":"Equiv.Set.sumCompl_symm_apply_compl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_symm_apply_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L347-L349","name":"Equiv.Set.sumCompl_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L339-L343","name":"Equiv.Set.sumCompl_symm_apply_of_not_mem","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_symm_apply_of_not_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L332-L336","name":"Equiv.Set.sumCompl_symm_apply_of_mem","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_symm_apply_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L327-L329","name":"Equiv.Set.sumCompl_apply_inr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_apply_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L321-L323","name":"Equiv.Set.sumCompl_apply_inl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl_apply_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L313-L317","name":"Equiv.Set.sumCompl","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.sumCompl","doc":"If `s : Set α` is a set with decidable membership, then `s ⊕ sᶜ` is equivalent to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L307-L309","name":"Equiv.Set.insert_apply_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.insert_apply_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L301-L303","name":"Equiv.Set.insert_apply_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.insert_apply_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L295-L297","name":"Equiv.Set.insert_symm_apply_inr","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.insert_symm_apply_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L289-L291","name":"Equiv.Set.insert_symm_apply_inl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.insert_symm_apply_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L280-L285","name":"Equiv.Set.insert","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.insert","doc":"If `a ∉ s`, then `insert a s` is equivalent to `s ⊕ PUnit`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L275-L276","name":"Equiv.Set.ofEq","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.ofEq","doc":"Equal sets are equivalent.\n\nTODO: this is the same as `Equiv.setCongr`! "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L274-L274","name":"Equiv.Set.ofEq_symm_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.ofEq_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L274-L274","name":"Equiv.Set.ofEq_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.ofEq_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L264-L268","name":"Equiv.Set.singleton","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.singleton","doc":"A singleton set is equivalent to a `PUnit` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L258-L260","name":"Equiv.Set.union_symm_apply_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union_symm_apply_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L252-L254","name":"Equiv.Set.union_symm_apply_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union_symm_apply_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L246-L248","name":"Equiv.Set.union_apply_right","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union_apply_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L241-L243","name":"Equiv.Set.union_apply_left","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union_apply_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L236-L238","name":"Equiv.Set.union","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union","doc":"If sets `s` and `t` are disjoint, then `s ∪ t` is equivalent to `s ⊕ t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L221-L232","name":"Equiv.Set.union'","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.union'","doc":"If sets `s` and `t` are separated by a decidable predicate, then `s ∪ t` is equivalent to\n`s ⊕ t`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L215-L216","name":"Equiv.Set.pempty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.pempty","doc":"An empty set is equivalent to a `PEmpty` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L210-L211","name":"Equiv.Set.empty","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.empty","doc":"An empty set is equivalent to the `Empty` type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L205-L206","name":"Equiv.Set.univ","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.Set.univ","doc":"`univ α` is equivalent to `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L187-L195","name":"Equiv.image","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image","doc":"A set is equivalent to its image under an equivalence.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L186-L186","name":"Equiv.image_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L186-L186","name":"Equiv.image_symm_apply_coe","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_symm_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L177-L178","name":"Equiv.setCongr","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr","doc":"The subtypes corresponding to equal sets are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L176-L176","name":"Equiv.setCongr_apply","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.setCongr_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L167-L172","name":"Equiv.setProdEquivSigma","kind":"def","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.setProdEquivSigma","doc":"A set `s` in `α × β` is equivalent to the sigma-type `Σ x, {y | (x, y) ∈ s}`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L161-L163","name":"Equiv.prod_assoc_symm_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.prod_assoc_symm_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L156-L158","name":"Equiv.prod_assoc_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.prod_assoc_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L148-L151","name":"Equiv.prod_assoc_symm_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.prod_assoc_symm_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L141-L144","name":"Equiv.prod_assoc_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.prod_assoc_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L136-L137","name":"Equiv.eq_preimage_iff_image_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.eq_preimage_iff_image_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L132-L133","name":"Equiv.preimage_eq_iff_eq_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.preimage_eq_iff_eq_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L128-L129","name":"Equiv.image_eq_iff_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_eq_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L123-L124","name":"Equiv.image_subset","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L118-L119","name":"Equiv.preimage_subset","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.preimage_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L113-L114","name":"Equiv.preimage_symm_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.preimage_symm_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L108-L109","name":"Equiv.symm_preimage_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.symm_preimage_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L103-L104","name":"Equiv.image_compl","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_compl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L99-L100","name":"Equiv.preimage_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.preimage_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L94-L95","name":"Equiv.image_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L89-L90","name":"Equiv.image_symm_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_symm_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L83-L85","name":"Equiv.eq_image_iff_symm_image_eq","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.eq_image_iff_symm_image_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L79-L80","name":"Equiv.symm_image_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.symm_image_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L71-L75","name":"Equiv.subset_image'","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.subset_image'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L66-L67","name":"Equiv.subset_image","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.subset_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L60-L62","name":"Set.preimage_equiv_eq_image_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Set.preimage_equiv_eq_image_symm","doc":"Alias for `Equiv.image_eq_preimage` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L54-L56","name":"Set.image_equiv_eq_preimage_symm","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Set.image_equiv_eq_preimage_symm","doc":"Alias for `Equiv.image_eq_preimage` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L48-L50","name":"Set.mem_image_equiv","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Set.mem_image_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L43-L44","name":"Equiv.image_eq_preimage","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.image_eq_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Equiv/Set.lean#L39-L40","name":"Equiv.range_eq_univ","kind":"theorem","docLink":"./Mathlib/Logic/Equiv/Set.html#Equiv.range_eq_univ","doc":""}]}