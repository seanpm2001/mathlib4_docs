{"name":"Mathlib.Combinatorics.Configuration","instances":[{"typeNames":["Configuration.Dual"],"name":"Configuration.instInhabitedDual","className":"Inhabited"},{"typeNames":["Configuration.Dual"],"name":"Configuration.instFiniteDual","className":"Finite"},{"typeNames":["Configuration.Dual"],"name":"Configuration.instFintypeDual","className":"Fintype"},{"typeNames":["Configuration.Dual","Configuration.Dual"],"name":"Configuration.instMembershipDualDual","className":"Membership"},{"typeNames":["Configuration.Dual","Configuration.Dual","Configuration.instMembershipDualDual"],"name":"Configuration.Dual.Nondegenerate","className":"Configuration.Nondegenerate"},{"typeNames":["Configuration.Dual","Configuration.Dual","Configuration.instMembershipDualDual"],"name":"Configuration.Dual.hasLines","className":"Configuration.HasLines"},{"typeNames":["Configuration.Dual","Configuration.Dual","Configuration.instMembershipDualDual"],"name":"Configuration.Dual.hasPoints","className":"Configuration.HasPoints"},{"typeNames":["Configuration.Dual","Configuration.Dual","Configuration.instMembershipDualDual"],"name":"Configuration.ProjectivePlane.instProjectivePlaneDualDualInstMembershipDualDual","className":"Configuration.ProjectivePlane"}],"imports":["Init","Mathlib.Algebra.BigOperators.Order","Mathlib.Combinatorics.Hall.Basic","Mathlib.Data.Fintype.BigOperators","Mathlib.SetTheory.Cardinal.Finite"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L522-L523","name":"Configuration.ProjectivePlane.card_lines","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.card_lines","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L493-L519","name":"Configuration.ProjectivePlane.card_points","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.card_points","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L486-L487","name":"Configuration.ProjectivePlane.two_lt_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.two_lt_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L480-L481","name":"Configuration.ProjectivePlane.two_lt_lineCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.two_lt_lineCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L466-L475","name":"Configuration.ProjectivePlane.one_lt_order","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.one_lt_order","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L460-L461","name":"Configuration.ProjectivePlane.pointCount_eq","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.pointCount_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L449-L455","name":"Configuration.ProjectivePlane.lineCount_eq","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.lineCount_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L442-L443","name":"Configuration.ProjectivePlane.Dual.order","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.Dual.order","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L431-L437","name":"Configuration.ProjectivePlane.lineCount_eq_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.lineCount_eq_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L423-L425","name":"Configuration.ProjectivePlane.pointCount_eq_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.pointCount_eq_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L401-L418","name":"Configuration.ProjectivePlane.lineCount_eq_lineCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.lineCount_eq_lineCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L394-L395","name":"Configuration.ProjectivePlane.card_points_eq_card_lines","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.card_points_eq_card_lines","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L390-L391","name":"Configuration.ProjectivePlane.order","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.order","doc":"The order of a projective plane is one less than the number of lines through an arbitrary point.\nEquivalently, it is one less than the number of points on an arbitrary line. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L382-L386","name":"Configuration.ProjectivePlane.instProjectivePlaneDualDualInstMembershipDualDual","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.instProjectivePlaneDualDualInstMembershipDualDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L373-L373","name":"Configuration.ProjectivePlane.exists_config","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.exists_config","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L372-L375","name":"Configuration.ProjectivePlane","kind":"class","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane","doc":"A projective plane is a nondegenerate configuration in which every pair of lines has\nan intersection point, every pair of points has a line through them,\nand which has three points in general position. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L359-L364","name":"Configuration.HasPoints.hasLines","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.hasLines","doc":"If a nondegenerate configuration has a unique point on any two lines, and if `|P| = |L|`,\nthen there is a unique line through any two points. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L323-L354","name":"Configuration.HasLines.hasPoints","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.hasPoints","doc":"If a nondegenerate configuration has a unique line through any two points, and if `|P| = |L|`,\nthen there is a unique point on any two lines. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L315-L318","name":"Configuration.HasPoints.lineCount_eq_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.lineCount_eq_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L285-L312","name":"Configuration.HasLines.lineCount_eq_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.lineCount_eq_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L267-L282","name":"Configuration.HasLines.exists_bijective_of_card_eq","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.exists_bijective_of_card_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L260-L262","name":"Configuration.HasPoints.card_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.card_le","doc":"If a nondegenerate configuration has a unique point on any two lines, then `|L| â‰¤ |P|`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L230-L256","name":"Configuration.HasLines.card_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.card_le","doc":"If a nondegenerate configuration has a unique line through any two points, then `|P| â‰¤ |L|`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L222-L224","name":"Configuration.HasPoints.lineCount_le_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.lineCount_le_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L205-L219","name":"Configuration.HasLines.pointCount_le_lineCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.pointCount_le_lineCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L191-L200","name":"Configuration.sum_lineCount_eq_sum_pointCount","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.sum_lineCount_eq_sum_pointCount","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L184-L185","name":"Configuration.pointCount","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.pointCount","doc":"Number of lines through a given point. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L177-L178","name":"Configuration.lineCount","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.lineCount","doc":"Number of points on a given line. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L128-L169","name":"Configuration.Nondegenerate.exists_injective_of_card_le","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate.exists_injective_of_card_le","doc":"If a nondegenerate configuration has at least as many points as lines, then there exists\nan injective function `f` from lines to points, such that `f l` does not lie on `l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L119-L121","name":"Configuration.HasLines.existsUnique_line","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.existsUnique_line","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L113-L116","name":"Configuration.HasPoints.existsUnique_point","kind":"theorem","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.existsUnique_point","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L108-L111","name":"Configuration.Dual.hasPoints","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Dual.hasPoints","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L103-L106","name":"Configuration.Dual.hasLines","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Dual.hasLines","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L98-L101","name":"Configuration.Dual.Nondegenerate","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Dual.Nondegenerate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L89-L89","name":"Configuration.HasLines.mkLine_ax","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.mkLine_ax","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L88-L88","name":"Configuration.HasLines.mkLine","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.mkLine","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L87-L89","name":"Configuration.HasLines","kind":"class","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines","doc":"A nondegenerate configuration in which every pair of points has a line through them. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L83-L83","name":"Configuration.HasPoints.mkPoint_ax","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.mkPoint_ax","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L82-L82","name":"Configuration.HasPoints.mkPoint","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.mkPoint","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L81-L83","name":"Configuration.HasPoints","kind":"class","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints","doc":"A nondegenerate configuration in which every pair of lines has an intersection point. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L77-L77","name":"Configuration.Nondegenerate.eq_or_eq","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate.eq_or_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L76-L76","name":"Configuration.Nondegenerate.exists_line","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate.exists_line","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L75-L75","name":"Configuration.Nondegenerate.exists_point","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate.exists_point","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L74-L77","name":"Configuration.Nondegenerate","kind":"class","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate","doc":"A configuration is nondegenerate if:\n1) there does not exist a line that passes through all of the points,\n2) there does not exist a point that is on all of the lines,\n3) there is at most one line through any two points,\n4) any two lines have at most one intersection point.\nConditions 3 and 4 are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L65-L66","name":"Configuration.instMembershipDualDual","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.instMembershipDualDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L60-L61","name":"Configuration.instFintypeDual","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.instFintypeDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L56-L57","name":"Configuration.instFiniteDual","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.instFiniteDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L53-L54","name":"Configuration.instInhabitedDual","kind":"instance","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.instInhabitedDual","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L48-L49","name":"Configuration.Dual","kind":"def","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Dual","doc":"A type synonym. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L1-L1","name":"Configuration.HasPoints.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasPoints.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L1-L1","name":"Configuration.Nondegenerate.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.Nondegenerate.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L1-L1","name":"Configuration.HasLines.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.HasLines.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Combinatorics/Configuration.lean#L1-L1","name":"Configuration.ProjectivePlane.mk","kind":"ctor","docLink":"./Mathlib/Combinatorics/Configuration.html#Configuration.ProjectivePlane.mk","doc":""}]}