{"name":"Mathlib.CategoryTheory.Abelian.Basic","instances":[{"typeNames":["CategoryTheory.Limits.MonoFactorisation.I","CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation","CategoryTheory.Limits.MonoFactorisation.e","CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation"],"name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationE","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Limits.MonoFactorisation.I","CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation","CategoryTheory.Limits.MonoFactorisation.m","CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation"],"name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationM","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","CategoryTheory.Abelian.toPreadditive"],"name":"CategoryTheory.Abelian.hasBinaryBiproducts","className":"CategoryTheory.Limits.HasBinaryBiproducts"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasZeroObject","className":"CategoryTheory.Limits.HasZeroObject"},{"typeNames":["CategoryTheory.Abelian.image","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels","CategoryTheory.Abelian.factorThruImage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels"],"name":"CategoryTheory.Abelian.instEpiImageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruImage","className":"CategoryTheory.Epi"},{"typeNames":["CategoryTheory.Abelian.image","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels","CategoryTheory.Abelian.factorThruImage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels"],"name":"CategoryTheory.Abelian.isIso_factorThruImage","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Abelian.coimage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels","CategoryTheory.Abelian.factorThruCoimage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels"],"name":"CategoryTheory.Abelian.instMonoCoimageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruCoimage","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Abelian.coimage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels","CategoryTheory.Abelian.factorThruCoimage","CategoryTheory.NonPreadditiveAbelian.toHasZeroMorphisms","CategoryTheory.Abelian.nonPreadditiveAbelian","CategoryTheory.NonPreadditiveAbelian.has_kernels","CategoryTheory.NonPreadditiveAbelian.has_cokernels"],"name":"CategoryTheory.Abelian.isIso_factorThruCoimage","className":"CategoryTheory.IsIso"},{"typeNames":[],"name":"CategoryTheory.Abelian.instHasStrongEpiMonoFactorisations","className":"CategoryTheory.Limits.HasStrongEpiMonoFactorisations"},{"typeNames":["CategoryTheory.Abelian.coimage","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","CategoryTheory.Abelian.toPreadditive","CategoryTheory.Abelian.has_kernels","CategoryTheory.Abelian.has_cokernels","CategoryTheory.Abelian.image","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","CategoryTheory.Abelian.toPreadditive","CategoryTheory.Abelian.has_kernels","CategoryTheory.Abelian.has_cokernels","CategoryTheory.Abelian.coimageImageComparison","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","CategoryTheory.Abelian.toPreadditive","CategoryTheory.Abelian.has_kernels","CategoryTheory.Abelian.has_cokernels"],"name":"CategoryTheory.Abelian.instIsIsoCoimagePreadditiveHasZeroMorphismsToPreadditiveHas_kernelsHas_cokernelsImageCoimageImageComparison","className":"CategoryTheory.IsIso"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasEqualizers","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasPullbacks","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasCoequalizers","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasPushouts","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasFiniteLimits","className":"CategoryTheory.Limits.HasFiniteLimits"},{"typeNames":[],"name":"CategoryTheory.Abelian.hasFiniteColimits","className":"CategoryTheory.Limits.HasFiniteColimits"},{"typeNames":["CategoryTheory.Limits.pullback","CategoryTheory.Limits.hasLimitOfHasLimitsOfShape","CategoryTheory.Limits.WalkingCospan","CategoryTheory.Limits.WidePullbackShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.cospan","CategoryTheory.Limits.pullback.snd","CategoryTheory.Limits.hasLimitOfHasLimitsOfShape","CategoryTheory.Limits.WalkingCospan","CategoryTheory.Limits.WidePullbackShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.cospan"],"name":"CategoryTheory.Abelian.epi_pullback_of_epi_f","className":"CategoryTheory.Epi"},{"typeNames":["CategoryTheory.Limits.pullback","CategoryTheory.Limits.hasLimitOfHasLimitsOfShape","CategoryTheory.Limits.WalkingCospan","CategoryTheory.Limits.WidePullbackShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.cospan","CategoryTheory.Limits.pullback.fst","CategoryTheory.Limits.hasLimitOfHasLimitsOfShape","CategoryTheory.Limits.WalkingCospan","CategoryTheory.Limits.WidePullbackShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.cospan"],"name":"CategoryTheory.Abelian.epi_pullback_of_epi_g","className":"CategoryTheory.Epi"},{"typeNames":["CategoryTheory.Limits.pushout","CategoryTheory.Limits.hasColimitOfHasColimitsOfShape","CategoryTheory.Limits.WalkingSpan","CategoryTheory.Limits.WidePushoutShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.span","CategoryTheory.Limits.pushout.inr","CategoryTheory.Limits.hasColimitOfHasColimitsOfShape","CategoryTheory.Limits.WalkingSpan","CategoryTheory.Limits.WidePushoutShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.span"],"name":"CategoryTheory.Abelian.mono_pushout_of_mono_f","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Limits.pushout","CategoryTheory.Limits.hasColimitOfHasColimitsOfShape","CategoryTheory.Limits.WalkingSpan","CategoryTheory.Limits.WidePushoutShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.span","CategoryTheory.Limits.pushout.inl","CategoryTheory.Limits.hasColimitOfHasColimitsOfShape","CategoryTheory.Limits.WalkingSpan","CategoryTheory.Limits.WidePushoutShape.category","CategoryTheory.Limits.WalkingPair","CategoryTheory.Limits.span"],"name":"CategoryTheory.Abelian.mono_pushout_of_mono_g","className":"CategoryTheory.Mono"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Constructions.Pullbacks","Mathlib.CategoryTheory.Preadditive.Biproducts","Mathlib.CategoryTheory.Limits.Shapes.Images","Mathlib.CategoryTheory.Limits.Constructions.LimitsOfProductsAndEqualizers","Mathlib.CategoryTheory.Abelian.NonPreadditive"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L793-L811","name":"CategoryTheory.NonPreadditiveAbelian.abelian","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.NonPreadditiveAbelian.abelian","doc":"Every NonPreadditiveAbelian category can be promoted to an abelian category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L778-L781","name":"CategoryTheory.Abelian.mono_inl_of_factor_thru_epi_mono_factorization","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_inl_of_factor_thru_epi_mono_factorization","doc":"Suppose `f` and `g` are two morphisms with a common domain and suppose we have written `g` as\nan epimorphism followed by a monomorphism. If `f` factors through the epi part of this\nfactorization, then any pushout of `g` along `f` is a monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L768-L772","name":"CategoryTheory.Abelian.mono_inl_of_isColimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_inl_of_isColimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L761-L765","name":"CategoryTheory.Abelian.mono_inr_of_isColimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_inr_of_isColimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L737-L758","name":"CategoryTheory.Abelian.mono_pushout_of_mono_g","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_pushout_of_mono_g","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L713-L734","name":"CategoryTheory.Abelian.mono_pushout_of_mono_f","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_pushout_of_mono_f","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L701-L704","name":"CategoryTheory.Abelian.epi_fst_of_factor_thru_epi_mono_factorization","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_fst_of_factor_thru_epi_mono_factorization","doc":"Suppose `f` and `g` are two morphisms with a common codomain and suppose we have written `g` as\nan epimorphism followed by a monomorphism. If `f` factors through the mono part of this\nfactorization, then any pullback of `g` along `f` is an epimorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L692-L695","name":"CategoryTheory.Abelian.epi_fst_of_isLimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_fst_of_isLimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L686-L689","name":"CategoryTheory.Abelian.epi_snd_of_isLimit","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_snd_of_isLimit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L653-L683","name":"CategoryTheory.Abelian.epi_pullback_of_epi_g","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_pullback_of_epi_g","doc":"In an abelian category, the pullback of an epimorphism is an epimorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L619-L649","name":"CategoryTheory.Abelian.epi_pullback_of_epi_f","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_pullback_of_epi_f","doc":"In an abelian category, the pullback of an epimorphism is an epimorphism.\nProof from [aluffi2016, IX.2.3], cf. [borceux-vol2, 1.7.6] "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L600-L608","name":"CategoryTheory.Abelian.BiproductToPushoutIsCokernel.isColimitBiproductToPushout","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.BiproductToPushoutIsCokernel.isColimitBiproductToPushout","doc":"The cofork induced by the canonical map `Y ⊞ Z ⟶ pushout f g` is in fact a colimit cokernel\ncofork. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L593-L595","name":"CategoryTheory.Abelian.BiproductToPushoutIsCokernel.biproductToPushoutCofork","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.BiproductToPushoutIsCokernel.biproductToPushoutCofork","doc":"The canonical map `Y ⊞ Z ⟶ pushout f g` induces a cokernel cofork on the map\n`X ⟶ Y ⊞ Z` induced by `f` and `-g`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L587-L588","name":"CategoryTheory.Abelian.BiproductToPushoutIsCokernel.biproductToPushout","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.BiproductToPushoutIsCokernel.biproductToPushout","doc":"The canonical map `Y ⊞ Z ⟶ pushout f g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L566-L577","name":"CategoryTheory.Abelian.PullbackToBiproductIsKernel.isLimitPullbackToBiproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.PullbackToBiproductIsKernel.isLimitPullbackToBiproduct","doc":"The canonical map `pullback f g ⟶ X ⊞ Y` is a kernel of the map induced by\n`(f, -g)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L559-L561","name":"CategoryTheory.Abelian.PullbackToBiproductIsKernel.pullbackToBiproductFork","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.PullbackToBiproductIsKernel.pullbackToBiproductFork","doc":"The canonical map `pullback f g ⟶ X ⊞ Y` induces a kernel cone on the map\n`biproduct X Y ⟶ Z` induced by `f` and `g`. A slightly more intuitive way to think of\nthis may be that it induces an equalizer fork on the maps induced by `(f, 0)` and\n`(0, g)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L551-L552","name":"CategoryTheory.Abelian.PullbackToBiproductIsKernel.pullbackToBiproduct","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.PullbackToBiproductIsKernel.pullbackToBiproduct","doc":"The canonical map `pullback f g ⟶ X ⊞ Y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L536-L537","name":"CategoryTheory.Abelian.hasFiniteColimits","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasFiniteColimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L532-L533","name":"CategoryTheory.Abelian.hasFiniteLimits","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasFiniteLimits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L528-L529","name":"CategoryTheory.Abelian.hasPushouts","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasPushouts","doc":"Any abelian category has pushouts "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L523-L524","name":"CategoryTheory.Abelian.hasCoequalizers","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasCoequalizers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L515-L516","name":"CategoryTheory.Abelian.hasPullbacks","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasPullbacks","doc":"Any abelian category has pullbacks "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L510-L511","name":"CategoryTheory.Abelian.hasEqualizers","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasEqualizers","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L500-L503","name":"CategoryTheory.Abelian.monoLift_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.monoLift_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L499-L499","name":"CategoryTheory.Abelian.monoLift_comp_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.monoLift_comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L495-L496","name":"CategoryTheory.Abelian.monoLift","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.monoLift","doc":"In an abelian category, any morphism that turns to zero when postcomposed with the cokernel of a\nmonomorphism factors through that monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L488-L490","name":"CategoryTheory.Abelian.comp_epiDesc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.comp_epiDesc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L487-L487","name":"CategoryTheory.Abelian.comp_epiDesc_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.comp_epiDesc_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L483-L484","name":"CategoryTheory.Abelian.epiDesc","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epiDesc","doc":"In an abelian category, any morphism that turns to zero when precomposed with the kernel of an\nepimorphism factors through that epimorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L474-L476","name":"CategoryTheory.Abelian.monoIsKernelOfCokernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.monoIsKernelOfCokernel","doc":"In an abelian category, a mono is the kernel of its cokernel. More precisely:\nIf `f` is a monomorphism and `s` is some colimit cokernel cocone on `f`, then `f` is a kernel\nof `cofork.π s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L466-L468","name":"CategoryTheory.Abelian.epiIsCokernelOfKernel","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epiIsCokernelOfKernel","doc":"In an abelian category, an epi is the cokernel of its kernel. More precisely:\nIf `f` is an epimorphism and `s` is some limit kernel cone on `f`, then `f` is a cokernel\nof `fork.ι s`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L446-L452","name":"CategoryTheory.Abelian.imageIsoImage_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageIsoImage_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L442-L443","name":"CategoryTheory.Abelian.imageIsoImage_hom_comp_image_ι","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageIsoImage_hom_comp_image_ι","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L438-L439","name":"CategoryTheory.Abelian.imageIsoImage","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageIsoImage","doc":"There is a canonical isomorphism between the abelian image and the categorical image of a\nmorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L430-L433","name":"CategoryTheory.Abelian.factorThruImage_comp_coimageIsoImage'_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.factorThruImage_comp_coimageIsoImage'_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L421-L427","name":"CategoryTheory.Abelian.coimageIsoImage'_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageIsoImage'_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L417-L418","name":"CategoryTheory.Abelian.coimageIsoImage'","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageIsoImage'","doc":"There is a canonical isomorphism between the abelian coimage and the categorical image of a\nmorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L411-L412","name":"CategoryTheory.Abelian.coimageIsoImage","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageIsoImage","doc":"There is a canonical isomorphism between the abelian coimage and the abelian image of a\nmorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L400-L407","name":"CategoryTheory.Abelian.instIsIsoCoimagePreadditiveHasZeroMorphismsToPreadditiveHas_kernelsHas_cokernelsImageCoimageImageComparison","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.instIsIsoCoimagePreadditiveHasZeroMorphismsToPreadditiveHas_kernelsHas_cokernelsImageCoimageImageComparison","doc":"The coimage-image comparison morphism is always an isomorphism in an abelian category.\nSee `CategoryTheory.Abelian.ofCoimageImageComparisonIsIso` for the converse.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L383-L384","name":"CategoryTheory.Abelian.instHasStrongEpiMonoFactorisations","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.instHasStrongEpiMonoFactorisations","doc":"An abelian category has strong epi-mono factorisations. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L370-L375","name":"CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation","doc":"Factoring through the coimage is a strong epi-mono factorisation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L369-L369","name":"CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_m","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_m","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L369-L369","name":"CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_e","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_e","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L369-L369","name":"CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_I","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.coimageStrongEpiMonoFactorisation_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L360-L365","name":"CategoryTheory.Abelian.imageStrongEpiMonoFactorisation","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageStrongEpiMonoFactorisation","doc":"Factoring through the image is a strong epi-mono factorisation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L359-L359","name":"CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_m","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_m","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L359-L359","name":"CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_I","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L359-L359","name":"CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_e","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.imageStrongEpiMonoFactorisation_e","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L352-L353","name":"CategoryTheory.Abelian.comp_coimage_π_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.comp_coimage_π_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L348-L349","name":"CategoryTheory.Abelian.image_ι_comp_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.image_ι_comp_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L336-L339","name":"CategoryTheory.Abelian.epi_of_cokernel_π_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.epi_of_cokernel_π_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L332-L333","name":"CategoryTheory.Abelian.mono_of_kernel_ι_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mono_of_kernel_ι_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L319-L319","name":"CategoryTheory.Abelian.isIso_factorThruCoimage","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.isIso_factorThruCoimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L317-L317","name":"CategoryTheory.Abelian.instMonoCoimageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruCoimage","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.instMonoCoimageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruCoimage","doc":"The canonical morphism `i : coimage f ⟶ Q` is a monomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L313-L313","name":"CategoryTheory.Abelian.isIso_factorThruImage","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.isIso_factorThruImage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L311-L311","name":"CategoryTheory.Abelian.instEpiImageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruImage","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.instEpiImageToHasZeroMorphismsNonPreadditiveAbelianHas_kernelsHas_cokernelsFactorThruImage","doc":"The map `p : P ⟶ image f` is an epimorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L295-L296","name":"CategoryTheory.Abelian.nonPreadditiveAbelian","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.nonPreadditiveAbelian","doc":"Every abelian category is, in particular, `NonPreadditiveAbelian`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L288-L289","name":"CategoryTheory.Abelian.hasZeroObject","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasZeroObject","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L284-L285","name":"CategoryTheory.Abelian.hasBinaryBiproducts","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasBinaryBiproducts","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L278-L279","name":"CategoryTheory.Abelian.hasFiniteBiproducts","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.hasFiniteBiproducts","doc":"An abelian category has finite biproducts. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L263-L263","name":"CategoryTheory.Abelian.ofCoimageImageComparisonIsIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.ofCoimageImageComparisonIsIso","doc":"A preadditive category with kernels, cokernels, and finite products,\nin which the coimage-image comparison morphism is always an isomorphism,\nis an abelian category.\n\nThe Stacks project uses this characterisation at the definition of an abelian category.\nSee <https://stacks.math.columbia.edu/tag/0109>.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L223-L244","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.normalEpiCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.normalEpiCategory","doc":"A category with finite products in which coimage-image comparisons are all isomorphisms\nis a normal epi category.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L197-L217","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.normalMonoCategory","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.normalMonoCategory","doc":"A category with finite products in which coimage-image comparisons are all isomorphisms\nis a normal mono category.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L186-L187","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.hasImages","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.hasImages","doc":"A category in which coimage-image comparisons are all isomorphisms has images. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L179-L181","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationM","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationM","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L174-L177","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationE","kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.instIsIsoIImageMonoFactorisationE","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L161-L171","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageFactorisation","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageFactorisation","doc":"If the coimage-image comparison morphism for a morphism `f` is an isomorphism,\nwe obtain an image factorisation of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L151-L156","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_e'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_e'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L143-L148","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation","doc":"The factorisation of a morphism through its abelian image. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L142-L142","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_I","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_I","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L142-L142","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_m","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_m","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L142-L142","name":"CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_e","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.OfCoimageImageComparisonIsIso.imageMonoFactorisation_e","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L115-L115","name":"CategoryTheory.Abelian.has_cokernels","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.has_cokernels","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L114-L114","name":"CategoryTheory.Abelian.has_kernels","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.has_kernels","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L113-L113","name":"CategoryTheory.Abelian.has_finite_products","kind":"def","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.has_finite_products","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L112-L115","name":"CategoryTheory.Abelian","kind":"class","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian","doc":"A (preadditive) category `C` is called abelian if it has all finite products,\nall kernels and cokernels, and if every monomorphism is the kernel of some morphism\nand every epimorphism is the cokernel of some morphism.\n\n(This definition implies the existence of zero objects:\nfinite products give a terminal object, and in a preadditive category\nany terminal object is a zero object.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Abelian/Basic.lean#L1-L1","name":"CategoryTheory.Abelian.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian.mk","doc":""}]}