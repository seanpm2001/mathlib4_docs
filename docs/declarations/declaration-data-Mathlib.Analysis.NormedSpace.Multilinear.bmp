{"name":"Mathlib.Analysis.NormedSpace.Multilinear","instances":[{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace"],"name":"ContinuousMultilinearMap.hasOpNorm","className":"Norm"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace"],"name":"ContinuousMultilinearMap.hasOpNorm'","className":"Norm"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace"],"name":"ContinuousMultilinearMap.normedAddCommGroup","className":"NormedAddCommGroup"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace"],"name":"ContinuousMultilinearMap.normedAddCommGroup'","className":"NormedAddCommGroup"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","ContinuousMultilinearMap.normedAddCommGroup"],"name":"ContinuousMultilinearMap.normedSpace","className":"NormedSpace"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","ContinuousMultilinearMap.normedAddCommGroup'"],"name":"ContinuousMultilinearMap.normedSpace'","className":"NormedSpace"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","PseudoMetricSpace.toUniformSpace","ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","ContinuousMultilinearMap.normedAddCommGroup"],"name":"ContinuousMultilinearMap.completeSpace","className":"CompleteSpace"},{"typeNames":["ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","ContinuousMultilinearMap","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","NormedSpace.toModule","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","ContinuousMultilinearMap.normedAddCommGroup","ContinuousMultilinearMap.instSMulContinuousMultilinearMap","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","NontriviallyNormedField.toNormedField","NormedSpace.toModule","NormedSpace.toModule","Module.toDistribMulAction"],"name":"continuousConstSMul","className":"ContinuousConstSMul"}],"imports":["Init","Mathlib.Analysis.NormedSpace.OperatorNorm","Mathlib.Topology.Algebra.Module.Multilinear"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1903-L1908","name":"ContinuousMultilinearMap.curryFinFinset_apply_const","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset_apply_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1895-L1898","name":"ContinuousMultilinearMap.curryFinFinset_symm_apply_const","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset_symm_apply_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1886-L1890","name":"ContinuousMultilinearMap.curryFinFinset_symm_apply_piecewise_const","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset_symm_apply_piecewise_const","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1877-L1881","name":"ContinuousMultilinearMap.curryFinFinset_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1869-L1872","name":"ContinuousMultilinearMap.curryFinFinset_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1859-L1862","name":"ContinuousMultilinearMap.curryFinFinset","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryFinFinset","doc":"If `s : Finset (Fin n)` is a finite set of cardinality `k` and its complement has cardinality\n`l`, then the space of continuous multilinear maps `G [×n]→L[𝕜] G'` of `n` variables is isomorphic\nto the space of continuous multilinear maps `G [×k]→L[𝕜] G [×l]→L[𝕜] G'` of `k` variables taking\nvalues in the space of continuous multilinear maps of `l` variables. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1827-L1846","name":"ContinuousMultilinearMap.currySumEquiv","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.currySumEquiv","doc":"Linear isometric equivalence between the space of continuous multilinear maps with variables\nindexed by `ι ⊕ ι'` and the space of continuous multilinear maps with variables indexed by `ι`\ntaking values in the space of continuous multilinear maps with variables indexed by `ι'`.\n\nThe forward and inverse functions are `ContinuousMultilinearMap.currySum`\nand `ContinuousMultilinearMap.uncurrySum`. Use this definition only if you need\nsome properties of `LinearIsometryEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1812-L1815","name":"ContinuousMultilinearMap.uncurrySum_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurrySum_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1802-L1808","name":"ContinuousMultilinearMap.uncurrySum","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurrySum","doc":"A continuous multilinear map with variables indexed by `ι` taking values in the space of\ncontinuous multilinear maps with variables indexed by `ι'` defines a continuous multilinear map with\nvariables indexed by `ι ⊕ ι'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1794-L1796","name":"ContinuousMultilinearMap.currySum_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.currySum_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1787-L1790","name":"ContinuousMultilinearMap.currySum","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.currySum","doc":"A continuous multilinear map with variables indexed by `ι ⊕ ι'` defines a continuous\nmultilinear map with variables indexed by `ι` taking values in the space of continuous multilinear\nmaps with variables indexed by `ι'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1771-L1777","name":"ContinuousMultilinearMap.domDomCongrₗᵢ","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.domDomCongrₗᵢ","doc":"An equivalence of the index set defines a linear isometric equivalence between the spaces\nof multilinear maps. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1762-L1766","name":"ContinuousMultilinearMap.norm_domDomCongr","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_domDomCongr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1752-L1754","name":"continuousMultilinearCurryFin1_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin1_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1746-L1748","name":"continuousMultilinearCurryFin1_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin1_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1738-L1740","name":"continuousMultilinearCurryFin1","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin1","doc":"Continuous multilinear maps from `G^1` to `G'` are isomorphic with continuous linear maps from\n`G` to `G'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1724-L1726","name":"continuousMultilinearCurryFin0_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin0_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1718-L1720","name":"continuousMultilinearCurryFin0_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin0_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1705-L1712","name":"continuousMultilinearCurryFin0","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryFin0","doc":"The continuous linear isomorphism between elements of a normed space, and continuous multilinear\nmaps in `0` variables with values in this normed space.\n\nThe direct and inverse maps are `uncurry0` and `curry0`. Use these unless you need the full\nframework of linear isometric equivs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1695-L1695","name":"ContinuousMultilinearMap.uncurry0_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry0_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1685-L1692","name":"ContinuousMultilinearMap.fin0_apply_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.fin0_apply_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1677-L1679","name":"ContinuousMultilinearMap.curry0_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curry0_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1671-L1673","name":"ContinuousMultilinearMap.curry0_uncurry0","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curry0_uncurry0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1665-L1666","name":"ContinuousMultilinearMap.uncurry0_curry0","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry0_curry0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1659-L1662","name":"ContinuousMultilinearMap.apply_zero_curry0","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.apply_zero_curry0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1654-L1655","name":"ContinuousMultilinearMap.uncurry0_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry0_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1646-L1648","name":"ContinuousMultilinearMap.curry0_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curry0_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1639-L1640","name":"ContinuousMultilinearMap.curry0","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curry0","doc":"Associating to an element `x` of a vector space `E₂` the continuous multilinear map in `0`\nvariables taking the (unique) value `x` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1630-L1632","name":"ContinuousMultilinearMap.uncurry0","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry0","doc":"Associating to a continuous multilinear map in `0` variables the unique value it takes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1611-L1614","name":"ContinuousMultilinearMap.uncurryRight_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurryRight_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1605-L1607","name":"ContinuousMultilinearMap.curryRight_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryRight_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1598-L1601","name":"continuousMultilinearCurryRightEquiv_symm_apply'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv_symm_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1591-L1594","name":"continuousMultilinearCurryRightEquiv_apply'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv_apply'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1584-L1587","name":"continuousMultilinearCurryRightEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1577-L1580","name":"continuousMultilinearCurryRightEquiv_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1570-L1571","name":"continuousMultilinearCurryRightEquiv'","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv'","doc":"The space of continuous multilinear maps on `Π(i : Fin (n+1)), G` is canonically isomorphic to\nthe space of continuous multilinear maps on `Π(i : Fin n), G` with values in the space\nof continuous linear maps on `G`, by separating the last variable. We register this\nisomorphism as a continuous linear equiv in `continuousMultilinearCurryRightEquiv' 𝕜 n G G'`.\nFor a version allowing dependent types, see `continuousMultilinearCurryRightEquiv`. When there\nare no dependent types, use the primed version as it helps Lean a lot for unification.\n\nThe direct and inverse maps are given by `f.uncurryRight` and `f.curryRight`. Use these\nunless you need the full framework of linear isometric equivs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1539-L1556","name":"continuousMultilinearCurryRightEquiv","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryRightEquiv","doc":"The space of continuous multilinear maps on `Π(i : Fin (n+1)), Ei i` is canonically isomorphic to\nthe space of continuous multilinear maps on `Π(i : Fin n), Ei <| castSucc i` with values in the\nspace of continuous linear maps on `Ei (last n)`, by separating the last variable. We register this\nisomorphism as a continuous linear equiv in `continuousMultilinearCurryRightEquiv 𝕜 Ei G`.\nThe algebraic version (without topology) is given in `multilinearCurryRightEquiv 𝕜 Ei G`.\n\nThe direct and inverse maps are given by `f.uncurryRight` and `f.curryRight`. Use these\nunless you need the full framework of linear isometric equivs.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1521-L1524","name":"ContinuousMultilinearMap.uncurry_curryRight","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry_curryRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1511-L1517","name":"ContinuousMultilinearMap.curry_uncurryRight","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curry_uncurryRight","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1505-L1507","name":"ContinuousMultilinearMap.curryRight_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1486-L1501","name":"ContinuousMultilinearMap.curryRight","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryRight","doc":"Given a continuous multilinear map `f` in `n+1` variables, split the last variable to obtain\na continuous multilinear map in `n` variables into continuous linear maps, given by\n`m ↦ (x ↦ f (snoc m x))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1477-L1480","name":"ContinuousMultilinearMap.uncurryRight_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurryRight_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1465-L1473","name":"ContinuousMultilinearMap.uncurryRight","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurryRight","doc":"Given a continuous linear map `f` from continuous multilinear maps on `n` variables to\ncontinuous linear maps on `E 0`, construct the corresponding continuous multilinear map on `n+1`\nvariables obtained by concatenating the variables, given by `m ↦ f (init m) (m (last n))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1453-L1456","name":"ContinuousLinearMap.uncurryLeft_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.uncurryLeft_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1447-L1449","name":"ContinuousMultilinearMap.curryLeft_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryLeft_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1440-L1443","name":"continuousMultilinearCurryLeftEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryLeftEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1432-L1435","name":"continuousMultilinearCurryLeftEquiv_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryLeftEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1408-L1425","name":"continuousMultilinearCurryLeftEquiv","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousMultilinearCurryLeftEquiv","doc":"The space of continuous multilinear maps on `Π(i : Fin (n+1)), E i` is canonically isomorphic to\nthe space of continuous linear maps from `E 0` to the space of continuous multilinear maps on\n`Π(i : Fin n), E i.succ`, by separating the first variable. We register this isomorphism in\n`continuousMultilinearCurryLeftEquiv 𝕜 E E₂`. The algebraic version (without topology) is given\nin `multilinearCurryLeftEquiv 𝕜 E E₂`.\n\nThe direct and inverse maps are given by `f.uncurryLeft` and `f.curryLeft`. Use these\nunless you need the full framework of linear isometric equivs. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1393-L1395","name":"ContinuousMultilinearMap.uncurry_curryLeft","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.uncurry_curryLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1383-L1389","name":"ContinuousLinearMap.curry_uncurryLeft","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.curry_uncurryLeft","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1377-L1379","name":"ContinuousMultilinearMap.curryLeft_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1357-L1373","name":"ContinuousMultilinearMap.curryLeft","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.curryLeft","doc":"Given a continuous multilinear map `f` in `n+1` variables, split the first variable to obtain\na continuous linear map into continuous multilinear maps in `n` variables, given by\n`x ↦ (m ↦ f (cons x m))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1348-L1351","name":"ContinuousLinearMap.uncurryLeft_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.uncurryLeft_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1339-L1344","name":"ContinuousLinearMap.uncurryLeft","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.uncurryLeft","doc":"Given a continuous linear map `f` from `E 0` to continuous multilinear maps on `n` variables,\nconstruct the corresponding continuous multilinear map on `n+1` variables obtained by concatenating\nthe variables, given by `m ↦ f (m 0) (tail m)`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1323-L1330","name":"ContinuousMultilinearMap.norm_map_snoc_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_map_snoc_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1314-L1320","name":"ContinuousMultilinearMap.norm_map_cons_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_map_cons_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1301-L1311","name":"ContinuousMultilinearMap.norm_map_init_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_map_init_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1288-L1298","name":"ContinuousLinearMap.norm_map_tail_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.norm_map_tail_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1264-L1266","name":"continuousConstSMul","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#continuousConstSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1251-L1255","name":"ContinuousMultilinearMap.compContinuousLinearMapEquivL_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.compContinuousLinearMapEquivL_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1242-L1245","name":"ContinuousMultilinearMap.compContinuousLinearMapEquivL_symm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.compContinuousLinearMapEquivL_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1220-L1238","name":"ContinuousMultilinearMap.compContinuousLinearMapEquivL","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.compContinuousLinearMapEquivL","doc":"`ContinuousMultilinearMap.compContinuousLinearMap` as a bundled continuous linear equiv,\ngiven `f : Π i, E i ≃L[𝕜] E₁ i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1211-L1213","name":"ContinuousMultilinearMap.norm_compContinuousLinearMapL_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_compContinuousLinearMapL_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1206-L1208","name":"ContinuousMultilinearMap.compContinuousLinearMapL_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.compContinuousLinearMapL_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1196-L1202","name":"ContinuousMultilinearMap.compContinuousLinearMapL","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.compContinuousLinearMapL","doc":"`ContinuousMultilinearMap.compContinuousLinearMap` as a bundled continuous linear map.\nThis implementation fixes `f : Π i, E i →L[𝕜] E₁ i`.\n\nTODO: Actually, the map is multilinear in `f` but an attempt to formalize this failed because of\nissues with class instances. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1176-L1188","name":"ContinuousMultilinearMap.norm_compContinuous_linearIsometryEquiv","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_compContinuous_linearIsometryEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1167-L1173","name":"ContinuousMultilinearMap.norm_compContinuous_linearIsometry_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_compContinuous_linearIsometry_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1155-L1164","name":"ContinuousMultilinearMap.norm_compContinuousLinearMap_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_compContinuousLinearMap_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1143-L1146","name":"MultilinearMap.mkContinuousMultilinear_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousMultilinear_norm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1136-L1140","name":"MultilinearMap.mkContinuousMultilinear_norm_le'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousMultilinear_norm_le'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1130-L1133","name":"MultilinearMap.mkContinuousMultilinear_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousMultilinear_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1111-L1126","name":"MultilinearMap.mkContinuousMultilinear","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousMultilinear","doc":"Given a map `f : MultilinearMap 𝕜 E (MultilinearMap 𝕜 E' G)` and an estimate\n`H : ∀ m m', ‖f m m'‖ ≤ C * ∏ i, ‖m i‖ * ∏ i, ‖m' i‖`, upgrade all `MultilinearMap`s in the type to\n`ContinuousMultilinearMap`s. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1103-L1105","name":"MultilinearMap.mkContinuousLinear_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousLinear_norm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1097-L1100","name":"MultilinearMap.mkContinuousLinear_norm_le'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousLinear_norm_le'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1079-L1094","name":"MultilinearMap.mkContinuousLinear","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuousLinear","doc":"Given a map `f : G →ₗ[𝕜] MultilinearMap 𝕜 E G'` and an estimate\n`H : ∀ x m, ‖f x m‖ ≤ C * ‖x‖ * ∏ i, ‖m i‖`, construct a continuous linear\nmap from `G` to `ContinuousMultilinearMap 𝕜 E G'`.\n\nIn order to lift, e.g., a map `f : (MultilinearMap 𝕜 E G) →ₗ[𝕜] MultilinearMap 𝕜 E' G'`\nto a map `(ContinuousMultilinearMap 𝕜 E G) →L[𝕜] ContinuousMultilinearMap 𝕜 E' G'`,\none can apply this construction to `f.comp ContinuousMultilinearMap.toMultilinearMapLinear`\nwhich is a linear map from `ContinuousMultilinearMap 𝕜 E G` to `MultilinearMap 𝕜 E' G'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1059-L1064","name":"LinearIsometry.norm_compContinuousMultilinearMap","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#LinearIsometry.norm_compContinuousMultilinearMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1030-L1053","name":"ContinuousLinearMap.flipMultilinear","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.flipMultilinear","doc":"Flip arguments in `f : G →L[𝕜] ContinuousMultilinearMap 𝕜 E G'` to get\n`ContinuousMultilinearMap 𝕜 E (G →L[𝕜] G')` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1029-L1029","name":"ContinuousLinearMap.flipMultilinear_apply_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.flipMultilinear_apply_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1020-L1023","name":"ContinuousLinearEquiv.compContinuousMultilinearMapL_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearEquiv.compContinuousMultilinearMapL_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L1012-L1014","name":"ContinuousLinearEquiv.compContinuousMultilinearMapL_symm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearEquiv.compContinuousMultilinearMapL_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L993-L1008","name":"ContinuousLinearEquiv.compContinuousMultilinearMapL","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearEquiv.compContinuousMultilinearMapL","doc":"`ContinuousLinearMap.compContinuousMultilinearMap` as a bundled\ncontinuous linear equiv. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L973-L985","name":"ContinuousLinearMap.compContinuousMultilinearMapL","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.compContinuousMultilinearMapL","doc":"`ContinuousLinearMap.compContinuousMultilinearMap` as a bundled continuous bilinear map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L960-L965","name":"ContinuousLinearMap.norm_compContinuousMultilinearMap_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousLinearMap.norm_compContinuousMultilinearMap_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L942-L953","name":"ContinuousMultilinearMap.piFieldEquiv","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.piFieldEquiv","doc":"Continuous multilinear maps on `𝕜^n` with values in `G` are in bijection with `G`, as such a\ncontinuous multilinear map is completely determined by its value on the constant vector made of\nones. We register this bijection as a linear isometry in\n`ContinuousMultilinearMap.piFieldEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L932-L933","name":"ContinuousMultilinearMap.mkPiField_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L928-L929","name":"ContinuousMultilinearMap.mkPiField_zero","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L921-L925","name":"ContinuousMultilinearMap.mkPiField_eq_iff","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L916-L918","name":"ContinuousMultilinearMap.norm_mkPiField","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiField","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L910-L912","name":"ContinuousMultilinearMap.mkPiField_apply_one_eq_self","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField_apply_one_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L905-L907","name":"ContinuousMultilinearMap.mkPiField_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L896-L899","name":"ContinuousMultilinearMap.mkPiField","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.mkPiField","doc":"The canonical continuous multilinear map on `𝕜^ι`, associating to `m` the product of all the\n`m i` (multiplied by a fixed reference element `z` in the target module) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L879-L887","name":"ContinuousMultilinearMap.norm_mkPiAlgebraFin","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebraFin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L868-L875","name":"ContinuousMultilinearMap.norm_mkPiAlgebraFin_zero","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebraFin_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L862-L865","name":"ContinuousMultilinearMap.norm_mkPiAlgebraFin_le_of_pos","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebraFin_le_of_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L849-L859","name":"ContinuousMultilinearMap.norm_mkPiAlgebraFin_succ_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebraFin_succ_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L835-L840","name":"ContinuousMultilinearMap.norm_mkPiAlgebra","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L823-L831","name":"ContinuousMultilinearMap.norm_mkPiAlgebra_of_empty","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebra_of_empty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L815-L820","name":"ContinuousMultilinearMap.norm_mkPiAlgebra_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_mkPiAlgebra_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L804-L807","name":"ContinuousMultilinearMap.norm_restr","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_restr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L798-L801","name":"ContinuousMultilinearMap.restr","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.restr","doc":"Given a continuous multilinear map `f` on `n` variables (parameterized by `Fin n`) and a subset\n`s` of `k` of these variables, one gets a new continuous multilinear map on `Fin k` by varying\nthese variables, and fixing the other ones equal to a given value `z`. It is denoted by\n`f.restr s hk z`, where `hk` is a proof that the cardinality of `s` is `k`. The implicit\nidentification between `Fin k` and `s` that we use is the canonical (increasing) bijection. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L784-L788","name":"MultilinearMap.mkContinuous_norm_le'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuous_norm_le'","doc":"If a continuous multilinear map is constructed from a multilinear map via the constructor\n`mkContinuous`, then its norm is bounded by the bound given to the constructor if it is\nnonnegative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L776-L778","name":"MultilinearMap.mkContinuous_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuous_norm_le","doc":"If a continuous multilinear map is constructed from a multilinear map via the constructor\n`mkContinuous`, then its norm is bounded by the bound given to the constructor if it is\nnonnegative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L702-L770","name":"ContinuousMultilinearMap.completeSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.completeSpace","doc":"If the target space is complete, the space of continuous multilinear maps with its norm is also\ncomplete. The proof is essentially the same as for the space of continuous linear maps (modulo the\naddition of `Finset.prod` where needed. The duplication could be avoided by deducing the linear\ncase from the multilinear case via a currying isomorphism. However, this would mess up imports,\nand it is more satisfactory to have the simplest case as a standalone proof. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L690-L692","name":"ContinuousMultilinearMap.tsum_eval","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.tsum_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L681-L687","name":"ContinuousMultilinearMap.hasSum_eval","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.hasSum_eval","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L676-L678","name":"ContinuousMultilinearMap.continuous_eval_left","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.continuous_eval_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L646-L673","name":"ContinuousMultilinearMap.continuous_eval","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.continuous_eval","doc":"Applying a multilinear map to a vector is continuous in both coordinates. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L640-L642","name":"ContinuousMultilinearMap.norm_image_sub_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_image_sub_le","doc":"The difference `f m₁ - f m₂` is controlled in terms of `‖f‖` and `‖m₁ - m₂‖`, less precise\nversion. For a more precise but less usable version, see `norm_image_sub_le'`.\nThe bound is `‖f m - f m'‖ ≤ ‖f‖ * card ι * ‖m - m'‖ * (max ‖m‖ ‖m'‖) ^ (card ι - 1)`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L632-L634","name":"ContinuousMultilinearMap.norm_image_sub_le'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_image_sub_le'","doc":"The difference `f m₁ - f m₂` is controlled in terms of `‖f‖` and `‖m₁ - m₂‖`, precise version.\nFor a less precise but more usable version, see `norm_image_sub_le`. The bound reads\n`‖f m - f m'‖ ≤\n  ‖f‖ * ‖m 1 - m' 1‖ * max ‖m 2‖ ‖m' 2‖ * max ‖m 3‖ ‖m' 3‖ * ... * max ‖m n‖ ‖m' n‖ + ...`,\nwhere the other terms in the sum are the same products where `1` is replaced by any `i`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L619-L622","name":"ContinuousMultilinearMap.continuous_restrictScalars","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.continuous_restrictScalars","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L613-L614","name":"ContinuousMultilinearMap.restrictScalarsLinear","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.restrictScalarsLinear","doc":"`ContinuousMultilinearMap.restrictScalars` as a `ContinuousLinearMap`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L605-L609","name":"ContinuousMultilinearMap.restrictScalarsₗᵢ","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.restrictScalarsₗᵢ","doc":"`ContinuousMultilinearMap.restrictScalars` as a `LinearIsometry`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L599-L599","name":"ContinuousMultilinearMap.norm_restrictScalars","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_restrictScalars","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L572-L583","name":"ContinuousMultilinearMap.piₗᵢ","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.piₗᵢ","doc":"`ContinuousMultilinearMap.pi` as a `LinearIsometryEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L556-L567","name":"ContinuousMultilinearMap.prodL","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.prodL","doc":"`ContinuousMultilinearMap.prod` as a `LinearIsometryEquiv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L545-L546","name":"ContinuousMultilinearMap.nnnorm_constOfIsEmpty","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.nnnorm_constOfIsEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L537-L541","name":"ContinuousMultilinearMap.norm_constOfIsEmpty","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_constOfIsEmpty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L529-L531","name":"ContinuousMultilinearMap.nnnorm_ofSubsingleton","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.nnnorm_ofSubsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L524-L525","name":"ContinuousMultilinearMap.nnnorm_ofSubsingleton_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.nnnorm_ofSubsingleton_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L515-L521","name":"ContinuousMultilinearMap.norm_ofSubsingleton","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_ofSubsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L509-L511","name":"ContinuousMultilinearMap.norm_ofSubsingleton_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_ofSubsingleton_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L490-L502","name":"ContinuousMultilinearMap.norm_pi","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_pi","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L476-L487","name":"ContinuousMultilinearMap.op_norm_prod","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_prod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L472-L473","name":"ContinuousMultilinearMap.le_of_op_nnnorm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_of_op_nnnorm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L466-L469","name":"ContinuousMultilinearMap.le_op_nnnorm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_op_nnnorm","doc":"The fundamental property of the operator norm of a continuous multilinear map:\n`‖f m‖` is bounded by `‖f‖` times the product of the `‖m i‖`, `nnnorm` version. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L457-L461","name":"ContinuousMultilinearMap.le_op_norm_mul_pow_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_op_norm_mul_pow_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L452-L454","name":"ContinuousMultilinearMap.le_op_norm_mul_pow_card_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_op_norm_mul_pow_card_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L446-L449","name":"ContinuousMultilinearMap.le_op_norm_mul_prod_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_op_norm_mul_prod_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L442-L443","name":"ContinuousMultilinearMap.normedSpace'","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.normedSpace'","doc":"An alias of `ContinuousMultilinearMap.normedSpace` with non-dependent types to help typeclass\nsearch. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L436-L437","name":"ContinuousMultilinearMap.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.normedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L431-L433","name":"ContinuousMultilinearMap.normedAddCommGroup'","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.normedAddCommGroup'","doc":"An alias of `ContinuousMultilinearMap.normedAddCommGroup` with non-dependent types to help\ntypeclass search. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L420-L426","name":"ContinuousMultilinearMap.normedAddCommGroup","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.normedAddCommGroup","doc":"Continuous multilinear maps themselves form a normed space with respect to\nthe operator norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L411-L415","name":"ContinuousMultilinearMap.op_norm_neg","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L403-L408","name":"ContinuousMultilinearMap.op_norm_smul_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_smul_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L391-L396","name":"ContinuousMultilinearMap.op_norm_zero_iff","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_zero_iff","doc":"A continuous linear map is zero iff its norm vanishes. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L386-L387","name":"ContinuousMultilinearMap.op_norm_zero","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L379-L383","name":"ContinuousMultilinearMap.op_norm_add_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_add_le","doc":"The operator norm satisfies the triangle inequality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L374-L375","name":"ContinuousMultilinearMap.op_norm_le_bound","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_le_bound","doc":"If one controls the norm of every `f x`, then one controls the norm of `f`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L362-L370","name":"ContinuousMultilinearMap.unit_le_op_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.unit_le_op_norm","doc":"The image of the unit ball under a continuous multilinear map is bounded. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L356-L358","name":"ContinuousMultilinearMap.ratio_le_op_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.ratio_le_op_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L352-L353","name":"ContinuousMultilinearMap.le_of_op_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_of_op_norm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L337-L349","name":"ContinuousMultilinearMap.le_op_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.le_op_norm","doc":"The fundamental property of the operator norm of a continuous multilinear map:\n`‖f m‖` is bounded by `‖f‖` times the product of the `‖m i‖`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L331-L332","name":"ContinuousMultilinearMap.op_norm_nonneg","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.op_norm_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L326-L328","name":"ContinuousMultilinearMap.bounds_bddBelow","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.bounds_bddBelow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L320-L323","name":"ContinuousMultilinearMap.bounds_nonempty","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.bounds_nonempty","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L314-L315","name":"ContinuousMultilinearMap.norm_def","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.norm_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L310-L311","name":"ContinuousMultilinearMap.hasOpNorm'","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.hasOpNorm'","doc":"An alias of `ContinuousMultilinearMap.hasOpNorm` with non-dependent types to help typeclass\nsearch. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L304-L305","name":"ContinuousMultilinearMap.hasOpNorm","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.hasOpNorm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L300-L301","name":"ContinuousMultilinearMap.opNorm","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.opNorm","doc":"The operator norm of a continuous multilinear map is the inf of all its bounds. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L293-L294","name":"ContinuousMultilinearMap.bound","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#ContinuousMultilinearMap.bound","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L267-L275","name":"MultilinearMap.restr_norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.restr_norm_le","doc":"Given a multilinear map in `n` variables, if one restricts it to `k` variables putting `z` on\nthe other coordinates, then the resulting restricted function satisfies an inequality\n`‖f.restr v‖ ≤ C * ‖z‖^(n-k) * Π ‖v i‖` if the original function satisfies `‖f v‖ ≤ C * Π ‖v i‖`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L260-L261","name":"MultilinearMap.coe_mkContinuous","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.coe_mkContinuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L255-L256","name":"MultilinearMap.mkContinuous","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.mkContinuous","doc":"Constructing a continuous multilinear map from a multilinear map satisfying a boundedness\ncondition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L233-L250","name":"MultilinearMap.continuous_of_bound","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.continuous_of_bound","doc":"If a multilinear map satisfies an inequality `‖f m‖ ≤ C * ∏ i, ‖m i‖`, then it is\ncontinuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L198-L228","name":"MultilinearMap.norm_image_sub_le_of_bound","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.norm_image_sub_le_of_bound","doc":"If `f` satisfies a boundedness property around `0`, one can deduce a bound on `f m₁ - f m₂`\nusing the multilinearity. Here, we give a usable but not very precise version. See\n`norm_image_sub_le_of_bound'` for a more precise but less usable version. The bound is\n`‖f m - f m'‖ ≤ C * card ι * ‖m - m'‖ * (max ‖m‖ ‖m'‖) ^ (card ι - 1)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L149-L191","name":"MultilinearMap.norm_image_sub_le_of_bound'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.norm_image_sub_le_of_bound'","doc":"If `f` satisfies a boundedness property around `0`, one can deduce a bound on `f m₁ - f m₂`\nusing the multilinearity. Here, we give a precise but hard to use version. See\n`norm_image_sub_le_of_bound` for a less precise but more usable version. The bound reads\n`‖f m - f m'‖ ≤\n  C * ‖m 1 - m' 1‖ * max ‖m 2‖ ‖m' 2‖ * max ‖m 3‖ ‖m' 3‖ * ... * max ‖m n‖ ‖m' n‖ + ...`,\nwhere the other terms in the sum are the same products where `1` is replaced by any `i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L124-L140","name":"MultilinearMap.exists_bound_of_continuous","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.exists_bound_of_continuous","doc":"If a multilinear map in finitely many variables on normed spaces is continuous, then it\nsatisfies the inequality `‖f m‖ ≤ C * ∏ i, ‖m i‖`, for some `C` which can be chosen to be\npositive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Multilinear.lean#L110-L118","name":"MultilinearMap.bound_of_shell","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Multilinear.html#MultilinearMap.bound_of_shell","doc":"If a multilinear map in finitely many variables on normed spaces satisfies the inequality\n`‖f m‖ ≤ C * ∏ i, ‖m i‖` on a shell `ε i / ‖c i‖ < ‖m i‖ < ε i` for some positive numbers `ε i`\nand elements `c i : 𝕜`, `1 < ‖c i‖`, then it satisfies this inequality for all `m`. "}]}