{"name":"Mathlib.CategoryTheory.Limits.Constructions.Over.Connected","instances":[{"typeNames":["CategoryTheory.Over","CategoryTheory.instCategoryOver","CategoryTheory.Over.forget"],"name":"CategoryTheory.Over.forgetCreatesConnectedLimits","className":"CategoryTheory.CreatesLimitsOfShape"},{"typeNames":["CategoryTheory.Over","CategoryTheory.instCategoryOver"],"name":"CategoryTheory.Over.has_connected_limits","className":"CategoryTheory.Limits.HasLimitsOfShape"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Creates","Mathlib.CategoryTheory.Over","Mathlib.CategoryTheory.IsConnected"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L95-L97","name":"CategoryTheory.Over.has_connected_limits","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.has_connected_limits","doc":"The over category has any connected limit which the original category has. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L85-L91","name":"CategoryTheory.Over.forgetCreatesConnectedLimits","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.forgetCreatesConnectedLimits","doc":"The forgetful functor from the over category creates any connected limit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L71-L79","name":"CategoryTheory.Over.CreatesConnected.raisedConeIsLimit","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.raisedConeIsLimit","doc":"(Impl) Show that the raised cone is a limit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L65-L67","name":"CategoryTheory.Over.CreatesConnected.raised_cone_lowers_to_original","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.raised_cone_lowers_to_original","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L52-L62","name":"CategoryTheory.Over.CreatesConnected.raiseCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.raiseCone","doc":"(Impl) Given a cone in the base category, raise it to a cone in the over category. Note this is\nwhere the connected assumption is used.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L51-L51","name":"CategoryTheory.Over.CreatesConnected.raiseCone_π_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.raiseCone_π_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L51-L51","name":"CategoryTheory.Over.CreatesConnected.raiseCone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.raiseCone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.lean#L43-L45","name":"CategoryTheory.Over.CreatesConnected.natTransInOver","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Connected.html#CategoryTheory.Over.CreatesConnected.natTransInOver","doc":"(Impl) Given a diagram in the over category, produce a natural transformation from the\ndiagram legs to the specific object.\n"}]}