{"name":"Mathlib.CategoryTheory.PUnit","instances":[],"imports":["Init","Mathlib.CategoryTheory.Functor.Const","Mathlib.CategoryTheory.DiscreteCategory"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L76-L105","name":"CategoryTheory.equiv_punit_iff_unique","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.equiv_punit_iff_unique","doc":"A category being equivalent to `PUnit` is equivalent to it having a unique morphism between\nany two objects. (In fact, such a category is also a groupoid;\nsee `CategoryTheory.Groupoid.ofHomUnique`) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L62-L68","name":"CategoryTheory.Functor.equiv","kind":"def","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv","doc":"Functors from `Discrete PUnit` are equivalent to the category itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L61-L61","name":"CategoryTheory.Functor.equiv_functor_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv_functor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L61-L61","name":"CategoryTheory.Functor.equiv_inverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L61-L61","name":"CategoryTheory.Functor.equiv_unitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv_unitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L61-L61","name":"CategoryTheory.Functor.equiv_functor_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv_functor_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L61-L61","name":"CategoryTheory.Functor.equiv_counitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.equiv_counitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L56-L57","name":"CategoryTheory.Functor.fromPUnit","kind":"def","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.fromPUnit","doc":"The functor from `Discrete PUnit` sending everything to the given object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L51-L52","name":"CategoryTheory.Functor.punit_ext'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.punit_ext'","doc":"Any two functors to `Discrete PUnit` are *equal*.\nYou probably want to use `punitExt` instead of this. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L43-L44","name":"CategoryTheory.Functor.punitExt","kind":"def","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.punitExt","doc":"Any two functors to `Discrete PUnit` are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L42-L42","name":"CategoryTheory.Functor.punitExt_hom_app_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.punitExt_hom_app_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L42-L42","name":"CategoryTheory.Functor.punitExt_inv_app_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.punitExt_inv_app_down_down","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L34-L35","name":"CategoryTheory.Functor.star","kind":"def","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.star","doc":"The constant functor sending everything to `PUnit.star`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L33-L33","name":"CategoryTheory.Functor.star_obj_as","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.star_obj_as","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/PUnit.lean#L33-L33","name":"CategoryTheory.Functor.star_map_down_down","kind":"theorem","docLink":"./Mathlib/CategoryTheory/PUnit.html#CategoryTheory.Functor.star_map_down_down","doc":""}]}