{"name":"Mathlib.Data.QPF.Multivariate.Constructions.Quot","instances":[{"typeNames":["MvQPF.Quot1","TypeVec"],"name":"MvQPF.Quot1.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Data.QPF.Multivariate.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L84-L86","name":"MvQPF.relQuot","kind":"def","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.relQuot","doc":"`Quot1` is a QPF "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L80-L80","name":"MvQPF.Quot1.mvFunctor","kind":"def","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.Quot1.mvFunctor","doc":"`mvFunctor` instance for `Quot1` with well-behaved `R` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L75-L76","name":"MvQPF.Quot1.map","kind":"def","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.Quot1.map","doc":"`map` of the `Quot1` functor "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L66-L67","name":"MvQPF.Quot1.inhabited","kind":"instance","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.Quot1.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L62-L63","name":"MvQPF.Quot1","kind":"def","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.Quot1","doc":"Functorial quotient type "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/QPF/Multivariate/Constructions/Quot.lean#L45-L52","name":"MvQPF.quotientQPF","kind":"def","docLink":"./Mathlib/Data/QPF/Multivariate/Constructions/Quot.html#MvQPF.quotientQPF","doc":"If `F` is a QPF then `G` is a QPF as well. Can be used to\nconstruct `MvQPF` instances by transporting them across\nsurjective functions "}]}