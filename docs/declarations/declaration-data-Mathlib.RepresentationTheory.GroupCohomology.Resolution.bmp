{"name":"Mathlib.RepresentationTheory.GroupCohomology.Resolution","instances":[{"typeNames":["Nat","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","CommRing.toRing","ModuleCat.moduleCategory","MonCat.of","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","Action.instPreadditiveActionInstCategoryAction","ModuleCat.instPreadditiveModuleCatModuleCategory","CategoryTheory.Abelian.hasEqualizers","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","Action.instAbelianActionInstCategoryAction","ModuleCat.abelian","CategoryTheory.Limits.hasImages_of_hasStrongEpiMonoFactorisations","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","CategoryTheory.Abelian.instHasStrongEpiMonoFactorisations","Action.instAbelianActionInstCategoryAction","ModuleCat.abelian","CategoryTheory.Limits.hasImageMapsOfHasStrongEpiImages","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","CategoryTheory.Limits.hasImages_of_hasStrongEpiMonoFactorisations","CategoryTheory.Abelian.instHasStrongEpiMonoFactorisations","Action.instAbelianActionInstCategoryAction","ModuleCat.abelian","CategoryTheory.Limits.hasStrongEpiImages_of_hasPullbacks_of_hasEqualizers","CategoryTheory.Abelian.hasPullbacks","CategoryTheory.Abelian.hasEqualizers","CategoryTheory.Limits.hasCokernels_of_hasCoequalizers","Rep","CommRing.toRing","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","Action.instPreadditiveActionInstCategoryAction","ModuleCat.instPreadditiveModuleCatModuleCategory","CategoryTheory.Abelian.hasCoequalizers","Action.instAbelianActionInstCategoryAction","ModuleCat.abelian","ComplexShape.down","Nat","AddRightCancelMonoid.toAddRightCancelSemigroup","AddCancelMonoid.toAddRightCancelMonoid","AddCancelCommMonoid.toAddCancelMonoid","OrderedCancelAddCommMonoid.toCancelAddCommMonoid","StrictOrderedSemiring.toOrderedCancelAddCommMonoid","Nat.strictOrderedSemiring","CanonicallyOrderedCommSemiring.toOne","Nat.canonicallyOrderedCommSemiring","GroupCohomology.resolution","Prefunctor.obj","Rep","CommRing.toRing","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Action.instCategoryAction","ModuleCat","ModuleCat.moduleCategory","MonCat.of","ChainComplex","CategoryTheory.Preadditive.preadditiveHasZeroMorphisms","Action.instPreadditiveActionInstCategoryAction","ModuleCat.instPreadditiveModuleCatModuleCategory","Nat","AddRightCancelMonoid.toAddRightCancelSemigroup","AddCancelMonoid.toAddRightCancelMonoid","AddCancelCommMonoid.toAddCancelMonoid","OrderedCancelAddCommMonoid.toCancelAddCommMonoid","StrictOrderedSemiring.toOrderedCancelAddCommMonoid","Nat.strictOrderedSemiring","CanonicallyOrderedCommSemiring.toOne","Nat.canonicallyOrderedCommSemiring","HomologicalComplex.instCategoryHomologicalComplex","ComplexShape.down","CategoryTheory.Functor.toPrefunctor","ChainComplex.single₀","CategoryTheory.Abelian.hasZeroObject","Action.instAbelianActionInstCategoryAction","ModuleCat.abelian","Rep.trivial","Ring.toAddCommGroup","Semiring.toModule","CommSemiring.toSemiring","CommRing.toCommSemiring","GroupCohomology.Resolution.εToSingle₀"],"name":"GroupCohomology.Resolution.instQuasiIsoNatRepToRingInstCategoryActionModuleCatModuleCategoryOfPreadditiveHasZeroMorphismsInstPreadditiveActionInstCategoryActionInstPreadditiveModuleCatModuleCategoryHasEqualizersInstAbelianActionInstCategoryActionAbelianHasImages_of_hasStrongEpiMonoFactorisationsInstHasStrongEpiMonoFactorisationsHasImageMapsOfHasStrongEpiImagesHasStrongEpiImages_of_hasPullbacks_of_hasEqualizersHasPullbacksHasCokernels_of_hasCoequalizersHasCoequalizersDownToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidToCancelAddCommMonoidToOrderedCancelAddCommMonoidStrictOrderedSemiringToOneCanonicallyOrderedCommSemiringResolutionObjToQuiverToCategoryStructChainComplexInstCategoryHomologicalComplexToPrefunctorSingle₀HasZeroObjectTrivialToAddCommGroupToModuleToSemiringToCommSemiringεToSingle₀","className":"QuasiIso"},{"typeNames":["Rep","CommRing.toRing","DivInvMonoid.toMonoid","Group.toDivInvMonoid","Action.instCategoryAction","ModuleCat","CommRing.toRing","ModuleCat.moduleCategory","MonCat.of","DivInvMonoid.toMonoid","Group.toDivInvMonoid"],"name":"instEnoughProjectivesRepToRingToMonoidToDivInvMonoidInstCategoryActionModuleCatModuleCategoryOf","className":"CategoryTheory.EnoughProjectives"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.Projective","Mathlib.AlgebraicTopology.ExtraDegeneracy","Mathlib.CategoryTheory.Abelian.Ext","Mathlib.RepresentationTheory.Rep"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L703-L710","name":"GroupCohomology.extIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.extIso","doc":"Given a `k`-linear `G`-representation `V`, `Extⁿ(k, V)` (where `k` is a trivial `k`-linear\n`G`-representation) is isomorphic to the `n`th cohomology group of `Hom(P, V)`, where `P` is the\nstandard resolution of `k` called `GroupCohomology.resolution k G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L695-L697","name":"instEnoughProjectivesRepToRingToMonoidToDivInvMonoidInstCategoryActionModuleCatModuleCategoryOf","kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#instEnoughProjectivesRepToRingToMonoidToDivInvMonoidInstCategoryActionModuleCatModuleCategoryOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L690-L691","name":"GroupCohomology.projectiveResolution","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.projectiveResolution","doc":"The standard projective resolution of `k` as a trivial `k`-linear `G`-representation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L678-L679","name":"GroupCohomology.Resolution.instQuasiIsoNatRepToRingInstCategoryActionModuleCatModuleCategoryOfPreadditiveHasZeroMorphismsInstPreadditiveActionInstCategoryActionInstPreadditiveModuleCatModuleCategoryHasEqualizersInstAbelianActionInstCategoryActionAbelianHasImages_of_hasStrongEpiMonoFactorisationsInstHasStrongEpiMonoFactorisationsHasImageMapsOfHasStrongEpiImagesHasStrongEpiImages_of_hasPullbacks_of_hasEqualizersHasPullbacksHasCokernels_of_hasCoequalizersHasCoequalizersDownToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidToCancelAddCommMonoidToOrderedCancelAddCommMonoidStrictOrderedSemiringToOneCanonicallyOrderedCommSemiringResolutionObjToQuiverToCategoryStructChainComplexInstCategoryHomologicalComplexToPrefunctorSingle₀HasZeroObjectTrivialToAddCommGroupToModuleToSemiringToCommSemiringεToSingle₀","kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.instQuasiIsoNatRepToRingInstCategoryActionModuleCatModuleCategoryOfPreadditiveHasZeroMorphismsInstPreadditiveActionInstCategoryActionInstPreadditiveModuleCatModuleCategoryHasEqualizersInstAbelianActionInstCategoryActionAbelianHasImages_of_hasStrongEpiMonoFactorisationsInstHasStrongEpiMonoFactorisationsHasImageMapsOfHasStrongEpiImagesHasStrongEpiImages_of_hasPullbacks_of_hasEqualizersHasPullbacksHasCokernels_of_hasCoequalizersHasCoequalizersDownToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidToCancelAddCommMonoidToOrderedCancelAddCommMonoidStrictOrderedSemiringToOneCanonicallyOrderedCommSemiringResolutionObjToQuiverToCategoryStructChainComplexInstCategoryHomologicalComplexToPrefunctorSingle₀HasZeroObjectTrivialToAddCommGroupToModuleToSemiringToCommSemiringεToSingle₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L670-L675","name":"GroupCohomology.Resolution.quasiIsoOfForget₂εToSingle₀","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.quasiIsoOfForget₂εToSingle₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L660-L667","name":"GroupCohomology.Resolution.εToSingle₀_comp_eq","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.εToSingle₀_comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L655-L657","name":"GroupCohomology.Resolution.εToSingle₀","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.εToSingle₀","doc":"The chain map from the standard resolution of `k` to `k[0]` given by `∑ nᵢgᵢ ↦ ∑ nᵢ` in\ndegree zero. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L642-L650","name":"GroupCohomology.Resolution.d_comp_ε","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.d_comp_ε","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L616-L638","name":"GroupCohomology.Resolution.forget₂ToModuleCatHomotopyEquiv_f_0_eq","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.forget₂ToModuleCatHomotopyEquiv_f_0_eq","doc":"The homotopy equivalence of complexes of `k`-modules between the standard resolution of `k` as\na trivial `G`-representation, and the complex which is `k` at 0 and 0 everywhere else, acts as\n`∑ nᵢgᵢ ↦ ∑ nᵢ : k[G¹] → k` at 0. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L604-L610","name":"GroupCohomology.Resolution.ε","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.ε","doc":"The hom of `k`-linear `G`-representations `k[G¹] → k` sending `∑ nᵢgᵢ ↦ ∑ nᵢ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L590-L599","name":"GroupCohomology.Resolution.forget₂ToModuleCatHomotopyEquiv","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.forget₂ToModuleCatHomotopyEquiv","doc":"As a complex of `k`-modules, the standard resolution of the trivial `G`-representation `k` is\nhomotopy equivalent to the complex which is `k` at 0 and 0 elsewhere. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L579-L585","name":"GroupCohomology.Resolution.compForgetAugmentedIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.compForgetAugmentedIso","doc":"If we apply the free functor `Type u ⥤ ModuleCat.{u} k` to the universal cover of the\nclassifying space of `G` as a simplicial set, then take the alternating face map complex, the result\nis isomorphic to the standard resolution of the trivial `G`-representation `k` as a complex of\n`k`-modules. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L569-L571","name":"GroupCohomology.Resolution.forget₂ToModuleCat","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.forget₂ToModuleCat","doc":"The standard resolution of `k` as a trivial representation as a complex of `k`-modules. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L548-L563","name":"GroupCohomology.Resolution.d_eq","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.d_eq","doc":"Simpler expression for the differential in the standard resolution of `k` as a\n`G`-representation. It sends `(g₀, ..., gₙ₊₁) ↦ ∑ (-1)ⁱ • (g₀, ..., ĝᵢ, ..., gₙ₊₁)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L537-L542","name":"GroupCohomology.Resolution.x_projective","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.x_projective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L532-L533","name":"GroupCohomology.Resolution.xIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.xIso","doc":"The `n`th object of the standard resolution of `k` is definitionally isomorphic to `k[Gⁿ⁺¹]`\nequipped with the representation induced by the diagonal action of `G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L521-L525","name":"GroupCohomology.Resolution.d_of","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.d_of","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L512-L515","name":"GroupCohomology.Resolution.d","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.d","doc":"The `k`-linear map underlying the differential in the standard resolution of `k` as a trivial\n`k`-linear `G`-representation. It sends `(g₀, ..., gₙ) ↦ ∑ (-1)ⁱ • (g₀, ..., ĝᵢ, ..., gₙ)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L499-L501","name":"GroupCohomology.resolution","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.resolution","doc":"The standard resolution of `k` as a trivial representation, defined as the alternating\nface map complex of a simplicial `k`-linear `G`-representation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L487-L489","name":"classifyingSpaceUniversalCover.extraDegeneracyCompForgetAugmentedToModule","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.extraDegeneracyCompForgetAugmentedToModule","doc":"If we augment the universal cover of the classifying space of `G` as a simplicial set by the\nmap from `Fin 1 → G` to the terminal object in `Type u`, then apply the free functor\n`Type u ⥤ ModuleCat.{u} k`, the resulting augmented simplicial `k`-module has an extra\ndegeneracy. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L478-L479","name":"classifyingSpaceUniversalCover.compForgetAugmented.toModule","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.compForgetAugmented.toModule","doc":"The free functor `Type u ⥤ ModuleCat.{u} k` applied to the universal cover of the classifying\nspace of `G` as a simplicial set, augmented by the map from `Fin 1 → G` to the terminal object\nin `Type u`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L466-L472","name":"classifyingSpaceUniversalCover.extraDegeneracyCompForgetAugmented","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.extraDegeneracyCompForgetAugmented","doc":"The universal cover of the classifying space of `G` as a simplicial set, augmented by the map\nfrom `Fin 1 → G` to the terminal object in `Type u`, has an extra degeneracy. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L457-L461","name":"classifyingSpaceUniversalCover.extraDegeneracyAugmentedCechNerve","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.extraDegeneracyAugmentedCechNerve","doc":"The augmented Čech nerve of the map from `Fin 1 → G` to the terminal object in `Type u` has an\nextra degeneracy. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L450-L452","name":"classifyingSpaceUniversalCover.compForgetAugmented","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.compForgetAugmented","doc":"The universal cover of the classifying space of `G` as a simplicial set, augmented by the map\nfrom `Fin 1 → G` to the terminal object in `Type u`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L438-L441","name":"classifyingSpaceUniversalCover.cechNerveTerminalFromIsoCompForget","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.cechNerveTerminalFromIsoCompForget","doc":"As a simplicial set, `cechNerveTerminalFrom` of a monoid `G` is isomorphic to the universal\ncover of the classifying space of `G` as a simplicial set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L426-L433","name":"classifyingSpaceUniversalCover.cechNerveTerminalFromIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover.cechNerveTerminalFromIso","doc":"When the category is `G`-Set, `cechNerveTerminalFrom` of `G` with the left regular action is\nisomorphic to `EG`, the universal cover of the classifying space of `G` as a simplicial `G`-set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L408-L415","name":"classifyingSpaceUniversalCover","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#classifyingSpaceUniversalCover","doc":"The simplicial `G`-set sending `[n]` to `Gⁿ⁺¹` equipped with the diagonal action of `G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L390-L399","name":"Rep.diagonalHomEquiv_symm_partialProd_succ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#Rep.diagonalHomEquiv_symm_partialProd_succ","doc":"Auxiliary lemma for defining group cohomology, used to show that the isomorphism\n`diagonalHomEquiv` commutes with the differentials in two complexes which compute\ngroup cohomology. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L354-L383","name":"Rep.diagonalHomEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#Rep.diagonalHomEquiv_symm_apply","doc":"Given a `k`-linear `G`-representation `A`, `diagonalHomEquiv` is a `k`-linear isomorphism of\nthe set of representation morphisms `Hom(k[Gⁿ⁺¹], A)` with `Fun(Gⁿ, A)`. This lemma says that the\ninverse map sends a function `f : Gⁿ → A` to the representation morphism sending\n`(g₀, ... gₙ) ↦ ρ(g₀)(f(g₀⁻¹g₁, g₁⁻¹g₂, ..., gₙ₋₁⁻¹gₙ))`, where `ρ` is the representation attached\nto `A`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L334-L344","name":"Rep.diagonalHomEquiv_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#Rep.diagonalHomEquiv_apply","doc":"Given a `k`-linear `G`-representation `A`, `diagonalHomEquiv` is a `k`-linear isomorphism of\nthe set of representation morphisms `Hom(k[Gⁿ⁺¹], A)` with `Fun(Gⁿ, A)`. This lemma says that this\nsends a morphism of representations `f : k[Gⁿ⁺¹] ⟶ A` to the function\n`(g₁, ..., gₙ) ↦ f(1, g₁, g₁g₂, ..., g₁g₂...gₙ).` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L318-L324","name":"Rep.diagonalHomEquiv","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#Rep.diagonalHomEquiv","doc":"Given a `k`-linear `G`-representation `A`, the set of representation morphisms\n`Hom(k[Gⁿ⁺¹], A)` is `k`-linearly isomorphic to the set of functions `Gⁿ → A`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L301-L303","name":"GroupCohomology.Resolution.ofMulAction_free","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.ofMulAction_free","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L293-L298","name":"GroupCohomology.Resolution.ofMulActionBasis","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.ofMulActionBasis","doc":"A `k[G]`-basis of `k[Gⁿ⁺¹]`, coming from the `k[G]`-linear isomorphism\n`k[G] ⊗ₖ k[Gⁿ] ≃ k[Gⁿ⁺¹].` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L268-L288","name":"GroupCohomology.Resolution.ofMulActionBasisAux","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.ofMulActionBasisAux","doc":"The `k[G]`-linear isomorphism `k[G] ⊗ₖ k[Gⁿ] ≃ k[Gⁿ⁺¹]`, where the `k[G]`-module structure on\nthe lefthand side is `TensorProduct.leftModule`, whilst that of the righthand side comes from\n`Representation.asModule`. Allows us to use `Algebra.TensorProduct.basis` to get a `k[G]`-basis\nof the righthand side. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L241-L255","name":"GroupCohomology.Resolution.diagonalSucc_inv_single_right","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.diagonalSucc_inv_single_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L223-L238","name":"GroupCohomology.Resolution.diagonalSucc_inv_single_left","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.diagonalSucc_inv_single_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L202-L220","name":"GroupCohomology.Resolution.diagonalSucc_inv_single_single","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.diagonalSucc_inv_single_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L179-L199","name":"GroupCohomology.Resolution.diagonalSucc_hom_single","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.diagonalSucc_hom_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L170-L174","name":"GroupCohomology.Resolution.diagonalSucc","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.diagonalSucc","doc":"An isomorphism of `k`-linear representations of `G` from `k[Gⁿ⁺¹]` to `k[G] ⊗ₖ k[Gⁿ]` (on\nwhich `G` acts by `ρ(g₁)(g₂ ⊗ x) = (g₁ * g₂) ⊗ x`) sending `(g₀, ..., gₙ)` to\n`g₀ ⊗ (g₀⁻¹g₁, g₁⁻¹g₂, ..., gₙ₋₁⁻¹gₙ)`. The inverse sends `g₀ ⊗ (g₁, ..., gₙ)` to\n`(g₀, g₀g₁, ..., g₀g₁...gₙ)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L131-L156","name":"GroupCohomology.Resolution.actionDiagonalSucc_inv_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.actionDiagonalSucc_inv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L111-L127","name":"GroupCohomology.Resolution.actionDiagonalSucc_hom_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.actionDiagonalSucc_hom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean#L97-L107","name":"GroupCohomology.Resolution.actionDiagonalSucc","kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/Resolution.html#GroupCohomology.Resolution.actionDiagonalSucc","doc":"An isomorphism of `G`-sets `Gⁿ⁺¹ ≅ G × Gⁿ`, where `G` acts by left multiplication on `Gⁿ⁺¹` and\n`G` but trivially on `Gⁿ`. The map sends `(g₀, ..., gₙ) ↦ (g₀, (g₀⁻¹g₁, g₁⁻¹g₂, ..., gₙ₋₁⁻¹gₙ))`,\nand the inverse is `(g₀, (g₁, ..., gₙ)) ↦ (g₀, g₀g₁, g₀g₁g₂, ..., g₀g₁...gₙ).` "}]}