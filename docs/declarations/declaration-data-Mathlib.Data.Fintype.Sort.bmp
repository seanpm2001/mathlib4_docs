{"name":"Mathlib.Data.Fintype.Sort","instances":[],"imports":["Init","Mathlib.Data.Finset.Sort","Mathlib.Data.Fintype.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Sort.lean#L56-L58","name":"finSumEquivOfFinset_inr","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Sort.html#finSumEquivOfFinset_inr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Sort.lean#L50-L52","name":"finSumEquivOfFinset_inl","kind":"theorem","docLink":"./Mathlib/Data/Fintype/Sort.html#finSumEquivOfFinset_inl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Sort.lean#L41-L46","name":"finSumEquivOfFinset","kind":"def","docLink":"./Mathlib/Data/Fintype/Sort.html#finSumEquivOfFinset","doc":"If `α` is a linearly ordered fintype, `s : Finset α` has cardinality `m` and its complement has\ncardinality `n`, then `Fin m ⊕ Fin n ≃ α`. The equivalence sends elements of `Fin m` to\nelements of `s` and elements of `Fin n` to elements of `sᶜ` while preserving order on each\n\"half\" of `Fin m ⊕ Fin n` (using `Set.orderIsoOfFin`). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Fintype/Sort.lean#L30-L32","name":"monoEquivOfFin","kind":"def","docLink":"./Mathlib/Data/Fintype/Sort.html#monoEquivOfFin","doc":"Given a linearly ordered fintype `α` of cardinal `k`, the order isomorphism\n`monoEquivOfFin α h` is the increasing bijection between `Fin k` and `α`. Here, `h` is a proof\nthat the cardinality of `α` is `k`. We use this instead of an isomorphism `Fin (card α) ≃o α` to\navoid casting issues in further uses of this function. "}]}