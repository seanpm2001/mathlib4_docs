{"name":"Mathlib.Data.Array.Defs","instances":[],"imports":["Init","Lean"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Array/Defs.lean#L31-L32","name":"Array.permute!","kind":"def","docLink":"./Mathlib/Data/Array/Defs.html#Array.permute!","doc":"Permute the array using a list of cycles. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Array/Defs.lean#L24-L28","name":"Array.cyclicPermute!.cyclicPermuteAux","kind":"def","docLink":"./Mathlib/Data/Array/Defs.html#Array.cyclicPermute!.cyclicPermuteAux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Array/Defs.lean#L21-L28","name":"Array.cyclicPermute!","kind":"def","docLink":"./Mathlib/Data/Array/Defs.html#Array.cyclicPermute!","doc":"Permute the array using a sequence of indices defining a cyclic permutation.\nIf the list of indices `l = [i₁, i₂, ..., iₙ]` are all distinct then\n`(cyclicPermute! a l)[iₖ₊₁] = a[iₖ]` and `(cyclicPermute! a l)[i₀] = a[iₙ]` "}]}