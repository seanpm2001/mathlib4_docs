{"name":"Mathlib.CategoryTheory.Shift.Basic","instances":[{"typeNames":["CategoryTheory.shiftFunctor","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"CategoryTheory.instIsEquivalenceShiftFunctorToAddMonoidToSubNegMonoid","className":"CategoryTheory.IsEquivalence"},{"typeNames":["CategoryTheory.shiftFunctor","SubNegMonoid.toAddMonoid","AddGroup.toSubNegMonoid"],"name":"CategoryTheory.shiftFunctor_essSurj","className":"CategoryTheory.EssSurj"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Preserves.Shapes.Zero","Mathlib.CategoryTheory.Monoidal.End","Mathlib.CategoryTheory.Monoidal.Discrete"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L719-L751","name":"CategoryTheory.hasShiftOfFullyFaithful","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftOfFullyFaithful","doc":"Given a family of endomorphisms of `C` which are intertwined by a fully faithful `F : C тед D`\nwith shift functors on `D`, we can promote that family to shift functors on `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L709-L714","name":"CategoryTheory.map_hasShiftOfFullyFaithful_add_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.map_hasShiftOfFullyFaithful_add_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L700-L705","name":"CategoryTheory.map_hasShiftOfFullyFaithful_add_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.map_hasShiftOfFullyFaithful_add_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L692-L696","name":"CategoryTheory.hasShiftOfFullyFaithful_add","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftOfFullyFaithful_add","doc":"auxiliary definition for `hasShiftOfFullyFaithful` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L685-L688","name":"CategoryTheory.map_hasShiftOfFullyFaithful_zero_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.map_hasShiftOfFullyFaithful_zero_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L678-L681","name":"CategoryTheory.map_hasShiftOfFullyFaithful_zero_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.map_hasShiftOfFullyFaithful_zero_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L672-L674","name":"CategoryTheory.hasShiftOfFullyFaithful_zero","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftOfFullyFaithful_zero","doc":"auxiliary definition for `hasShiftOfFullyFaithful` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L636-L658","name":"CategoryTheory.shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L635-L635","name":"CategoryTheory.shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L625-L632","name":"CategoryTheory.shiftFunctorZero_inv_app_shift","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorZero_inv_app_shift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L617-L622","name":"CategoryTheory.shiftFunctorZero_hom_app_shift","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorZero_hom_app_shift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L612-L614","name":"CategoryTheory.shiftComm_hom_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftComm_hom_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L611-L611","name":"CategoryTheory.shiftComm_hom_comp_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftComm_hom_comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L604-L608","name":"CategoryTheory.shiftComm'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftComm'","doc":"When shifts are indexed by an additive commutative monoid, then shifts commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L596-L598","name":"CategoryTheory.shiftComm_symm","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftComm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L591-L592","name":"CategoryTheory.shiftComm","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftComm","doc":"When shifts are indexed by an additive commutative monoid, then shifts commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L578-L583","name":"CategoryTheory.shiftFunctorComm_symm","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorComm_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L570-L575","name":"CategoryTheory.shiftFunctorComm_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorComm_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L564-L567","name":"CategoryTheory.shiftFunctorComm","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorComm","doc":"When shifts are indexed by an additive commutative monoid, then shifts commute. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L551-L552","name":"CategoryTheory.shift_zero_eq_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_zero_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L539-L542","name":"CategoryTheory.shift_shiftFunctorCompIsoId_neg_add_self_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_neg_add_self_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L533-L536","name":"CategoryTheory.shift_shiftFunctorCompIsoId_neg_add_self_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_neg_add_self_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L527-L530","name":"CategoryTheory.shift_shiftFunctorCompIsoId_add_neg_self_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_add_neg_self_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L521-L524","name":"CategoryTheory.shift_shiftFunctorCompIsoId_add_neg_self_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_add_neg_self_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L511-L518","name":"CategoryTheory.shift_shiftFunctorCompIsoId_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L500-L508","name":"CategoryTheory.shift_shiftFunctorCompIsoId_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shiftFunctorCompIsoId_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L493-L495","name":"CategoryTheory.shift_equiv_triangle","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_equiv_triangle","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L487-L490","name":"CategoryTheory.shift_neg_shift'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_neg_shift'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L481-L484","name":"CategoryTheory.shift_shift_neg'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shift_neg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L475-L476","name":"CategoryTheory.shiftNegShift","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftNegShift","doc":"Shifting by `-i` and then shifting by `i` is the identity. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L470-L471","name":"CategoryTheory.shiftShiftNeg","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftShiftNeg","doc":"Shifting by `i` and then shifting by `-i` is the identity. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L461-L462","name":"CategoryTheory.shiftFunctor_essSurj","kind":"instance","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor_essSurj","doc":"Shifting by `n` is an essentially surjective functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L454-L455","name":"CategoryTheory.shiftFunctor_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L449-L451","name":"CategoryTheory.instIsEquivalenceShiftFunctorToAddMonoidToSubNegMonoid","kind":"instance","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.instIsEquivalenceShiftFunctorToAddMonoidToSubNegMonoid","doc":"Shifting by `i` is an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L443-L443","name":"CategoryTheory.shiftEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv","doc":"Shifting by `n` and shifting by `-n` forms an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L424-L439","name":"CategoryTheory.shiftEquiv'","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv'","doc":"Shifting by `i` and shifting by `j` forms an equivalence when `i + j = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L423-L423","name":"CategoryTheory.shiftEquiv'_counitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv'_counitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L423-L423","name":"CategoryTheory.shiftEquiv'_unitIso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv'_unitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L423-L423","name":"CategoryTheory.shiftEquiv'_functor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv'_functor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L423-L423","name":"CategoryTheory.shiftEquiv'_inverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftEquiv'_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L410-L412","name":"CategoryTheory.shiftFunctorCompIsoId","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorCompIsoId","doc":"When `i + j = 0`, shifting by `i` and by `j` gives the identity functor "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L402-L404","name":"CategoryTheory.shiftZero'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftZero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L398-L399","name":"CategoryTheory.shiftZero","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftZero","doc":"Shifting by zero is the identity functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L389-L392","name":"CategoryTheory.shift_shift'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shift_shift'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L385-L386","name":"CategoryTheory.shiftAdd","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftAdd","doc":"Shifting by `i + j` is the same as shifting by `i` and then shifting by `j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L380-L381","name":"CategoryTheory.HasShift.shift_obj_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift.shift_obj_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L365-L370","name":"CategoryTheory.shiftFunctorAdd_assoc_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_assoc_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L364-L364","name":"CategoryTheory.shiftFunctorAdd_assoc_inv_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_assoc_inv_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L356-L361","name":"CategoryTheory.shiftFunctorAdd_assoc_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_assoc_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L355-L355","name":"CategoryTheory.shiftFunctorAdd_assoc_hom_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_assoc_hom_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L345-L352","name":"CategoryTheory.shiftFunctorAdd'_assoc_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_assoc_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L344-L344","name":"CategoryTheory.shiftFunctorAdd'_assoc_inv_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_assoc_inv_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L334-L341","name":"CategoryTheory.shiftFunctorAdd'_assoc_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_assoc_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L333-L333","name":"CategoryTheory.shiftFunctorAdd'_assoc_hom_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_assoc_hom_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L327-L330","name":"CategoryTheory.shiftFunctorAdd_add_zero_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_add_zero_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L321-L324","name":"CategoryTheory.shiftFunctorAdd'_add_zero_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_add_zero_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L315-L318","name":"CategoryTheory.shiftFunctorAdd_add_zero_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_add_zero_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L309-L312","name":"CategoryTheory.shiftFunctorAdd'_add_zero_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_add_zero_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L303-L306","name":"CategoryTheory.shiftFunctorAdd_zero_add_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_zero_add_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L297-L300","name":"CategoryTheory.shiftFunctorAdd'_zero_add_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_zero_add_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L291-L294","name":"CategoryTheory.shiftFunctorAdd_zero_add_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_zero_add_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L285-L288","name":"CategoryTheory.shiftFunctorAdd'_zero_add_hom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_zero_add_hom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L272-L280","name":"CategoryTheory.shiftFunctorAdd_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L253-L269","name":"CategoryTheory.shiftFunctorAdd'_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L243-L250","name":"CategoryTheory.shiftFunctorAdd'_add_zero","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_add_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L233-L240","name":"CategoryTheory.shiftFunctorAdd'_zero_add","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_zero_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L228-L229","name":"CategoryTheory.┬лterm_тЯж_тЯз'┬╗","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.┬лterm_тЯж_тЯз'┬╗","doc":"shifting a morphism `f` by `n` is obtained by the notation `fтЯжnтЯз'` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L223-L225","name":"CategoryTheory.┬лterm_тЯж_тЯз┬╗","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.┬лterm_тЯж_тЯз┬╗","doc":"shifting an object `X` by `n` is obtained by the notation `XтЯжnтЯз` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L212-L219","name":"CategoryTheory.ShiftMkCore.shiftFunctorAdd_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.shiftFunctorAdd_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L201-L209","name":"CategoryTheory.ShiftMkCore.shiftFunctorZero_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.shiftFunctorZero_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L195-L198","name":"CategoryTheory.ShiftMkCore.shiftFunctor_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.shiftFunctor_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L189-L190","name":"CategoryTheory.shiftFunctorZero","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorZero","doc":"Shifting by zero is the identity functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L180-L183","name":"CategoryTheory.shiftFunctorAdd'_eq_shiftFunctorAdd","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'_eq_shiftFunctorAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L175-L177","name":"CategoryTheory.shiftFunctorAdd'","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'","doc":"When `k = i + j`, shifting by `k` is the same as shifting by `i` and then shifting by `j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L170-L171","name":"CategoryTheory.shiftFunctorAdd","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd","doc":"Shifting by `i + j` is the same as shifting by `i` and then shifting by `j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L165-L166","name":"CategoryTheory.shiftFunctor","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor","doc":"The shift autoequivalence, moving objects and morphisms 'up'. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L158-L159","name":"CategoryTheory.shiftMonoidalFunctor","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftMonoidalFunctor","doc":"The monoidal functor from `A` to `C тед C` given a `HasShift` instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L130-L150","name":"CategoryTheory.hasShiftMk","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftMk","doc":"Constructs a `HasShift C A` instance from `ShiftMkCore`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L129-L129","name":"CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_toFunctor","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_toFunctor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L129-L129","name":"CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_╬╡","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_╬╡","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L129-L129","name":"CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_╬╝","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.hasShiftMk_shift_toLaxMonoidalFunctor_╬╝","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L115-L119","name":"CategoryTheory.ShiftMkCore.add_zero_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.add_zero_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L107-L112","name":"CategoryTheory.ShiftMkCore.zero_add_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.zero_add_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L96-L104","name":"CategoryTheory.ShiftMkCore.assoc_inv_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.assoc_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L95-L95","name":"CategoryTheory.ShiftMkCore.assoc_inv_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.assoc_inv_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L93-L93","name":"CategoryTheory.ShiftMkCore.assoc_hom_app_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.assoc_hom_app_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L85-L85","name":"CategoryTheory.ShiftMkCore.add_zero_hom_app","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.add_zero_hom_app","doc":"compatibility with the right addition with 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L82-L82","name":"CategoryTheory.ShiftMkCore.zero_add_hom_app","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.zero_add_hom_app","doc":"compatibility with the left addition with 0 "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L77-L77","name":"CategoryTheory.ShiftMkCore.assoc_hom_app","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.assoc_hom_app","doc":"compatibility with the associativity "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L75-L75","name":"CategoryTheory.ShiftMkCore.add","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.add","doc":"the composition of shift functors identifies to the shift by the sum "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L73-L73","name":"CategoryTheory.ShiftMkCore.zero","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.zero","doc":"the shift by 0 identifies to the identity functor "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L71-L71","name":"CategoryTheory.ShiftMkCore.F","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.F","doc":"the family of shift functors "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L69-L86","name":"CategoryTheory.ShiftMkCore","kind":"structure","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore","doc":"A helper structure to construct the shift functor `(Discrete A) тед (C тед C)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L64-L64","name":"CategoryTheory.HasShift.shift","kind":"def","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift.shift","doc":"a shift is a monoidal functor from `A` to `C тед C` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L62-L62","name":"CategoryTheory.HasShift.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L62-L64","name":"CategoryTheory.HasShift","kind":"class","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift","doc":"A category has a shift indexed by an additive monoid `A`\nif there is a monoidal functor from `A` to `C тед C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Shift/Basic.lean#L1-L1","name":"CategoryTheory.ShiftMkCore.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.ShiftMkCore.mk","doc":""}]}