{"name":"Mathlib.Order.Closure","instances":[{"typeNames":["ClosureOperator","ClosureOperator"],"name":"ClosureOperator.instCoeFunClosureOperatorForAll","className":"CoeFun"},{"typeNames":["ClosureOperator","PartialOrder.toPreorder"],"name":"ClosureOperator.instInhabitedClosureOperatorToPreorder","className":"Inhabited"},{"typeNames":["LowerAdjoint","id"],"name":"LowerAdjoint.instInhabitedLowerAdjointId","className":"Inhabited"},{"typeNames":["LowerAdjoint","LowerAdjoint"],"name":"LowerAdjoint.instCoeFunLowerAdjointForAll","className":"CoeFun"}],"imports":["Init","Mathlib.Data.Set.Lattice","Mathlib.Data.SetLike.Basic","Mathlib.Order.GaloisConnection","Mathlib.Order.Hom.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L570-L573","name":"closureOperator_gi_self","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#closureOperator_gi_self","doc":"The Galois insertion associated to a closure operator can be used to reconstruct the closure\noperator.\nNote that the inverse in the opposite direction does not hold in general. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L558-L563","name":"ClosureOperator.gi","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.gi","doc":"The set of closed elements has a Galois insertion to the underlying type. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L551-L553","name":"GaloisConnection.closureOperator","kind":"def","docLink":"./Mathlib/Order/Closure.html#GaloisConnection.closureOperator","doc":"Every Galois connection induces a closure operator given by the composition. This is the partial\norder version of the statement that every adjunction induces a monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L550-L550","name":"GaloisConnection.closureOperator_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#GaloisConnection.closureOperator_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L540-L544","name":"GaloisConnection.lowerAdjoint","kind":"def","docLink":"./Mathlib/Order/Closure.html#GaloisConnection.lowerAdjoint","doc":"Every Galois connection induces a lower adjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L539-L539","name":"GaloisConnection.lowerAdjoint_toFun","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#GaloisConnection.lowerAdjoint_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L527-L529","name":"LowerAdjoint.closure_iUnion₂_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_iUnion₂_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L520-L521","name":"LowerAdjoint.closure_iUnion_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_iUnion_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L515-L516","name":"LowerAdjoint.closure_union_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_union_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L511-L512","name":"LowerAdjoint.closure_union_closure_right","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_union_closure_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L506-L507","name":"LowerAdjoint.closure_union_closure_left","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_union_closure_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L501-L502","name":"LowerAdjoint.closure_union_closure_subset","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_union_closure_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L497-L498","name":"LowerAdjoint.eq_of_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.eq_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L492-L494","name":"LowerAdjoint.mem_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.mem_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L488-L489","name":"LowerAdjoint.le_iff_subset","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.le_iff_subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L484-L485","name":"LowerAdjoint.not_mem_of_not_mem_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.not_mem_of_not_mem_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L480-L481","name":"LowerAdjoint.subset_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.subset_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L468-L470","name":"LowerAdjoint.closure_iSup₂_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_iSup₂_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L464-L465","name":"LowerAdjoint.closure_iSup_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_iSup_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L454-L455","name":"LowerAdjoint.closure_sup_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_sup_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L450-L451","name":"LowerAdjoint.closure_sup_closure_right","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_sup_closure_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L446-L447","name":"LowerAdjoint.closure_sup_closure_left","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_sup_closure_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L442-L443","name":"LowerAdjoint.closure_sup_closure_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_sup_closure_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L433-L435","name":"LowerAdjoint.closure_inf_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_inf_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L428-L430","name":"LowerAdjoint.closure_top","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L422-L423","name":"LowerAdjoint.closure_le_closed_iff_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_le_closed_iff_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L417-L418","name":"LowerAdjoint.toClosed","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.toClosed","doc":"Send an `x` to an element of the set of closed elements (by taking the closure). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L412-L413","name":"LowerAdjoint.closed_eq_range_close","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closed_eq_range_close","doc":"The set of closed elements for `l` is the range of `u ∘ l`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L407-L408","name":"LowerAdjoint.closure_is_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_is_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L402-L403","name":"LowerAdjoint.mem_closed_iff_closure_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.mem_closed_iff_closure_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L392-L393","name":"LowerAdjoint.closure_eq_self_of_mem_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closure_eq_self_of_mem_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L388-L389","name":"LowerAdjoint.mem_closed_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.mem_closed_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L385-L385","name":"LowerAdjoint.closed","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closed","doc":"An element `x` is closed for `l : LowerAdjoint u` if it is a fixed point: `u (l x) = x` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L374-L375","name":"LowerAdjoint.le_closure_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.le_closure_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L370-L371","name":"LowerAdjoint.idempotent","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.idempotent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L362-L366","name":"LowerAdjoint.closureOperator","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closureOperator","doc":"Every lower adjoint induces a closure operator given by the composition. This is the partial\norder version of the statement that every adjunction induces a monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L361-L361","name":"LowerAdjoint.closureOperator_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.closureOperator_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L349-L350","name":"LowerAdjoint.le_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.le_closure","doc":"Every element is less than its closure. This property is sometimes referred to as extensivity or\ninflationarity. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L343-L344","name":"LowerAdjoint.monotone","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.monotone","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L337-L339","name":"LowerAdjoint.ext","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L332-L333","name":"LowerAdjoint.gc","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.gc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L330-L330","name":"LowerAdjoint.instCoeFunLowerAdjointForAll","kind":"instance","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.instCoeFunLowerAdjointForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L323-L324","name":"LowerAdjoint.instInhabitedLowerAdjointId","kind":"instance","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.instInhabitedLowerAdjointId","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L314-L317","name":"LowerAdjoint.id","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.id","doc":"The identity function as a lower adjoint to itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L313-L313","name":"LowerAdjoint.id_toFun","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.id_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L305-L305","name":"LowerAdjoint.gc'","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.gc'","doc":"The underlying function is a lower adjoint. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L303-L303","name":"LowerAdjoint.toFun","kind":"def","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.toFun","doc":"The underlying function "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L301-L301","name":"LowerAdjoint.mk","kind":"ctor","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L301-L305","name":"LowerAdjoint","kind":"structure","docLink":"./Mathlib/Order/Closure.html#LowerAdjoint","doc":"A lower adjoint of `u` on the preorder `α` is a function `l` such that `l` and `u` form a Galois\nconnection. It allows us to define closure operators whose output does not match the input. In\npractice, `u` is often `(↑) : β → α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L283-L286","name":"ClosureOperator.closure_iSup₂_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_iSup₂_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L277-L279","name":"ClosureOperator.closure_iSup_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_iSup_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L266-L267","name":"ClosureOperator.closure_sup_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_sup_closure","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L262-L263","name":"ClosureOperator.closure_sup_closure_right","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_sup_closure_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L256-L259","name":"ClosureOperator.closure_sup_closure_left","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_sup_closure_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L252-L253","name":"ClosureOperator.closure_sup_closure_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_sup_closure_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L243-L245","name":"ClosureOperator.closure_inf_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_inf_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L237-L238","name":"ClosureOperator.top_mem_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.top_mem_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L233-L234","name":"ClosureOperator.closure_top","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_top","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L219-L221","name":"ClosureOperator.mem_mk₃_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mem_mk₃_closed","doc":"The property `p` fed into the `mk₃` constructor implies being closed. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L210-L215","name":"ClosureOperator.eq_mk₃_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.eq_mk₃_closed","doc":"A closure operator is equal to the closure operator obtained by feeding `c.closed` into the\n`mk₃` constructor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L204-L205","name":"ClosureOperator.closure_le_closed_iff_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_le_closed_iff_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L199-L200","name":"ClosureOperator.toClosed","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.toClosed","doc":"Send an `x` to an element of the set of closed elements (by taking the closure). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L191-L195","name":"ClosureOperator.closed_eq_range_close","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closed_eq_range_close","doc":"The set of closed elements for `c` is exactly its range. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L186-L187","name":"ClosureOperator.closure_is_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_is_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L181-L182","name":"ClosureOperator.closure_eq_self_of_mem_closed","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_eq_self_of_mem_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L177-L178","name":"ClosureOperator.mem_closed_iff_closure_le","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mem_closed_iff_closure_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L173-L174","name":"ClosureOperator.mem_closed_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mem_closed_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L170-L170","name":"ClosureOperator.closed","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closed","doc":"An element `x` is closed for the closure operator `c` if it is a fixed point for it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L165-L166","name":"ClosureOperator.le_closure_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.le_closure_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L161-L162","name":"ClosureOperator.idempotent","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.idempotent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L156-L157","name":"ClosureOperator.le_closure","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.le_closure","doc":"Every element is less than its closure. This property is sometimes referred to as extensivity or\ninflationarity. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L150-L151","name":"ClosureOperator.monotone","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.monotone","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L143-L146","name":"ClosureOperator.closure_le_mk₃_iff","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_le_mk₃_iff","doc":"Analogue of `closure_le_closed_iff_le` but with the `p` that was fed into the `mk₃` constructor.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L136-L138","name":"ClosureOperator.closure_mem_mk₃","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.closure_mem_mk₃","doc":"This lemma shows that the image of `x` of a closure operator built from the `mk₃` constructor\nrespects `p`, the property that was fed into it. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L128-L130","name":"ClosureOperator.mk₃","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk₃","doc":"Expanded out version of `mk₂`. `p` implies being closed. This constructor should be used when\nyou already know a sufficient condition for being closed and using `mem_mk₃_closed` will avoid you\nthe (slight) hassle of having to prove it both inside and outside the constructor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L127-L127","name":"ClosureOperator.mk₃_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk₃_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L115-L120","name":"ClosureOperator.mk₂","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk₂","doc":"Convenience constructor for a closure operator using the weaker minimality axiom:\n`x ≤ f y → f x ≤ f y`, which is sometimes easier to prove in practice. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L114-L114","name":"ClosureOperator.mk₂_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk₂_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L103-L108","name":"ClosureOperator.mk'","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk'","doc":"Constructor for a closure operator using the weaker idempotency axiom: `f (f x) ≤ f x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L102-L102","name":"ClosureOperator.mk'_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk'_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L96-L98","name":"ClosureOperator.ext","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L90-L91","name":"ClosureOperator.instInhabitedClosureOperatorToPreorder","kind":"instance","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.instInhabitedClosureOperatorToPreorder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L83-L86","name":"ClosureOperator.id","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.id","doc":"The identity function as a closure operator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L82-L82","name":"ClosureOperator.id_apply","kind":"theorem","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.id_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L72-L73","name":"ClosureOperator.instCoeFunClosureOperatorForAll","kind":"instance","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.instCoeFunClosureOperatorForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L67-L67","name":"ClosureOperator.idempotent'","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.idempotent'","doc":"Closures are idempotent "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L65-L65","name":"ClosureOperator.le_closure'","kind":"def","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.le_closure'","doc":"An element is less than or equal its closure "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L63-L63","name":"ClosureOperator.mk","kind":"ctor","docLink":"./Mathlib/Order/Closure.html#ClosureOperator.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Order/Closure.lean#L63-L67","name":"ClosureOperator","kind":"structure","docLink":"./Mathlib/Order/Closure.html#ClosureOperator","doc":"A closure operator on the preorder `α` is a monotone function which is extensive (every `x`\nis less than its closure) and idempotent. "}]}