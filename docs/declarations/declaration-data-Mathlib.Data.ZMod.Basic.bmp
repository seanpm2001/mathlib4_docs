{"name":"Mathlib.Data.ZMod.Basic","instances":[{"typeNames":["ZMod","OfNat.ofNat","Nat","instOfNatNat","AddGroupWithOne.toAddMonoidWithOne","ZMod","OfNat.ofNat","Nat","instOfNatNat","Ring.toAddGroupWithOne","CommRing.toRing","ZMod.commRing"],"name":"ZMod.charZero","className":"CharZero"},{"typeNames":["ZMod","AddGroupWithOne.toAddMonoidWithOne","ZMod","Ring.toAddGroupWithOne","CommRing.toRing","ZMod.commRing"],"name":"ZMod.charP","className":"CharP"},{"typeNames":["ZMod"],"name":"ZMod.instCoeTCZMod","className":"CoeTC"},{"typeNames":["ZMod"],"name":"ZMod.nontrivial","className":"Nontrivial"},{"typeNames":["ZMod","OfNat.ofNat","Nat","instOfNatNat"],"name":"ZMod.nontrivial'","className":"Nontrivial"},{"typeNames":["ZMod"],"name":"ZMod.instInvZMod","className":"Inv"},{"typeNames":["Units","ZMod","OfNat.ofNat","Nat","instOfNatNat","MonoidWithZero.toMonoid","Semiring.toMonoidWithZero","CommSemiring.toSemiring","CommRing.toCommSemiring","ZMod.commRing"],"name":"ZMod.subsingleton_units","className":"Subsingleton"},{"typeNames":["ZMod"],"name":"ZMod.instFieldZMod","className":"Field"},{"typeNames":["ZMod","DivisionSemiring.toSemiring","ZMod","Semifield.toDivisionSemiring","Field.toSemifield","ZMod.instFieldZMod"],"name":"ZMod.instIsDomainZModToSemiringToDivisionSemiringToSemifieldInstFieldZMod","className":"IsDomain"},{"typeNames":["RingHom","ZMod","Semiring.toNonAssocSemiring","CommSemiring.toSemiring","CommRing.toCommSemiring","ZMod.commRing","Semiring.toNonAssocSemiring"],"name":"ZMod.subsingleton_ringHom","className":"Subsingleton"},{"typeNames":["RingEquiv","ZMod","NonUnitalNonAssocRing.toMul","NonAssocRing.toNonUnitalNonAssocRing","Ring.toNonAssocRing","CommRing.toRing","ZMod.commRing","NonUnitalNonAssocSemiring.toMul","NonAssocSemiring.toNonUnitalNonAssocSemiring","Semiring.toNonAssocSemiring","Distrib.toAdd","NonUnitalNonAssocSemiring.toDistrib","NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring","Distrib.toAdd","NonUnitalNonAssocSemiring.toDistrib"],"name":"ZMod.subsingleton_ringEquiv","className":"Subsingleton"}],"imports":["Init","Mathlib.Algebra.CharP.Basic","Mathlib.Data.Fintype.Units","Mathlib.Data.Nat.Parity","Mathlib.Tactic.FinCases"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1221-L1222","name":"ZMod.lift_comp_castAddHom","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.lift_comp_castAddHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1216-L1217","name":"ZMod.lift_comp_coe","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.lift_comp_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1211-L1212","name":"ZMod.lift_castAddHom","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.lift_castAddHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1207-L1208","name":"ZMod.lift_coe","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.lift_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1192-L1201","name":"ZMod.lift","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.lift","doc":"The map from `ZMod n` induced by `f : ℤ →+ A` that maps `n` to `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1179-L1183","name":"ZMod.ringHom_eq_of_ker_eq","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringHom_eq_of_ker_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1175-L1176","name":"ZMod.ringHom_surjective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringHom_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1170-L1172","name":"ZMod.ringHom_rightInverse","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringHom_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1163-L1167","name":"ZMod.ringHom_map_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringHom_map_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1156-L1159","name":"ZMod.subsingleton_ringEquiv","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.subsingleton_ringEquiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1152-L1153","name":"ZMod.subsingleton_ringHom","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.subsingleton_ringHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1139-L1145","name":"RingHom.ext_zmod","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#RingHom.ext_zmod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1131-L1135","name":"ZMod.instIsDomainZModToSemiringToDivisionSemiringToSemifieldInstFieldZMod","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.instIsDomainZModToSemiringToDivisionSemiringToSemifieldInstFieldZMod","doc":"`ZMod p` is an integral domain when `p` is prime. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1124-L1128","name":"ZMod.instFieldZMod","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.instFieldZMod","doc":"Field structure on `ZMod p` if `p` is prime. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1106-L1112","name":"ZMod.natAbs_valMinAbs_add_le","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.natAbs_valMinAbs_add_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1090-L1103","name":"ZMod.natAbs_min_of_le_div_two","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.natAbs_min_of_le_div_two","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1084-L1087","name":"ZMod.valMinAbs_natCast_eq_self","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_natCast_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1075-L1079","name":"ZMod.valMinAbs_natCast_of_half_lt","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_natCast_of_half_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1068-L1072","name":"ZMod.valMinAbs_natCast_of_le_half","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_natCast_of_le_half","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1049-L1065","name":"ZMod.valMinAbs_natAbs_eq_min","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_natAbs_eq_min","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1041-L1044","name":"ZMod.prime_ne_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.prime_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1035-L1038","name":"ZMod.val_eq_ite_valMinAbs","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_eq_ite_valMinAbs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1029-L1032","name":"ZMod.natAbs_valMinAbs_neg","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.natAbs_valMinAbs_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1016-L1025","name":"ZMod.valMinAbs_neg_of_ne_half","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_neg_of_ne_half","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L1004-L1013","name":"ZMod.nat_cast_natAbs_valMinAbs","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_natAbs_valMinAbs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L997-L1001","name":"ZMod.valMinAbs_eq_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L991-L993","name":"ZMod.valMinAbs_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L981-L987","name":"ZMod.natAbs_valMinAbs_le","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.natAbs_valMinAbs_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L966-L978","name":"ZMod.valMinAbs_spec","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_spec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L955-L963","name":"ZMod.valMinAbs_mem_Ioc","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_mem_Ioc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L941-L952","name":"ZMod.valMinAbs_mul_two_eq_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_mul_two_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L935-L938","name":"ZMod.valMinAbs_nonneg_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_nonneg_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L931-L932","name":"Nat.le_div_two_iff_mul_two_le","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#Nat.le_div_two_iff_mul_two_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L927-L928","name":"ZMod.injective_valMinAbs","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.injective_valMinAbs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L918-L924","name":"ZMod.coe_valMinAbs","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.coe_valMinAbs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L910-L914","name":"ZMod.valMinAbs_def_pos","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_def_pos","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L906-L907","name":"ZMod.valMinAbs_def_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs_def_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L900-L902","name":"ZMod.valMinAbs","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.valMinAbs","doc":"`valMinAbs x` returns the integer in the same equivalence class as `x` that is closest to `0`,\nThe result will be in the interval `(-n/2, n/2]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L888-L895","name":"ZMod.neg_val","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.neg_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L878-L885","name":"ZMod.neg_val'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.neg_val'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L874-L875","name":"ZMod.val_cast_of_lt","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_cast_of_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L846-L871","name":"ZMod.neg_eq_self_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.neg_eq_self_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L839-L843","name":"ZMod.val_eq_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L832-L835","name":"ZMod.natAbs_mod_two","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.natAbs_mod_two","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L827-L828","name":"ZMod.neg_eq_self_mod_two","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.neg_eq_self_mod_two","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L823-L824","name":"ZMod.neg_one_ne_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.neg_one_ne_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L817-L820","name":"ZMod.ne_neg_self","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ne_neg_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L792-L814","name":"ZMod.le_div_two_iff_lt_neg","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.le_div_two_iff_lt_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L788-L789","name":"ZMod.subsingleton_units","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.subsingleton_units","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L744-L784","name":"ZMod.chineseRemainder","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.chineseRemainder","doc":"The **Chinese remainder theorem**. For a pair of coprime natural numbers, `m` and `n`,\n  the rings `ZMod (m * n)` and `ZMod m × ZMod n` are isomorphic.\n\nSee `Ideal.quotientInfRingEquivPiQuotient` for the Chinese remainder theorem for ideals in any\nring.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L730-L735","name":"ZMod.unitsEquivCoprime","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.unitsEquivCoprime","doc":"Equivalence between the units of `ZMod n` and\nthe subtype of terms `x : ZMod n` for which `x.val` is coprime to `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L723-L724","name":"ZMod.inv_mul_of_unit","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.inv_mul_of_unit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L718-L720","name":"ZMod.mul_inv_of_unit","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.mul_inv_of_unit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L707-L715","name":"ZMod.inv_coe_unit","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.inv_coe_unit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L695-L703","name":"ZMod.val_coe_unit_coprime","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_coe_unit_coprime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L690-L692","name":"ZMod.coe_unitOfCoprime","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.coe_unitOfCoprime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L685-L686","name":"ZMod.unitOfCoprime","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime","doc":"`unitOfCoprime` makes an element of `(ZMod n)ˣ` given\na natural number `x` and a proof that `x` is coprime to `n`  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L677-L680","name":"ZMod.coe_mul_inv_eq_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.coe_mul_inv_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L670-L674","name":"ZMod.eq_iff_modEq_nat","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.eq_iff_modEq_nat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L663-L667","name":"ZMod.nat_cast_mod","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_mod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L645-L659","name":"ZMod.mul_inv_eq_gcd","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.mul_inv_eq_gcd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L636-L642","name":"ZMod.inv_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.inv_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L632-L633","name":"ZMod.instInvZMod","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.instInvZMod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L627-L629","name":"ZMod.inv","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.inv","doc":"The inversion on `ZMod n`.\nIt is setup in such a way that `a * a⁻¹` is equal to `gcd a.val n`.\nIn particular, if `a` is coprime to `n`, and hence a unit, `a * a⁻¹ = 1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L620-L621","name":"ZMod.nontrivial'","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nontrivial'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L610-L617","name":"ZMod.nontrivial","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nontrivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L603-L607","name":"ZMod.val_mul","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L597-L600","name":"ZMod.val_add","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L592-L594","name":"ZMod.val_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L588-L589","name":"ZMod.val_one_eq_one_mod","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_one_eq_one_mod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L579-L585","name":"ZMod.val_injective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L574-L576","name":"ZMod.nat_cast_toNat","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_toNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L564-L567","name":"ZMod.ker_int_castRingHom","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ker_int_castRingHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L557-L561","name":"ZMod.ker_int_castAddHom","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ker_int_castAddHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L552-L554","name":"ZMod.int_cast_mod","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_mod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L540-L548","name":"ZMod.int_coe_zmod_eq_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_coe_zmod_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L529-L537","name":"ZMod.nat_coe_zmod_eq_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_coe_zmod_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L515-L526","name":"ZMod.cast_sub_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_sub_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L509-L512","name":"ZMod.cast_neg_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_neg_one","doc":"`-1 : ZMod n` lifts to `n - 1 : R`. This avoids the characteristic assumption in `cast_neg`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L500-L505","name":"ZMod.val_neg_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_neg_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L493-L496","name":"ZMod.coe_int_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.coe_int_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L486-L490","name":"ZMod.val_int_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_int_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L482-L483","name":"ZMod.nat_cast_zmod_eq_zero_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_zmod_eq_zero_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L478-L479","name":"ZMod.int_cast_eq_int_cast_iff_dvd_sub","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_eq_int_cast_iff_dvd_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L474-L475","name":"ZMod.int_cast_zmod_eq_zero_iff_dvd","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_zmod_eq_zero_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L470-L471","name":"ZMod.nat_cast_eq_nat_cast_iff'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_eq_nat_cast_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L466-L467","name":"ZMod.nat_cast_eq_nat_cast_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_eq_nat_cast_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L462-L463","name":"ZMod.int_cast_eq_int_cast_iff'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_eq_int_cast_iff'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L458-L459","name":"ZMod.int_cast_eq_int_cast_iff","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_eq_int_cast_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L435-L451","name":"ZMod.ringEquivCongr","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringEquivCongr","doc":"The identity between `ZMod m` and `ZMod n` when `m = n`, as a ring isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L430-L431","name":"ZMod.ringEquiv","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringEquiv","doc":"The unique ring isomorphism between `ZMod n` and a ring `R`\nof characteristic `n` and cardinality `n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L417-L425","name":"ZMod.castHom_bijective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.castHom_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L409-L414","name":"ZMod.castHom_injective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.castHom_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L403-L404","name":"ZMod.cast_int_cast'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_int_cast'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L398-L399","name":"ZMod.cast_nat_cast'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_nat_cast'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L393-L394","name":"ZMod.cast_pow'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_pow'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L388-L389","name":"ZMod.cast_sub'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_sub'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L383-L384","name":"ZMod.cast_mul'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_mul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L378-L379","name":"ZMod.cast_add'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_add'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L373-L374","name":"ZMod.cast_one'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L359-L360","name":"ZMod.cast_int_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_int_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L354-L355","name":"ZMod.cast_nat_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_nat_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L349-L350","name":"ZMod.cast_pow","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L344-L345","name":"ZMod.cast_neg","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L339-L340","name":"ZMod.cast_sub","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L334-L335","name":"ZMod.castHom_apply","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.castHom_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L325-L330","name":"ZMod.castHom","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.castHom","doc":"The canonical ring homomorphism from `ZMod n` to a ring of characteristic `n`.\n\nSee also `ZMod.lift` (in `Data.ZMod.Quotient`) for a generalized version working in `AddGroup`s.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L311-L318","name":"ZMod.cast_mul","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L301-L308","name":"ZMod.cast_add","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L288-L298","name":"ZMod.cast_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L268-L277","name":"ZMod.coe_add_eq_ite","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.coe_add_eq_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L264-L265","name":"ZMod.int_cast_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L259-L260","name":"ZMod.nat_cast_val","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L249-L253","name":"ZMod.int_cast_comp_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_comp_cast","doc":"The coercions are respectively `Int.cast`, `ZMod.cast`, and `ZMod.cast`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L241-L244","name":"ZMod.nat_cast_comp_val","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_comp_val","doc":"The coercions are respectively `Nat.cast` and `ZMod.cast`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L233-L234","name":"ZMod.cast_id'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_id'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L227-L229","name":"ZMod.cast_id","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L222-L223","name":"ZMod.int_cast_surjective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L218-L219","name":"ZMod.int_cast_rightInverse","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L211-L215","name":"ZMod.int_cast_zmod_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.int_cast_zmod_cast","doc":"So-named because the outer coercion is `Int.cast` into `ZMod`. For `Int.cast` into an arbitrary\nring, see `ZMod.int_cast_cast`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L204-L205","name":"ZMod.nat_cast_zmod_surjective","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_zmod_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L200-L201","name":"ZMod.nat_cast_rightInverse","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_rightInverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L194-L197","name":"ZMod.nat_cast_zmod_val","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_zmod_val","doc":"So-named because the coercion is `Nat.cast` into `ZMod`. For `Nat.cast` into an arbitrary ring,\nsee `ZMod.nat_cast_val`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L184-L187","name":"Prod.snd_zmod_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#Prod.snd_zmod_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L177-L180","name":"Prod.fst_zmod_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#Prod.fst_zmod_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L168-L171","name":"ZMod.cast_eq_val","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_eq_val","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L161-L165","name":"ZMod.cast_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L157-L158","name":"ZMod.instCoeTCZMod","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.instCoeTCZMod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L151-L153","name":"ZMod.cast","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.cast","doc":"Cast an integer modulo `n` to another semiring.\nThis function is a morphism if the characteristic of `R` divides `n`.\nSee `ZMod.cast_hom` for a bundled version. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L136-L137","name":"ZMod.nat_cast_self'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_self'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L131-L132","name":"ZMod.nat_cast_self","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.nat_cast_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L125-L127","name":"ZMod.ringChar_zmod_n","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.ringChar_zmod_n","doc":"We have that `ringChar (ZMod n) = n`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L120-L121","name":"ZMod.addOrderOf_coe'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.addOrderOf_coe'","doc":"This lemma works in the case in which `a ≠ 0`.  The version where\n`ZMod n` is not infinite, i.e. `n ≠ 0`, is `addOrderOf_coe`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L111-L114","name":"ZMod.addOrderOf_coe","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.addOrderOf_coe","doc":"This lemma works in the case in which `ZMod n` is not infinite, i.e. `n ≠ 0`.  The version\nwhere `a ≠ 0` is `addOrderOf_coe'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L104-L105","name":"ZMod.addOrderOf_one","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.addOrderOf_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L94-L101","name":"ZMod.charP","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.charP","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L86-L91","name":"ZMod.val_nat_cast","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_nat_cast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L82-L83","name":"ZMod.val_mul'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_mul'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L77-L78","name":"ZMod.val_neg'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_neg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L72-L73","name":"ZMod.val_one'","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_one'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L66-L68","name":"ZMod.val_zero","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L61-L62","name":"ZMod.val_le","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L55-L58","name":"ZMod.val_lt","kind":"theorem","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L50-L52","name":"ZMod.val","kind":"def","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.val","doc":"`val a` is a natural number defined as:\n- for `a : ZMod 0` it is the absolute value of `a`\n- for `a : ZMod n` with `0 < n` it is the least natural number in the equivalence class\n\nSee `ZMod.valMinAbs` for a variant that takes values in the integers.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/ZMod/Basic.lean#L41-L42","name":"ZMod.charZero","kind":"instance","docLink":"./Mathlib/Data/ZMod/Basic.html#ZMod.charZero","doc":""}]}