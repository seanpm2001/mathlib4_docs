{"name":"Mathlib.Algebra.Homology.ShortExact.Abelian","instances":[],"imports":["Init","Mathlib.Algebra.Homology.ShortExact.Preadditive","Mathlib.CategoryTheory.Abelian.DiagramLemmas.Four"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/ShortExact/Abelian.lean#L88-L93","name":"CategoryTheory.RightSplit.splitting","kind":"def","docLink":"./Mathlib/Algebra/Homology/ShortExact/Abelian.html#CategoryTheory.RightSplit.splitting","doc":"A short exact sequence that is right split admits a splitting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/ShortExact/Abelian.lean#L78-L84","name":"CategoryTheory.LeftSplit.splitting","kind":"def","docLink":"./Mathlib/Algebra/Homology/ShortExact/Abelian.html#CategoryTheory.LeftSplit.splitting","doc":"A short exact sequence that is left split admits a splitting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/ShortExact/Abelian.lean#L69-L74","name":"CategoryTheory.Splitting.mk''","kind":"def","docLink":"./Mathlib/Algebra/Homology/ShortExact/Abelian.html#CategoryTheory.Splitting.mk''","doc":"To construct a splitting of `A -f⟶ B -g⟶ C` it suffices to supply\na *morphism* `i : A ⊞ C ⟶ B` such that `p ≫ i = f` where `p` is the canonical map\n`biprod.inl : A ⟶ A ⊞ C`, and `i ≫ g` is the canonical map `biprod.snd : A ⊞ C ⟶ C`,\ntogether with proofs that `f` is mono and `g` is epi.\n\nThe morphism `i` is then automatically an isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/ShortExact/Abelian.lean#L55-L60","name":"CategoryTheory.Splitting.mk'","kind":"def","docLink":"./Mathlib/Algebra/Homology/ShortExact/Abelian.html#CategoryTheory.Splitting.mk'","doc":"To construct a splitting of `A -f⟶ B -g⟶ C` it suffices to supply\na *morphism* `i : B ⟶ A ⊞ C` such that `f ≫ i` is the canonical map `biprod.inl : A ⟶ A ⊞ C` and\n`i ≫ q = g`, where `q` is the canonical map `biprod.snd : A ⊞ C ⟶ C`,\ntogether with proofs that `f` is mono and `g` is epi.\n\nThe morphism `i` is then automatically an isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Homology/ShortExact/Abelian.lean#L35-L46","name":"CategoryTheory.isIso_of_shortExact_of_isIso_of_isIso","kind":"theorem","docLink":"./Mathlib/Algebra/Homology/ShortExact/Abelian.html#CategoryTheory.isIso_of_shortExact_of_isIso_of_isIso","doc":""}]}