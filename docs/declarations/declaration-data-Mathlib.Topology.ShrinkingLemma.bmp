{"name":"Mathlib.Topology.ShrinkingLemma","instances":[{"typeNames":["ShrinkingLemma.PartialRefinement","ShrinkingLemma.PartialRefinement","Set"],"name":"ShrinkingLemma.PartialRefinement.instCoeFunPartialRefinementForAllSet","className":"CoeFun"},{"typeNames":["ShrinkingLemma.PartialRefinement"],"name":"ShrinkingLemma.PartialRefinement.instPartialOrderPartialRefinement","className":"PartialOrder"}],"imports":["Init","Mathlib.Topology.Separation"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L261-L265","name":"exists_iUnion_eq_closed_subset","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#exists_iUnion_eq_closed_subset","doc":"Shrinking lemma. A point-finite open cover of a closed subset of a normal space can be \"shrunk\"\nto a new closed cover so that each of the new closed sets is contained in the corresponding\noriginal open set. See also `exists_iUnion_eq_closure_subset` for a stronger statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L251-L255","name":"exists_iUnion_eq_closure_subset","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#exists_iUnion_eq_closure_subset","doc":"Shrinking lemma. A point-finite open cover of a closed subset of a normal space can be \"shrunk\"\nto a new open cover so that the closure of each new open set is contained in the corresponding\noriginal open set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L240-L245","name":"exists_subset_iUnion_closed_subset","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#exists_subset_iUnion_closed_subset","doc":"**Shrinking lemma**. A point-finite open cover of a closed subset of a normal space can be\n\"shrunk\" to a new closed cover so that each new closed set is contained in the corresponding\noriginal open set. See also `exists_subset_iUnion_closure_subset` for a stronger statement. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L221-L234","name":"exists_subset_iUnion_closure_subset","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#exists_subset_iUnion_closure_subset","doc":"**Shrinking lemma**. A point-finite open cover of a closed subset of a normal space can be\n\"shrunk\" to a new open cover so that the closure of each new open set is contained in the\ncorresponding original open set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L177-L207","name":"ShrinkingLemma.PartialRefinement.exists_gt","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.exists_gt","doc":"If `s` is a closed set, `v` is a partial refinement, and `i` is an index such that\n`i ∉ v.carrier`, then there exists a partial refinement that is strictly greater than `v`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L169-L172","name":"ShrinkingLemma.PartialRefinement.le_chainSup","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.le_chainSup","doc":"`chainSup hu c hc ne hfin hU` is an upper bound of the chain `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L145-L165","name":"ShrinkingLemma.PartialRefinement.chainSup","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.chainSup","doc":"Least upper bound of a nonempty chain of partial refinements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L138-L141","name":"ShrinkingLemma.PartialRefinement.find_apply_of_mem","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.find_apply_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L127-L135","name":"ShrinkingLemma.PartialRefinement.mem_find_carrier_iff","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.mem_find_carrier_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L121-L124","name":"ShrinkingLemma.PartialRefinement.find_mem","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.find_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L117-L118","name":"ShrinkingLemma.PartialRefinement.find","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.find","doc":"Choice of an element of a nonempty chain of partial refinements. If `i` belongs to one of\n`carrier v`, `v ∈ c`, then `find c ne i` is one of these partial refinements. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L111-L112","name":"ShrinkingLemma.PartialRefinement.chainSupCarrier","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.chainSupCarrier","doc":"The carrier of the least upper bound of a non-empty chain of partial refinements is the union of\ntheir carriers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L103-L106","name":"ShrinkingLemma.PartialRefinement.apply_eq_of_chain","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.apply_eq_of_chain","doc":"If two partial refinements `v₁`, `v₂` belong to a chain (hence, they are comparable)\nand `i` belongs to the carriers of both partial refinements, then `v₁ i = v₂ i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L88-L99","name":"ShrinkingLemma.PartialRefinement.instPartialOrderPartialRefinement","kind":"instance","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.instPartialOrderPartialRefinement","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L84-L85","name":"ShrinkingLemma.PartialRefinement.subset","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.subset","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L77-L77","name":"ShrinkingLemma.PartialRefinement.instCoeFunPartialRefinementForAllSet","kind":"instance","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.instCoeFunPartialRefinementForAllSet","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L70-L70","name":"ShrinkingLemma.PartialRefinement.apply_eq","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.apply_eq","doc":"Sets that correspond to `i ∉ carrier` are not modified. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L68-L68","name":"ShrinkingLemma.PartialRefinement.closure_subset","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.closure_subset","doc":"For each `i ∈ carrier`, the original set includes the closure of the refined set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L66-L66","name":"ShrinkingLemma.PartialRefinement.subset_iUnion","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.subset_iUnion","doc":"The partially refined family still covers the set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L64-L64","name":"ShrinkingLemma.PartialRefinement.isOpen","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.isOpen","doc":"Each set from the partially refined family is open. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L62-L62","name":"ShrinkingLemma.PartialRefinement.carrier","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.carrier","doc":"The set of indexes `i` such that `i`-th set is already shrunk. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L60-L60","name":"ShrinkingLemma.PartialRefinement.toFun","kind":"def","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.toFun","doc":"A family of sets that form a partial refinement of `u`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L58-L58","name":"ShrinkingLemma.PartialRefinement.mk","kind":"ctor","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L58-L70","name":"ShrinkingLemma.PartialRefinement","kind":"structure","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement","doc":"Auxiliary definition for the proof of the shrinking lemma. A partial refinement of a covering\n`⋃ i, u i` of a set `s` is a map `v : ι → Set X` and a set `carrier : Set ι` such that\n\n* `s ⊆ ⋃ i, v i`;\n* all `v i` are open;\n* if `i ∈ carrier v`, then `closure (v i) ⊆ u i`;\n* if `i ∉ carrier`, then `v i = u i`.\n\nThis type is equipped with the following partial order: `v ≤ v'` if `v.carrier ⊆ v'.carrier`\nand `v i = v' i` for `i ∈ v.carrier`. We will use Zorn's lemma to prove that this type has\na maximal element, then show that the maximal element must have `carrier = univ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L58-L58","name":"ShrinkingLemma.PartialRefinement.ext_iff","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Topology/ShrinkingLemma.lean#L58-L58","name":"ShrinkingLemma.PartialRefinement.ext","kind":"theorem","docLink":"./Mathlib/Topology/ShrinkingLemma.html#ShrinkingLemma.PartialRefinement.ext","doc":""}]}