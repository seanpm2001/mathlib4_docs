{"name":"Mathlib.Analysis.NormedSpace.Basic","instances":[{"typeNames":["SeminormedRing.toPseudoMetricSpace","SeminormedCommRing.toSeminormedRing","NormedCommRing.toSeminormedCommRing","NormedField.toNormedCommRing","SeminormedAddCommGroup.toPseudoMetricSpace","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","NormedField.toField","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","SeminormedAddCommGroup.toAddCommGroup","SMulZeroClass.toSMul","NegZeroClass.toZero","SubNegZeroMonoid.toNegZeroClass","SubtractionMonoid.toSubNegZeroMonoid","SubtractionCommMonoid.toSubtractionMonoid","AddCommGroup.toDivisionAddCommMonoid","SeminormedAddCommGroup.toAddCommGroup","SMulWithZero.toSMulZeroClass","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","NormedField.toField","MulActionWithZero.toSMulWithZero","Semiring.toMonoidWithZero","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Module.toMulActionWithZero","AddCommGroup.toAddCommMonoid","NormedSpace.toModule"],"name":"NormedSpace.boundedSMul","className":"BoundedSMul"},{"typeNames":["NonUnitalSeminormedRing.toSeminormedAddCommGroup","NonUnitalNormedRing.toNonUnitalSeminormedRing","NormedRing.toNonUnitalNormedRing","NormedCommRing.toNormedRing","NormedField.toNormedCommRing"],"name":"NormedField.toNormedSpace","className":"NormedSpace"},{"typeNames":["SeminormedRing.toPseudoMetricSpace","SeminormedCommRing.toSeminormedRing","NormedCommRing.toSeminormedCommRing","NormedField.toNormedCommRing","SeminormedRing.toPseudoMetricSpace","SeminormedCommRing.toSeminormedRing","NormedCommRing.toSeminormedCommRing","NormedField.toNormedCommRing","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","NormedField.toField","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","NormedField.toField","Algebra.toSMul","Semifield.toCommSemiring","Field.toSemifield","NormedField.toField","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Algebra.id"],"name":"NormedField.to_boundedSMul","className":"BoundedSMul"},{"typeNames":["Subtype","Membership.mem","AddSubgroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","AddSubgroup.zmultiples","instTopologicalSpaceSubtype","Membership.mem","AddSubgroup","NormedAddGroup.toAddGroup","NormedAddCommGroup.toNormedAddGroup","SetLike.instMembership","AddSubgroup.instSetLikeAddSubgroup","AddSubgroup.zmultiples","UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup"],"name":"instDiscreteTopologySubtypeMemAddSubgroupToAddGroupToNormedAddGroupInstMembershipInstSetLikeAddSubgroupZmultiplesInstTopologicalSpaceSubtypeToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroup","className":"DiscreteTopology"},{"typeNames":["ULift","ULift.seminormedAddCommGroup"],"name":"ULift.normedSpace","className":"NormedSpace"},{"typeNames":["Prod","Prod.seminormedAddCommGroup"],"name":"Prod.normedSpace","className":"NormedSpace"},{"typeNames":["Pi.seminormedAddCommGroup"],"name":"Pi.normedSpace","className":"NormedSpace"},{"typeNames":["MulOpposite","MulOpposite.seminormedAddCommGroup"],"name":"MulOpposite.normedSpace","className":"NormedSpace"},{"typeNames":["Subtype","Membership.mem","Submodule","Ring.toSemiring","AddCommGroup.toAddCommMonoid","SeminormedAddCommGroup.toAddCommGroup","SetLike.instMembership","Submodule.setLike","Submodule.seminormedAddCommGroup"],"name":"Submodule.normedSpace","className":"NormedSpace"},{"typeNames":["DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","NormedField.toField","AddCommGroup.toAddCommMonoid","NormedAddCommGroup.toAddCommGroup"],"name":"NormedSpace.toModule'","className":"Module"},{"typeNames":["nhdsWithin","HasCompl.compl","Set","BooleanAlgebra.toHasCompl","Set.instBooleanAlgebraSet","Singleton.singleton","Set.instSingletonSet"],"name":"Real.punctured_nhds_module_neBot","className":"Filter.NeBot"},{"typeNames":["UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedRing.toPseudoMetricSpace","SeminormedCommRing.toSeminormedRing","NormedCommRing.toSeminormedCommRing","NormedField.toNormedCommRing","NontriviallyNormedField.toNormedField"],"name":"NontriviallyNormedField.noncompactSpace","className":"NoncompactSpace"},{"typeNames":["UniformSpace.toTopologicalSpace","PseudoMetricSpace.toUniformSpace","SeminormedAddCommGroup.toPseudoMetricSpace","NormedAddCommGroup.toSeminormedAddCommGroup"],"name":"RealNormedSpace.noncompactSpace","className":"NoncompactSpace"},{"typeNames":["NonUnitalSeminormedRing.toSeminormedAddCommGroup","SeminormedRing.toNonUnitalSeminormedRing"],"name":"NormedAlgebra.toNormedSpace","className":"NormedSpace"},{"typeNames":["NonUnitalSeminormedRing.toSeminormedAddCommGroup","NonUnitalNormedRing.toNonUnitalSeminormedRing","NormedRing.toNonUnitalNormedRing"],"name":"NormedAlgebra.toNormedSpace'","className":"NormedSpace"},{"typeNames":["SeminormedCommRing.toSeminormedRing","NormedCommRing.toSeminormedCommRing","NormedField.toNormedCommRing"],"name":"NormedAlgebra.id","className":"NormedAlgebra"},{"typeNames":["Rat","Rat.normedField","NormedRing.toSeminormedRing","NormedDivisionRing.toNormedRing"],"name":"normedAlgebraRat","className":"NormedAlgebra"},{"typeNames":["PUnit","SeminormedCommRing.toSeminormedRing","PUnit","NormedCommRing.toSeminormedCommRing","PUnit.normedCommRing"],"name":"PUnit.normedAlgebra","className":"NormedAlgebra"},{"typeNames":["ULift","ULift.seminormedRing"],"name":"instNormedAlgebraULiftSeminormedRing","className":"NormedAlgebra"},{"typeNames":["Prod","Prod.seminormedRing"],"name":"Prod.normedAlgebra","className":"NormedAlgebra"},{"typeNames":["Pi.seminormedRing"],"name":"Pi.normedAlgebra","className":"NormedAlgebra"},{"typeNames":["MulOpposite","MulOpposite.seminormedRing"],"name":"MulOpposite.normedAlgebra","className":"NormedAlgebra"},{"typeNames":["Subtype","Membership.mem","Subalgebra","Semifield.toCommSemiring","Field.toSemifield","NormedField.toField","Ring.toSemiring","SeminormedRing.toRing","NormedAlgebra.toAlgebra","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","SubringClass.toSeminormedRing","Subalgebra","Semifield.toCommSemiring","Field.toSemifield","NormedField.toField","Ring.toSemiring","SeminormedRing.toRing","NormedAlgebra.toAlgebra","Subalgebra.instSetLikeSubalgebra","Subalgebra.instSubringClassSubalgebraToCommSemiringToSemiringInstSetLikeSubalgebra","EuclideanDomain.toCommRing","Field.toEuclideanDomain"],"name":"Subalgebra.toNormedAlgebra","className":"NormedAlgebra"},{"typeNames":["RestrictScalars"],"name":"instSeminormedAddCommGroupRestrictScalars","className":"SeminormedAddCommGroup"},{"typeNames":["RestrictScalars"],"name":"instNormedAddCommGroupRestrictScalars","className":"NormedAddCommGroup"},{"typeNames":["RestrictScalars","instSeminormedAddCommGroupRestrictScalars"],"name":"RestrictScalars.normedSpace","className":"NormedSpace"}],"imports":["Init","Mathlib.Algebra.Algebra.Pi","Mathlib.Algebra.Algebra.RestrictScalars","Mathlib.Analysis.Normed.Field.Basic","Mathlib.Analysis.Normed.MulAction","Mathlib.Data.Real.Sqrt","Mathlib.Topology.Algebra.Module.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L598-L599","name":"NormedSpace.restrictScalars","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.restrictScalars","doc":"Warning: This declaration should be used judiciously.\nPlease consider using `IsScalarTower` and/or `RestrictScalars ùïú ùïú' E` instead.\n\nThis definition allows the `RestrictScalars.normedSpace` instance to be put directly on `E`\nrather on `RestrictScalars ùïú ùïú' E`. This would be a very bad instance; both because `ùïú'` cannot be\ninferred, and because it is likely to create instance diamonds.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L586-L588","name":"Module.RestrictScalars.normedSpaceOrig","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Module.RestrictScalars.normedSpaceOrig","doc":"The action of the original normed_field on `RestrictScalars ùïú ùïú' E`.\nThis is not an instance as it would be contrary to the purpose of `RestrictScalars`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L576-L579","name":"RestrictScalars.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#RestrictScalars.normedSpace","doc":"If `E` is a normed space over `ùïú'` and `ùïú` is a normed algebra over `ùïú'`, then\n`RestrictScalars.module` is additionally a `NormedSpace`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L570-L572","name":"instNormedAddCommGroupRestrictScalars","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#instNormedAddCommGroupRestrictScalars","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L566-L568","name":"instSeminormedAddCommGroupRestrictScalars","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#instSeminormedAddCommGroupRestrictScalars","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L556-L558","name":"Subalgebra.toNormedAlgebra","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Subalgebra.toNormedAlgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L544-L552","name":"NormedAlgebra.induced","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.induced","doc":"A non-unital algebra homomorphism from an `Algebra` to a `NormedAlgebra` induces a\n`NormedAlgebra` structure on the domain, using the `SeminormedRing.induced` norm.\n\nSee note [reducible non-instances] "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L532-L534","name":"MulOpposite.normedAlgebra","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#MulOpposite.normedAlgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L525-L527","name":"Pi.normedAlgebra","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Pi.normedAlgebra","doc":"The product of finitely many normed algebras is a normed algebra, with the sup norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L518-L520","name":"Prod.normedAlgebra","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Prod.normedAlgebra","doc":"The product of two normed algebras is a normed algebra, with the sup norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L514-L515","name":"instNormedAlgebraULiftSeminormedRing","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#instNormedAlgebraULiftSeminormedRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L510-L511","name":"PUnit.normedAlgebra","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#PUnit.normedAlgebra","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L504-L507","name":"normedAlgebraRat","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#normedAlgebraRat","doc":"Any normed characteristic-zero division ring that is a normed algebra over the reals is also a\nnormed algebra over the rationals.\n\nPhrased another way, if `ùïú` is a normed algebra over the reals, then `AlgebraRat` respects that\nnorm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L494-L495","name":"NormedAlgebra.id","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L489-L491","name":"algebraMap_isometry","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#algebraMap_isometry","doc":"In a normed algebra, the inclusion of the base field in the extended field is an isometry. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L480-L481","name":"nnnorm_algebraMap_nNReal","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#nnnorm_algebraMap_nNReal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L475-L476","name":"norm_algebraMap_nNReal","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#norm_algebraMap_nNReal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L466-L467","name":"nnnorm_algebraMap'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#nnnorm_algebraMap'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L461-L462","name":"norm_algebraMap'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#norm_algebraMap'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L456-L457","name":"nnnorm_algebraMap","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#nnnorm_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L451-L453","name":"norm_algebraMap","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#norm_algebraMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L447-L448","name":"NormedAlgebra.toNormedSpace'","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.toNormedSpace'","doc":"While this may appear identical to `NormedAlgebra.toNormedSpace`, it contains an implicit\nargument involving `NormedRing.toSeminormedRing` that typeclass inference has trouble inferring.\n\nSpecifically, the following instance cannot be found without this `NormedSpace.toModule'`:\n```lean\nexample\n  (ùïú Œπ : Type*) (E : Œπ ‚Üí Type*)\n  [NormedField ùïú] [Œ† i, NormedRing (E i)] [Œ† i, NormedAlgebra ùïú (E i)] :\n  Œ† i, Module ùïú (E i) := by infer_instance\n```\n\nSee `NormedSpace.toModule'` for a similar situation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L429-L432","name":"NormedAlgebra.toNormedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.toNormedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L422-L422","name":"NormedAlgebra.norm_smul_le","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.norm_smul_le","doc":"A normed algebra `ùïú'` over `ùïú` is normed module that is also an algebra.\n\nSee the implementation notes for `Algebra` for a discussion about non-unital algebras. Following\nthe strategy there, a non-unital *normed* algebra can be written as:\n```lean\nvariables [NormedField ùïú] [NonunitalSeminormedRing ùïú']\nvariables [NormedModule ùïú ùïú'] [SMulCommClass ùïú ùïú' ùïú'] [IsScalarTower ùïú ùïú' ùïú']\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L420-L420","name":"NormedAlgebra.mk","kind":"ctor","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L420-L422","name":"NormedAlgebra","kind":"class","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedAlgebra","doc":"A normed algebra `ùïú'` over `ùïú` is normed module that is also an algebra.\n\nSee the implementation notes for `Algebra` for a discussion about non-unital algebras. Following\nthe strategy there, a non-unital *normed* algebra can be written as:\n```lean\nvariables [NormedField ùïú] [NonunitalSeminormedRing ùïú']\nvariables [NormedModule ùïú ùïú'] [SMulCommClass ùïú ùïú' ùïú'] [IsScalarTower ùïú ùïú' ùïú']\n```\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L403-L404","name":"RealNormedSpace.noncompactSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#RealNormedSpace.noncompactSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L399-L400","name":"NontriviallyNormedField.noncompactSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NontriviallyNormedField.noncompactSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L395-L396","name":"NormedSpace.noncompactSpace","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.noncompactSpace","doc":"A normed vector space over a nontrivially normed field is a noncompact space. This cannot be\nan instance because in order to apply it, Lean would have to search for `NormedSpace ùïú E` with\nunknown `ùïú`. We register this as an instance in two cases: `ùïú = E` and `ùïú = ‚Ñù`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L386-L389","name":"NormedSpace.unbounded_univ","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.unbounded_univ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L378-L383","name":"NormedSpace.exists_lt_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.exists_lt_norm","doc":"If `E` is a nontrivial normed space over a nontrivially normed field `ùïú`, then `E` is unbounded:\nfor any `c : ‚Ñù`, there exists a vector `x : E` with norm strictly greater than `c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L364-L366","name":"frontier_sphere'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#frontier_sphere'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L359-L360","name":"interior_sphere'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#interior_sphere'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L353-L355","name":"frontier_closedBall'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#frontier_closedBall'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L346-L350","name":"interior_closedBall'","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#interior_closedBall'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L341-L343","name":"Real.punctured_nhds_module_neBot","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Real.punctured_nhds_module_neBot","doc":"If `E` is a nontrivial topological module over `‚Ñù`, then `E` has no isolated points.\nThis is a particular case of `Module.punctured_nhds_neBot`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L333-L334","name":"range_nnnorm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#range_nnnorm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L328-L329","name":"nnnorm_surjective","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#nnnorm_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L324-L325","name":"range_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#range_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L316-L320","name":"exists_norm_eq","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#exists_norm_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L306-L307","name":"NormedSpace.toModule'","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.toModule'","doc":"While this may appear identical to `NormedSpace.toModule`, it contains an implicit argument\ninvolving `NormedAddCommGroup.toSeminormedAddCommGroup` that typeclass inference has trouble\ninferring.\n\nSpecifically, the following instance cannot be found without this `NormedSpace.toModule'`:\n```lean\nexample\n  (ùïú Œπ : Type*) (E : Œπ ‚Üí Type*)\n  [NormedField ùïú] [Œ† i, NormedAddCommGroup (E i)] [Œ† i, NormedSpace ùïú (E i)] :\n  Œ† i, Module ùïú (E i) := by infer_instance\n```\n\n[This Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Typeclass.20resolution.20under.20binders/near/245151099)\ngives some more context. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L270-L279","name":"NormedSpace.induced","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.induced","doc":"A linear map from a `Module` to a `NormedSpace` induces a `NormedSpace` structure on the\ndomain, using the `SeminormedAddCommGroup.induced` norm.\n\nSee note [reducible non-instances] "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L258-L260","name":"Submodule.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Submodule.normedSpace","doc":"A subspace of a normed space is also a normed space, with the restriction of the norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L252-L254","name":"MulOpposite.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#MulOpposite.normedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L244-L249","name":"Pi.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Pi.normedSpace","doc":"The product of finitely many normed spaces is a normed space, with the sup norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L236-L240","name":"Prod.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Prod.normedSpace","doc":"The product of two normed spaces is a normed space, with the sup norm. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L231-L233","name":"ULift.normedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#ULift.normedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L225-L226","name":"coe_homeomorphUnitBall_apply_zero","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#coe_homeomorphUnitBall_apply_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L192-L221","name":"homeomorphUnitBall","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#homeomorphUnitBall","doc":"A (semi) normed real vector space is homeomorphic to the unit ball in the same space.\nThis homeomorphism sends `x : E` to `(1 + ‚Äñx‚Äñ¬≤)^(- ¬Ω) ‚Ä¢ x`.\n\nIn many cases the actual implementation is not important, so we don't mark the projection lemmas\n`homeomorphUnitBall_apply_coe` and `homeomorphUnitBall_symm_apply` as `@[simp]`.\n\nSee also `contDiff_homeomorphUnitBall` and `contDiffOn_homeomorphUnitBall_symm` for\nsmoothness properties that hold when `E` is an inner-product space. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L191-L191","name":"homeomorphUnitBall_apply_coe","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#homeomorphUnitBall_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L191-L191","name":"homeomorphUnitBall_symm_apply","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#homeomorphUnitBall_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L169-L181","name":"instDiscreteTopologySubtypeMemAddSubgroupToAddGroupToNormedAddGroupInstMembershipInstSetLikeAddSubgroupZmultiplesInstTopologicalSpaceSubtypeToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroup","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#instDiscreteTopologySubtypeMemAddSubgroupToAddGroupToNormedAddGroupInstMembershipInstSetLikeAddSubgroupZmultiplesInstTopologicalSpaceSubtypeToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L164-L166","name":"frontier_sphere","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#frontier_sphere","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L159-L161","name":"interior_sphere","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#interior_sphere","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L154-L156","name":"frontier_closedBall","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#frontier_closedBall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L133-L151","name":"interior_closedBall","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#interior_closedBall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L128-L130","name":"frontier_ball","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#frontier_ball","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L112-L125","name":"closure_ball","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#closure_ball","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L105-L109","name":"Filter.IsBoundedUnder.smul_tendsto_zero","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Filter.IsBoundedUnder.smul_tendsto_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L99-L102","name":"Filter.Tendsto.zero_smul_isBoundedUnder_le","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#Filter.Tendsto.zero_smul_isBoundedUnder_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L92-L96","name":"eventually_nhds_norm_smul_sub_lt","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#eventually_nhds_norm_smul_sub_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L84-L85","name":"norm_smul_of_nonneg","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#norm_smul_of_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L78-L81","name":"inv_norm_smul_mem_closed_unit_ball","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#inv_norm_smul_mem_closed_unit_ball","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L75-L75","name":"abs_norm","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#abs_norm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L70-L71","name":"norm_zsmul","kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#norm_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L66-L67","name":"NormedField.to_boundedSMul","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedField.to_boundedSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L62-L62","name":"NormedField.toNormedSpace","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedField.toNormedSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L58-L59","name":"NormedSpace.boundedSMul","kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.boundedSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L48-L48","name":"NormedSpace.norm_smul_le","kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.norm_smul_le","doc":"A normed space over a normed field is a vector space endowed with a norm which satisfies the\nequality `‚Äñc ‚Ä¢ x‚Äñ = ‚Äñc‚Äñ ‚Äñx‚Äñ`. We require only `‚Äñc ‚Ä¢ x‚Äñ ‚â§ ‚Äñc‚Äñ ‚Äñx‚Äñ` in the definition, then prove\n`‚Äñc ‚Ä¢ x‚Äñ = ‚Äñc‚Äñ ‚Äñx‚Äñ` in `norm_smul`.\n\nNote that since this requires `SeminormedAddCommGroup` and not `NormedAddCommGroup`, this\ntypeclass can be used for \"semi normed spaces\" too, just as `Module` can be used for\n\"semi modules\". "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L46-L46","name":"NormedSpace.mk","kind":"ctor","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/NormedSpace/Basic.lean#L46-L48","name":"NormedSpace","kind":"class","docLink":"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace","doc":"A normed space over a normed field is a vector space endowed with a norm which satisfies the\nequality `‚Äñc ‚Ä¢ x‚Äñ = ‚Äñc‚Äñ ‚Äñx‚Äñ`. We require only `‚Äñc ‚Ä¢ x‚Äñ ‚â§ ‚Äñc‚Äñ ‚Äñx‚Äñ` in the definition, then prove\n`‚Äñc ‚Ä¢ x‚Äñ = ‚Äñc‚Äñ ‚Äñx‚Äñ` in `norm_smul`.\n\nNote that since this requires `SeminormedAddCommGroup` and not `NormedAddCommGroup`, this\ntypeclass can be used for \"semi normed spaces\" too, just as `Module` can be used for\n\"semi modules\". "}]}