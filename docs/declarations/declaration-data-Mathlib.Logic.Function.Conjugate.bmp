{"name":"Mathlib.Logic.Function.Conjugate","instances":[],"imports":["Init","Mathlib.Logic.Function.Basic","Mathlib.Tactic.Relation.Rfl"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L179-L181","name":"Function.Semiconj₂.isIdempotent_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.isIdempotent_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L174-L176","name":"Function.Semiconj₂.isIdempotent_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.isIdempotent_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L169-L171","name":"Function.Semiconj₂.isAssociative_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.isAssociative_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L164-L166","name":"Function.Semiconj₂.isAssociative_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.isAssociative_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L160-L161","name":"Function.Semiconj₂.comp","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L157-L157","name":"Function.Semiconj₂.id_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.id_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L153-L154","name":"Function.Semiconj₂.comp_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L149-L150","name":"Function.Semiconj₂.eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L141-L142","name":"Function.Semiconj₂","kind":"def","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj₂","doc":"A map `f` semiconjugates a binary operation `ga` to a binary operation `gb` if\nfor all `x`, `y` we have `f (ga x y) = gb (f x) (f y)`. E.g., a `MonoidHom`\nsemiconjugates `(*)` to `(*)`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L130-L131","name":"Function.Commute.option_map","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.option_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L126-L127","name":"Function.Commute.id_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.id_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L122-L123","name":"Function.Commute.id_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.id_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L118-L119","name":"Function.Commute.comp_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L114-L115","name":"Function.Commute.comp_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L110-L111","name":"Function.Commute.symm","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L105-L106","name":"Function.Commute.refl","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L102-L102","name":"Function.Commute.semiconj","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute.semiconj","doc":"Reinterpret `Function.Commute f g` as `Function.Semiconj f g g`. These two predicates are\ndefinitionally equal but have different dot-notation lemmas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L93-L93","name":"Function.Semiconj.commute","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.commute","doc":"Reinterpret `Function.Semiconj f g g` as `Function.Commute f g`. These two predicates are\ndefinitionally equal but have different dot-notation lemmas. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L87-L88","name":"Function.Commute","kind":"def","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Commute","doc":"Two maps `f g : α → α` commute if `f (g x) = g (f x)` for all `x : α`.\nGiven `h : Function.commute f g` and `a : α`, we have `h a : f (g a) = g (f a)` and\n`h.comp_eq : f ∘ g = g ∘ f`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L74-L77","name":"Function.Semiconj.option_map","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.option_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L69-L71","name":"Function.Semiconj.inverses_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.inverses_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L65-L66","name":"Function.Semiconj.id_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.id_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L61-L62","name":"Function.Semiconj.id_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.id_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L56-L58","name":"Function.Semiconj.comp_left","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.comp_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L51-L53","name":"Function.Semiconj.comp_right","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.comp_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L47-L48","name":"Function.Semiconj.eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L43-L44","name":"Function.Semiconj.comp_eq","kind":"theorem","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj.comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Function/Conjugate.lean#L35-L36","name":"Function.Semiconj","kind":"def","docLink":"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj","doc":"We say that `f : α → β` semiconjugates `ga : α → α` to `gb : β → β` if `f ∘ ga = gb ∘ f`.\nWe use `∀ x, f (ga x) = gb (f x)` as the definition, so given `h : Function.Semiconj f ga gb` and\n`a : α`, we have `h a : f (ga a) = gb (f a)` and `h.comp_eq : f ∘ ga = gb ∘ f`.\n"}]}