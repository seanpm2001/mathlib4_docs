{"name":"Mathlib.Testing.SlimCheck.Gen","instances":[],"imports":["Init","Mathlib.Control.Random","Mathlib.Data.List.Perm","Mathlib.Data.Subtype","Mathlib.Data.Nat.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L116-L117","name":"SlimCheck.Gen.run","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.run","doc":"Execute a `Gen` inside the `IO` monad using `size` as the example size"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L110-L111","name":"SlimCheck.Gen.prodOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.prodOf","doc":"Given two generators produces a tuple consisting out of the result of both "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L102-L107","name":"SlimCheck.Gen.permutationOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.permutationOf","doc":"Generate a random permutation of a given list. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L96-L98","name":"SlimCheck.Gen.elements","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.elements","doc":"Given a list of examples, choose one to create an example. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L91-L93","name":"SlimCheck.Gen.oneOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.oneOf","doc":"Given a list of example generators, choose one to create an example. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L87-L88","name":"SlimCheck.Gen.listOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.listOf","doc":"Create a `List` of examples using `x`. The size is controlled\nby the size parameter of `Gen`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L78-L83","name":"SlimCheck.Gen.arrayOf","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.arrayOf","doc":"Create an `Array` of examples using `x`. The size is controlled\nby the size parameter of `Gen`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L73-L74","name":"SlimCheck.Gen.resize","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.resize","doc":"Apply a function to the size parameter. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L69-L70","name":"SlimCheck.Gen.getSize","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.getSize","doc":"Get access to the size parameter of the `Gen` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L65-L66","name":"SlimCheck.Gen.chooseNatLt","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.chooseNatLt","doc":"Generate a `Nat` example between `x` and `y` (exclusively). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L56-L62","name":"SlimCheck.Gen.chooseNatLt_aux","kind":"theorem","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.chooseNatLt_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L52-L54","name":"SlimCheck.Gen.choose","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.choose","doc":"Lift `BoundedRandom.randomR` to the `Gen` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L48-L49","name":"SlimCheck.Gen.chooseAny","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen.chooseAny","doc":"Lift `Random.random` to the `Gen` monad. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Testing/SlimCheck/Gen.lean#L43-L43","name":"SlimCheck.Gen","kind":"def","docLink":"./Mathlib/Testing/SlimCheck/Gen.html#SlimCheck.Gen","doc":"Monad to generate random examples to test properties with.\nIt has a `Nat` parameter so that the caller can decide on the\nsize of the examples. "}]}