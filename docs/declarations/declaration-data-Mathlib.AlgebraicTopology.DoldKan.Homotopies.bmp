{"name":"Mathlib.AlgebraicTopology.DoldKan.Homotopies","instances":[],"imports":["Init","Mathlib.Algebra.Homology.Homotopy","Mathlib.AlgebraicTopology.DoldKan.Notations"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L199-L207","name":"AlgebraicTopology.DoldKan.map_Hσ","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.map_Hσ","doc":"The null homotopic maps `Hσ` are compatible with the application of additive functors. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L187-L195","name":"AlgebraicTopology.DoldKan.map_hσ'","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.map_hσ'","doc":"The maps `hσ' q n m hnm` are compatible with the application of additive functors. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L175-L182","name":"AlgebraicTopology.DoldKan.natTransHσ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.natTransHσ","doc":"For each q, `Hσ q` is a natural transformation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L161-L171","name":"AlgebraicTopology.DoldKan.hσ'_naturality","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ'_naturality","doc":"The maps `hσ' q n m hnm` are natural on the simplicial object "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L146-L156","name":"AlgebraicTopology.DoldKan.Hσ_eq_zero","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.Hσ_eq_zero","doc":"In degree `0`, the null homotopic map `Hσ` is zero. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L140-L141","name":"AlgebraicTopology.DoldKan.homotopyHσToZero","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.homotopyHσToZero","doc":"`Hσ` is null homotopic "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L134-L135","name":"AlgebraicTopology.DoldKan.Hσ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.Hσ","doc":"The null homotopic map $(hσ q) ∘ d + d ∘ (hσ q)$ "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L127-L130","name":"AlgebraicTopology.DoldKan.hσ'_eq'","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ'_eq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L115-L124","name":"AlgebraicTopology.DoldKan.hσ'_eq","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ'_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L108-L112","name":"AlgebraicTopology.DoldKan.hσ'_eq_zero","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ'_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L104-L105","name":"AlgebraicTopology.DoldKan.hσ'","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ'","doc":"We can turn `hσ` into a datum that can be passed to `nullHomotopicMap'`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L99-L100","name":"AlgebraicTopology.DoldKan.hσ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.hσ","doc":"The sequence of maps which gives the null homotopic maps `Hσ` that shall be in\nthe inductive construction of the projections `P q : K[X] ⟶ K[X]` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L90-L94","name":"AlgebraicTopology.DoldKan.cs_down_0_not_rel_left","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.cs_down_0_not_rel_left","doc":"This lemma is meant to be used with `nullHomotopicMap'_f_of_not_rel_left` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L85-L86","name":"AlgebraicTopology.DoldKan.c_mk","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.c_mk","doc":"Helper when we need some `c.rel i j` (i.e. `ComplexShape.down ℕ`),\ne.g. `c_mk n (n+1) rfl` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/DoldKan/Homotopies.lean#L79-L80","name":"AlgebraicTopology.DoldKan.c","kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.c","doc":"As we are using chain complexes indexed by `ℕ`, we shall need the relation\n`c` such `c m n` if and only if `n+1=m`. "}]}