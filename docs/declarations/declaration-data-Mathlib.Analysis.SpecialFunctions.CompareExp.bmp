{"name":"Mathlib.Analysis.SpecialFunctions.CompareExp","instances":[],"imports":["Init","Mathlib.Analysis.SpecialFunctions.Pow.Asymptotics","Mathlib.Analysis.Asymptotics.AsymptoticEquivalent","Mathlib.Analysis.Asymptotics.SpecificAsymptotics"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L223-L225","name":"Complex.IsExpCmpFilter.isLittleO_zpow_mul_exp","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_zpow_mul_exp","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then for any complex `a₁`, `a₂` and any\ninteger `b₁ < b₂`, we have\n`(fun z ↦ z ^ a₁ * exp (b₁ * z)) =o[l] (fun z ↦ z ^ a₂ * exp (b₂ * z))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L215-L217","name":"Complex.IsExpCmpFilter.isLittleO_pow_mul_exp","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_pow_mul_exp","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then for any complex `a₁`, `a₂` and any\nnatural `b₁ < b₂`, we have\n`(fun z ↦ z ^ a₁ * exp (b₁ * z)) =o[l] (fun z ↦ z ^ a₂ * exp (b₂ * z))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L208-L209","name":"Complex.IsExpCmpFilter.isLittleO_exp_cpow","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_exp_cpow","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then for any complex `a` and any\nnegative real `b`, we have `(fun z ↦ exp (b * z)) =o[l] (fun z ↦ z ^ a)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L191-L203","name":"Complex.IsExpCmpFilter.isLittleO_cpow_mul_exp","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_cpow_mul_exp","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then for any complex `a₁`, `a₂` and any\nreal `b₁ < b₂`, we have `(fun z ↦ z ^ a₁ * exp (b₁ * z)) =o[l] (fun z ↦ z ^ a₂ * exp (b₂ * z))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L173-L186","name":"Complex.IsExpCmpFilter.isLittleO_cpow_exp","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_cpow_exp","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then for any complex `a` and any\npositive real `b`, we have `(fun z ↦ z ^ a) =o[l] (fun z ↦ exp (b * z))`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L137-L163","name":"Complex.IsExpCmpFilter.isLittleO_log_abs_re","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_log_abs_re","doc":"If `l : Filter ℂ` is an \"exponential comparison filter\", then $\\log |z| =o(ℜ z)$ along `l`.\nThis is the main lemma in the proof of `Complex.IsExpCmpFilter.isLittleO_cpow_exp` below.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L129-L131","name":"Complex.IsExpCmpFilter.abs_im_pow_eventuallyLE_exp_re","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.abs_im_pow_eventuallyLE_exp_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L114-L126","name":"Complex.IsExpCmpFilter.isLittleO_im_pow_exp_re","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_im_pow_exp_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L110-L111","name":"Complex.IsExpCmpFilter.isLittleO_log_re_re","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isLittleO_log_re_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L106-L107","name":"Complex.IsExpCmpFilter.tendsto_abs","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.tendsto_abs","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L102-L103","name":"Complex.IsExpCmpFilter.tendsto_abs_re","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.tendsto_abs_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L98-L99","name":"Complex.IsExpCmpFilter.eventually_ne","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.eventually_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L88-L90","name":"Complex.IsExpCmpFilter.of_boundedUnder_im","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.of_boundedUnder_im","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L81-L85","name":"Complex.IsExpCmpFilter.of_boundedUnder_abs_im","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.of_boundedUnder_abs_im","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L75-L77","name":"Complex.IsExpCmpFilter.of_isBigO_im_re_pow","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.of_isBigO_im_re_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L62-L71","name":"Complex.IsExpCmpFilter.of_isBigO_im_re_rpow","kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.of_isBigO_im_re_rpow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L50-L50","name":"Complex.IsExpCmpFilter.isBigO_im_pow_re","kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.isBigO_im_pow_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L49-L49","name":"Complex.IsExpCmpFilter.tendsto_re","kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.tendsto_re","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L48-L48","name":"Complex.IsExpCmpFilter.mk","kind":"ctor","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/SpecialFunctions/CompareExp.lean#L48-L50","name":"Complex.IsExpCmpFilter","kind":"structure","docLink":"./Mathlib/Analysis/SpecialFunctions/CompareExp.html#Complex.IsExpCmpFilter","doc":"We say that `l : Filter ℂ` is an *exponential comparison filter* if the real part tends to\ninfinity along `l` and the imaginary part grows subexponentially compared to the real part. These\nproperties guarantee that `(fun z ↦ z ^ a₁ * exp (b₁ * z)) =o[l] (fun z ↦ z ^ a₂ * exp (b₂ * z))`\nfor any complex `a₁`, `a₂` and real `b₁ < b₂`.\n\nIn particular, the second property is automatically satisfied if the imaginary part is bounded along\n`l`. "}]}