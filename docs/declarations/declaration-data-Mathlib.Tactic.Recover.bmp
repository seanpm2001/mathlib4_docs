{"name":"Mathlib.Tactic.Recover","instances":[],"imports":["Init","Lean","Std.Tactic.RCases","Mathlib.Tactic.Cache"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Recover.lean#L49-L61","name":"Mathlib.Tactic.tacticRecover_","kind":"def","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.tacticRecover_","doc":"Modifier `recover` for a tactic (sequence) to debug cases where goals are closed incorrectly.\nThe tactic `recover tacs` for a tactic (sequence) tacs applies the tactics and then adds goals\nthat are not closed starting from the original "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Recover.lean#L35-L47","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies.go","kind":"opaque","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.go","doc":"auxiliary function for `getUnassignedGoalMVarDependencies` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Recover.lean#L25-L33","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies.addMVars","kind":"opaque","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.addMVars","doc":"auxiliary function for `getUnassignedGoalMVarDependencies` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Tactic/Recover.lean#L20-L47","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies","kind":"def","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies","doc":"Get all metavariables which `mvarId` depends on. These are the metavariables\nwhich occur in the target or local context or delayed assignment (if any) of\n`mvarId`, plus the metavariables which occur in these metavariables, etc.\n"}]}