{"name":"Mathlib.Algebra.Group.Defs","instances":[{"typeNames":[],"name":"instHVAdd","className":"HVAdd"},{"typeNames":[],"name":"instHSMul","className":"HSMul"},{"typeNames":["HAdd.hAdd","instHAdd","AddSemigroup.toAdd"],"name":"AddSemigroup.to_isAssociative","className":"IsAssociative"},{"typeNames":["HMul.hMul","instHMul","Semigroup.toMul"],"name":"Semigroup.to_isAssociative","className":"IsAssociative"},{"typeNames":["HAdd.hAdd","instHAdd","AddSemigroup.toAdd","AddCommSemigroup.toAddSemigroup"],"name":"AddCommSemigroup.to_isCommutative","className":"IsCommutative"},{"typeNames":["HMul.hMul","instHMul","Semigroup.toMul","CommSemigroup.toSemigroup"],"name":"CommSemigroup.to_isCommutative","className":"IsCommutative"},{"typeNames":["AddSemigroup.toAdd","AddLeftCancelSemigroup.toAddSemigroup"],"name":"AddLeftCancelSemigroup.toIsLeftCancelAdd","className":"IsLeftCancelAdd"},{"typeNames":["Semigroup.toMul","LeftCancelSemigroup.toSemigroup"],"name":"LeftCancelSemigroup.toIsLeftCancelMul","className":"IsLeftCancelMul"},{"typeNames":["AddSemigroup.toAdd","AddRightCancelSemigroup.toAddSemigroup"],"name":"AddRightCancelSemigroup.toIsRightCancelAdd","className":"IsRightCancelAdd"},{"typeNames":["Semigroup.toMul","RightCancelSemigroup.toSemigroup"],"name":"RightCancelSemigroup.toIsRightCancelMul","className":"IsRightCancelMul"},{"typeNames":["Nat"],"name":"Monoid.Pow","className":"Pow"},{"typeNames":["Nat"],"name":"AddMonoid.SMul","className":"SMul"},{"typeNames":[],"name":"AddCancelCommMonoid.toAddCancelMonoid","className":"AddCancelMonoid"},{"typeNames":[],"name":"CancelCommMonoid.toCancelMonoid","className":"CancelMonoid"},{"typeNames":["AddZeroClass.toAdd","AddMonoid.toAddZeroClass","AddRightCancelMonoid.toAddMonoid","AddCancelMonoid.toAddRightCancelMonoid"],"name":"AddCancelMonoid.toIsCancelAdd","className":"IsCancelAdd"},{"typeNames":["MulOneClass.toMul","Monoid.toMulOneClass","RightCancelMonoid.toMonoid","CancelMonoid.toRightCancelMonoid"],"name":"CancelMonoid.toIsCancelMul","className":"IsCancelMul"},{"typeNames":["Int"],"name":"DivInvMonoid.Pow","className":"Pow"},{"typeNames":["Int"],"name":"SubNegMonoid.SMulInt","className":"SMul"},{"typeNames":[],"name":"AddGroup.toSubtractionMonoid","className":"SubtractionMonoid"},{"typeNames":[],"name":"Group.toDivisionMonoid","className":"DivisionMonoid"},{"typeNames":[],"name":"AddGroup.toAddCancelMonoid","className":"AddCancelMonoid"},{"typeNames":[],"name":"Group.toCancelMonoid","className":"CancelMonoid"},{"typeNames":[],"name":"AddCommGroup.toAddCancelCommMonoid","className":"AddCancelCommMonoid"},{"typeNames":[],"name":"CommGroup.toCancelCommMonoid","className":"CancelCommMonoid"},{"typeNames":[],"name":"AddCommGroup.toDivisionAddCommMonoid","className":"SubtractionCommMonoid"},{"typeNames":[],"name":"CommGroup.toDivisionCommMonoid","className":"DivisionCommMonoid"}],"imports":["Init","Mathlib.Init.ZeroOne","Mathlib.Init.Data.Int.Basic","Mathlib.Logic.Function.Basic","Mathlib.Tactic.Common"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1179-L1180","name":"CommGroup.toDivisionCommMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#CommGroup.toDivisionCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1178-L1178","name":"AddCommGroup.toDivisionAddCommMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toDivisionAddCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1174-L1175","name":"CommGroup.toCancelCommMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#CommGroup.toCancelCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1173-L1173","name":"AddCommGroup.toAddCancelCommMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toAddCancelCommMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1163-L1164","name":"CommGroup.toGroup_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommGroup.toGroup_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1162-L1162","name":"AddCommGroup.toAddGroup_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toAddGroup_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1157-L1157","name":"CommGroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#CommGroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1157-L1157","name":"CommGroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#CommGroup","doc":"A commutative group is a group with commutative `(*)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1152-L1152","name":"AddCommGroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1152-L1152","name":"AddCommGroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommGroup","doc":"An additive commutative group is an additive group with commutative `(+)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1146-L1147","name":"Group.toDivInvMonoid_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#Group.toDivInvMonoid_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1145-L1145","name":"AddGroup.toSubNegAddMonoid_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubNegAddMonoid_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1138-L1141","name":"Group.toCancelMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#Group.toCancelMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_6","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_6","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_4","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_4","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_3","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1137-L1137","name":"AddGroup.toAddCancelMonoid.proof_5","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toAddCancelMonoid.proof_5","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1130-L1134","name":"Group.toDivisionMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#Group.toDivisionMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1129-L1129","name":"AddGroup.toSubtractionMonoid.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubtractionMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1129-L1129","name":"AddGroup.toSubtractionMonoid.proof_3","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubtractionMonoid.proof_3","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1129-L1129","name":"AddGroup.toSubtractionMonoid.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubtractionMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1129-L1129","name":"AddGroup.toSubtractionMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubtractionMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1124-L1125","name":"inv_mul_cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_mul_cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1123-L1123","name":"neg_add_cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_add_cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1118-L1119","name":"mul_inv_cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_inv_cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1117-L1117","name":"add_neg_cancel_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_neg_cancel_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1112-L1113","name":"mul_inv_cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_inv_cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1111-L1111","name":"add_neg_cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_neg_cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1106-L1107","name":"inv_mul_cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_mul_cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1105-L1105","name":"neg_add_cancel_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_add_cancel_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1100-L1101","name":"mul_inv_self","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_inv_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1099-L1099","name":"add_neg_self","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_neg_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1094-L1095","name":"mul_right_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_right_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1093-L1093","name":"add_right_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_right_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1084-L1085","name":"inv_mul_self","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_mul_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1083-L1083","name":"neg_add_self","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_add_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1078-L1079","name":"mul_left_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_left_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1077-L1077","name":"add_left_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_left_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1068-L1068","name":"AddGroup.add_left_neg","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.add_left_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1067-L1067","name":"AddGroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1067-L1068","name":"AddGroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddGroup","doc":"An `AddGroup` is an `AddMonoid` with a unary `-` satisfying `-a + a = 0`.\n\nThere is also a binary operation `-` such that `a - b = a + -b`,\nwith a default so that `a - b = a + -b` holds by definition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1059-L1059","name":"Group.mul_left_inv","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Group.mul_left_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1058-L1058","name":"Group.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#Group.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1058-L1059","name":"Group","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#Group","doc":"A `Group` is a `Monoid` with an operation `⁻¹` satisfying `a⁻¹ * a = 1`.\n\nThere is also a division operation `/` such that `a / b = a * b⁻¹`,\nwith a default so that `a / b = a * b⁻¹` holds by definition.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1048-L1048","name":"DivisionCommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1048-L1048","name":"DivisionCommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid","doc":"Commutative `DivisionMonoid`.\n\nThis is the immediate common ancestor of `CommGroup` and `CommGroupWithZero`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1041-L1041","name":"SubtractionCommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionCommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1041-L1041","name":"SubtractionCommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionCommMonoid","doc":"Commutative `SubtractionMonoid`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1033-L1034","name":"inv_eq_of_mul_eq_one_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_eq_of_mul_eq_one_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1032-L1032","name":"neg_eq_of_add_eq_zero_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_eq_of_add_eq_zero_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1027-L1028","name":"mul_inv_rev","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_inv_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1026-L1026","name":"neg_add_rev","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_add_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1017-L1017","name":"DivisionMonoid.inv_eq_of_mul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionMonoid.inv_eq_of_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1014-L1014","name":"DivisionMonoid.mul_inv_rev","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionMonoid.mul_inv_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1013-L1013","name":"DivisionMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1013-L1017","name":"DivisionMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#DivisionMonoid","doc":"A `DivisionMonoid` is a `DivInvMonoid` with involutive inversion and such that\n`(a * b)⁻¹ = b⁻¹ * a⁻¹` and `a * b = 1 → a⁻¹ = b`.\n\nThis is the immediate common ancestor of `Group` and `GroupWithZero`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1005-L1005","name":"SubtractionMonoid.neg_eq_of_add","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionMonoid.neg_eq_of_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1002-L1002","name":"SubtractionMonoid.neg_add_rev","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionMonoid.neg_add_rev","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1001-L1001","name":"SubtractionMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L1001-L1005","name":"SubtractionMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#SubtractionMonoid","doc":"A `SubtractionMonoid` is a `SubNegMonoid` with involutive negation and such that\n`-(a + b) = -b + -a` and `a + b = 0 → -a = b`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L992-L993","name":"inv_one","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L991-L991","name":"neg_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L983-L983","name":"DivInvOneMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvOneMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L983-L983","name":"DivInvOneMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvOneMonoid","doc":"A `DivInvMonoid` where `1⁻¹ = 1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L978-L978","name":"InvOneClass.inv_one","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#InvOneClass.inv_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L977-L977","name":"InvOneClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#InvOneClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L977-L978","name":"InvOneClass","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#InvOneClass","doc":"Typeclass for expressing that `1⁻¹ = 1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L972-L972","name":"SubNegZeroMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegZeroMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L972-L972","name":"SubNegZeroMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegZeroMonoid","doc":"A `SubNegMonoid` where `-0 = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L968-L968","name":"NegZeroClass.neg_zero","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#NegZeroClass.neg_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L967-L967","name":"NegZeroClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#NegZeroClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L967-L968","name":"NegZeroClass","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#NegZeroClass","doc":"Typeclass for expressing that `-0 = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L959-L959","name":"division_def","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#division_def","doc":"**Alias** of `div_eq_mul_inv`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L954-L955","name":"div_eq_mul_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#div_eq_mul_inv","doc":"Dividing by an element is the same as multiplying by its inverse.\n\nThis is a duplicate of `DivInvMonoid.div_eq_mul_inv` ensuring that the types unfold better.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L952-L953","name":"sub_eq_add_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#sub_eq_add_neg","doc":"Subtracting an element is the same as adding by its negative.\nThis is a duplicate of `SubNegMonoid.sub_eq_mul_neg` ensuring that the types unfold better."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L940-L943","name":"negSucc_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#negSucc_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L935-L937","name":"zpow_negSucc","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zpow_negSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L925-L930","name":"zpow_ofNat","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zpow_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L924-L924","name":"ofNat_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#ofNat_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L924-L924","name":"ofNat_zsmul.match_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#ofNat_zsmul.match_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L919-L920","name":"zpow_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zpow_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L919-L919","name":"zero_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zero_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L913-L915","name":"zpow_eq_pow","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zpow_eq_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L913-L913","name":"zsmul_eq_smul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zsmul_eq_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L903-L904","name":"SubNegMonoid.SMulInt","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.SMulInt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L899-L900","name":"DivInvMonoid.Pow","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.Pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L894-L894","name":"SubNegMonoid.zsmul_neg'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.zsmul_neg'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L892-L892","name":"SubNegMonoid.zsmul_succ'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.zsmul_succ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L891-L891","name":"SubNegMonoid.zsmul_zero'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.zsmul_zero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L890-L890","name":"SubNegMonoid.zsmul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L889-L889","name":"SubNegMonoid.sub_eq_add_neg","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.sub_eq_add_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L887-L887","name":"SubNegMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L887-L894","name":"SubNegMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid","doc":"A `SubNegMonoid` is an `AddMonoid` with unary `-` and binary `-` operations\nsatisfying `sub_eq_add_neg : ∀ a b, a - b = a + -b`.\n\nThe default for `sub` is such that `a - b = a + -b` holds by definition.\n\nAdding `sub` as a field rather than defining `a - b := a + -b` allows us to\navoid certain classes of unification failures, for example:\nLet `foo X` be a type with a `∀ X, Sub (Foo X)` instance but no\n`∀ X, Neg (Foo X)`. Suppose we also have an instance\n`∀ X [Cromulent X], AddGroup (Foo X)`. Then the `(-)` coming from\n`AddGroup.sub` cannot be definitionally equal to the `(-)` coming from\n`Foo.Sub`.\n\nIn the same way, adding a `zsmul` field makes it possible to avoid definitional failures\nin diamonds. See the definition of `AddMonoid` and Note [forgetful inheritance] for more\nexplanations on this.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L866-L866","name":"SubNegMonoid.sub'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid.sub'","doc":"In a class equipped with instances of both `AddMonoid` and `Neg`, this definition records what\nthe default definition for `Sub` would be: `a + -b`.  This is later provided as the default value\nfor the `Sub` instance in `SubNegMonoid`.\n\nWe keep it as a separate definition rather than inlining it in `SubNegMonoid` so that the `Sub`\nfield of individual `SubNegMonoid`s constructed using that default value will not be unfolded at\n`.instance` transparency. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L856-L856","name":"DivInvMonoid.zpow_neg'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.zpow_neg'","doc":"`a ^ -(n + 1) = (a ^ (n + 1))⁻¹` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L853-L853","name":"DivInvMonoid.zpow_succ'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.zpow_succ'","doc":"`a ^ (n + 1) = a * a ^ n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L851-L851","name":"DivInvMonoid.zpow_zero'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.zpow_zero'","doc":"`a ^ 0 = 1` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L849-L849","name":"DivInvMonoid.zpow","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.zpow","doc":"The power operation: `a ^ n = a * ··· * a`; `a ^ (-n) = a⁻¹ * ··· a⁻¹` (`n` times) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L847-L847","name":"DivInvMonoid.div_eq_mul_inv","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.div_eq_mul_inv","doc":"`a / b := a * b⁻¹` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L844-L844","name":"DivInvMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L844-L856","name":"DivInvMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid","doc":"A `DivInvMonoid` is a `Monoid` with operations `/` and `⁻¹` satisfying\n`div_eq_mul_inv : ∀ a b, a / b = a * b⁻¹`.\n\nThis deduplicates the name `div_eq_mul_inv`.\nThe default for `div` is such that `a / b = a * b⁻¹` holds by definition.\n\nAdding `div` as a field rather than defining `a / b := a * b⁻¹` allows us to\navoid certain classes of unification failures, for example:\nLet `Foo X` be a type with a `∀ X, Div (Foo X)` instance but no\n`∀ X, Inv (Foo X)`, e.g. when `Foo X` is a `EuclideanDomain`. Suppose we\nalso have an instance `∀ X [Cromulent X], GroupWithZero (Foo X)`. Then the\n`(/)` coming from `GroupWithZero.div` cannot be definitionally equal to\nthe `(/)` coming from `Foo.Div`.\n\nIn the same way, adding a `zpow` field makes it possible to avoid definitional failures\nin diamonds. See the definition of `Monoid` and Note [forgetful inheritance] for more\nexplanations on this.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L824-L824","name":"DivInvMonoid.div'","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid.div'","doc":"In a class equipped with instances of both `Monoid` and `Inv`, this definition records what the\ndefault definition for `Div` would be: `a * b⁻¹`.  This is later provided as the default value for\nthe `Div` instance in `DivInvMonoid`.\n\nWe keep it as a separate definition rather than inlining it in `DivInvMonoid` so that the `Div`\nfield of individual `DivInvMonoid`s constructed using that default value will not be unfolded at\n`.instance` transparency. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L778-L779","name":"inv_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#inv_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L777-L777","name":"neg_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#neg_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L771-L771","name":"InvolutiveInv.inv_inv","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveInv.inv_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L770-L770","name":"InvolutiveInv.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveInv.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L770-L771","name":"InvolutiveInv","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveInv","doc":"Auxiliary typeclass for types with an involutive `Inv`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L764-L764","name":"InvolutiveNeg.neg_neg","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg.neg_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L763-L763","name":"InvolutiveNeg.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L763-L764","name":"InvolutiveNeg","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg","doc":"Auxiliary typeclass for types with an involutive `Neg`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L753-L755","name":"zsmulRec","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#zsmulRec","doc":"The fundamental scalar multiplication in an additive group. `zpowRec n a = a+a+...+a` n\ntimes, for integer `n`. Use instead `n • a`, which has better definitional behavior. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L746-L748","name":"zpowRec","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#zpowRec","doc":"The fundamental power operation in a group. `zpowRec n a = a*a*...*a` n times, for integer `n`.\nUse instead `a ^ n`,  which has better definitional behavior. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L735-L738","name":"CancelMonoid.toIsCancelMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelMonoid.toIsCancelMul","doc":"Any `CancelMonoid G` satisfies `IsCancelMul G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L734-L734","name":"AddCancelMonoid.toIsCancelAdd.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.toIsCancelAdd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L734-L734","name":"AddCancelMonoid.toIsCancelAdd","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.toIsCancelAdd","doc":"Any `AddCancelMonoid G` satisfies `IsCancelAdd G`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L727-L729","name":"CancelCommMonoid.toCancelMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid.toCancelMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L726-L726","name":"AddCancelCommMonoid.toAddCancelMonoid.proof_2","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCancelMonoid.proof_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L726-L726","name":"AddCancelCommMonoid.toAddCancelMonoid.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCancelMonoid.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L726-L726","name":"AddCancelCommMonoid.toAddCancelMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCancelMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L720-L720","name":"CancelCommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L720-L720","name":"CancelCommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid","doc":"Commutative version of `CancelMonoid`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L715-L715","name":"AddCancelCommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L715-L715","name":"AddCancelCommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid","doc":"Commutative version of `AddCancelMonoid`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L709-L709","name":"CancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L709-L709","name":"CancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#CancelMonoid","doc":"A monoid in which multiplication is cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L704-L704","name":"AddCancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L704-L704","name":"AddCancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid","doc":"An additive monoid in which addition is cancellative on both sides.\nMain examples are `ℕ` and groups. This is the right typeclass for many sum lemmas, as having a zero\nis useful to define the sum over the empty set, so `AddRightCancelMonoid` is not enough. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L692-L692","name":"RightCancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L692-L692","name":"RightCancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid","doc":"A monoid in which multiplication is right-cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L687-L687","name":"AddRightCancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L687-L687","name":"AddRightCancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid","doc":"An additive monoid in which addition is right-cancellative.\nMain examples are `ℕ` and groups. This is the right typeclass for many sum lemmas, as having a zero\nis useful to define the sum over the empty set, so `AddRightCancelSemigroup` is not enough. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L675-L675","name":"LeftCancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L675-L675","name":"LeftCancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid","doc":"A monoid in which multiplication is left-cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L670-L670","name":"AddLeftCancelMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L670-L670","name":"AddLeftCancelMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid","doc":"An additive monoid in which addition is left-cancellative.\nMain examples are `ℕ` and groups. This is the right typeclass for many sum lemmas, as having a zero\nis useful to define the sum over the empty set, so `AddLeftCancelSemigroup` is not enough. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L660-L660","name":"CommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#CommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L660-L660","name":"CommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#CommMonoid","doc":"A commutative monoid is a monoid with commutative `(*)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L655-L655","name":"AddCommMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L655-L655","name":"AddCommMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid","doc":"An additive commutative monoid is an additive monoid with commutative `(+)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L647-L648","name":"left_inv_eq_right_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#left_inv_eq_right_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L646-L646","name":"left_neg_eq_right_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#left_neg_eq_right_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L635-L636","name":"pow_succ","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#pow_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L634-L634","name":"succ_nsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#succ_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L629-L630","name":"pow_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#pow_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L628-L628","name":"zero_nsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zero_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L622-L623","name":"npow_eq_pow","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#npow_eq_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L621-L621","name":"nsmul_eq_smul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#nsmul_eq_smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L611-L612","name":"AddMonoid.SMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid.SMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L607-L608","name":"Monoid.Pow","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid.Pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L598-L598","name":"Monoid.npow_succ","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid.npow_succ","doc":"Raising to the power `(n + 1 : ℕ)` behaves as expected. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L596-L596","name":"Monoid.npow_zero","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid.npow_zero","doc":"Raising to the power `(0 : ℕ)` gives `1`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L594-L594","name":"Monoid.npow","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid.npow","doc":"Raising to the power of a natural number. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L592-L592","name":"Monoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L592-L598","name":"Monoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#Monoid","doc":"A `Monoid` is a `Semigroup` with an element `1` such that `1 * a = a * 1 = a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L584-L584","name":"AddMonoid.nsmul_succ","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid.nsmul_succ","doc":"Multiplication by `(n + 1 : ℕ)` behaves as expected. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L582-L582","name":"AddMonoid.nsmul_zero","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid.nsmul_zero","doc":"Multiplication by `(0 : ℕ)` gives `0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L580-L580","name":"AddMonoid.nsmul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid.nsmul","doc":"Multiplication by a natural number. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L578-L578","name":"AddMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L578-L584","name":"AddMonoid","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddMonoid","doc":"An `AddMonoid` is an `AddSemigroup` with an element `0` such that `0 + a = a + 0 = a`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L485-L487","name":"nsmulRec","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#nsmulRec","doc":"The fundamental scalar multiplication in an additive monoid. `nsmulRec n a = a+a+...+a` n\ntimes. Use instead `n • a`, which has better definitional behavior. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L478-L480","name":"npowRec","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#npowRec","doc":"The fundamental power operation in a monoid. `npowRec n a = a*a*...*a` n times.\nUse instead `a ^ n`,  which has better definitional behavior. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L463-L464","name":"mul_one","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L462-L462","name":"add_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L457-L458","name":"one_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#one_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L456-L456","name":"zero_add","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#zero_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L443-L448","name":"MulOneClass.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#MulOneClass.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L442-L442","name":"AddZeroClass.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddZeroClass.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L437-L437","name":"AddZeroClass.add_zero","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddZeroClass.add_zero","doc":"Zero is a right neutral element for addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L435-L435","name":"AddZeroClass.zero_add","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddZeroClass.zero_add","doc":"Zero is a left neutral element for addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L433-L433","name":"AddZeroClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddZeroClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L433-L437","name":"AddZeroClass","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddZeroClass","doc":"Typeclass for expressing that a type `M` with addition and a zero satisfies\n`0 + a = a` and `a + 0 = a` for all `a : M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L428-L428","name":"MulOneClass.mul_one","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#MulOneClass.mul_one","doc":"One is a right neutral element for multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L426-L426","name":"MulOneClass.one_mul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#MulOneClass.one_mul","doc":"One is a left neutral element for multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L424-L424","name":"MulOneClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#MulOneClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L424-L428","name":"MulOneClass","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#MulOneClass","doc":"Typeclass for expressing that a type `M` with multiplication and a one satisfies\n`1 * a = a` and `a * 1 = a` for all `a : M`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L416-L418","name":"RightCancelSemigroup.toIsRightCancelMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup.toIsRightCancelMul","doc":"Any `RightCancelSemigroup` satisfies `IsRightCancelMul`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L414-L415","name":"AddRightCancelSemigroup.toIsRightCancelAdd","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.toIsRightCancelAdd","doc":"Any `AddRightCancelSemigroup` satisfies\n`IsRightCancelAdd`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L414-L415","name":"AddRightCancelSemigroup.toIsRightCancelAdd.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.toIsRightCancelAdd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L406-L406","name":"AddRightCancelSemigroup.add_right_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.add_right_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L405-L405","name":"AddRightCancelSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L405-L406","name":"AddRightCancelSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup","doc":"An `AddRightCancelSemigroup` is an additive semigroup such that\n`a + b = c + b` implies `a = c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L404-L404","name":"AddRightCancelSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L404-L404","name":"AddRightCancelSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L397-L397","name":"RightCancelSemigroup.mul_right_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup.mul_right_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L396-L396","name":"RightCancelSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L396-L397","name":"RightCancelSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup","doc":"A `RightCancelSemigroup` is a semigroup such that `a * b = c * b` implies `a = c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L395-L395","name":"RightCancelSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L395-L395","name":"RightCancelSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L388-L390","name":"LeftCancelSemigroup.toIsLeftCancelMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup.toIsLeftCancelMul","doc":"Any `LeftCancelSemigroup` satisfies `IsLeftCancelMul`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L386-L387","name":"AddLeftCancelSemigroup.toIsLeftCancelAdd","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.toIsLeftCancelAdd","doc":"Any `AddLeftCancelSemigroup` satisfies\n`IsLeftCancelAdd`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L386-L387","name":"AddLeftCancelSemigroup.toIsLeftCancelAdd.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.toIsLeftCancelAdd.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L378-L378","name":"AddLeftCancelSemigroup.add_left_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.add_left_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L377-L377","name":"AddLeftCancelSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L377-L378","name":"AddLeftCancelSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup","doc":"An `AddLeftCancelSemigroup` is an additive semigroup such that\n`a + b = a + c` implies `b = c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L376-L376","name":"AddLeftCancelSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L376-L376","name":"AddLeftCancelSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L369-L369","name":"LeftCancelSemigroup.mul_left_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup.mul_left_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L368-L368","name":"LeftCancelSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L368-L369","name":"LeftCancelSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup","doc":"A `LeftCancelSemigroup` is a semigroup such that `a * b = a * c` implies `b = c`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L367-L367","name":"LeftCancelSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L367-L367","name":"LeftCancelSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L358-L360","name":"CommSemigroup.IsRightCancelMul.toIsCancelMul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.IsRightCancelMul.toIsCancelMul","doc":"Any `CommSemigroup G` that satisfies `IsRightCancelMul G` also satisfies\n`IsCancelMul G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L355-L357","name":"AddCommSemigroup.IsRightCancelAdd.toIsCancelAdd","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.IsRightCancelAdd.toIsCancelAdd","doc":"Any\n`AddCommSemigroup G` that satisfies `IsRightCancelAdd G` also satisfies\n`IsCancelAdd G`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L347-L349","name":"CommSemigroup.IsLeftCancelMul.toIsCancelMul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.IsLeftCancelMul.toIsCancelMul","doc":"Any `CommSemigroup G` that satisfies `IsLeftCancelMul G` also satisfies\n`IsCancelMul G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L344-L346","name":"AddCommSemigroup.IsLeftCancelAdd.toIsCancelAdd","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.IsLeftCancelAdd.toIsCancelAdd","doc":"Any\n`AddCommSemigroup G` that satisfies `IsLeftCancelAdd G` also satisfies\n`IsCancelAdd G`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L336-L338","name":"CommSemigroup.IsLeftCancelMul.toIsRightCancelMul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.IsLeftCancelMul.toIsRightCancelMul","doc":"Any `CommSemigroup G` that satisfies `IsLeftCancelMul G` also satisfies\n`IsRightCancelMul G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L333-L335","name":"AddCommSemigroup.IsLeftCancelAdd.toIsRightCancelAdd","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.IsLeftCancelAdd.toIsRightCancelAdd","doc":"Any\n`AddCommSemigroup G` that satisfies `IsLeftCancelAdd G` also satisfies\n`IsRightCancelAdd G`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L325-L327","name":"CommSemigroup.IsRightCancelMul.toIsLeftCancelMul","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.IsRightCancelMul.toIsLeftCancelMul","doc":"Any `CommSemigroup G` that satisfies `IsRightCancelMul G` also satisfies\n`IsLeftCancelMul G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L322-L324","name":"AddCommSemigroup.IsRightCancelAdd.toIsLeftCancelAdd","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.IsRightCancelAdd.toIsLeftCancelAdd","doc":"Any\n`AddCommSemigroup G` that satisfies `IsRightCancelAdd G` also satisfies\n`IsLeftCancelAdd G`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L315-L316","name":"CommSemigroup.to_isCommutative","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.to_isCommutative","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L314-L314","name":"AddCommSemigroup.to_isCommutative.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.to_isCommutative.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L314-L314","name":"AddCommSemigroup.to_isCommutative","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.to_isCommutative","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L309-L310","name":"mul_comm","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L308-L308","name":"add_comm","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L297-L297","name":"AddCommSemigroup.add_comm","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.add_comm","doc":"Addition is commutative in an additive commutative semigroup. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L295-L295","name":"AddCommSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L295-L297","name":"AddCommSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup","doc":"A commutative additive semigroup is a type with an associative commutative `(+)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L294-L294","name":"AddCommSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L294-L294","name":"AddCommSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L288-L288","name":"CommSemigroup.mul_comm","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.mul_comm","doc":"Multiplication is commutative in a commutative semigroup. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L286-L286","name":"CommSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L286-L288","name":"CommSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup","doc":"A commutative semigroup is a type with an associative commutative `(*)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L285-L285","name":"CommSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L285-L285","name":"CommSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#CommSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L277-L278","name":"Semigroup.to_isAssociative","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup.to_isAssociative","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L276-L276","name":"AddSemigroup.to_isAssociative.proof_1","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.to_isAssociative.proof_1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L276-L276","name":"AddSemigroup.to_isAssociative","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.to_isAssociative","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L271-L272","name":"mul_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L270-L270","name":"add_assoc","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L259-L259","name":"AddSemigroup.add_assoc","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.add_assoc","doc":"Addition is associative "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L257-L257","name":"AddSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L257-L259","name":"AddSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup","doc":"An additive semigroup is a type with an associative `(+)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L256-L256","name":"AddSemigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L256-L256","name":"AddSemigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#AddSemigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L250-L250","name":"Semigroup.mul_assoc","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup.mul_assoc","doc":"Multiplication is associative "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L248-L248","name":"Semigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L248-L250","name":"Semigroup","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup","doc":"A semigroup is a type with an associative `(*)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L247-L247","name":"Semigroup.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L247-L247","name":"Semigroup.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#Semigroup.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L237-L238","name":"mul_ne_mul_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_ne_mul_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L236-L236","name":"add_ne_add_left","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_ne_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L231-L232","name":"mul_left_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_left_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L230-L230","name":"add_left_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_left_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L226-L226","name":"mul_left_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_left_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L225-L225","name":"add_left_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_left_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L220-L221","name":"mul_right_cancel_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_right_cancel_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L219-L219","name":"add_right_cancel_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_right_cancel_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L214-L215","name":"mul_right_cancel","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_right_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L213-L213","name":"add_right_cancel","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_right_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L202-L203","name":"mul_ne_mul_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_ne_mul_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L201-L201","name":"add_ne_add_right","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_ne_add_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L196-L197","name":"mul_right_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_right_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L195-L195","name":"add_right_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_right_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L191-L191","name":"mul_right_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_right_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L190-L190","name":"add_right_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_right_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L185-L186","name":"mul_left_cancel_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_left_cancel_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L184-L184","name":"add_left_cancel_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_left_cancel_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L179-L180","name":"mul_left_cancel","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#mul_left_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L178-L178","name":"add_left_cancel","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#add_left_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L169-L169","name":"IsCancelAdd.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsCancelAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L169-L169","name":"IsCancelAdd","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsCancelAdd","doc":"A mixin for cancellative addition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L163-L163","name":"IsRightCancelAdd.add_right_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd.add_right_cancel","doc":"Addition is right cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L161-L161","name":"IsRightCancelAdd.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L161-L163","name":"IsRightCancelAdd","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd","doc":"A mixin for right cancellative addition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L155-L155","name":"IsLeftCancelAdd.add_left_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd.add_left_cancel","doc":"Addition is left cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L153-L153","name":"IsLeftCancelAdd.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L153-L155","name":"IsLeftCancelAdd","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd","doc":"A mixin for left cancellative addition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L147-L147","name":"IsCancelMul.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsCancelMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L147-L147","name":"IsCancelMul","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsCancelMul","doc":"A mixin for cancellative multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L145-L145","name":"IsRightCancelMul.mul_right_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelMul.mul_right_cancel","doc":"Multiplication is right cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L143-L143","name":"IsRightCancelMul.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L143-L145","name":"IsRightCancelMul","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsRightCancelMul","doc":"A mixin for right cancellative multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L141-L141","name":"IsLeftCancelMul.mul_left_cancel","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelMul.mul_left_cancel","doc":"Multiplication is left cancellative. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L139-L139","name":"IsLeftCancelMul.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L139-L141","name":"IsLeftCancelMul","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelMul","doc":"A mixin for left cancellative multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L134-L134","name":"rightMul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#rightMul","doc":"`rightMul g` denotes right multiplication by `g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L133-L133","name":"rightAdd","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#rightAdd","doc":"`rightAdd g` denotes right addition by `g`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L128-L128","name":"leftMul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#leftMul","doc":"`leftMul g` denotes left multiplication by `g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L127-L127","name":"leftAdd","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#leftAdd","doc":"`leftAdd g` denotes left addition by `g`"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L117-L120","name":"Parser.Attr.field_simps","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Parser.Attr.field_simps","doc":"The simpset `field_simps` is used by the tactic `field_simp` to\nreduce an expression in a field to an expression of the form `n / d` where `n` and `d` are\ndivision-free. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L114-L115","name":"«term_⁻¹»","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#«term_⁻¹»","doc":"Invert an element of α. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L111-L111","name":"Inv.inv","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#Inv.inv","doc":"Invert an element of α. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L109-L109","name":"Inv.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#Inv.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L109-L111","name":"Inv","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#Inv","doc":"Class of types that have an inversion operation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L98-L99","name":"instHSMul","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#instHSMul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L97-L97","name":"instHVAdd","kind":"instance","docLink":"./Mathlib/Algebra/Group/Defs.html#instHVAdd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L89-L89","name":"«term_•_»","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#«term_•_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L88-L88","name":"«term_-ᵥ_»","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#«term_-ᵥ_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L87-L87","name":"«term_+ᵥ_»","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#«term_+ᵥ_»","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L84-L84","name":"SMul.smul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#SMul.smul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L83-L83","name":"SMul.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#SMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L83-L84","name":"SMul","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#SMul","doc":"Typeclass for types with a scalar multiplication operation, denoted `•` (`\\bu`) "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L82-L82","name":"SMul.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#SMul.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L82-L82","name":"SMul.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#SMul.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L82-L82","name":"VAdd.ext_iff","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#VAdd.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L82-L82","name":"VAdd.ext","kind":"theorem","docLink":"./Mathlib/Algebra/Group/Defs.html#VAdd.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L78-L78","name":"VSub.vsub","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#VSub.vsub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L77-L77","name":"VSub.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#VSub.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L77-L78","name":"VSub","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#VSub","doc":"Type class for the `-ᵥ` notation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L73-L73","name":"VAdd.vadd","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#VAdd.vadd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L72-L72","name":"VAdd.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#VAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L72-L73","name":"VAdd","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#VAdd","doc":"Type class for the `+ᵥ` notation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L65-L65","name":"HSMul.hSMul","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul","doc":"`a • b` computes the product of `a` and `b`.\nThe meaning of this notation is type-dependent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L62-L62","name":"HSMul.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#HSMul.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L62-L65","name":"HSMul","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#HSMul","doc":"The notation typeclass for heterogeneous scalar multiplication.\nThis enables the notation `a • b : γ` where `a : α`, `b : β`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L56-L56","name":"HVAdd.hVAdd","kind":"def","docLink":"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd","doc":"`a +ᵥ b` computes the sum of `a` and `b`.\nThe meaning of this notation is type-dependent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L53-L53","name":"HVAdd.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Group/Defs.html#HVAdd.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Group/Defs.lean#L53-L56","name":"HVAdd","kind":"class","docLink":"./Mathlib/Algebra/Group/Defs.html#HVAdd","doc":"The notation typeclass for heterogeneous additive actions.\nThis enables the notation `a +ᵥ b : γ` where `a : α`, `b : β`.\n"}]}