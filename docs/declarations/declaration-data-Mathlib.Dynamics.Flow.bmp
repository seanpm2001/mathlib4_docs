{"name":"Mathlib.Dynamics.Flow","instances":[{"typeNames":["Flow"],"name":"Flow.instInhabitedFlow","className":"Inhabited"},{"typeNames":["Flow","Flow"],"name":"Flow.instCoeFunFlowForAll","className":"CoeFun"}],"imports":["Init","Mathlib.Topology.Algebra.Group.Basic","Mathlib.Logic.Function.Iterate"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L195-L196","name":"Flow.image_eq_preimage","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.image_eq_preimage","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L188-L192","name":"Flow.toHomeomorph","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.toHomeomorph","doc":"The map `ϕ t` as a homeomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L182-L185","name":"Flow.continuous_toFun","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.continuous_toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L171-L175","name":"Flow.reverse","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.reverse","doc":"The time-reversal of a flow `ϕ` by a (commutative, additive) group\nis defined `ϕ.reverse t x = ϕ (-t) x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L162-L166","name":"Flow.isInvariant_iff_image_eq","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.isInvariant_iff_image_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L148-L152","name":"Flow.restrict","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.restrict","doc":"Restriction of a flow onto an invariant set. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L140-L144","name":"Flow.fromIter","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.fromIter","doc":"Iterations of a continuous function from a topological space `α`\nto itself defines a semiflow by `ℕ` on `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L135-L135","name":"Flow.map_zero_apply","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.map_zero_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L132-L132","name":"Flow.map_zero","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.map_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L128-L128","name":"Flow.map_add","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.map_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L125-L125","name":"Continuous.flow","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Continuous.flow","doc":"**Alias** of `Flow.continuous`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L120-L122","name":"Flow.continuous","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L112-L116","name":"Flow.ext","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#Flow.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L109-L109","name":"Flow.instCoeFunFlowForAll","kind":"instance","docLink":"./Mathlib/Dynamics/Flow.html#Flow.instCoeFunFlowForAll","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L103-L107","name":"Flow.instInhabitedFlow","kind":"instance","docLink":"./Mathlib/Dynamics/Flow.html#Flow.instInhabitedFlow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L95-L95","name":"Flow.map_zero'","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.map_zero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L94-L94","name":"Flow.map_add'","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.map_add'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L93-L93","name":"Flow.cont'","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.cont'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L92-L92","name":"Flow.toFun","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#Flow.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L90-L91","name":"Flow.mk","kind":"ctor","docLink":"./Mathlib/Dynamics/Flow.html#Flow.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L90-L95","name":"Flow","kind":"structure","docLink":"./Mathlib/Dynamics/Flow.html#Flow","doc":"A flow on a topological space `α` by an additive topological\nmonoid `τ` is a continuous monoid action of `τ` on `α`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L76-L78","name":"isFwInvariant_iff_isInvariant","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#isFwInvariant_iff_isInvariant","doc":"If `τ` is a `CanonicallyOrderedAddMonoid` (e.g., `ℕ` or `ℝ≥0`), then the notions\n`IsFwInvariant` and `IsInvariant` are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L70-L71","name":"IsFwInvariant.isInvariant","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#IsFwInvariant.isInvariant","doc":"If `τ` is a `CanonicallyOrderedAddMonoid` (e.g., `ℕ` or `ℝ≥0`), then the notions\n`IsFwInvariant` and `IsInvariant` are equivalent. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L64-L65","name":"IsInvariant.isFwInvariant","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#IsInvariant.isFwInvariant","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L60-L61","name":"IsFwInvariant","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#IsFwInvariant","doc":"A set `s ⊆ α` is forward-invariant under `ϕ : τ → α → α` if\n`ϕ t s ⊆ s` for all `t ≥ 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L54-L55","name":"isInvariant_iff_image","kind":"theorem","docLink":"./Mathlib/Dynamics/Flow.html#isInvariant_iff_image","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Dynamics/Flow.lean#L48-L49","name":"IsInvariant","kind":"def","docLink":"./Mathlib/Dynamics/Flow.html#IsInvariant","doc":"A set `s ⊆ α` is invariant under `ϕ : τ → α → α` if\n`ϕ t s ⊆ s` for all `t` in `τ`. "}]}