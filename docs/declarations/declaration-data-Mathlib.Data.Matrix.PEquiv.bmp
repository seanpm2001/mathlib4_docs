{"name":"Mathlib.Data.Matrix.PEquiv","instances":[],"imports":["Init","Mathlib.Data.Matrix.Basic","Mathlib.Data.PEquiv"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L183-L185","name":"PEquiv.equiv_toPEquiv_toMatrix","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.equiv_toPEquiv_toMatrix","doc":"We can also define permutation matrices by permuting the rows of the identity matrix. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L176-L179","name":"PEquiv.single_mul_single_right","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.single_mul_single_right","doc":"Restatement of `single_mul_single`, which will simplify expressions in `simp` normal form,\nwhen associativity may otherwise need to be carefully applied. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L167-L170","name":"PEquiv.single_mul_single_of_ne","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.single_mul_single_of_ne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L161-L164","name":"PEquiv.single_mul_single","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.single_mul_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L151-L157","name":"PEquiv.toMatrix_swap","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L132-L148","name":"PEquiv.toMatrix_injective","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L127-L129","name":"PEquiv.toMatrix_bot","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L118-L123","name":"PEquiv.toMatrix_trans","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L111-L115","name":"PEquiv.mul_toPEquiv_toMatrix","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.mul_toPEquiv_toMatrix","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L105-L108","name":"PEquiv.toPEquiv_mul_matrix","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toPEquiv_mul_matrix","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L93-L102","name":"PEquiv.matrix_mul_apply","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.matrix_mul_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L87-L90","name":"PEquiv.toMatrix_refl","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L79-L83","name":"PEquiv.toMatrix_symm","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L71-L76","name":"PEquiv.mul_matrix_apply","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.mul_matrix_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L66-L68","name":"PEquiv.toMatrix_apply","kind":"theorem","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L60-L61","name":"PEquiv.toMatrix","kind":"def","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.toMatrix","doc":"`toMatrix` returns a matrix containing ones and zeros. `f.toMatrix i j` is `1` if\n`f i = some j` and `0` otherwise "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Matrix/PEquiv.lean#L54-L56","name":"PEquiv.instDecidableMemOptionInstMembershipOption","kind":"def","docLink":"./Mathlib/Data/Matrix/PEquiv.html#PEquiv.instDecidableMemOptionInstMembershipOption","doc":""}]}