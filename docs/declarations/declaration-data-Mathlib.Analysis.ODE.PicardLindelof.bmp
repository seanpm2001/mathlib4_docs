{"name":"Mathlib.Analysis.ODE.PicardLindelof","instances":[{"typeNames":["PicardLindelof","PicardLindelof","Real"],"name":"PicardLindelof.instCoeFunPicardLindelofForAllReal","className":"CoeFun"},{"typeNames":["PicardLindelof"],"name":"PicardLindelof.instInhabitedPicardLindelof","className":"Inhabited"},{"typeNames":["PicardLindelof.FunSpace","PicardLindelof.FunSpace","Set.Elem","Real","Set.Icc","Real.instPreorderReal","PicardLindelof.tMin","PicardLindelof.tMax"],"name":"PicardLindelof.FunSpace.instCoeFunFunSpaceForAllElemRealIccInstPreorderRealTMinTMax","className":"CoeFun"},{"typeNames":["PicardLindelof.FunSpace"],"name":"PicardLindelof.FunSpace.instInhabitedFunSpace","className":"Inhabited"},{"typeNames":["PicardLindelof.FunSpace"],"name":"PicardLindelof.FunSpace.instMetricSpaceFunSpace","className":"MetricSpace"},{"typeNames":["PicardLindelof.FunSpace","PseudoMetricSpace.toUniformSpace","PicardLindelof.FunSpace","MetricSpace.toPseudoMetricSpace","PicardLindelof.FunSpace.instMetricSpaceFunSpace"],"name":"PicardLindelof.FunSpace.instCompleteSpaceFunSpaceToUniformSpaceToPseudoMetricSpaceInstMetricSpaceFunSpace","className":"CompleteSpace"}],"imports":["Init","Mathlib.Analysis.SpecialFunctions.Integrals","Mathlib.Topology.MetricSpace.Contracting"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L466-L471","name":"exists_forall_hasDerivAt_Ioo_eq_of_contDiff","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#exists_forall_hasDerivAt_Ioo_eq_of_contDiff","doc":"A time-independent, continuously differentiable ODE admits a solution in some open interval. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L440-L462","name":"exists_forall_deriv_at_Ioo_eq_of_contDiffOn_nhds","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#exists_forall_deriv_at_Ioo_eq_of_contDiffOn_nhds","doc":"A time-independent, locally continuously differentiable ODE admits a solution in some open\ninterval. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L401-L435","name":"exists_isPicardLindelof_const_of_contDiffOn_nhds","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#exists_isPicardLindelof_const_of_contDiffOn_nhds","doc":"A time-independent, locally continuously differentiable ODE satisfies the hypotheses of the\nPicard-Lindelöf theorem. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L386-L394","name":"IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq","doc":"Picard-Lindelöf (Cauchy-Lipschitz) theorem. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L379-L382","name":"IsPicardLindelof.norm_le₀","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.norm_le₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L366-L374","name":"PicardLindelof.exists_solution","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.exists_solution","doc":"Picard-Lindelöf (Cauchy-Lipschitz) theorem. Use\n`IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq` instead for the public API. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L357-L359","name":"PicardLindelof.exists_fixed","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.exists_fixed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L347-L354","name":"PicardLindelof.exists_contracting_iterate","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.exists_contracting_iterate","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L334-L338","name":"PicardLindelof.FunSpace.dist_iterate_next_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.dist_iterate_next_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L325-L331","name":"PicardLindelof.FunSpace.dist_iterate_next_apply_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.dist_iterate_next_apply_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L299-L322","name":"PicardLindelof.FunSpace.dist_next_apply_le_of_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.dist_next_apply_le_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L284-L296","name":"PicardLindelof.FunSpace.hasDerivWithinAt_next","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.hasDerivWithinAt_next","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L280-L281","name":"PicardLindelof.FunSpace.next_apply","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.next_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L271-L277","name":"PicardLindelof.FunSpace.next","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.next","doc":"The Picard-Lindelöf operator. This is a contracting map on `PicardLindelof.FunSpace v` such\nthat the fixed point of this map is the solution of the corresponding ODE.\n\nMore precisely, some iteration of this map is a contracting map. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L261-L262","name":"PicardLindelof.FunSpace.intervalIntegrable_vComp","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.intervalIntegrable_vComp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L252-L259","name":"PicardLindelof.FunSpace.instCompleteSpaceFunSpaceToUniformSpaceToPseudoMetricSpaceInstMetricSpaceFunSpace","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.instCompleteSpaceFunSpaceToUniformSpaceToPseudoMetricSpaceInstMetricSpaceFunSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L246-L249","name":"PicardLindelof.FunSpace.dist_le_of_forall","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.dist_le_of_forall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L241-L243","name":"PicardLindelof.FunSpace.dist_apply_le_dist","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.dist_apply_le_dist","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L237-L238","name":"PicardLindelof.FunSpace.norm_vComp_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.norm_vComp_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L231-L234","name":"PicardLindelof.FunSpace.continuous_vComp","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.continuous_vComp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L227-L228","name":"PicardLindelof.FunSpace.vComp_apply_coe","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.vComp_apply_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L223-L224","name":"PicardLindelof.FunSpace.vComp","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.vComp","doc":"Given a curve $γ \\colon [t_{\\min}, t_{\\max}] → E$, `PicardLindelof.vComp` is the function\n$F(t)=v(π t, γ(π t))$, where `π` is the projection $ℝ → [t_{\\min}, t_{\\max}]$. The integral of this\nfunction is the image of `γ` under the contracting map we are going to define below. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L212-L217","name":"PicardLindelof.FunSpace.mem_closedBall","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.mem_closedBall","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L208-L209","name":"PicardLindelof.FunSpace.map_t₀","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.map_t₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L200-L205","name":"PicardLindelof.FunSpace.range_toContinuousMap","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.range_toContinuousMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L196-L197","name":"PicardLindelof.FunSpace.uniformInducing_toContinuousMap","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.uniformInducing_toContinuousMap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L193-L194","name":"PicardLindelof.FunSpace.instMetricSpaceFunSpace","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.instMetricSpaceFunSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L189-L190","name":"PicardLindelof.FunSpace.toContinuousMap","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.toContinuousMap","doc":"Each curve in `PicardLindelof.FunSpace` is continuous. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L184-L185","name":"PicardLindelof.FunSpace.continuous","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.continuous","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L180-L181","name":"PicardLindelof.FunSpace.lipschitz","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.lipschitz","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L177-L178","name":"PicardLindelof.FunSpace.instInhabitedFunSpace","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.instInhabitedFunSpace","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L174-L175","name":"PicardLindelof.FunSpace.instCoeFunFunSpaceForAllElemRealIccInstPreorderRealTMinTMax","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.instCoeFunFunSpaceForAllElemRealIccInstPreorderRealTMinTMax","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L167-L167","name":"PicardLindelof.FunSpace.lipschitz'","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.lipschitz'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L166-L166","name":"PicardLindelof.FunSpace.map_t₀'","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.map_t₀'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L165-L165","name":"PicardLindelof.FunSpace.toFun","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L164-L167","name":"PicardLindelof.FunSpace","kind":"structure","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace","doc":"The space of curves $γ \\colon [t_{\\min}, t_{\\max}] \\to E$ such that $γ(t₀) = x₀$ and $γ$ is\nLipschitz continuous with constant $C$. The map sending $γ$ to\n$\\mathbf Pγ(t)=x₀ + ∫_{t₀}^{t} v(τ, γ(τ))\\,dτ$ is a contracting map on this space, and its fixed\npoint is a solution of the ODE $\\dot x=v(t, x)$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L156-L157","name":"PicardLindelof.continuous_proj","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.continuous_proj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L151-L152","name":"PicardLindelof.proj_of_mem","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.proj_of_mem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L147-L148","name":"PicardLindelof.proj_coe","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.proj_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L143-L144","name":"PicardLindelof.proj","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.proj","doc":"Projection $ℝ → [t_{\\min}, t_{\\max}]$ sending $(-∞, t_{\\min}]$ to $t_{\\min}$ and $[t_{\\max}, ∞)$\nto $t_{\\max}$. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L132-L138","name":"PicardLindelof.dist_t₀_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.dist_t₀_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L128-L129","name":"PicardLindelof.tDist_nonneg","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.tDist_nonneg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L124-L125","name":"PicardLindelof.tDist","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.tDist","doc":"The maximum of distances from `t₀` to the endpoints of `[tMin, tMax]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L118-L120","name":"PicardLindelof.norm_le","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.norm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L110-L115","name":"PicardLindelof.continuousOn","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.continuousOn","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L105-L107","name":"PicardLindelof.lipschitzOnWith","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.lipschitzOnWith","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L101-L102","name":"PicardLindelof.nonempty_Icc","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.nonempty_Icc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L97-L98","name":"PicardLindelof.tMin_le_tMax","kind":"theorem","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.tMin_le_tMax","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L88-L95","name":"PicardLindelof.instInhabitedPicardLindelof","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.instInhabitedPicardLindelof","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L85-L86","name":"PicardLindelof.instCoeFunPicardLindelofForAllReal","kind":"instance","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.instCoeFunPicardLindelofForAllReal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L78-L78","name":"PicardLindelof.isPicardLindelof","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.isPicardLindelof","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L77-L77","name":"PicardLindelof.L","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.L","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L77-L77","name":"PicardLindelof.R","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.R","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L77-L77","name":"PicardLindelof.C","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L76-L76","name":"PicardLindelof.x₀","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.x₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L75-L75","name":"PicardLindelof.t₀","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.t₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L74-L74","name":"PicardLindelof.tMax","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.tMax","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L74-L74","name":"PicardLindelof.tMin","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.tMin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L73-L73","name":"PicardLindelof.toFun","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.toFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L72-L72","name":"PicardLindelof.mk","kind":"ctor","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L72-L78","name":"PicardLindelof","kind":"structure","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof","doc":"This structure holds arguments of the Picard-Lipschitz (Cauchy-Lipschitz) theorem. It is part of\nthe internal API for convenience, so as not to constantly invoke choice. Unless you want to use one\nof the auxiliary lemmas, use `IsPicardLindelof.exists_forall_hasDerivWithinAt_Icc_eq` instead\nof using this structure.\n\nThe similarly named `IsPicardLindelof` is a bundled `Prop` holding the long hypotheses of the\nPicard-Lindelöf theorem as named arguments. It is used as part of the public API.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L61-L61","name":"IsPicardLindelof.C_mul_le_R","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.C_mul_le_R","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L60-L60","name":"IsPicardLindelof.norm_le","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.norm_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L59-L59","name":"IsPicardLindelof.cont","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.cont","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L58-L58","name":"IsPicardLindelof.lipschitz","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.lipschitz","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L57-L57","name":"IsPicardLindelof.hR","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.hR","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L56-L56","name":"IsPicardLindelof.ht₀","kind":"def","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.ht₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L54-L55","name":"IsPicardLindelof.mk","kind":"ctor","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L54-L61","name":"IsPicardLindelof","kind":"structure","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#IsPicardLindelof","doc":"`Prop` structure holding the hypotheses of the Picard-Lindelöf theorem.\n\nThe similarly named `PicardLindelof` structure is part of the internal API for convenience, so as\nnot to constantly invoke choice, but is not intended for public use. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Analysis/ODE/PicardLindelof.lean#L1-L1","name":"PicardLindelof.FunSpace.mk","kind":"ctor","docLink":"./Mathlib/Analysis/ODE/PicardLindelof.html#PicardLindelof.FunSpace.mk","doc":""}]}