{"name":"Mathlib.CategoryTheory.EqToHom","instances":[{"typeNames":["CategoryTheory.eqToHom"],"name":"CategoryTheory.instIsIsoEqToHom","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.Opposites"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L298-L301","name":"CategoryTheory.dcongr_arg","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.dcongr_arg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L294-L295","name":"CategoryTheory.eq_conj_eqToHom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eq_conj_eqToHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L288-L291","name":"CategoryTheory.NatTrans.congr","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.NatTrans.congr","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L284-L285","name":"CategoryTheory.eqToHom_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L279-L280","name":"CategoryTheory.eqToIso_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso_map","doc":"See the note on `eqToHom_map` regarding using this as a `simp` lemma.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L273-L274","name":"CategoryTheory.eqToHom_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_map","doc":"This is not always a good idea as a `@[simp]` lemma,\nas we lose the ability to use results that interact with `F`,\ne.g. the naturality of a natural transformation.\n\nIn some files it may be appropriate to use `local attribute [simp] eqToHom_map`, however.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L259-L260","name":"CategoryTheory.Functor.hcongr_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.hcongr_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L254-L256","name":"CategoryTheory.Functor.postcomp_map_hEq'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.postcomp_map_hEq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L248-L251","name":"CategoryTheory.Functor.postcomp_map_hEq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.postcomp_map_hEq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L243-L245","name":"CategoryTheory.Functor.precomp_map_hEq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.precomp_map_hEq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L237-L240","name":"CategoryTheory.Functor.map_comp_hEq'","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.map_comp_hEq'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L230-L234","name":"CategoryTheory.Functor.map_comp_hEq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.map_comp_hEq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L222-L222","name":"CategoryTheory.Functor.congr_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.congr_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L214-L219","name":"CategoryTheory.Functor.congr_inv_of_congr_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.congr_inv_of_congr_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L209-L211","name":"CategoryTheory.Functor.congr_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.congr_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L206-L206","name":"CategoryTheory.Functor.congr_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.congr_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L200-L202","name":"CategoryTheory.Functor.hext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.hext","doc":"Proving equality between functors using heterogeneous equality. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L192-L196","name":"CategoryTheory.Functor.conj_eqToHom_iff_hEq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.conj_eqToHom_iff_hEq","doc":"Two morphisms are conjugate via eqToHom if and only if they are heterogeneously equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L175-L188","name":"CategoryTheory.Functor.ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.Functor.ext","doc":"Proving equality between functors. This isn't an extensionality lemma,\nbecause usually you don't really want to do this. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L165-L166","name":"CategoryTheory.inv_eqToHom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.inv_eqToHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L161-L162","name":"CategoryTheory.instIsIsoEqToHom","kind":"instance","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.instIsIsoEqToHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L155-L158","name":"CategoryTheory.eqToHom_unop","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_unop","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L149-L151","name":"CategoryTheory.eqToHom_op","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_op","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L144-L145","name":"CategoryTheory.eqToIso_trans","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L139-L140","name":"CategoryTheory.eqToIso_refl","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L134-L135","name":"CategoryTheory.eqToIso.inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso.inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L129-L130","name":"CategoryTheory.eqToIso.hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso.hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L124-L125","name":"CategoryTheory.eqToIso","kind":"def","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso","doc":"An equality `X = Y` gives us an isomorphism `X ≅ Y`.\n\nIt is typically better to use this, rather than rewriting by the equality then using `Iso.refl _`\nwhich usually leads to dependent type theory hell.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L113-L116","name":"CategoryTheory.congrArg_mpr_hom_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.congrArg_mpr_hom_right","doc":"If we (perhaps unintentionally) perform equational rewriting on\nthe target object of a morphism,\nwe can replace the resulting `_.mpr f` term by a composition with an `eqToHom`.\n\nIt may be advisable to introduce any necessary `eqToHom` morphisms manually,\nrather than relying on this lemma firing.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L101-L104","name":"CategoryTheory.congrArg_cast_hom_right","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.congrArg_cast_hom_right","doc":"Reducible form of `congrArg_mpr_hom_right` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L91-L94","name":"CategoryTheory.congrArg_mpr_hom_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.congrArg_mpr_hom_left","doc":"If we (perhaps unintentionally) perform equational rewriting on\nthe source object of a morphism,\nwe can replace the resulting `_.mpr f` term by a composition with an `eqToHom`.\n\nIt may be advisable to introduce any necessary `eqToHom` morphisms manually,\nrather than relying on this lemma firing.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L79-L82","name":"CategoryTheory.congrArg_cast_hom_left","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.congrArg_cast_hom_left","doc":"Reducible form of congrArg_mpr_hom_left "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L69-L72","name":"CategoryTheory.eqToHom_comp_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_comp_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L63-L66","name":"CategoryTheory.comp_eqToHom_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.comp_eqToHom_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L56-L60","name":"CategoryTheory.eqToHom_trans","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L55-L55","name":"CategoryTheory.eqToHom_trans_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_trans_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L51-L52","name":"CategoryTheory.eqToHom_refl","kind":"theorem","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/EqToHom.lean#L47-L47","name":"CategoryTheory.eqToHom","kind":"def","docLink":"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom","doc":"An equality `X = Y` gives us a morphism `X ⟶ Y`.\n\nIt is typically better to use this, rather than rewriting by the equality then using `𝟙 _`\nwhich usually leads to dependent type theory hell.\n"}]}