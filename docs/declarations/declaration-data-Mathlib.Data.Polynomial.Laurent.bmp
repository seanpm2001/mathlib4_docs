{"name":"Mathlib.Data.Polynomial.Laurent","instances":[{"typeNames":["LaurentPolynomial","AddMonoidAlgebra.hasMul","Int","Int.instAddInt","AddMonoidAlgebra.one","Int","CommMonoidWithZero.toZero","CancelCommMonoidWithZero.toCommMonoidWithZero","IsDomain.toCancelCommMonoidWithZero","Int.instCommSemiringInt","LinearOrderedRing.isDomain","LinearOrderedCommRing.toLinearOrderedRing","Int.linearOrderedCommRing","LaurentPolynomial.T"],"name":"LaurentPolynomial.invertibleT","className":"Invertible"},{"typeNames":["Polynomial","LaurentPolynomial","Polynomial.semiring","AddMonoidAlgebra.addCommMonoid","Int"],"name":"LaurentPolynomial.instModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","className":"Module"},{"typeNames":["Polynomial","Polynomial","LaurentPolynomial","SMulZeroClass.toSMul","Polynomial","Polynomial.zero","SMulWithZero.toSMulZeroClass","MulZeroClass.toSMulWithZero","NonUnitalNonAssocSemiring.toMulZeroClass","NonAssocSemiring.toNonUnitalNonAssocSemiring","Semiring.toNonAssocSemiring","Polynomial.semiring","SMulZeroClass.toSMul","Polynomial","LaurentPolynomial","MonoidWithZero.toZero","Semiring.toMonoidWithZero","AddMonoidAlgebra.semiring","Int","Int.instAddMonoidInt","SMulWithZero.toSMulZeroClass","Polynomial.zero","MulActionWithZero.toSMulWithZero","Polynomial.semiring","Module.toMulActionWithZero","AddMonoidAlgebra.addCommMonoid","LaurentPolynomial.instModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","SMulZeroClass.toSMul","Polynomial","LaurentPolynomial","MonoidWithZero.toZero","Semiring.toMonoidWithZero","AddMonoidAlgebra.semiring","Int","Int.instAddMonoidInt","SMulWithZero.toSMulZeroClass","Polynomial.zero","MulActionWithZero.toSMulWithZero","Polynomial.semiring","Module.toMulActionWithZero","AddMonoidAlgebra.addCommMonoid","LaurentPolynomial.instModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt"],"name":"LaurentPolynomial.instIsScalarTowerPolynomialLaurentPolynomialToSMulZeroToSMulZeroClassToSMulWithZeroToMulZeroClassToNonUnitalNonAssocSemiringToNonAssocSemiringSemiringToZeroToMonoidWithZeroSemiringIntInstAddMonoidIntToSMulWithZeroToMulActionWithZeroAddCommMonoidInstModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","className":"IsScalarTower"},{"typeNames":["Polynomial","CommSemiring.toSemiring","LaurentPolynomial","CommSemiring.toSemiring","Polynomial.commSemiring","AddMonoidAlgebra.semiring","Int","CommSemiring.toSemiring","Int.instAddMonoidInt"],"name":"LaurentPolynomial.algebraPolynomial","className":"Algebra"}],"imports":["Init","Mathlib.Data.Polynomial.AlgebraMap","Mathlib.RingTheory.Localization.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L593-L611","name":"LaurentPolynomial.isLocalization","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.isLocalization","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L589-L590","name":"LaurentPolynomial.algebraMap_eq_toLaurent","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.algebraMap_eq_toLaurent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L583-L584","name":"LaurentPolynomial.algebraMap_X_pow","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.algebraMap_X_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L577-L580","name":"LaurentPolynomial.algebraPolynomial","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.algebraPolynomial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L568-L569","name":"LaurentPolynomial.instIsScalarTowerPolynomialLaurentPolynomialToSMulZeroToSMulZeroClassToSMulWithZeroToMulZeroClassToNonUnitalNonAssocSemiringToNonAssocSemiringSemiringToZeroToMonoidWithZeroSemiringIntInstAddMonoidIntToSMulWithZeroToMulActionWithZeroAddCommMonoidInstModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.instIsScalarTowerPolynomialLaurentPolynomialToSMulZeroToSMulZeroClassToSMulWithZeroToMulZeroClassToNonUnitalNonAssocSemiringToNonAssocSemiringSemiringToZeroToMonoidWithZeroSemiringIntInstAddMonoidIntToSMulWithZeroToMulActionWithZeroAddCommMonoidInstModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L565-L566","name":"LaurentPolynomial.instModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.instModulePolynomialLaurentPolynomialSemiringAddCommMonoidInt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L556-L557","name":"LaurentPolynomial.degree_C_le","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L551-L552","name":"LaurentPolynomial.degree_T_le","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_T_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L544-L547","name":"LaurentPolynomial.degree_C_mul_T_le","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C_mul_T_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L535-L536","name":"LaurentPolynomial.degree_C_ite","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L529-L531","name":"LaurentPolynomial.degree_C","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L523-L525","name":"LaurentPolynomial.degree_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L515-L518","name":"LaurentPolynomial.degree_C_mul_T_ite","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C_mul_T_ite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L503-L511","name":"LaurentPolynomial.degree_C_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_C_mul_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L489-L495","name":"LaurentPolynomial.degree_eq_bot_iff","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_eq_bot_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L484-L485","name":"LaurentPolynomial.degree_zero","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L479-L480","name":"LaurentPolynomial.degree","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.degree","doc":"The degree of a Laurent polynomial takes values in `WithBot ℤ`.\nIf `f : R[T;T⁻¹]` is a Laurent polynomial, then `f.degree` is the maximum of its support of `f`,\nor `⊥`, if `f = 0`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L452-L469","name":"LaurentPolynomial.toLaurent_support","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.toLaurent_support","doc":"The support of a polynomial `f` is a finset in `ℕ`.  The lemma `toLaurent_support f`\nshows that the support of `f.toLaurent` is the same finset, but viewed in `ℤ` under the natural\ninclusion `ℕ ↪ ℤ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L442-L445","name":"LaurentPolynomial.support_C_mul_T_of_ne_zero","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.support_C_mul_T_of_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L434-L438","name":"LaurentPolynomial.support_C_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.support_C_mul_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L422-L428","name":"LaurentPolynomial.reduce_to_polynomial_of_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.reduce_to_polynomial_of_mul_T","doc":"Suppose that `Q` is a statement about Laurent polynomials such that\n* `Q` is true on *ordinary* polynomials;\n* `Q (f * T)` implies `Q f`;\nit follow that `Q` is true on all Laurent polynomials. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L409-L414","name":"LaurentPolynomial.induction_on_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.induction_on_mul_T","doc":"This is a version of `exists_T_pow` stated as an induction principle. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L393-L403","name":"LaurentPolynomial.exists_T_pow","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.exists_T_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L389-L390","name":"Polynomial.toLaurent_ne_zero","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L385-L386","name":"Polynomial.toLaurent_inj","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L379-L381","name":"Polynomial.toLaurent_injective","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L375-L376","name":"Polynomial.trunc_toLaurent","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.trunc_toLaurent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L364-L371","name":"LaurentPolynomial.leftInverse_trunc_toLaurent","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.leftInverse_trunc_toLaurent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L341-L359","name":"LaurentPolynomial.trunc_C_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.trunc_C_mul_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L336-L337","name":"LaurentPolynomial.trunc","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.trunc","doc":"`trunc : R[T;T⁻¹] →+ R[X]` maps a Laurent polynomial `f` to the polynomial whose terms of\nnonnegative degree coincide with the ones of `f`.  The terms of negative degree of `f` \"vanish\".\n`trunc` is a left-inverse to `Polynomial.toLaurent`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L328-L329","name":"LaurentPolynomial.T_mul","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L319-L323","name":"LaurentPolynomial.commute_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.commute_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L310-L316","name":"LaurentPolynomial.induction_on'","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.induction_on'","doc":"To prove something about Laurent polynomials, it suffices to show that\n* the condition is closed under taking sums, and\n* it holds for monomials.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L277-L302","name":"LaurentPolynomial.induction_on","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L271-L272","name":"LaurentPolynomial.isUnit_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.isUnit_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L266-L267","name":"LaurentPolynomial.invOf_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.invOf_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L258-L261","name":"LaurentPolynomial.invertibleT","kind":"instance","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.invertibleT","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L252-L254","name":"Polynomial.toLaurent_C_mul_X_pow","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_C_mul_X_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L246-L247","name":"Polynomial.toLaurent_X_pow","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_X_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L239-L241","name":"Polynomial.toLaurent_C_mul_eq","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_C_mul_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L234-L235","name":"Polynomial.toLaurent_one","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L227-L229","name":"Polynomial.toLaurent_X","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_X","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L220-L222","name":"Polynomial.toLaurent_C","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L212-L215","name":"Polynomial.toLaurent_C_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_C_mul_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L202-L205","name":"LaurentPolynomial.single_eq_C_mul_T","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.single_eq_C_mul_T","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L196-L197","name":"LaurentPolynomial.mul_T_assoc","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.mul_T_assoc","doc":"The `simp` version of `mul_assoc`, in the presence of `T`'s. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L189-L190","name":"LaurentPolynomial.T_pow","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L184-L184","name":"LaurentPolynomial.T_sub","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L178-L180","name":"LaurentPolynomial.T_add","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L173-L174","name":"LaurentPolynomial.T_zero","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L167-L168","name":"LaurentPolynomial.T","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.T","doc":"The function `n ↦ T ^ n`, implemented as a sequence `ℤ → R[T;T⁻¹]`.\n\nUsing directly `T ^ n` does not work, since we want the exponents to be of Type `ℤ` and there\nis no `ℤ`-power defined on `R[T;T⁻¹]`.  Using that `T` is a unit introduces extra coercions.\nFor these reasons, the definition of `T` is as a sequence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L158-L158","name":"LaurentPolynomial.single_eq_C","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.single_eq_C","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L153-L154","name":"LaurentPolynomial.C_eq_algebraMap","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.C_eq_algebraMap","doc":"When we have `[CommSemiring R]`, the function `C` is the same as `algebraMap R R[T;T⁻¹]`.\n(But note that `C` is defined when `R` is not necessarily commutative, in which case\n`algebraMap` is not available.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L144-L146","name":"LaurentPolynomial.algebraMap_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.algebraMap_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L139-L140","name":"LaurentPolynomial.C","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.C","doc":"The ring homomorphism `C`, including `R` into the ring of Laurent polynomials over `R` as\nthe constant Laurent polynomials. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L130-L131","name":"LaurentPolynomial.single_zero_one_eq_one","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.single_zero_one_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L120-L121","name":"Polynomial.toLaurentAlg_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurentAlg_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L114-L116","name":"Polynomial.toLaurentAlg","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurentAlg","doc":"The `R`-algebra map, taking a polynomial with coefficients in `R` to a Laurent polynomial\nwith coefficients in `R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L107-L109","name":"Polynomial.toLaurent_apply","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent_apply","doc":"This is not a simp lemma, as it is usually preferable to use the lemmas about `C` and `X`\ninstead. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L101-L102","name":"Polynomial.toLaurent","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#Polynomial.toLaurent","doc":"The ring homomorphism, taking a polynomial with coefficients in `R` to a Laurent polynomial\nwith coefficients in `R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L96-L97","name":"LaurentPolynomial.ext","kind":"theorem","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/Polynomial/Laurent.lean#L88-L89","name":"LaurentPolynomial","kind":"def","docLink":"./Mathlib/Data/Polynomial/Laurent.html#LaurentPolynomial","doc":"The semiring of Laurent polynomials with coefficients in the semiring `R`.\nWe denote it by `R[T;T⁻¹]`.\nThe ring homomorphism `C : R →+* R[T;T⁻¹]` includes `R` as the constant polynomials. "}]}