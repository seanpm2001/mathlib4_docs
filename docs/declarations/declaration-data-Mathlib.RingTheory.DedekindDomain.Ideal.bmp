{"name":"Mathlib.RingTheory.DedekindDomain.Ideal","instances":[{"typeNames":["FractionalIdeal","nonZeroDivisors","Semiring.toMonoidWithZero","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain"],"name":"FractionalIdeal.instInvFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","className":"Inv"},{"typeNames":["FractionalIdeal","nonZeroDivisors","Semiring.toMonoidWithZero","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain"],"name":"FractionalIdeal.instInvOneClassFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","className":"InvOneClass"},{"typeNames":["FractionalIdeal","nonZeroDivisors","Semiring.toMonoidWithZero","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain"],"name":"FractionalIdeal.semifield","className":"Semifield"},{"typeNames":["FractionalIdeal","nonZeroDivisors","Semiring.toMonoidWithZero","CommSemiring.toSemiring","CommRing.toCommSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain"],"name":"FractionalIdeal.cancelCommMonoidWithZero","className":"CancelCommMonoidWithZero"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring"],"name":"Ideal.cancelCommMonoidWithZero","className":"CancelCommMonoidWithZero"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","IdemSemiring.toSemiring","Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","Submodule.idemSemiring","Algebra.id"],"name":"Ideal.isDomain","className":"IsDomain"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","CancelCommMonoidWithZero.toCommMonoidWithZero","Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","Ideal.cancelCommMonoidWithZero"],"name":"instWfDvdMonoidIdealToSemiringToCommSemiringToCommMonoidWithZeroCancelCommMonoidWithZero","className":"WfDvdMonoid"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","Ideal.cancelCommMonoidWithZero"],"name":"Ideal.uniqueFactorizationMonoid","className":"UniqueFactorizationMonoid"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","Ideal.cancelCommMonoidWithZero"],"name":"Ideal.normalizationMonoid","className":"NormalizationMonoid"},{"typeNames":["Ideal","CommSemiring.toSemiring","CommRing.toCommSemiring","Ideal.cancelCommMonoidWithZero"],"name":"Ideal.instNormalizedGCDMonoidIdealToSemiringToCommSemiringCancelCommMonoidWithZero","className":"NormalizedGCDMonoid"},{"typeNames":["CommSemiring.toSemiring","CommRing.toCommSemiring","IsDedekindDomain.HeightOneSpectrum.asIdeal"],"name":"IsDedekindDomain.HeightOneSpectrum.isMaximal","className":"Ideal.IsMaximal"}],"imports":["Init","Mathlib.Algebra.Algebra.Subalgebra.Pointwise","Mathlib.AlgebraicGeometry.PrimeSpectrum.Maximal","Mathlib.AlgebraicGeometry.PrimeSpectrum.Noetherian","Mathlib.Order.Hom.Basic","Mathlib.RingTheory.DedekindDomain.Basic","Mathlib.RingTheory.FractionalIdeal","Mathlib.RingTheory.PrincipalIdealDomain","Mathlib.RingTheory.ChainOfDivisors"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1501-L1508","name":"multiplicity_normalizedFactorsEquivSpanNormalizedFactors_symm_eq_multiplicity","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#multiplicity_normalizedFactorsEquivSpanNormalizedFactors_symm_eq_multiplicity","doc":"The bijection `normalized_factors_equiv_span_normalized_factors.symm` between the set of prime\nfactors of the ideal `⟨r⟩` and the set of prime factors of `r` preserves multiplicities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1490-L1496","name":"multiplicity_normalizedFactorsEquivSpanNormalizedFactors_eq_multiplicity","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#multiplicity_normalizedFactorsEquivSpanNormalizedFactors_eq_multiplicity","doc":"The bijection `normalizedFactorsEquivSpanNormalizedFactors` between the set of prime\nfactors of `r` and the set of prime factors of the ideal `⟨r⟩` preserves multiplicities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1461-L1483","name":"normalizedFactorsEquivSpanNormalizedFactors","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#normalizedFactorsEquivSpanNormalizedFactors","doc":"The bijection between the (normalized) prime factors of `r` and the (normalized) prime factors\nof `span {r}` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1437-L1453","name":"multiplicity_eq_multiplicity_span","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#multiplicity_eq_multiplicity_span","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1417-L1434","name":"singleton_span_mem_normalizedFactors_of_mem_normalizedFactors","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#singleton_span_mem_normalizedFactors_of_mem_normalizedFactors","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1411-L1414","name":"span_singleton_dvd_span_singleton_iff_dvd","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#span_singleton_dvd_span_singleton_iff_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1389-L1396","name":"IsDedekindDomain.exists_forall_sub_mem_ideal","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.exists_forall_sub_mem_ideal","doc":"Corollary of the Chinese remainder theorem: given elements `x i : R`,\nwe can choose a representative `y : R` such that `y - x i ∈ P i ^ e i`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1377-L1384","name":"IsDedekindDomain.exists_representative_mod_finset","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.exists_representative_mod_finset","doc":"Corollary of the Chinese remainder theorem: given elements `x i : R / P i ^ e i`,\nwe can choose a representative `y : R` such that `y ≡ x i (mod P i ^ e i)`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1366-L1372","name":"IsDedekindDomain.quotientEquivPiOfFinsetProdEq","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.quotientEquivPiOfFinsetProdEq","doc":"**Chinese remainder theorem** for a Dedekind domain: if the ideal `I` factors as\n`∏ i in s, P i ^ e i`, then `R ⧸ I` factors as `Π (i : s), R ⧸ (P i ^ e i)`.\n\nThis is a version of `IsDedekindDomain.quotientEquivPiOfProdEq` where we restrict\nthe product to a finite subset `s` of a potentially infinite indexing type `ι`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1354-L1357","name":"Ideal.quotientMulEquivQuotientProd","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.quotientMulEquivQuotientProd","doc":"**Chinese remainder theorem**, specialized to two ideals. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1348-L1350","name":"IsDedekindDomain.quotientEquivPiFactors_mk","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.quotientEquivPiFactors_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1332-L1344","name":"IsDedekindDomain.quotientEquivPiFactors","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.quotientEquivPiFactors","doc":"**Chinese remainder theorem** for a Dedekind domain: `R ⧸ I` factors as `Π i, R ⧸ (P i ^ e i)`,\nwhere `P i` ranges over the prime factors of `I` and `e i` over the multiplicities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1306-L1325","name":"IsDedekindDomain.quotientEquivPiOfProdEq","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.quotientEquivPiOfProdEq","doc":"**Chinese remainder theorem** for a Dedekind domain: if the ideal `I` factors as\n`∏ i, P i ^ e i`, then `R ⧸ I` factors as `Π i, R ⧸ (P i ^ e i)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1275-L1301","name":"IsDedekindDomain.inf_prime_pow_eq_prod","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.inf_prime_pow_eq_prod","doc":"The intersection of distinct prime powers in a Dedekind domain is the product of these\nprime powers. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1264-L1270","name":"Ideal.prod_le_prime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.prod_le_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1259-L1261","name":"Ideal.pow_le_prime_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.pow_le_prime_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1250-L1256","name":"Ideal.le_of_pow_le_prime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.le_of_pow_le_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1238-L1247","name":"Ideal.le_mul_of_no_prime_factors","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.le_mul_of_no_prime_factors","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1230-L1233","name":"Ideal.count_normalizedFactors_eq","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.count_normalizedFactors_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1214-L1223","name":"Ideal.IsPrime.mul_mem_pow","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.IsPrime.mul_mem_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1203-L1207","name":"Ideal.coprime_of_no_prime_ge","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.coprime_of_no_prime_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1198-L1200","name":"Ring.DimensionLeOne.prime_le_prime_iff_eq","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ring.DimensionLeOne.prime_le_prime_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1179-L1185","name":"normalizedFactorsEquivOfQuotEquiv_multiplicity_eq_multiplicity","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#normalizedFactorsEquivOfQuotEquiv_multiplicity_eq_multiplicity","doc":"The map `normalizedFactorsEquivOfQuotEquiv` preserves multiplicities. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1169-L1171","name":"normalizedFactorsEquivOfQuotEquiv_symm","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#normalizedFactorsEquivOfQuotEquiv_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1153-L1165","name":"normalizedFactorsEquivOfQuotEquiv","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#normalizedFactorsEquivOfQuotEquiv","doc":"The bijection between the sets of normalized factors of I and J induced by a ring\nisomorphism `f : R/I ≅ A/J`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1135-L1147","name":"idealFactorsEquivOfQuotEquiv_mem_normalizedFactors_of_mem_normalizedFactors","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsEquivOfQuotEquiv_mem_normalizedFactors_of_mem_normalizedFactors","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1121-L1128","name":"idealFactorsEquivOfQuotEquiv_is_dvd_iso","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsEquivOfQuotEquiv_is_dvd_iso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1117-L1118","name":"idealFactorsEquivOfQuotEquiv_symm","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsEquivOfQuotEquiv_symm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1102-L1114","name":"idealFactorsEquivOfQuotEquiv","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsEquivOfQuotEquiv","doc":"The bijection between ideals of `R` dividing `I` and the ideals of `A` dividing `J` induced by\nan isomorphism `f : R/I ≅ A/J`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1086-L1094","name":"idealFactorsFunOfQuotHom_comp","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsFunOfQuotHom_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1074-L1081","name":"idealFactorsFunOfQuotHom_id","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsFunOfQuotHom_id","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1053-L1070","name":"idealFactorsFunOfQuotHom","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsFunOfQuotHom","doc":"The map from ideals of `R` dividing `I` to the ideals of `A` dividing `J` induced by\na homomorphism `f : R/I →+* A/J` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1052-L1052","name":"idealFactorsFunOfQuotHom_coe_coe","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#idealFactorsFunOfQuotHom_coe_coe","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1022-L1035","name":"IsDedekindDomain.HeightOneSpectrum.iInf_localization_eq_bot","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.iInf_localization_eq_bot","doc":"A Dedekind domain is equal to the intersection of its localizations at all its height one\nnon-zero prime ideals viewed as subalgebras of its field of fractions. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1010-L1015","name":"IsDedekindDomain.HeightOneSpectrum.equivMaximalSpectrum","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.equivMaximalSpectrum","doc":"An equivalence between the height one and maximal spectra for rings of Krull dimension 1. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1005-L1006","name":"IsDedekindDomain.HeightOneSpectrum.associates_irreducible","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.associates_irreducible","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1001-L1002","name":"IsDedekindDomain.HeightOneSpectrum.irreducible","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.irreducible","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L998-L998","name":"IsDedekindDomain.HeightOneSpectrum.prime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L995-L995","name":"IsDedekindDomain.HeightOneSpectrum.isMaximal","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.isMaximal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L986-L986","name":"IsDedekindDomain.HeightOneSpectrum.ne_bot","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.ne_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L985-L985","name":"IsDedekindDomain.HeightOneSpectrum.isPrime","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.isPrime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L984-L984","name":"IsDedekindDomain.HeightOneSpectrum.asIdeal","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.asIdeal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L983-L986","name":"IsDedekindDomain.HeightOneSpectrum","kind":"structure","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum","doc":"The height one prime spectrum of a Dedekind domain `R` is the type of nonzero prime ideals of\n`R`. Note that this equals the maximal spectrum if `R` has Krull dimension 1. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L982-L982","name":"IsDedekindDomain.HeightOneSpectrum.ext","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L982-L982","name":"IsDedekindDomain.HeightOneSpectrum.ext_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L954-L961","name":"irreducible_pow_sup_of_ge","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#irreducible_pow_sup_of_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L946-L951","name":"irreducible_pow_sup_of_le","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#irreducible_pow_sup_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L940-L943","name":"irreducible_pow_sup","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#irreducible_pow_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L911-L937","name":"sup_eq_prod_inf_factors","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#sup_eq_prod_inf_factors","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L904-L908","name":"count_le_of_ideal_ge","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#count_le_of_ideal_ge","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L900-L901","name":"prod_normalizedFactors_eq_self","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#prod_normalizedFactors_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L882-L883","name":"Ideal.inf_eq_mul_of_coprime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.inf_eq_mul_of_coprime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L879-L879","name":"Ideal.lcm_eq_inf","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.lcm_eq_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L875-L875","name":"Ideal.gcd_eq_sup","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.gcd_eq_sup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L858-L871","name":"Ideal.instNormalizedGCDMonoidIdealToSemiringToCommSemiringCancelCommMonoidWithZero","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.instNormalizedGCDMonoidIdealToSemiringToCommSemiringCancelCommMonoidWithZero","doc":"Ideals in a Dedekind domain have gcd and lcm operators that (trivially) are compatible with\nthe normalization operator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L837-L853","name":"Ideal.sup_mul_inf","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.sup_mul_inf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L789-L822","name":"Ideal.exist_integer_multiples_not_mem","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.exist_integer_multiples_not_mem","doc":"Strengthening of `IsLocalization.exist_integer_multiples`:\nLet `J ≠ ⊤` be an ideal in a Dedekind domain `A`, and `f ≠ 0` a finite collection\nof elements of `K = Frac(A)`, then we can multiply the elements of `f` by some `a : K`\nto find a collection of elements of `A` that is not completely contained in `J`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L775-L778","name":"Associates.le_singleton_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Associates.le_singleton_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L769-L772","name":"Ideal.pow_succ_lt_pow","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.pow_succ_lt_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L753-L766","name":"Ideal.eq_prime_pow_of_succ_lt_of_le","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.eq_prime_pow_of_succ_lt_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L746-L748","name":"Ideal.exists_mem_pow_not_mem_pow_succ","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.exists_mem_pow_not_mem_pow_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L739-L743","name":"Ideal.pow_lt_self","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.pow_lt_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L733-L736","name":"Ideal.strictAnti_pow","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.strictAnti_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L728-L730","name":"Ideal.isPrime_iff_bot_or_prime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.isPrime_iff_bot_or_prime","doc":"In a Dedekind domain, the prime ideals are the zero ideal together with the prime elements\nof the monoid with zero `Ideal A`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L722-L723","name":"Ideal.prime_iff_isPrime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.prime_iff_isPrime","doc":"In a Dedekind domain, the (nonzero) prime elements of the monoid with zero `Ideal A`\nare exactly the prime ideals. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L715-L717","name":"Ideal.prime_of_isPrime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.prime_of_isPrime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L706-L712","name":"Ideal.isPrime_of_prime","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.isPrime_of_prime","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L702-L703","name":"Ideal.dvd_span_singleton","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.dvd_span_singleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L697-L698","name":"Ideal.normalizationMonoid","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.normalizationMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L679-L694","name":"Ideal.uniqueFactorizationMonoid","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.uniqueFactorizationMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L671-L677","name":"instWfDvdMonoidIdealToSemiringToCommSemiringToCommMonoidWithZeroCancelCommMonoidWithZero","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#instWfDvdMonoidIdealToSemiringToCommSemiringToCommMonoidWithZeroCancelCommMonoidWithZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L658-L668","name":"Ideal.dvdNotUnit_iff_lt","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.dvdNotUnit_iff_lt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L643-L655","name":"Ideal.dvd_iff_le","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.dvd_iff_le","doc":"For ideals in a Dedekind domain, to divide is to contain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L639-L639","name":"Ideal.isDomain","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.isDomain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L633-L635","name":"Ideal.cancelCommMonoidWithZero","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#Ideal.cancelCommMonoidWithZero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L627-L630","name":"FractionalIdeal.cancelCommMonoidWithZero","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.cancelCommMonoidWithZero","doc":"Fractional ideals have cancellative multiplication in a Dedekind domain.\n\nAlthough this instance is a direct consequence of the instance\n`fractional_ideal.comm_group_with_zero`, we define this instance to provide\na computable alternative.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L610-L616","name":"FractionalIdeal.semifield","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.semifield","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L594-L595","name":"isDedekindDomain_iff_isDedekindDomainInv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#isDedekindDomain_iff_isDedekindDomainInv","doc":"`IsDedekindDomain` and `IsDedekindDomainInv` are equivalent ways\nto express that an integral domain is a Dedekind domain. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L578-L587","name":"FractionalIdeal.div_eq_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.div_eq_mul_inv","doc":"This is also available as `_root_.div_eq_mul_inv`, using the\n`CommGroupWithZero` instance defined below.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L570-L572","name":"FractionalIdeal.mul_left_strictMono","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_left_strictMono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L565-L567","name":"FractionalIdeal.mul_right_strictMono","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_right_strictMono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L561-L562","name":"FractionalIdeal.mul_left_le_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_left_le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L551-L558","name":"FractionalIdeal.mul_right_le_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_right_le_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L536-L548","name":"FractionalIdeal.mul_inv_cancel","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_inv_cancel","doc":"Nonzero fractional ideals in a Dedekind domain are units.\n\nThis is also available as `_root_.mul_inv_cancel`, using the\n`CommGroupWithZero` instance defined below.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L493-L528","name":"FractionalIdeal.coe_ideal_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_ideal_mul_inv","doc":"Nonzero integral ideals in a Dedekind domain are invertible.\n\nWe will use this to show that nonzero fractional ideals are invertible,\nand finally conclude that fractional ideals in a Dedekind domain form a group with zero.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L462-L485","name":"FractionalIdeal.mul_inv_cancel_of_le_one","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_inv_cancel_of_le_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L454-L459","name":"FractionalIdeal.one_mem_inv_coe_ideal","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.one_mem_inv_coe_ideal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L401-L451","name":"FractionalIdeal.exists_not_mem_one_of_ne_bot","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.exists_not_mem_one_of_ne_bot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L365-L394","name":"exists_multiset_prod_cons_le_and_prod_not_le","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#exists_multiset_prod_cons_le_and_prod_not_le","doc":"Specialization of `exists_prime_spectrum_prod_le_and_ne_bot_of_domain` to Dedekind domains:\nLet `I : Ideal A` be a nonzero ideal, where `A` is a Dedekind domain that is not a field.\nThen `exists_prime_spectrum_prod_le_and_ne_bot_of_domain` states we can find a product of prime\nideals that is contained within `I`. This lemma extends that result by making the product minimal:\nlet `M` be a maximal ideal that contains `I`, then the product including `M` is contained within `I`\nand the product excluding `M` is not contained within `I`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L351-L352","name":"IsDedekindDomainInv.isDedekindDomain","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.isDedekindDomain","doc":"Showing one side of the equivalence between the definitions\n`IsDedekindDomainInv` and `IsDedekindDomain` of Dedekind domains. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L312-L346","name":"IsDedekindDomainInv.dimensionLEOne","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.dimensionLEOne","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L299-L307","name":"IsDedekindDomainInv.integrallyClosed","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.integrallyClosed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L291-L296","name":"IsDedekindDomainInv.isNoetherianRing","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.isNoetherianRing","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L287-L288","name":"IsDedekindDomainInv.isUnit","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.isUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L283-L284","name":"IsDedekindDomainInv.inv_mul_eq_one","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.inv_mul_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L279-L280","name":"IsDedekindDomainInv.mul_inv_eq_one","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv.mul_inv_eq_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L267-L272","name":"FractionalIdeal.adjoinIntegral_eq_one_of_isUnit","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.adjoinIntegral_eq_one_of_isUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L258-L264","name":"isDedekindDomainInv_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#isDedekindDomainInv_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L250-L251","name":"IsDedekindDomainInv","kind":"def","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomainInv","doc":"A Dedekind domain is an integral domain such that every fractional ideal has an inverse.\n\nThis is equivalent to `IsDedekindDomain`.\nIn particular we provide a `fractional_ideal.comm_group_with_zero` instance,\nassuming `IsDedekindDomain A`, which implies `IsDedekindDomainInv`. For **integral** ideals,\n`IsDedekindDomain`(`_inv`) implies only `Ideal.cancelCommMonoidWithZero`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L239-L239","name":"FractionalIdeal.instInvOneClassFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.instInvOneClassFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L230-L236","name":"FractionalIdeal.isPrincipal_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.isPrincipal_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L214-L227","name":"FractionalIdeal.invertible_iff_generator_nonzero","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.invertible_iff_generator_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L208-L211","name":"FractionalIdeal.invertible_of_principal","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.invertible_of_principal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L197-L205","name":"FractionalIdeal.mul_generator_self_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_generator_self_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L192-L194","name":"FractionalIdeal.coe_ideal_span_singleton_inv_mul","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_ideal_span_singleton_inv_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L187-L189","name":"FractionalIdeal.spanSingleton_inv_mul","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.spanSingleton_inv_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L179-L184","name":"FractionalIdeal.coe_ideal_span_singleton_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_ideal_span_singleton_mul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L174-L176","name":"FractionalIdeal.spanSingleton_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.spanSingleton_mul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L167-L171","name":"FractionalIdeal.coe_ideal_span_singleton_div_self","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_ideal_span_singleton_div_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L162-L164","name":"FractionalIdeal.spanSingleton_div_self","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.spanSingleton_div_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L157-L159","name":"FractionalIdeal.spanSingleton_div_spanSingleton","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.spanSingleton_div_spanSingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L152-L153","name":"FractionalIdeal.spanSingleton_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.spanSingleton_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L145-L146","name":"FractionalIdeal.map_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.map_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L138-L139","name":"FractionalIdeal.mul_inv_cancel_iff_isUnit","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_inv_cancel_iff_isUnit","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L134-L135","name":"FractionalIdeal.mul_inv_cancel_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mul_inv_cancel_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L116-L131","name":"FractionalIdeal.right_inverse_eq","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.right_inverse_eq","doc":"`I⁻¹` is the inverse of `I` if `I` has an inverse. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L110-L112","name":"FractionalIdeal.coe_ideal_le_self_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_ideal_le_self_mul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L103-L105","name":"FractionalIdeal.le_self_mul_inv","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.le_self_mul_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L95-L100","name":"FractionalIdeal.inv_anti_mono","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.inv_anti_mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L91-L92","name":"FractionalIdeal.mem_inv_iff","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.mem_inv_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L84-L86","name":"FractionalIdeal.coe_inv_of_nonzero","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.coe_inv_of_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L80-L81","name":"FractionalIdeal.inv_nonzero","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.inv_nonzero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L77-L77","name":"FractionalIdeal.inv_zero'","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.inv_zero'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L74-L74","name":"FractionalIdeal.inv_eq","kind":"theorem","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.inv_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L72-L72","name":"FractionalIdeal.instInvFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","kind":"instance","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#FractionalIdeal.instInvFractionalIdealNonZeroDivisorsToMonoidWithZeroToSemiringToCommSemiringToCommRingToEuclideanDomain","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/DedekindDomain/Ideal.lean#L1-L1","name":"IsDedekindDomain.HeightOneSpectrum.mk","kind":"ctor","docLink":"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum.mk","doc":""}]}