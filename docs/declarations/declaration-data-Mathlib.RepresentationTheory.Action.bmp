{"name":"Mathlib.RepresentationTheory.Action","instances":[{"typeNames":["Action","_builtin_typeu","CategoryTheory.types"],"name":"Action.inhabited'","className":"Inhabited"},{"typeNames":["Action","AddCommGroupCat","instAddCommGroupCatLargeCategory"],"name":"Action.instInhabitedActionAddCommGroupCatInstAddCommGroupCatLargeCategory","className":"Inhabited"},{"typeNames":["Action.Hom"],"name":"Action.Hom.instInhabitedHom","className":"Inhabited"},{"typeNames":["Action"],"name":"Action.instCategoryAction","className":"CategoryTheory.Category"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.isIso_of_hom_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["Action","Action.instCategoryAction","Action.Hom.mk"],"name":"Action.isIso_hom_mk","className":"CategoryTheory.IsIso"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instHasFiniteProductsActionInstCategoryAction","className":"CategoryTheory.Limits.HasFiniteProducts"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instHasFiniteLimitsActionInstCategoryAction","className":"CategoryTheory.Limits.HasFiniteLimits"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instHasLimitsActionInstCategoryAction","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instHasColimitsActionInstCategoryAction","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["Action","Action.instCategoryAction","Action.forget"],"name":"Action.instFaithfulActionInstCategoryActionForget","className":"CategoryTheory.Faithful"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instConcreteCategoryActionInstCategoryAction","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Action","Action.instCategoryAction","Action.instConcreteCategoryActionInstCategoryAction"],"name":"Action.hasForgetToV","className":"CategoryTheory.HasForget₂"},{"typeNames":["Action","Action.instCategoryAction","Action.forget"],"name":"Action.instPreservesLimitsForget","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["Action","Action.instCategoryAction","Action.forget"],"name":"Action.instPreservesColimitsForget","className":"CategoryTheory.Limits.PreservesColimitsOfSize"},{"typeNames":["Quiver.Hom","Action","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Action.instCategoryAction"],"name":"Action.instZeroHomActionToQuiverToCategoryStructInstCategoryAction","className":"Zero"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instHasZeroMorphismsActionInstCategoryAction","className":"CategoryTheory.Limits.HasZeroMorphisms"},{"typeNames":["Action","Action.instCategoryAction","Action.instHasZeroMorphismsActionInstCategoryAction","Action.forget"],"name":"Action.forget_preservesZeroMorphisms","className":"CategoryTheory.Functor.PreservesZeroMorphisms"},{"typeNames":["Action","Action.instCategoryAction","Action.instHasZeroMorphismsActionInstCategoryAction","CategoryTheory.forget₂","Action","Action.instCategoryAction","Action.instConcreteCategoryActionInstCategoryAction","Action.hasForgetToV"],"name":"Action.forget₂_preservesZeroMorphisms","className":"CategoryTheory.Functor.PreservesZeroMorphisms"},{"typeNames":["Action","Action.instCategoryAction","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instHasZeroMorphismsActionInstCategoryAction","CategoryTheory.Limits.instHasZeroMorphismsFunctorCategory","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Equivalence.functor","Action","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instCategoryAction","CategoryTheory.Functor.category","Action.functorCategoryEquivalence"],"name":"Action.functorCategoryEquivalence_preservesZeroMorphisms","className":"CategoryTheory.Functor.PreservesZeroMorphisms"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instPreadditiveActionInstCategoryAction","className":"CategoryTheory.Preadditive"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.forget"],"name":"Action.forget_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","CategoryTheory.forget₂","Action","Action.instCategoryAction","Action.instConcreteCategoryActionInstCategoryAction","Action.hasForgetToV"],"name":"Action.forget₂_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["Action","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instCategoryAction","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instPreadditiveActionInstCategoryAction","CategoryTheory.functorCategoryPreadditive","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Equivalence.functor","Action","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instCategoryAction","CategoryTheory.Functor.category","Action.functorCategoryEquivalence"],"name":"Action.functorCategoryEquivalence_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction"],"name":"Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","className":"CategoryTheory.Linear"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","Action.forget","Action.forget_additive"],"name":"Action.forget_linear","className":"CategoryTheory.Functor.Linear"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","CategoryTheory.forget₂","Action","Action.instCategoryAction","Action.instConcreteCategoryActionInstCategoryAction","Action.hasForgetToV","Action.forget₂_additive"],"name":"Action.forget₂_linear","className":"CategoryTheory.Functor.Linear"},{"typeNames":["Action","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instCategoryAction","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instPreadditiveActionInstCategoryAction","CategoryTheory.functorCategoryPreadditive","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","CategoryTheory.functorCategoryLinear","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Equivalence.functor","Action","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","Action.instCategoryAction","CategoryTheory.Functor.category","Action.functorCategoryEquivalence","Action.functorCategoryEquivalence_additive"],"name":"Action.functorCategoryEquivalence_linear","className":"CategoryTheory.Functor.Linear"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instAbelianActionInstCategoryAction","className":"CategoryTheory.Abelian"},{"typeNames":["Action","Action.instCategoryAction"],"name":"Action.instMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.MonoidalCategory"},{"typeNames":["Action","Action.instCategoryAction","CategoryTheory.LaxMonoidalFunctor.toFunctor","Action","Action.instCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction","CategoryTheory.MonoidalFunctor.toLaxMonoidalFunctor","Action.forgetMonoidal"],"name":"Action.forgetMonoidal_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["Action","Action.instCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction"],"name":"Action.instBraidedCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.BraidedCategory"},{"typeNames":["Action","Action.instCategoryAction","CategoryTheory.LaxMonoidalFunctor.toFunctor","Action","Action.instCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction","CategoryTheory.MonoidalFunctor.toLaxMonoidalFunctor","CategoryTheory.BraidedFunctor.toMonoidalFunctor","Action.instBraidedCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","Action.forgetBraided"],"name":"Action.forgetBraided_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["Action","Action.instCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction"],"name":"Action.instSymmetricCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.SymmetricCategory"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction"],"name":"Action.instMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.MonoidalPreadditive"},{"typeNames":["Action","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction","Action.instMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction"],"name":"Action.instMonoidalLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryActionInstMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.MonoidalLinear"},{"typeNames":["Action","Action.instCategoryAction","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.LaxMonoidalFunctor.toFunctor","Action","Action.instCategoryAction","Action.instMonoidalCategoryActionInstCategoryAction","CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.Monoidal.functorCategoryMonoidal","CategoryTheory.MonoidalFunctor.toLaxMonoidalFunctor","Action.functorCategoryMonoidalEquivalence"],"name":"Action.instIsEquivalenceActionInstCategoryActionFunctorSingleObjαMonoidCategoryInstMonoidαCategoryToFunctorInstMonoidalCategoryActionInstCategoryActionFunctorCategoryMonoidalToLaxMonoidalFunctorFunctorCategoryMonoidalEquivalence","className":"CategoryTheory.IsEquivalence"},{"typeNames":["CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Monoidal.functorCategoryMonoidal","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα"],"name":"Action.instRightRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","className":"CategoryTheory.RightRigidCategory"},{"typeNames":["Action","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instMonoidalCategoryActionInstCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat"],"name":"Action.instRightRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.RightRigidCategory"},{"typeNames":["CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Monoidal.functorCategoryMonoidal","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα"],"name":"Action.instLeftRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","className":"CategoryTheory.LeftRigidCategory"},{"typeNames":["Action","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instMonoidalCategoryActionInstCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat"],"name":"Action.instLeftRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.LeftRigidCategory"},{"typeNames":["CategoryTheory.Functor","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Functor.category","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα","CategoryTheory.Monoidal.functorCategoryMonoidal","CategoryTheory.SingleObj","CategoryTheory.Bundled.α","Monoid","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","CategoryTheory.SingleObj.category","MonCat.instMonoidα"],"name":"Action.instRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","className":"CategoryTheory.RigidCategory"},{"typeNames":["Action","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat","Action.instMonoidalCategoryActionInstCategoryAction","Prefunctor.obj","GroupCat","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","instGroupCatLargeCategory","MonCat","instMonCatLargeCategory","CategoryTheory.Functor.toPrefunctor","CategoryTheory.forget₂","GroupCat.concreteCategory","MonCat.concreteCategory","GroupCat.hasForgetToMonCat"],"name":"Action.instRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","className":"CategoryTheory.RigidCategory"},{"typeNames":["Action","Action","Action.instCategoryAction","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.res"],"name":"Action.res_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["Action","Action","Action.instCategoryAction","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","Action.res","Action.res_additive"],"name":"Action.res_linear","className":"CategoryTheory.Functor.Linear"},{"typeNames":["Action","Action","Action.instCategoryAction","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instPreadditiveActionInstCategoryAction","CategoryTheory.Functor.mapAction"],"name":"CategoryTheory.Functor.mapAction_preadditive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["Action","Action","Action.instCategoryAction","Action.instCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","CategoryTheory.Functor.mapAction","CategoryTheory.Functor.mapAction_preadditive"],"name":"CategoryTheory.Functor.mapAction_linear","className":"CategoryTheory.Functor.Linear"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.Basic","Mathlib.CategoryTheory.SingleObj","Mathlib.CategoryTheory.Limits.FunctorCategory","Mathlib.CategoryTheory.Limits.Preserves.Basic","Mathlib.CategoryTheory.Adjunction.Limits","Mathlib.CategoryTheory.Monoidal.FunctorCategory","Mathlib.CategoryTheory.Monoidal.Transport","Mathlib.CategoryTheory.Monoidal.Rigid.OfEquivalence","Mathlib.CategoryTheory.Monoidal.Rigid.FunctorCategory","Mathlib.CategoryTheory.Monoidal.Linear","Mathlib.CategoryTheory.Monoidal.Braided","Mathlib.CategoryTheory.Monoidal.Types.Symmetric","Mathlib.CategoryTheory.Abelian.FunctorCategory","Mathlib.CategoryTheory.Abelian.Transfer","Mathlib.CategoryTheory.Conj","Mathlib.CategoryTheory.Linear.FunctorCategory"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L1023-L1026","name":"CategoryTheory.MonoidalFunctor.mapAction_μ_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction_μ_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L1016-L1018","name":"CategoryTheory.MonoidalFunctor.mapAction_ε_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction_ε_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L989-L1011","name":"CategoryTheory.MonoidalFunctor.mapAction","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction","doc":"A monoidal functor induces a monoidal functor between\nthe categories of `G`-actions within those categories. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L988-L988","name":"CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_μ_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_μ_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L988-L988","name":"CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_toFunctor","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_toFunctor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L988-L988","name":"CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_ε_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.MonoidalFunctor.mapAction_toLaxMonoidalFunctor_ε_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L972-L972","name":"CategoryTheory.Functor.mapAction_linear","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L966-L966","name":"CategoryTheory.Functor.mapAction_preadditive","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction_preadditive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L947-L960","name":"CategoryTheory.Functor.mapAction","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction","doc":"A functor between categories induces a functor between\nthe categories of `G`-actions within those categories. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L946-L946","name":"CategoryTheory.Functor.mapAction_obj_ρ_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction_obj_ρ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L946-L946","name":"CategoryTheory.Functor.mapAction_map_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction_map_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L946-L946","name":"CategoryTheory.Functor.mapAction_obj_V","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#CategoryTheory.Functor.mapAction_obj_V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L932-L934","name":"Action.diagonalSucc","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonalSucc","doc":"The natural isomorphism of `G`-sets `Gⁿ⁺¹ ≅ G × Gⁿ`, where `G` acts by left multiplication on\neach factor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L931-L931","name":"Action.diagonalSucc_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonalSucc_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L931-L931","name":"Action.diagonalSucc_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonalSucc_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L895-L925","name":"Action.leftRegularTensorIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegularTensorIso","doc":"Given `X : Action (Type u) (Mon.of G)` for `G` a group, then `G × X` (with `G` acting as left\nmultiplication on the first factor and by `X.ρ` on the second) is isomorphic as a `G`-set to\n`G × X` (with `G` acting as left multiplication on the first factor and trivially on the second).\nThe isomorphism is given by `(g, x) ↦ (g, g⁻¹ • x)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L894-L894","name":"Action.leftRegularTensorIso_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegularTensorIso_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L894-L894","name":"Action.leftRegularTensorIso_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegularTensorIso_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L883-L884","name":"Action.diagonalOneIsoLeftRegular","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonalOneIsoLeftRegular","doc":"We have `fin 1 → G ≅ G` as `G`-sets, with `G` acting by left multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L877-L878","name":"Action.diagonal","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonal","doc":"The `G`-set `Gⁿ`, acting on itself by left multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L876-L876","name":"Action.diagonal_ρ_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonal_ρ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L876-L876","name":"Action.diagonal_V","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.diagonal_V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L870-L871","name":"Action.leftRegular","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegular","doc":"The `G`-set `G`, acting on itself by left multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L869-L869","name":"Action.leftRegular_ρ_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegular_ρ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L869-L869","name":"Action.leftRegular_V","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftRegular_V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L845-L864","name":"Action.ofMulActionLimitCone","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ofMulActionLimitCone","doc":"Given a family `F` of types with `G`-actions, this is the limit cone demonstrating that the\nproduct of `F` as types is a product in the category of `G`-sets. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L837-L839","name":"Action.ofMulAction_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ofMulAction_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L830-L832","name":"Action.ofMulAction","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ofMulAction","doc":"Bundles a type `H` with a multiplicative action of `G` as an `Action`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L825-L825","name":"Action.res_linear","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L819-L819","name":"Action.res_additive","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res_additive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L810-L811","name":"Action.resComp","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resComp","doc":"The natural isomorphism from the composition of restrictions along homomorphisms\nto the restriction along the composition of homomorphism.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L809-L809","name":"Action.resComp_inv_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resComp_inv_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L809-L809","name":"Action.resComp_hom_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resComp_hom_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L801-L802","name":"Action.resId","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resId","doc":"The natural isomorphism from restriction along the identity homomorphism to\nthe identity functor on `Action V G`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L800-L800","name":"Action.resId_inv_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resId_inv_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L800-L800","name":"Action.resId_hom_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.resId_hom_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L787-L793","name":"Action.res","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res","doc":"The \"restriction\" functor along a monoid homomorphism `f : G ⟶ H`,\ntaking actions of `H` to actions of `G`.\n\n(This makes sense for any homomorphism, but the name is natural when `f` is a monomorphism.)\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L786-L786","name":"Action.res_map_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res_map_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L786-L786","name":"Action.res_obj_V","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res_obj_V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L786-L786","name":"Action.res_obj_ρ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.res_obj_ρ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L765-L775","name":"Action.actionPunitEquivalence","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.actionPunitEquivalence","doc":"Actions/representations of the trivial group are just objects in the ambient category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L755-L756","name":"Action.leftDual_ρ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftDual_ρ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L749-L750","name":"Action.rightDual_ρ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.rightDual_ρ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L743-L744","name":"Action.leftDual_v","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftDual_v","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L737-L738","name":"Action.rightDual_v","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.rightDual_v","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L730-L731","name":"Action.instRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":"If `V` is rigid, so is `Action V G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L726-L727","name":"Action.instRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L723-L724","name":"Action.instLeftRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instLeftRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":"If `V` is left rigid, so is `Action V G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L719-L720","name":"Action.instLeftRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instLeftRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L716-L717","name":"Action.instRightRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instRightRigidCategoryActionObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":"If `V` is right rigid, so is `Action V G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L712-L713","name":"Action.instRightRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instRightRigidCategoryFunctorSingleObjαMonoidObjGroupCatToQuiverToCategoryStructInstGroupCatLargeCategoryMonCatInstMonCatLargeCategoryToPrefunctorForget₂ConcreteCategoryConcreteCategoryHasForgetToMonCatCategoryInstMonoidαCategoryFunctorCategoryMonoidal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L704-L706","name":"Action.functorCategoryMonoidalEquivalence.inverse_map","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.inverse_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L697-L699","name":"Action.functorCategoryMonoidalEquivalence.functor_map","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.functor_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L690-L692","name":"Action.functorCategoryMonoidalEquivalence.unit_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.unit_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L683-L685","name":"Action.functorCategoryMonoidalEquivalence.inv_unit_app_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.inv_unit_app_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L676-L678","name":"Action.functorCategoryMonoidalEquivalence.counit_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.counit_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L669-L671","name":"Action.functorCategoryMonoidalEquivalence.inv_counit_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.inv_counit_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L660-L664","name":"Action.functorCategoryMonoidalEquivalence.ε_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.ε_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L650-L655","name":"Action.functorCategoryMonoidalEquivalence.μIso_inv_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.μIso_inv_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L632-L645","name":"Action.functorCategoryMonoidalEquivalence.μ_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence.μ_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L628-L629","name":"Action.instIsEquivalenceActionInstCategoryActionFunctorSingleObjαMonoidCategoryInstMonoidαCategoryToFunctorInstMonoidalCategoryActionInstCategoryActionFunctorCategoryMonoidalToLaxMonoidalFunctorFunctorCategoryMonoidalEquivalence","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instIsEquivalenceActionInstCategoryActionFunctorSingleObjαMonoidCategoryInstMonoidαCategoryToFunctorInstMonoidalCategoryActionInstCategoryActionFunctorCategoryMonoidalToLaxMonoidalFunctorFunctorCategoryMonoidalEquivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L623-L624","name":"Action.functorCategoryMonoidalEquivalence","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryMonoidalEquivalence","doc":"Upgrading the functor `Action V G ⥤ (SingleObj G ⥤ V)` to a monoidal functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L616-L616","name":"Action.instMonoidalLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryActionInstMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instMonoidalLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstLinearActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryActionInstMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L612-L612","name":"Action.instMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instMonoidalPreadditiveActionInstCategoryActionInstPreadditiveActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L603-L604","name":"Action.instSymmetricCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instSymmetricCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L596-L597","name":"Action.forgetBraided_faithful","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L591-L592","name":"Action.forgetBraided","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided","doc":"When `V` is braided the forgetful functor `Action V G` to `V` is braided. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L590-L590","name":"Action.forgetBraided_obj","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L590-L590","name":"Action.forgetBraided_map","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L590-L590","name":"Action.forgetBraided_ε","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided_ε","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L590-L590","name":"Action.forgetBraided_μ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetBraided_μ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L585-L587","name":"Action.instBraidedCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instBraidedCategoryActionInstCategoryActionInstMonoidalCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L576-L577","name":"Action.forgetMonoidal_faithful","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetMonoidal_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L569-L572","name":"Action.forgetMonoidal","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetMonoidal","doc":"When `V` is monoidal the forgetful functor `Action V G` to `V` is monoidal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L568-L568","name":"Action.forgetMonoidal_toLaxMonoidalFunctor_μ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetMonoidal_toLaxMonoidalFunctor_μ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L568-L568","name":"Action.forgetMonoidal_toLaxMonoidalFunctor_toFunctor","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetMonoidal_toLaxMonoidalFunctor_toFunctor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L568-L568","name":"Action.forgetMonoidal_toLaxMonoidalFunctor_ε","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forgetMonoidal_toLaxMonoidalFunctor_ε","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L558-L561","name":"Action.tensorUnitIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensorUnitIso","doc":"Given an object `X` isomorphic to the tensor unit of `V`, `X` equipped with the trivial action\nis isomorphic to the tensor unit of `Action V G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L550-L552","name":"Action.rightUnitor_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.rightUnitor_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L543-L545","name":"Action.rightUnitor_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.rightUnitor_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L536-L538","name":"Action.leftUnitor_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftUnitor_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L529-L531","name":"Action.leftUnitor_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.leftUnitor_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L521-L524","name":"Action.associator_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.associator_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L513-L516","name":"Action.associator_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.associator_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L507-L508","name":"Action.tensorHom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensorHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L501-L502","name":"Action.tensor_rho","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensor_rho","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L495-L496","name":"Action.tensor_v","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensor_v","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L489-L490","name":"Action.tensorUnit_rho","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensorUnit_rho","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L483-L484","name":"Action.tensorUnit_v","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.tensorUnit_v","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L479-L480","name":"Action.instMonoidalCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instMonoidalCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L468-L469","name":"Action.instAbelianActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instAbelianActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L463-L464","name":"Action.abelianAux","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.abelianAux","doc":"Auxilliary construction for the `Abelian (Action V G)` instance. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L453-L454","name":"Action.smul_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.smul_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L447-L448","name":"Action.functorCategoryEquivalence_linear","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L443-L443","name":"Action.forget₂_linear","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget₂_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L439-L439","name":"Action.forget_linear","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget_linear","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L427-L437","name":"Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instLinearActionInstCategoryActionInstPreadditiveActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L415-L417","name":"Action.sum_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.sum_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L409-L410","name":"Action.add_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.add_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L403-L404","name":"Action.neg_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.neg_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L397-L398","name":"Action.functorCategoryEquivalence_additive","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_additive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L393-L393","name":"Action.forget₂_additive","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget₂_additive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L389-L389","name":"Action.forget_additive","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget_additive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L377-L387","name":"Action.instPreadditiveActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instPreadditiveActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L366-L367","name":"Action.functorCategoryEquivalence_preservesZeroMorphisms","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_preservesZeroMorphisms","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L361-L362","name":"Action.forget₂_preservesZeroMorphisms","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget₂_preservesZeroMorphisms","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L357-L357","name":"Action.forget_preservesZeroMorphisms","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget_preservesZeroMorphisms","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L355-L355","name":"Action.instHasZeroMorphismsActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instHasZeroMorphismsActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L350-L351","name":"Action.zero_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.zero_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L347-L347","name":"Action.instZeroHomActionToQuiverToCategoryStructInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instZeroHomActionToQuiverToCategoryStructInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L335-L337","name":"Action.Iso.conj_ρ","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Iso.conj_ρ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L328-L330","name":"Action.instPreservesColimitsForget","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instPreservesColimitsForget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L324-L326","name":"Action.instPreservesLimitsForget","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instPreservesLimitsForget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L318-L320","name":"Action.functorCategoryEquivalenceCompEvaluation","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalenceCompEvaluation","doc":"The forgetful functor is intertwined by `functorCategoryEquivalence` with\nevaluation at `PUnit.star`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L312-L312","name":"Action.hasForgetToV","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.hasForgetToV","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L309-L310","name":"Action.instConcreteCategoryActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instConcreteCategoryActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L307-L307","name":"Action.instFaithfulActionInstCategoryActionForget","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instFaithfulActionInstCategoryActionForget","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L301-L303","name":"Action.forget","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget","doc":"(implementation) The forgetful functor from bundled actions to the underlying objects.\n\nUse the `CategoryTheory.forget` API provided by the `ConcreteCategory` instance below,\nrather than using this directly.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L300-L300","name":"Action.forget_map","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L300-L300","name":"Action.forget_obj","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.forget_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L286-L287","name":"Action.instHasColimitsActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instHasColimitsActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L283-L284","name":"Action.instHasLimitsActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instHasLimitsActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L279-L281","name":"Action.instHasFiniteLimitsActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instHasFiniteLimitsActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L275-L277","name":"Action.instHasFiniteProductsActionInstCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instHasFiniteProductsActionInstCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L247-L251","name":"Action.functorCategoryEquivalence","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence","doc":"The category of actions of `G` in the category `V`\nis equivalent to the functor category `singleObj G ⥤ V`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L246-L246","name":"Action.functorCategoryEquivalence_unitIso","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_unitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L246-L246","name":"Action.functorCategoryEquivalence_inverse","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_inverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L246-L246","name":"Action.functorCategoryEquivalence_counitIso","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_counitIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L246-L246","name":"Action.functorCategoryEquivalence_functor","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.functorCategoryEquivalence_functor","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L230-L231","name":"Action.FunctorCategoryEquivalence.counitIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.counitIso","doc":"Auxilliary definition for `functorCategoryEquivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L229-L229","name":"Action.FunctorCategoryEquivalence.counitIso_inv_app_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.counitIso_inv_app_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L229-L229","name":"Action.FunctorCategoryEquivalence.counitIso_hom_app_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.counitIso_hom_app_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L223-L224","name":"Action.FunctorCategoryEquivalence.unitIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.unitIso","doc":"Auxilliary definition for `functorCategoryEquivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L222-L222","name":"Action.FunctorCategoryEquivalence.unitIso_hom_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.unitIso_hom_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L222-L222","name":"Action.FunctorCategoryEquivalence.unitIso_inv_app_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.unitIso_inv_app_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L208-L217","name":"Action.FunctorCategoryEquivalence.inverse","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.inverse","doc":"Auxilliary definition for `functorCategoryEquivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L207-L207","name":"Action.FunctorCategoryEquivalence.inverse_map_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.inverse_map_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L207-L207","name":"Action.FunctorCategoryEquivalence.inverse_obj_V","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.inverse_obj_V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L207-L207","name":"Action.FunctorCategoryEquivalence.inverse_obj_ρ_apply","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.inverse_obj_ρ_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L194-L202","name":"Action.FunctorCategoryEquivalence.functor","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.functor","doc":"Auxilliary definition for `functorCategoryEquivalence`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L193-L193","name":"Action.FunctorCategoryEquivalence.functor_map_app","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.functor_map_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L193-L193","name":"Action.FunctorCategoryEquivalence.functor_obj_map","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.functor_obj_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L193-L193","name":"Action.FunctorCategoryEquivalence.functor_obj_obj","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.FunctorCategoryEquivalence.functor_obj_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L184-L186","name":"Action.isIso_hom_mk","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.isIso_hom_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L179-L180","name":"Action.isIso_of_hom_isIso","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.isIso_of_hom_isIso","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L168-L175","name":"Action.mkIso","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.mkIso","doc":"Construct an isomorphism of `G` actions/representations\nfrom an isomorphism of the the underlying objects,\nwhere the forward direction commutes with the group action. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L167-L167","name":"Action.mkIso_inv_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.mkIso_inv_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L167-L167","name":"Action.mkIso_hom_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.mkIso_hom_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L158-L160","name":"Action.comp_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L152-L153","name":"Action.id_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.id_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L148-L149","name":"Action.hom_ext","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.hom_ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L141-L144","name":"Action.instCategoryAction","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instCategoryAction","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L134-L135","name":"Action.Hom.comp","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.comp","doc":"The composition of two `Action V G` homomorphisms is the composition of the underlying maps.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L133-L133","name":"Action.Hom.comp_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.comp_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L128-L129","name":"Action.Hom.instInhabitedHom","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.instInhabitedHom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L124-L124","name":"Action.Hom.id","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.id","doc":"The identity morphism on an `Action V G`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L123-L123","name":"Action.Hom.id_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.id_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L119-L119","name":"Action.Hom.comm_assoc","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.comm_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L113-L113","name":"Action.Hom.comm","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L112-L112","name":"Action.Hom.hom","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L111-L111","name":"Action.Hom.mk","kind":"ctor","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L111-L113","name":"Action.Hom","kind":"structure","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom","doc":"A homomorphism of `Action V G`s is a morphism between the underlying objects,\ncommuting with the action of `G`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L110-L110","name":"Action.Hom.ext_iff","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.ext_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L110-L110","name":"Action.Hom.ext","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.Hom.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L100-L101","name":"Action.instInhabitedActionAddCommGroupCatInstAddCommGroupCatLargeCategory","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.instInhabitedActionAddCommGroupCatInstAddCommGroupCatLargeCategory","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L94-L96","name":"Action.trivial","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.trivial","doc":"The trivial representation of a group. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L88-L89","name":"Action.inhabited'","kind":"instance","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.inhabited'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L73-L80","name":"Action.ρAut","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ρAut","doc":"When a group acts, we can lift the action to the group of automorphisms. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L72-L72","name":"Action.ρAut_apply_inv","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ρAut_apply_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L72-L72","name":"Action.ρAut_apply_hom","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ρAut_apply_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L67-L67","name":"Action.ρ_one","kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ρ_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L58-L58","name":"Action.ρ","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.ρ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L57-L57","name":"Action.V","kind":"def","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.V","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L56-L56","name":"Action.mk","kind":"ctor","docLink":"./Mathlib/RepresentationTheory/Action.html#Action.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RepresentationTheory/Action.lean#L56-L58","name":"Action","kind":"structure","docLink":"./Mathlib/RepresentationTheory/Action.html#Action","doc":"An `Action V G` represents a bundled action of\nthe monoid `G` on an object of some category `V`.\n\nAs an example, when `V = ModuleCat R`, this is an `R`-linear representation of `G`,\nwhile when `V = Type` this is a `G`-action.\n"}]}