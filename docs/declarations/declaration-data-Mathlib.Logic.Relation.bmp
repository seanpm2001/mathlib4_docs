{"name":"Mathlib.Logic.Relation","instances":[{"typeNames":["Relation.ReflGen"],"name":"Relation.ReflGen.instIsReflReflGen","className":"IsRefl"},{"typeNames":["Relation.TransGen","Relation.ReflTransGen","Relation.TransGen"],"name":"Relation.TransGen.instTransTransGenReflTransGen","className":"Trans"},{"typeNames":["Relation.TransGen","Relation.TransGen","Relation.TransGen"],"name":"Relation.TransGen.instTransTransGen","className":"Trans"},{"typeNames":["Relation.ReflTransGen","Relation.TransGen","Relation.TransGen"],"name":"Relation.TransGen.instTransReflTransGenTransGen","className":"Trans"},{"typeNames":["Relation.TransGen"],"name":"Relation.instIsTransTransGen","className":"IsTrans"},{"typeNames":["Relation.ReflTransGen"],"name":"Relation.instIsReflReflTransGen","className":"IsRefl"},{"typeNames":["Relation.ReflTransGen"],"name":"Relation.instIsTransReflTransGen","className":"IsTrans"}],"imports":["Init","Mathlib.Logic.Relator","Mathlib.Init.Propext","Mathlib.Init.Data.Quot","Mathlib.Tactic.Common"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L691-L697","name":"EqvGen.mono","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#EqvGen.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L687-L688","name":"Equivalence.eqvGen_eq","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Equivalence.eqvGen_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L675-L684","name":"Equivalence.eqvGen_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Equivalence.eqvGen_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L662-L664","name":"Relation.reflTransGen_of_equivalence","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_of_equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L655-L659","name":"Relation.reflTransGen_of_transitive_reflexive","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_of_transitive_reflexive","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L650-L652","name":"Relation.join_of_equivalence","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.join_of_equivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L644-L647","name":"Relation.equivalence_join_reflTransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.equivalence_join_reflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L639-L641","name":"Relation.equivalence_join","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.equivalence_join","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L632-L636","name":"Relation.transitive_join","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transitive_join","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L629-L629","name":"Relation.reflexive_join","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflexive_join","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L626-L626","name":"Relation.symmetric_join","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.symmetric_join","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L622-L623","name":"Relation.join_of_single","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.join_of_single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L599-L618","name":"Relation.church_rosser","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.church_rosser","doc":"A sufficient condition for the Church-Rosser property. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L591-L591","name":"Relation.Join","kind":"def","docLink":"./Mathlib/Logic/Relation.html#Relation.Join","doc":"The join of a relation on a single type is a new relation for which\npairs of terms are related if there is a third term they are both\nrelated to.  For example, if `r` is a relation representing rewrites\nin a term rewriting system, then *confluence* is the property that if\n`a` rewrites to both `b` and `c`, then `join r` relates `b` and `c`\n(see `Relation.church_rosser`).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L578-L579","name":"Relation.reflTransGen_swap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L572-L575","name":"Relation.ReflTransGen.swap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L567-L569","name":"Relation.reflTransGen_closed","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L561-L564","name":"Relation.ReflTransGen.lift'","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.lift'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L557-L558","name":"Relation.refl_trans_gen_idem","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.refl_trans_gen_idem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L554-L555","name":"Relation.instIsTransReflTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.instIsTransReflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L551-L552","name":"Relation.instIsReflReflTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.instIsReflReflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L548-L548","name":"Relation.transitive_reflTransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transitive_reflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L545-L545","name":"Relation.reflexive_reflTransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflexive_reflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L537-L542","name":"Relation.reflTransGen_eq_self","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L532-L534","name":"Relation.ReflTransGen.mono","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L527-L529","name":"Relation.ReflTransGen.lift","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L517-L524","name":"Relation.reflTransGen_iff_eq_or_transGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_iff_eq_or_transGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L513-L514","name":"Relation.reflTransGen_iff_eq","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflTransGen_iff_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L503-L504","name":"Relation.transGen_swap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transGen_swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L497-L500","name":"Relation.TransGen.swap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.swap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L492-L494","name":"Relation.TransGen.mono","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L487-L489","name":"Relation.TransGen.closed","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L481-L484","name":"Relation.TransGen.lift'","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.lift'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L474-L478","name":"Relation.TransGen.lift","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.lift","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L470-L471","name":"Relation.transGen_idem","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transGen_idem","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L467-L468","name":"Relation.instIsTransTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.instIsTransTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L464-L464","name":"Relation.transitive_transGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transitive_transGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L456-L461","name":"Relation.transGen_eq_self","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transGen_eq_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L450-L451","name":"WellFounded.transGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#WellFounded.transGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L446-L447","name":"acc_transGen_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#acc_transGen_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L439-L443","name":"Acc.TransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Acc.TransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L428-L434","name":"Relation.TransGen.head'_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.head'_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L421-L425","name":"Relation.TransGen.tail'_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.tail'_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L418-L419","name":"Relation.TransGen.instTransReflTransGenTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.instTransReflTransGenTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L412-L415","name":"Relation.TransGen.trans_right","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.trans_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L403-L409","name":"Relation.TransGen.trans_induction_on","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.trans_induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L390-L399","name":"Relation.TransGen.head_induction_on","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.head_induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L385-L386","name":"Relation.TransGen.head","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L379-L382","name":"Relation.TransGen.tail'","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.tail'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L375-L376","name":"Relation.TransGen.head'","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.head'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L372-L373","name":"Relation.TransGen.instTransTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.instTransTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L368-L369","name":"Relation.TransGen.trans","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L364-L365","name":"Relation.TransGen.instTransTransGenReflTransGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.instTransTransGenReflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L358-L361","name":"Relation.TransGen.trans_left","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.trans_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L351-L354","name":"Relation.TransGen.to_reflTransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.to_reflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L335-L344","name":"Relation.ReflTransGen.total_of_right_unique","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.total_of_right_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L328-L332","name":"Relation.ReflTransGen.cases_head_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.cases_head_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L320-L325","name":"Relation.ReflTransGen.cases_head","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.cases_head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L311-L317","name":"Relation.ReflTransGen.trans_induction_on","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.trans_induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L298-L307","name":"Relation.ReflTransGen.head_induction_on","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.head_induction_on","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L293-L294","name":"Relation.ReflTransGen.cases_tail","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.cases_tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L286-L290","name":"Relation.ReflTransGen.symmetric","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.symmetric","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L280-L283","name":"Relation.ReflTransGen.head","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L276-L277","name":"Relation.ReflTransGen.single","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L270-L273","name":"Relation.ReflTransGen.trans","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.trans","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L262-L263","name":"Relation.ReflGen.instIsReflReflGen","kind":"instance","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen.instIsReflReflGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L257-L259","name":"Relation.ReflGen.mono","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen.mono","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L252-L254","name":"Relation.ReflGen.to_reflTransGen","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen.to_reflTransGen","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L243-L243","name":"Relation.TransGen.tail","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L242-L242","name":"Relation.TransGen.single","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen.single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L241-L243","name":"Relation.TransGen","kind":"inductive","docLink":"./Mathlib/Logic/Relation.html#Relation.TransGen","doc":"`TransGen r`: transitive closure of `r` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L240-L240","name":"Relation.transGen_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.transGen_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L234-L234","name":"Relation.ReflGen.single","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen.single","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L233-L233","name":"Relation.ReflGen.refl","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L232-L234","name":"Relation.ReflGen","kind":"inductive","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflGen","doc":"`ReflGen r`: reflexive closure of `r` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L231-L231","name":"Relation.reflGen_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.reflGen_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L224-L224","name":"Relation.ReflTransGen.tail","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.tail","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L223-L223","name":"Relation.ReflTransGen.refl","kind":"ctor","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L222-L224","name":"Relation.ReflTransGen","kind":"inductive","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen","doc":"`ReflTransGen r`: reflexive transitive closure of `r` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L221-L221","name":"Relation.ReflTransGen.cases_tail_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.ReflTransGen.cases_tail_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L214-L215","name":"Relation.Map","kind":"def","docLink":"./Mathlib/Logic/Relation.html#Relation.Map","doc":"The map of a relation `r` through a pair of functions pushes the\nrelation to the codomains of the functions.  The resulting relation is\ndefined by having pairs of terms related if they have preimages\nrelated by `r`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L199-L204","name":"Acc.of_downward_closed","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Acc.of_downward_closed","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L192-L196","name":"Acc.of_fibration","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Acc.of_fibration","doc":"If `f : α → β` is a fibration between relations `rα` and `rβ`, and `a : α` is\naccessible under `rα`, then `f a` is accessible under `rβ`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L184-L185","name":"Relation.Fibration","kind":"def","docLink":"./Mathlib/Logic/Relation.html#Relation.Fibration","doc":"A function `f : α → β` is a fibration between the relation `rα` and `rβ` if for all\n`a : α` and `b : β`, whenever `b : β` and `f a` are related by `rβ`, `b` is the image\nof some `a' : α` under `f`, and `a'` and `a` are related by `rα`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L167-L172","name":"Relation.flip_comp","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.flip_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L159-L164","name":"Relation.comp_assoc","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.comp_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L154-L156","name":"Relation.comp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.comp_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L149-L151","name":"Relation.iff_comp","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.iff_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L144-L146","name":"Relation.eq_comp","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.eq_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L139-L141","name":"Relation.comp_eq","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Relation.comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L132-L133","name":"Relation.Comp","kind":"def","docLink":"./Mathlib/Logic/Relation.html#Relation.Comp","doc":"The composition of two relations, yielding a new relation.  The result\nrelates a term of `α` and a term of `γ` if there is an intermediate\nterm of `β` related to both.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L116-L117","name":"Equivalence.comap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Equivalence.comap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L112-L113","name":"Transitive.comap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Transitive.comap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L109-L109","name":"Symmetric.comap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Symmetric.comap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L106-L106","name":"Reflexive.comap","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Reflexive.comap","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L96-L97","name":"swap_eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#swap_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L92-L93","name":"flip_eq_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#flip_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L88-L89","name":"Symmetric.swap_eq","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Symmetric.swap_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L84-L85","name":"Symmetric.flip_eq","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Symmetric.flip_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L80-L81","name":"Symmetric.iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Symmetric.iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L76-L77","name":"reflexive_ne_imp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#reflexive_ne_imp_iff","doc":"If a reflexive relation `r : α → α → Prop` holds over `x y : α`,\nthen it holds whether or not `x ≠ y`. Unlike `Reflexive.ne_imp_iff`, this uses `[IsRefl α r]`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L70-L71","name":"Reflexive.ne_imp_iff","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Reflexive.ne_imp_iff","doc":"If a reflexive relation `r : α → α → Prop` holds over `x y : α`,\nthen it holds whether or not `x ≠ y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L61-L64","name":"Reflexive.rel_of_ne_imp","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#Reflexive.rel_of_ne_imp","doc":"To show a reflexive relation `r : α → α → Prop` holds over `x y : α`,\nit suffices to show it holds when `x ≠ y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Logic/Relation.lean#L56-L56","name":"IsRefl.reflexive","kind":"theorem","docLink":"./Mathlib/Logic/Relation.html#IsRefl.reflexive","doc":""}]}