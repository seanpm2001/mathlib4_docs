{"name":"Mathlib.CategoryTheory.Skeletal","instances":[{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.instInhabitedSkeleton","className":"Inhabited"},{"typeNames":["CategoryTheory.Skeleton"],"name":"CategoryTheory.instCategorySkeleton","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Skeleton","CategoryTheory.instCategorySkeleton","CategoryTheory.fromSkeleton"],"name":"CategoryTheory.instFullSkeletonInstCategorySkeletonFromSkeleton","className":"CategoryTheory.Full"},{"typeNames":["CategoryTheory.Skeleton","CategoryTheory.instCategorySkeleton","CategoryTheory.fromSkeleton"],"name":"CategoryTheory.instFaithfulSkeletonInstCategorySkeletonFromSkeleton","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.Skeleton","CategoryTheory.instCategorySkeleton","CategoryTheory.fromSkeleton"],"name":"CategoryTheory.instEssSurjSkeletonInstCategorySkeletonFromSkeleton","className":"CategoryTheory.EssSurj"},{"typeNames":["CategoryTheory.Skeleton","CategoryTheory.instCategorySkeleton","CategoryTheory.fromSkeleton"],"name":"CategoryTheory.fromSkeleton.isEquivalence","className":"CategoryTheory.IsEquivalence"},{"typeNames":["CategoryTheory.ThinSkeleton"],"name":"CategoryTheory.inhabitedThinSkeleton","className":"Inhabited"},{"typeNames":["CategoryTheory.ThinSkeleton"],"name":"CategoryTheory.ThinSkeleton.preorder","className":"Preorder"},{"typeNames":["Quiver.Hom","CategoryTheory.ThinSkeleton","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","Preorder.smallCategory","CategoryTheory.ThinSkeleton.preorder"],"name":"CategoryTheory.ThinSkeleton.thin","className":"Subsingleton"},{"typeNames":["CategoryTheory.ThinSkeleton","Preorder.smallCategory","CategoryTheory.ThinSkeleton","CategoryTheory.ThinSkeleton.preorder","CategoryTheory.toThinSkeleton"],"name":"CategoryTheory.ThinSkeleton.toThinSkeleton_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.ThinSkeleton","Preorder.smallCategory","CategoryTheory.ThinSkeleton","CategoryTheory.ThinSkeleton.preorder","CategoryTheory.ThinSkeleton.fromThinSkeleton"],"name":"CategoryTheory.ThinSkeleton.fromThinSkeletonEquivalence","className":"CategoryTheory.IsEquivalence"},{"typeNames":["CategoryTheory.ThinSkeleton"],"name":"CategoryTheory.ThinSkeleton.thinSkeletonPartialOrder","className":"PartialOrder"},{"typeNames":["CategoryTheory.IsSkeletonOf","CategoryTheory.ThinSkeleton","Preorder.smallCategory","CategoryTheory.ThinSkeleton.preorder","CategoryTheory.ThinSkeleton.fromThinSkeleton"],"name":"CategoryTheory.ThinSkeleton.isSkeletonOfInhabited","className":"Inhabited"}],"imports":["Init","Mathlib.CategoryTheory.Adjunction.Basic","Mathlib.CategoryTheory.Category.Preorder","Mathlib.CategoryTheory.IsomorphismClasses","Mathlib.CategoryTheory.Thin"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L365-L367","name":"CategoryTheory.Equivalence.thinSkeletonOrderIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Equivalence.thinSkeletonOrderIso","doc":"When `e : C ≌ α` is a categorical equivalence from a thin category `C` to some partial order `α`,\nthe `ThinSkeleton C` is order isomorphic to `α`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L338-L350","name":"CategoryTheory.ThinSkeleton.lowerAdjunction","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.lowerAdjunction","doc":"An adjunction between thin categories gives an adjunction between their thin skeletons. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L328-L330","name":"CategoryTheory.ThinSkeleton.isSkeletonOfInhabited","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.isSkeletonOfInhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L322-L325","name":"CategoryTheory.ThinSkeleton.thinSkeletonIsSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.thinSkeletonIsSkeleton","doc":"`fromThinSkeleton C` exhibits the thin skeleton as a skeleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L315-L318","name":"CategoryTheory.ThinSkeleton.map_iso_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map_iso_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L310-L312","name":"CategoryTheory.ThinSkeleton.map_id_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map_id_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L305-L307","name":"CategoryTheory.ThinSkeleton.map_comp_eq","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map_comp_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L301-L302","name":"CategoryTheory.ThinSkeleton.skeletal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.skeletal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L292-L298","name":"CategoryTheory.ThinSkeleton.thinSkeletonPartialOrder","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.thinSkeletonPartialOrder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L288-L289","name":"CategoryTheory.ThinSkeleton.equiv_of_both_ways","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.equiv_of_both_ways","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L282-L283","name":"CategoryTheory.ThinSkeleton.equivalence","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.equivalence","doc":"The equivalence between the thin skeleton and the category itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L274-L278","name":"CategoryTheory.ThinSkeleton.fromThinSkeletonEquivalence","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.fromThinSkeletonEquivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L267-L271","name":"CategoryTheory.ThinSkeleton.fromThinSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.fromThinSkeleton","doc":"Use `Quotient.out` to create a functor out of the thin skeleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L266-L266","name":"CategoryTheory.ThinSkeleton.fromThinSkeleton_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.fromThinSkeleton_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L266-L266","name":"CategoryTheory.ThinSkeleton.fromThinSkeleton_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.fromThinSkeleton_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L262-L262","name":"CategoryTheory.ThinSkeleton.toThinSkeleton_faithful","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.toThinSkeleton_faithful","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L251-L253","name":"CategoryTheory.ThinSkeleton.map₂","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂","doc":"A functor `C ⥤ D ⥤ E` computably lowers to a functor\n`ThinSkeleton C ⥤ ThinSkeleton D ⥤ ThinSkeleton E` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L250-L250","name":"CategoryTheory.ThinSkeleton.map₂_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L250-L250","name":"CategoryTheory.ThinSkeleton.map₂_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L240-L245","name":"CategoryTheory.ThinSkeleton.map₂NatTrans","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂NatTrans","doc":"This provides natural transformations `map₂Functor F x₁ ⟶  map₂Functor F x₂` given\n`x₁ ⟶  x₂` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L230-L236","name":"CategoryTheory.ThinSkeleton.map₂Functor","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂Functor","doc":"For each `x : ThinSkeleton C`, we promote `map₂ObjMap F x` to a functor "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L223-L227","name":"CategoryTheory.ThinSkeleton.map₂ObjMap","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map₂ObjMap","doc":"Given a bifunctor, we descend to a function on objects of `ThinSkeleton` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L207-L208","name":"CategoryTheory.ThinSkeleton.mapNatTrans","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.mapNatTrans","doc":"Given a natural transformation `F₁ ⟶ F₂`, induce a natural transformation `map F₁ ⟶ map F₂`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L202-L203","name":"CategoryTheory.ThinSkeleton.comp_toThinSkeleton","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.comp_toThinSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L197-L199","name":"CategoryTheory.ThinSkeleton.map","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map","doc":"A functor `C ⥤ D` computably lowers to a functor `ThinSkeleton C ⥤ ThinSkeleton D`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L196-L196","name":"CategoryTheory.ThinSkeleton.map_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L196-L196","name":"CategoryTheory.ThinSkeleton.map_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.map_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L187-L190","name":"CategoryTheory.ThinSkeleton.thin","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.thin","doc":"The thin skeleton is thin. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L173-L175","name":"CategoryTheory.toThinSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.toThinSkeleton","doc":"The functor from a category to its thin skeleton. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L172-L172","name":"CategoryTheory.toThinSkeleton_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.toThinSkeleton_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L172-L172","name":"CategoryTheory.toThinSkeleton_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.toThinSkeleton_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L154-L168","name":"CategoryTheory.ThinSkeleton.preorder","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton.preorder","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L150-L151","name":"CategoryTheory.inhabitedThinSkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.inhabitedThinSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L146-L147","name":"CategoryTheory.ThinSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.ThinSkeleton","doc":"Construct the skeleton category by taking the quotient of objects. This construction gives a\npreorder with nice definitional properties, but is only really appropriate for thin categories.\nIf your original category is not thin, you probably want to be using `skeleton` instead of this.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L132-L137","name":"CategoryTheory.Equivalence.skeletonEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Equivalence.skeletonEquiv","doc":"Two categories which are categorically equivalent have skeletons with equivalent objects.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L121-L123","name":"CategoryTheory.skeletonIsSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.skeletonIsSkeleton","doc":"The `skeleton` of `C` given by choice is a skeleton of `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L114-L117","name":"CategoryTheory.skeleton_skeletal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.skeleton_skeletal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L110-L111","name":"CategoryTheory.skeletonEquivalence","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.skeletonEquivalence","doc":"The equivalence between the skeleton and the category itself. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L106-L107","name":"CategoryTheory.fromSkeleton.isEquivalence","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.fromSkeleton.isEquivalence","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L103-L103","name":"CategoryTheory.instEssSurjSkeletonInstCategorySkeletonFromSkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.instEssSurjSkeletonInstCategorySkeletonFromSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L100-L101","name":"CategoryTheory.instFaithfulSkeletonInstCategorySkeletonFromSkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.instFaithfulSkeletonInstCategorySkeletonFromSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L98-L99","name":"CategoryTheory.instFullSkeletonInstCategorySkeletonFromSkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.instFullSkeletonInstCategorySkeletonFromSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L93-L94","name":"CategoryTheory.fromSkeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.fromSkeleton","doc":"The functor from the skeleton of `C` to `C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L92-L92","name":"CategoryTheory.fromSkeleton_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.fromSkeleton_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L92-L92","name":"CategoryTheory.fromSkeleton_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.fromSkeleton_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L88-L89","name":"CategoryTheory.instCategorySkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.instCategorySkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L84-L85","name":"CategoryTheory.instInhabitedSkeleton","kind":"instance","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.instInhabitedSkeleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L81-L81","name":"CategoryTheory.Skeleton","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeleton","doc":"Construct the skeleton category as the induced category on the isomorphism classes, and derive\nits category structure.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L72-L73","name":"CategoryTheory.functor_skeletal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.functor_skeletal","doc":"If `C` is thin and skeletal, `D ⥤ C` is skeletal.\n`CategoryTheory.functor_thin` shows it is thin also.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L64-L66","name":"CategoryTheory.Functor.eq_of_iso","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Functor.eq_of_iso","doc":"If `C` is thin and skeletal, then any naturally isomorphic functors to `C` are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L56-L56","name":"CategoryTheory.IsSkeletonOf.eqv","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.IsSkeletonOf.eqv","doc":"The functor `F` is an equivalence "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L54-L54","name":"CategoryTheory.IsSkeletonOf.skel","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.IsSkeletonOf.skel","doc":"The category `D` has isomorphic objects equal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L52-L52","name":"CategoryTheory.IsSkeletonOf.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.IsSkeletonOf.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L52-L56","name":"CategoryTheory.IsSkeletonOf","kind":"structure","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.IsSkeletonOf","doc":"`IsSkeletonOf C D F` says that `F : D ⥤ C` exhibits `D` as a skeletal full subcategory of `C`,\nin particular `F` is a (strong) equivalence and `D` is skeletal.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Skeletal.lean#L45-L46","name":"CategoryTheory.Skeletal","kind":"def","docLink":"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeletal","doc":"A category is skeletal if isomorphic objects are equal. "}]}