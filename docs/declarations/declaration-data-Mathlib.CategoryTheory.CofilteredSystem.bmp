{"name":"Mathlib.CategoryTheory.CofilteredSystem","instances":[{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.toPreimages"],"name":"CategoryTheory.Functor.toPreimages_finite","className":"Finite"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","_builtin_typeu","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.types","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.toEventualRanges"],"name":"CategoryTheory.Functor.toEventualRanges_finite","className":"Finite"}],"imports":["Init","Mathlib.CategoryTheory.Filtered","Mathlib.Data.Set.Finite","Mathlib.Topology.Category.TopCat.Limits.Konig"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L365-L376","name":"CategoryTheory.Functor.eventually_injective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eventually_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L353-L362","name":"CategoryTheory.Functor.eval_section_surjective_of_surjective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eval_section_surjective_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L337-L345","name":"CategoryTheory.Functor.eval_section_injective_of_eventually_injective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eval_section_injective_of_eventually_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L326-L334","name":"CategoryTheory.Functor.toPreimages_nonempty_of_surjective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toPreimages_nonempty_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L320-L323","name":"CategoryTheory.Functor.thin_diagram_of_surjective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.thin_diagram_of_surjective","doc":"If `F` has all arrows surjective, then it \"factors through a poset\". "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L312-L316","name":"CategoryTheory.Functor.toEventualRanges_nonempty","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRanges_nonempty","doc":"If `F` is nonempty at each index and Mittag-Leffler, then so is `F.toEventualRanges`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L305-L308","name":"CategoryTheory.Functor.surjective_toEventualRanges","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.surjective_toEventualRanges","doc":"If `F` satisfies the Mittag-Leffler condition, its restriction to eventual ranges is a\nsurjective functor. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L291-L300","name":"CategoryTheory.Functor.toEventualRangesSectionsEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRangesSectionsEquiv","doc":"The sections of the functor `F : J ⥤ Type v` are in bijection with the sections of\n`F.toEventualRanges`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L285-L286","name":"CategoryTheory.Functor.toEventualRanges_finite","kind":"instance","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRanges_finite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L273-L282","name":"CategoryTheory.Functor.toEventualRanges","kind":"def","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRanges","doc":"The subfunctor of `F` obtained by restricting to the eventual range at each index. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L272-L272","name":"CategoryTheory.Functor.toEventualRanges_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRanges_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L272-L272","name":"CategoryTheory.Functor.toEventualRanges_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toEventualRanges_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L256-L268","name":"CategoryTheory.Functor.isMittagLeffler_of_exists_finite_range","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.isMittagLeffler_of_exists_finite_range","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L235-L253","name":"CategoryTheory.Functor.IsMittagLeffler.toPreimages","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.IsMittagLeffler.toPreimages","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L230-L232","name":"CategoryTheory.Functor.isMittagLeffler_iff_subset_range_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.isMittagLeffler_iff_subset_range_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L219-L227","name":"CategoryTheory.Functor.eventualRange_eq_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eventualRange_eq_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L214-L216","name":"CategoryTheory.Functor.IsMittagLeffler.eq_image_eventualRange","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.IsMittagLeffler.eq_image_eventualRange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L204-L211","name":"CategoryTheory.Functor.eventualRange_mapsTo","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eventualRange_mapsTo","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L198-L199","name":"CategoryTheory.Functor.toPreimages_finite","kind":"instance","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toPreimages_finite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L182-L195","name":"CategoryTheory.Functor.toPreimages","kind":"def","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toPreimages","doc":"The subfunctor of `F` obtained by restricting to the preimages of a set `s ∈ F.obj i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L181-L181","name":"CategoryTheory.Functor.toPreimages_map","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toPreimages_map","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L181-L181","name":"CategoryTheory.Functor.toPreimages_obj","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.toPreimages_obj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L175-L177","name":"CategoryTheory.Functor.isMittagLeffler_of_surjective","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.isMittagLeffler_of_surjective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L167-L172","name":"CategoryTheory.Functor.eventualRange_eq_range_precomp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eventualRange_eq_range_precomp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L159-L164","name":"CategoryTheory.Functor.IsMittagLeffler.subset_image_eventualRange","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.IsMittagLeffler.subset_image_eventualRange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L152-L156","name":"CategoryTheory.Functor.isMittagLeffler_iff_eventualRange","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.isMittagLeffler_iff_eventualRange","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L148-L149","name":"CategoryTheory.Functor.IsMittagLeffler","kind":"def","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.IsMittagLeffler","doc":"The functor `F : J ⥤ Type v` satisfies the Mittag-Leffler condition if for all `j : J`,\nthere exists some `i : J` and `f : i ⟶ j` such that for all `k : J` and `g : k ⟶ j`, the range\nof `F.map f` is contained in that of `F.map g`;\nin other words (see `isMittagLeffler_iff_eventualRange`), the eventual range at `j` is attained\nby some `f : i ⟶ j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L138-L140","name":"CategoryTheory.Functor.mem_eventualRange_iff","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.mem_eventualRange_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L134-L135","name":"CategoryTheory.Functor.eventualRange","kind":"def","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#CategoryTheory.Functor.eventualRange","doc":"The eventual range of the functor `F : J ⥤ Type v` at index `j : J` is the intersection\nof the ranges of all maps `F.map f` with `i : J` and `f : i ⟶ j`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L115-L121","name":"nonempty_sections_of_finite_inverse_system","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#nonempty_sections_of_finite_inverse_system","doc":"The inverse limit of nonempty finite types is nonempty.\n\nSee `nonempty_sections_of_finite_cofiltered_system` for a generalization to cofiltered limits.\nThat version applies in almost all cases, and the only difference is that this version\nallows `J` to be empty.\n\nThis may be regarded as a generalization of Kőnig's lemma.\nTo specialize: given a locally finite connected graph, take `Jᵒᵖ` to be `ℕ` and\n`F j` to be length-`j` paths that start from an arbitrary fixed vertex.\nElements of `F.sections` can be read off as infinite rays in the graph. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L83-L102","name":"nonempty_sections_of_finite_cofiltered_system","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#nonempty_sections_of_finite_cofiltered_system","doc":"The cofiltered limit of nonempty finite types is nonempty.\n\nSee `nonempty_sections_of_finite_inverse_system` for a specialization to inverse limits. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/CofilteredSystem.lean#L69-L77","name":"nonempty_sections_of_finite_cofiltered_system.init","kind":"theorem","docLink":"./Mathlib/CategoryTheory/CofilteredSystem.html#nonempty_sections_of_finite_cofiltered_system.init","doc":"This bootstraps `nonempty_sections_of_finite_inverse_system`. In this version,\nthe `F` functor is between categories of the same universe, and it is an easy\ncorollary to `TopCat.nonempty_limitCone_of_compact_t2_cofiltered_system`. "}]}