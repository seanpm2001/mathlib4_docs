{"name":"Mathlib.CategoryTheory.Limits.Shapes.Terminal","instances":[{"typeNames":["Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.uniqueToTerminal","className":"Unique"},{"typeNames":["Quiver.Hom","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.uniqueFromInitial","className":"Unique"},{"typeNames":["CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.terminal.isSplitMono_from","className":"CategoryTheory.IsSplitMono"},{"typeNames":["CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.initial.isSplitEpi_to","className":"CategoryTheory.IsSplitEpi"},{"typeNames":["Opposite","CategoryTheory.Category.opposite"],"name":"CategoryTheory.Limits.hasInitial_op_of_hasTerminal","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["Opposite","CategoryTheory.Category.opposite"],"name":"CategoryTheory.Limits.hasTerminal_op_of_hasInitial","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.category","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.const","CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.instHasLimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstTerminal","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.category","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Functor.const","CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.instHasColimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstInitial","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.initial.mono_from","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.Limits.limit","Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.initial","CategoryTheory.Limits.limit.π","CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.isIso_π_initial","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Limits.limit","Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.terminal","CategoryTheory.Limits.limit.π","CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.isIso_π_terminal","className":"CategoryTheory.IsIso"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.terminal","CategoryTheory.Limits.colimit","CategoryTheory.Limits.colimit.ι","CategoryTheory.Limits.terminal"],"name":"CategoryTheory.Limits.isIso_ι_terminal","className":"CategoryTheory.IsIso"},{"typeNames":["Prefunctor.obj","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.Functor.toPrefunctor","CategoryTheory.Limits.initial","CategoryTheory.Limits.colimit","CategoryTheory.Limits.colimit.ι","CategoryTheory.Limits.initial"],"name":"CategoryTheory.Limits.isIso_ι_initial","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.PEmpty","Mathlib.CategoryTheory.Limits.HasLimits","Mathlib.CategoryTheory.EpiMono","Mathlib.CategoryTheory.Category.Preorder"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L748-L750","name":"CategoryTheory.Limits.isIso_ι_initial","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_ι_initial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L737-L745","name":"CategoryTheory.Limits.isIso_ι_of_isInitial","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_ι_of_isInitial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L733-L734","name":"CategoryTheory.Limits.isIso_ι_terminal","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_ι_terminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L728-L730","name":"CategoryTheory.Limits.isIso_ι_of_isTerminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_ι_of_isTerminal","doc":"If `j` is terminal in the index category, then the map `colimit.ι F j` is an isomorphism.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L721-L723","name":"CategoryTheory.Limits.isIso_π_terminal","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_π_terminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L716-L718","name":"CategoryTheory.Limits.isIso_π_of_isTerminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_π_of_isTerminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L712-L713","name":"CategoryTheory.Limits.isIso_π_initial","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_π_initial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L707-L709","name":"CategoryTheory.Limits.isIso_π_of_isInitial","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isIso_π_of_isInitial","doc":"If `j` is initial in the index category, then the map `limit.π F j` is an isomorphism.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L699-L702","name":"CategoryTheory.Limits.colimitOfInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitOfInitial","doc":"For a functor `F : J ⥤ C`, if `J` has an initial object and all the morphisms in the diagram\nare isomorphisms, then the image of the initial object is isomorphic to the colimit of `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L690-L692","name":"CategoryTheory.Limits.colimitOfDiagramInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitOfDiagramInitial","doc":"From a functor `F : J ⥤ C`, given an initial object of `J` and that the morphisms in the\ndiagram are isomorphisms, show the cone `coconeOfDiagramInitial` is a colimit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L676-L685","name":"CategoryTheory.Limits.coconeOfDiagramInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramInitial","doc":"From a functor `F : J ⥤ C`, given an initial object of `J`, construct a cocone for `J`,\nprovided that the morphisms in the diagram are isomorphisms.\nIn `colimitOfDiagramInitial` we show it is a colimit cocone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L675-L675","name":"CategoryTheory.Limits.coconeOfDiagramInitial_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramInitial_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L675-L675","name":"CategoryTheory.Limits.coconeOfDiagramInitial_ι_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramInitial_ι_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L667-L669","name":"CategoryTheory.Limits.colimitOfTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitOfTerminal","doc":"For a functor `F : J ⥤ C`, if `J` has a terminal object then the image of it is isomorphic\nto the colimit of `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L654-L660","name":"CategoryTheory.Limits.colimitOfDiagramTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitOfDiagramTerminal","doc":"From a functor `F : J ⥤ C`, given a terminal object of `J`, show the cocone\n`coconeOfDiagramTerminal` is a colimit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L643-L649","name":"CategoryTheory.Limits.coconeOfDiagramTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramTerminal","doc":"From a functor `F : J ⥤ C`, given a terminal object of `J`, construct a cocone for `J`.\nIn `colimitOfDiagramTerminal` we show it is a colimit cocone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L642-L642","name":"CategoryTheory.Limits.coconeOfDiagramTerminal_ι_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramTerminal_ι_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L642-L642","name":"CategoryTheory.Limits.coconeOfDiagramTerminal_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coconeOfDiagramTerminal_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L635-L637","name":"CategoryTheory.Limits.limitOfTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitOfTerminal","doc":"For a functor `F : J ⥤ C`, if `J` has a terminal object and all the morphisms in the diagram\nare isomorphisms, then the image of the terminal object is isomorphic to the limit of `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L626-L628","name":"CategoryTheory.Limits.limitOfDiagramTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitOfDiagramTerminal","doc":"From a functor `F : J ⥤ C`, given a terminal object of `J` and that the morphisms in the\ndiagram are isomorphisms, show the cone `coneOfDiagramTerminal` is a limit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L612-L621","name":"CategoryTheory.Limits.coneOfDiagramTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramTerminal","doc":"From a functor `F : J ⥤ C`, given a terminal object of `J`, construct a cone for `J`,\nprovided that the morphisms in the diagram are isomorphisms.\nIn `limitOfDiagramTerminal` we show it is a limit cone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L611-L611","name":"CategoryTheory.Limits.coneOfDiagramTerminal_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramTerminal_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L611-L611","name":"CategoryTheory.Limits.coneOfDiagramTerminal_π_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramTerminal_π_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L604-L605","name":"CategoryTheory.Limits.limitOfInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitOfInitial","doc":"For a functor `F : J ⥤ C`, if `J` has an initial object then the image of it is isomorphic\nto the limit of `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L590-L596","name":"CategoryTheory.Limits.limitOfDiagramInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitOfDiagramInitial","doc":"From a functor `F : J ⥤ C`, given an initial object of `J`, show the cone\n`coneOfDiagramInitial` is a limit. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L579-L585","name":"CategoryTheory.Limits.coneOfDiagramInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramInitial","doc":"From a functor `F : J ⥤ C`, given an initial object of `J`, construct a cone for `J`.\nIn `limitOfDiagramInitial` we show it is a limit cone. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L578-L578","name":"CategoryTheory.Limits.coneOfDiagramInitial_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramInitial_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L578-L578","name":"CategoryTheory.Limits.coneOfDiagramInitial_π_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.coneOfDiagramInitial_π_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L568-L569","name":"CategoryTheory.Limits.initialComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initialComparison","doc":"The comparison morphism from the initial object in the target category to the image of the initial\nobject.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L559-L560","name":"CategoryTheory.Limits.terminalComparison","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminalComparison","doc":"The comparison morphism from the image of a terminal object to the terminal object in the target\ncategory.\nThis is an isomorphism iff `G` preserves terminal objects, see\n`CategoryTheory.Limits.PreservesTerminal.ofIsoComparison`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L545-L547","name":"CategoryTheory.Limits.InitialMonoClass.of_terminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.of_terminal","doc":"To show a category is an `InitialMonoClass` it suffices to show the unique morphism from the\ninitial object to a terminal object is a monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L538-L540","name":"CategoryTheory.Limits.InitialMonoClass.of_isTerminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.of_isTerminal","doc":"To show a category is an `InitialMonoClass` it suffices to show the unique morphism from an\ninitial object to a terminal object is a monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L531-L533","name":"CategoryTheory.Limits.InitialMonoClass.of_initial","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.of_initial","doc":"To show a category is an `InitialMonoClass` it suffices to show every morphism out of the\ninitial object is a monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L521-L526","name":"CategoryTheory.Limits.InitialMonoClass.of_isInitial","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.of_isInitial","doc":"To show a category is an `InitialMonoClass` it suffices to give an initial object such that\nevery morphism out of it is a monomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L514-L516","name":"CategoryTheory.Limits.initial.mono_from","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initial.mono_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L508-L511","name":"CategoryTheory.Limits.IsInitial.mono_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.mono_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L505-L505","name":"CategoryTheory.Limits.InitialMonoClass.isInitial_mono_from","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.isInitial_mono_from","doc":"The map from the (any as stated) initial object to any other object is a\nmonomorphism "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L502-L502","name":"CategoryTheory.Limits.InitialMonoClass.mk","kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L502-L505","name":"CategoryTheory.Limits.InitialMonoClass","kind":"class","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.InitialMonoClass","doc":"A category is an `InitialMonoClass` if the canonical morphism of an initial object is a\nmonomorphism.  In practice, this is most useful when given an arbitrary morphism out of the chosen\ninitial object, see `initial.mono_from`.\nGiven a terminal object, this is equivalent to the assumption that the unique morphism from initial\nto terminal is a monomorphism, which is the second of Freyd's axioms for an AT category.\n\nTODO: This is a condition satisfied by categories with zero objects and morphisms.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L488-L491","name":"CategoryTheory.Limits.ι_colimitConstInitial_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.ι_colimitConstInitial_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L487-L487","name":"CategoryTheory.Limits.ι_colimitConstInitial_hom_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.ι_colimitConstInitial_hom_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L478-L484","name":"CategoryTheory.Limits.colimitConstInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitConstInitial","doc":"The colimit of the constant `⊥_ C` functor is `⊥_ C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L477-L477","name":"CategoryTheory.Limits.colimitConstInitial_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.colimitConstInitial_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L468-L474","name":"CategoryTheory.Limits.instHasColimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstInitial","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.instHasColimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstInitial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L462-L465","name":"CategoryTheory.Limits.limitConstTerminal_inv_π","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitConstTerminal_inv_π","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L461-L461","name":"CategoryTheory.Limits.limitConstTerminal_inv_π_assoc","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitConstTerminal_inv_π_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L452-L458","name":"CategoryTheory.Limits.limitConstTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitConstTerminal","doc":"The limit of the constant `⊤_ C` functor is `⊤_ C`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L451-L451","name":"CategoryTheory.Limits.limitConstTerminal_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.limitConstTerminal_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L442-L448","name":"CategoryTheory.Limits.instHasLimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstTerminal","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.instHasLimitObjToQuiverToCategoryStructFunctorToQuiverToCategoryStructCategoryToPrefunctorConstTerminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L438-L439","name":"CategoryTheory.Limits.hasInitial_of_hasTerminal_op","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasInitial_of_hasTerminal_op","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L434-L435","name":"CategoryTheory.Limits.hasTerminal_of_hasInitial_op","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminal_of_hasInitial_op","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L430-L431","name":"CategoryTheory.Limits.hasTerminal_op_of_hasInitial","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminal_op_of_hasInitial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L426-L427","name":"CategoryTheory.Limits.hasInitial_op_of_hasTerminal","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasInitial_op_of_hasTerminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L421-L423","name":"CategoryTheory.Limits.initialUnopOfTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initialUnopOfTerminal","doc":"A terminal object in the opposite category is initial in the original category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L415-L417","name":"CategoryTheory.Limits.initialOpOfTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initialOpOfTerminal","doc":"A terminal object is initial in the opposite category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L409-L411","name":"CategoryTheory.Limits.terminalUnopOfInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminalUnopOfInitial","doc":"An initial object in the opposite category is terminal in the original category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L403-L405","name":"CategoryTheory.Limits.terminalOpOfInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminalOpOfInitial","doc":"An initial object is terminal in the opposite category. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L398-L399","name":"CategoryTheory.Limits.initial.isSplitEpi_to","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initial.isSplitEpi_to","doc":"Any morphism to an initial object is split epi. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L393-L394","name":"CategoryTheory.Limits.terminal.isSplitMono_from","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.isSplitMono_from","doc":"Any morphism from a terminal object is split mono. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L388-L389","name":"CategoryTheory.Limits.terminalIsoIsTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminalIsoIsTerminal","doc":"The (unique) isomorphism between the chosen terminal object and any other terminal object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L382-L383","name":"CategoryTheory.Limits.initialIsoIsInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initialIsoIsInitial","doc":"The (unique) isomorphism between the chosen initial object and any other initial object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L376-L377","name":"CategoryTheory.Limits.initial.to_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initial.to_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L371-L372","name":"CategoryTheory.Limits.terminal.comp_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.comp_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L366-L367","name":"CategoryTheory.Limits.uniqueFromInitial","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.uniqueFromInitial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L362-L363","name":"CategoryTheory.Limits.uniqueToTerminal","kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.uniqueToTerminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L358-L359","name":"CategoryTheory.Limits.initialIsInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initialIsInitial","doc":"An initial object is initial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L353-L354","name":"CategoryTheory.Limits.terminalIsTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminalIsTerminal","doc":"A terminal object is terminal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L348-L349","name":"CategoryTheory.Limits.initial.to","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initial.to","doc":"The map to an object from the initial object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L343-L344","name":"CategoryTheory.Limits.terminal.from","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from","doc":"The map from an object to the terminal object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L337-L339","name":"CategoryTheory.Limits.IsInitial.hasInitial","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.hasInitial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L333-L334","name":"CategoryTheory.Limits.hasInitial_of_unique","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasInitial_of_unique","doc":"We can more explicitly show that a category has an initial object by specifying the object,\nand showing there is a unique morphism from it to any other object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L326-L328","name":"CategoryTheory.Limits.IsTerminal.hasTerminal","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.hasTerminal","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L322-L323","name":"CategoryTheory.Limits.hasTerminal_of_unique","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminal_of_unique","doc":"We can more explicitly show that a category has a terminal object by specifying the object,\nand showing there is a unique morphism to it from any other object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L313-L314","name":"CategoryTheory.Limits.«term⊥__»","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.«term⊥__»","doc":"Notation for the initial object in `C` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L310-L311","name":"CategoryTheory.Limits.«term⊤__»","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.«term⊤__»","doc":"Notation for the terminal object in `C` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L306-L307","name":"CategoryTheory.Limits.initial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.initial","doc":"An arbitrary choice of initial object, if one exists.\nYou can use the notation `⊥_ C`.\nThis object is characterized by having a unique morphism to any object.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L298-L299","name":"CategoryTheory.Limits.terminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal","doc":"An arbitrary choice of terminal object, if one exists.\nYou can use the notation `⊤_ C`.\nThis object is characterized by having a unique morphism from any object.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L287-L289","name":"CategoryTheory.Limits.hasInitialChangeUniverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasInitialChangeUniverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L282-L284","name":"CategoryTheory.Limits.hasInitialChangeDiagram","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasInitialChangeDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L272-L279","name":"CategoryTheory.Limits.isColimitEmptyCoconeEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isColimitEmptyCoconeEquiv","doc":"Replacing an empty cocone in `IsColimit` by another with the same cocone point\nis an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L260-L267","name":"CategoryTheory.Limits.isColimitChangeEmptyCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isColimitChangeEmptyCocone","doc":"Being initial is independent of the empty diagram, its universe, and the cocone over it,\nas long as the cocone points are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L253-L255","name":"CategoryTheory.Limits.hasTerminalChangeUniverse","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminalChangeUniverse","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L248-L250","name":"CategoryTheory.Limits.hasTerminalChangeDiagram","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.hasTerminalChangeDiagram","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L238-L245","name":"CategoryTheory.Limits.isLimitEmptyConeEquiv","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isLimitEmptyConeEquiv","doc":"Replacing an empty cone in `IsLimit` by another with the same cone point\nis an equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L226-L233","name":"CategoryTheory.Limits.isLimitChangeEmptyCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isLimitChangeEmptyCone","doc":"Being terminal is independent of the empty diagram, its universe, and the cone over it,\nas long as the cone points are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L216-L217","name":"CategoryTheory.Limits.HasInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.HasInitial","doc":"A category has an initial object if it has a colimit over the empty diagram.\nUse `hasInitial_of_unique` to construct instances.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L209-L210","name":"CategoryTheory.Limits.HasTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.HasTerminal","doc":"A category has a terminal object if it has a limit over the empty diagram.\nUse `hasTerminal_of_unique` to construct instances.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L199-L201","name":"CategoryTheory.Limits.IsInitial.uniqueUpToIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.uniqueUpToIso","doc":"If `I` and `I'` are initial, they are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L198-L198","name":"CategoryTheory.Limits.IsInitial.uniqueUpToIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.uniqueUpToIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L198-L198","name":"CategoryTheory.Limits.IsInitial.uniqueUpToIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.uniqueUpToIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L192-L194","name":"CategoryTheory.Limits.IsTerminal.uniqueUpToIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.uniqueUpToIso","doc":"If `T` and `T'` are terminal, they are isomorphic. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L191-L191","name":"CategoryTheory.Limits.IsTerminal.uniqueUpToIso_inv","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.uniqueUpToIso_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L191-L191","name":"CategoryTheory.Limits.IsTerminal.uniqueUpToIso_hom","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.uniqueUpToIso_hom","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L186-L187","name":"CategoryTheory.Limits.IsInitial.epi_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.epi_to","doc":"Any morphism to an initial object is epi. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L181-L182","name":"CategoryTheory.Limits.IsTerminal.mono_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.mono_from","doc":"Any morphism from a terminal object is mono. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L176-L177","name":"CategoryTheory.Limits.IsInitial.isSplitEpi_to","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.isSplitEpi_to","doc":"Any morphism to an initial object is split epi. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L171-L172","name":"CategoryTheory.Limits.IsTerminal.isSplitMono_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.isSplitMono_from","doc":"Any morphism from a terminal object is split mono. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L166-L167","name":"CategoryTheory.Limits.IsInitial.to_self","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.to_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L161-L162","name":"CategoryTheory.Limits.IsInitial.to_comp","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.to_comp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L156-L157","name":"CategoryTheory.Limits.IsInitial.hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.hom_ext","doc":"Any two morphisms from an initial object are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L151-L152","name":"CategoryTheory.Limits.IsInitial.to","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.to","doc":"Give the morphism from an initial object to any other. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L146-L147","name":"CategoryTheory.Limits.IsTerminal.from_self","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.from_self","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L140-L142","name":"CategoryTheory.Limits.IsTerminal.comp_from","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.comp_from","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L135-L136","name":"CategoryTheory.Limits.IsTerminal.hom_ext","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.hom_ext","doc":"Any two morphisms to a terminal object are equal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L130-L131","name":"CategoryTheory.Limits.IsTerminal.from","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.from","doc":"Give the morphism to a terminal object from any other. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L123-L126","name":"CategoryTheory.Limits.IsInitial.ofIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.ofIso","doc":"Transport a term of type `is_initial` across an isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L118-L119","name":"CategoryTheory.Limits.isInitialBot","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isInitialBot","doc":"If `α` is a preorder with bot, then `⊥` is an initial object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L112-L114","name":"CategoryTheory.Limits.IsInitial.ofUnique","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial.ofUnique","doc":"An object `X` is initial if for every `Y` there is a unique morphism `X ⟶ Y`\n(as an instance). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L96-L107","name":"CategoryTheory.Limits.isInitialEquivUnique","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isInitialEquivUnique","doc":"An object `X` is initial iff for every `Y` there is a unique morphism `X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L89-L92","name":"CategoryTheory.Limits.IsTerminal.ofIso","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.ofIso","doc":"Transport a term of type `IsTerminal` across an isomorphism. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L84-L85","name":"CategoryTheory.Limits.isTerminalTop","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isTerminalTop","doc":"If `α` is a preorder with top, then `⊤` is a terminal object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L78-L80","name":"CategoryTheory.Limits.IsTerminal.ofUnique","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal.ofUnique","doc":"An object `Y` is terminal if for every `X` there is a unique morphism `X ⟶ Y`\n(as an instance). "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L61-L73","name":"CategoryTheory.Limits.isTerminalEquivUnique","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.isTerminalEquivUnique","doc":"An object `Y` is terminal iff for every `X` there is a unique morphism `X ⟶ Y`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L56-L57","name":"CategoryTheory.Limits.IsInitial","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial","doc":"`X` is initial if the cocone it induces on the empty diagram is colimiting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L51-L52","name":"CategoryTheory.Limits.IsTerminal","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal","doc":"`X` is terminal if the cone it induces on the empty diagram is limiting. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L44-L47","name":"CategoryTheory.Limits.asEmptyCocone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCocone","doc":"Construct a cocone for the empty diagram given an object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L43-L43","name":"CategoryTheory.Limits.asEmptyCocone_ι_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCocone_ι_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L43-L43","name":"CategoryTheory.Limits.asEmptyCocone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCocone_pt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L36-L39","name":"CategoryTheory.Limits.asEmptyCone","kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCone","doc":"Construct a cone for the empty diagram given an object. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L35-L35","name":"CategoryTheory.Limits.asEmptyCone_π_app","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCone_π_app","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/CategoryTheory/Limits/Shapes/Terminal.lean#L35-L35","name":"CategoryTheory.Limits.asEmptyCone_pt","kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.asEmptyCone_pt","doc":""}]}