{"name":"Mathlib.AlgebraicTopology.ExtraDegeneracy","instances":[{"typeNames":["SimplicialObject.Augmented.ExtraDegeneracy","_builtin_typeu","CategoryTheory.types","Prefunctor.obj","SimplexCategory","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","SimplexCategory.smallCategory","SSet.Augmented","CategoryTheory.CategoryStruct.toQuiver","CategoryTheory.Category.toCategoryStruct","CategoryTheory.SimplicialObject.instCategoryAugmented","CategoryTheory.Functor.toPrefunctor","SSet.Augmented.standardSimplex"],"name":"SSet.Augmented.StandardSimplex.nonempty_extraDegeneracy_standardSimplex","className":"Nonempty"}],"imports":["Init","Mathlib.AlgebraicTopology.AlternatingFaceMapComplex","Mathlib.AlgebraicTopology.SimplicialSet","Mathlib.AlgebraicTopology.CechNerve","Mathlib.Algebra.Homology.Homotopy","Mathlib.Tactic.FinCases"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L382-L419","name":"SimplicialObject.Augmented.ExtraDegeneracy.homotopyEquiv","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.homotopyEquiv","doc":"If `C` is a preadditive category and `X` is an augmented simplicial object\nin `C` that has an extra degeneracy, then the augmentation on the alternating\nface map complex of `X` is a homotopy equivalence. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L306-L362","name":"CategoryTheory.Arrow.AugmentedCechNerve.extraDegeneracy","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#CategoryTheory.Arrow.AugmentedCechNerve.extraDegeneracy","doc":"The augmented Čech nerve associated to a split epimorphism has an extra degeneracy. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L300-L302","name":"CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_base","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_base","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L289-L296","name":"CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_π_succ","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_π_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L280-L286","name":"CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_π_0","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s_comp_π_0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L266-L276","name":"CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#CategoryTheory.Arrow.AugmentedCechNerve.ExtraDegeneracy.s","doc":"The extra degeneracy map on the Čech nerve of a split epi. It is\ngiven on the `0`-projection by the given section of the split epi,\nand by shifting the indices on the other projections. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L239-L241","name":"SSet.Augmented.StandardSimplex.nonempty_extraDegeneracy_standardSimplex","kind":"instance","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.nonempty_extraDegeneracy_standardSimplex","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L196-L235","name":"SSet.Augmented.StandardSimplex.extraDegeneracy","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.extraDegeneracy","doc":"The obvious extra degeneracy on the standard simplex. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L176-L191","name":"SSet.Augmented.StandardSimplex.shift","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.shift","doc":"The shift of a morphism `f : [n] → Δ` in `SimplexCategory` corresponds to\nthe monotone map which sends `0` to `0` and `i.succ` to `f.to_order_hom i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L163-L169","name":"SSet.Augmented.StandardSimplex.shiftFun_succ","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.shiftFun_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L157-L158","name":"SSet.Augmented.StandardSimplex.shiftFun_0","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.shiftFun_0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L151-L152","name":"SSet.Augmented.StandardSimplex.shiftFun","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SSet.Augmented.StandardSimplex.shiftFun","doc":"When `[HasZero X]`, the shift of a map `f : Fin n → X`\nis a map `Fin (n+1) → X` which sends `0` to `0` and `i.succ` to `f i`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L110-L134","name":"SimplicialObject.Augmented.ExtraDegeneracy.ofIso","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.ofIso","doc":"If `X` and `Y` are isomorphic augmented simplicial objects, then an extra\ndegeneracy for `X` gives also an extra degeneracy for `Y` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L85-L105","name":"SimplicialObject.Augmented.ExtraDegeneracy.map","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.map","doc":"If `ed` is an extra degeneracy for `X : SimplicialObject.Augmented C` and\n`F : C ⥤ D` is a functor, then `ed.map F` is an extra degeneracy for the\naugmented simplical object in `D` obtained by applying `F` to `X`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L80-L80","name":"SimplicialObject.Augmented.ExtraDegeneracy.s'_comp_ε_assoc","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s'_comp_ε_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L80-L80","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ₀_assoc","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ₀_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L79-L79","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ_assoc","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L79-L79","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_σ_assoc","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_σ_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L79-L79","name":"SimplicialObject.Augmented.ExtraDegeneracy.s₀_comp_δ₁_assoc","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s₀_comp_δ₁_assoc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L73-L73","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_σ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_σ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L71-L71","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L70-L70","name":"SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ₀","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s_comp_δ₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L69-L69","name":"SimplicialObject.Augmented.ExtraDegeneracy.s₀_comp_δ₁","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s₀_comp_δ₁","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L68-L68","name":"SimplicialObject.Augmented.ExtraDegeneracy.s'_comp_ε","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s'_comp_ε","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L67-L67","name":"SimplicialObject.Augmented.ExtraDegeneracy.s","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L66-L66","name":"SimplicialObject.Augmented.ExtraDegeneracy.s'","kind":"def","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.s'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L65-L65","name":"SimplicialObject.Augmented.ExtraDegeneracy.mk","kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L65-L74","name":"SimplicialObject.Augmented.ExtraDegeneracy","kind":"structure","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy","doc":"The datum of an extra degeneracy is a technical condition on\naugmented simplicial objects. The morphisms `s'` and `s n` of the\nstructure formally behave like extra degeneracies `σ (-1)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L64-L64","name":"SimplicialObject.Augmented.ExtraDegeneracy.ext","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/AlgebraicTopology/ExtraDegeneracy.lean#L64-L64","name":"SimplicialObject.Augmented.ExtraDegeneracy.ext_iff","kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/ExtraDegeneracy.html#SimplicialObject.Augmented.ExtraDegeneracy.ext_iff","doc":""}]}