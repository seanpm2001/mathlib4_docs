{"name":"Counterexamples.CanonicallyOrderedCommSemiringTwoMul","instances":[{"typeNames":["Counterexample.FromBhavik.K","Rat"],"name":"Counterexample.FromBhavik.instCoeKRat","className":"Coe"},{"typeNames":["Counterexample.FromBhavik.K"],"name":"Counterexample.FromBhavik.inhabitedK","className":"Inhabited"},{"typeNames":["Counterexample.FromBhavik.K"],"name":"Counterexample.FromBhavik.instPreorderK","className":"Preorder"},{"typeNames":["Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat"],"name":"Counterexample.Nxzmod2.preN2","className":"PartialOrder"},{"typeNames":["Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat"],"name":"Counterexample.Nxzmod2.csrN2","className":"CommSemiring"},{"typeNames":["Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat"],"name":"Counterexample.Nxzmod2.csrN21","className":"AddCancelCommMonoid"},{"typeNames":["Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat","Prod.instZeroSum","Nat","ZMod","OfNat.ofNat","instOfNatNat","LinearOrderedCommMonoidWithZero.toZero","Nat.linearOrderedCommMonoidWithZero","CommMonoidWithZero.toZero","CommGroupWithZero.toCommMonoidWithZero","Semifield.toCommGroupWithZero","Field.toSemifield","ZMod.instFieldZMod","Nat.fact_prime_two","Prod.instOneProd","Nat","ZMod","OfNat.ofNat","instOfNatNat","CanonicallyOrderedCommSemiring.toOne","Nat.canonicallyOrderedCommSemiring","Semiring.toOne","DivisionSemiring.toSemiring","Semifield.toDivisionSemiring","Field.toSemifield","ZMod.instFieldZMod","Nat.fact_prime_two","Preorder.toLE","Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat","PartialOrder.toPreorder","Counterexample.Nxzmod2.preN2"],"name":"Counterexample.Nxzmod2.instZeroLEOneClassProdNatZModOfNatInstOfNatNatInstZeroSumToZeroLinearOrderedCommMonoidWithZeroToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldInstFieldZModFact_prime_twoInstOneProdToOneCanonicallyOrderedCommSemiringToOneToSemiringToDivisionSemiringToLEToPreorderPreN2","className":"ZeroLEOneClass"},{"typeNames":["Prod","Nat","ZMod","OfNat.ofNat","instOfNatNat"],"name":"Counterexample.Nxzmod2.socsN2","className":"StrictOrderedCommSemiring"},{"typeNames":["Counterexample.ExL.L"],"name":"Counterexample.ExL.instOrderedCommSemiringL","className":"OrderedCommSemiring"},{"typeNames":["Counterexample.ExL.L"],"name":"Counterexample.ExL.inhabited","className":"Inhabited"},{"typeNames":["Counterexample.ExL.L","Preorder.toLE","Counterexample.ExL.L","PartialOrder.toPreorder","OrderedSemiring.toPartialOrder","OrderedCommSemiring.toOrderedSemiring","Counterexample.ExL.instOrderedCommSemiringL"],"name":"Counterexample.ExL.orderBot","className":"OrderBot"},{"typeNames":["Counterexample.ExL.L"],"name":"Counterexample.ExL.can","className":"CanonicallyOrderedCommSemiring"}],"imports":["Init","Mathlib.Data.ZMod.Basic","Mathlib.RingTheory.Subsemiring.Basic","Mathlib.Algebra.Order.Monoid.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L261-L267","name":"Counterexample.ExL.can","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.can","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L245-L258","name":"Counterexample.ExL.eq_zero_or_eq_zero_of_mul_eq_zero","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.eq_zero_or_eq_zero_of_mul_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L236-L242","name":"Counterexample.ExL.le_self_add","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.le_self_add","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L228-L233","name":"Counterexample.ExL.exists_add_of_le","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.exists_add_of_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L223-L225","name":"Counterexample.ExL.orderBot","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.orderBot","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L213-L220","name":"Counterexample.ExL.bot_le","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.bot_le","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L209-L210","name":"Counterexample.ExL.inhabited","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L206-L207","name":"Counterexample.ExL.instOrderedCommSemiringL","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.instOrderedCommSemiringL","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L198-L203","name":"Counterexample.ExL.lSubsemiring","kind":"def","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.lSubsemiring","doc":"The subsemiring corresponding to the elements of `L`, used to transfer instances. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L181-L194","name":"Counterexample.ExL.mul_L","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.mul_L","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L169-L178","name":"Counterexample.ExL.add_L","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.add_L","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L165-L166","name":"Counterexample.ExL.L","kind":"def","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.ExL.L","doc":"Initially, `L` was defined as the subsemiring closure of `(1,0)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L146-L155","name":"Counterexample.Nxzmod2.socsN2","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.socsN2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L142-L143","name":"Counterexample.Nxzmod2.mul_lt_mul_of_pos_right","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.mul_lt_mul_of_pos_right","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L138-L139","name":"Counterexample.Nxzmod2.mul_lt_mul_of_pos_left","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.mul_lt_mul_of_pos_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L135-L136","name":"Counterexample.Nxzmod2.instZeroLEOneClassProdNatZModOfNatInstOfNatNatInstZeroSumToZeroLinearOrderedCommMonoidWithZeroToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldInstFieldZModFact_prime_twoInstOneProdToOneCanonicallyOrderedCommSemiringToOneToSemiringToDivisionSemiringToLEToPreorderPreN2","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.instZeroLEOneClassProdNatZModOfNatInstOfNatNatInstZeroSumToZeroLinearOrderedCommMonoidWithZeroToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifieldInstFieldZModFact_prime_twoInstOneProdToOneCanonicallyOrderedCommSemiringToOneToSemiringToDivisionSemiringToLEToPreorderPreN2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L129-L132","name":"Counterexample.Nxzmod2.le_of_add_le_add_left","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.le_of_add_le_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L123-L126","name":"Counterexample.Nxzmod2.add_le_add_left","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.add_le_add_left","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L119-L120","name":"Counterexample.Nxzmod2.add_left_cancel","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.add_left_cancel","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L109-L116","name":"Counterexample.Nxzmod2.lt_def","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.lt_def","doc":"A strict inequality forces the first components to be different. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L103-L104","name":"Counterexample.Nxzmod2.csrN21","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.csrN21","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L100-L100","name":"Counterexample.Nxzmod2.csrN2","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.csrN2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L82-L97","name":"Counterexample.Nxzmod2.preN2","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.Nxzmod2.preN2","doc":"The preorder relation on `ℕ × ℤ/2ℤ` where we only compare the first coordinate,\nexcept that we leave incomparable each pair of elements with the same first component.\nFor instance, `∀ α, β ∈ ℤ/2ℤ`, the inequality `(1,α) ≤ (2,β)` holds,\nwhereas, `∀ n ∈ ℤ`, the elements `(n,0)` and `(n,1)` are incomparable. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L71-L71","name":"Counterexample.add_self_zmod_2","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.add_self_zmod_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L65-L68","name":"Counterexample.mem_zmod_2","kind":"theorem","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.mem_zmod_2","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L54-L61","name":"Counterexample.FromBhavik.instPreorderK","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.FromBhavik.instPreorderK","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L50-L51","name":"Counterexample.FromBhavik.inhabitedK","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.FromBhavik.inhabitedK","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L47-L48","name":"Counterexample.FromBhavik.instCoeKRat","kind":"instance","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.FromBhavik.instCoeKRat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Counterexamples/CanonicallyOrderedCommSemiringTwoMul.lean#L42-L44","name":"Counterexample.FromBhavik.K","kind":"def","docLink":"./Counterexamples/CanonicallyOrderedCommSemiringTwoMul.html#Counterexample.FromBhavik.K","doc":"Bhavik Mehta's example.  There are only the initial definitions, but no proofs.  The Type\n`K` is a canonically ordered commutative semiring with the property that `2 * (1/2) ≤ 2 * 1`, even\nthough it is not true that `1/2 ≤ 1`, since `1/2` and `1` are not comparable. "}]}