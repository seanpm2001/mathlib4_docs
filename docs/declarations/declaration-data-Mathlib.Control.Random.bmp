{"name":"Mathlib.Control.Random","instances":[{"typeNames":["Fin","Nat.succ"],"name":"Random.instRandomFinSucc","className":"Random"},{"typeNames":["Bool"],"name":"Random.instRandomBool","className":"Random"},{"typeNames":["Nat","PartialOrder.toPreorder","Nat","StrictOrderedSemiring.toPartialOrder","Nat.strictOrderedSemiring"],"name":"Random.instBoundedRandomNatToPreorderToPartialOrderStrictOrderedSemiring","className":"BoundedRandom"},{"typeNames":["Int","PartialOrder.toPreorder","Int","SemilatticeInf.toPartialOrder","Lattice.toSemilatticeInf","DistribLattice.toLattice","instDistribLattice","Int.instLinearOrderInt"],"name":"Random.instBoundedRandomIntToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeInstLinearOrderInt","className":"BoundedRandom"},{"typeNames":["Fin","PartialOrder.toPreorder","Fin","Fin.instPartialOrderFin"],"name":"Random.instBoundedRandomFinToPreorderInstPartialOrderFin","className":"BoundedRandom"}],"imports":["Init","Mathlib.Init.Algebra.Order","Mathlib.Init.Data.Nat.Lemmas","Mathlib.Init.Data.Int.Order","Mathlib.Data.Fin.Basic","Mathlib.Data.Nat.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L137-L138","name":"IO.runRandWith","kind":"def","docLink":"./Mathlib/Control/Random.html#IO.runRandWith","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L130-L135","name":"IO.runRand","kind":"def","docLink":"./Mathlib/Control/Random.html#IO.runRand","doc":"Computes a `Rand α` using the global `stdGenRef` as RNG.\nNote that:\n- `stdGenRef` is not necessarily properly seeded on program startup\n  as of now and will therefore be deterministic.\n- `stdGenRef` is not thread local, hence two threads accessing it\n  at the same time will get the exact same generator.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L116-L119","name":"Random.instBoundedRandomFinToPreorderInstPartialOrderFin","kind":"instance","docLink":"./Mathlib/Control/Random.html#Random.instBoundedRandomFinToPreorderInstPartialOrderFin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L106-L114","name":"Random.instBoundedRandomIntToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeInstLinearOrderInt","kind":"instance","docLink":"./Mathlib/Control/Random.html#Random.instBoundedRandomIntToPreorderToPartialOrderToSemilatticeInfToLatticeInstDistribLatticeInstLinearOrderInt","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L98-L104","name":"Random.instBoundedRandomNatToPreorderToPartialOrderStrictOrderedSemiring","kind":"instance","docLink":"./Mathlib/Control/Random.html#Random.instBoundedRandomNatToPreorderToPartialOrderStrictOrderedSemiring","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L95-L96","name":"Random.instRandomBool","kind":"instance","docLink":"./Mathlib/Control/Random.html#Random.instRandomBool","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L92-L93","name":"Random.randBool","kind":"def","docLink":"./Mathlib/Control/Random.html#Random.randBool","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L89-L90","name":"Random.instRandomFinSucc","kind":"instance","docLink":"./Mathlib/Control/Random.html#Random.instRandomFinSucc","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L86-L87","name":"Random.randFin","kind":"def","docLink":"./Mathlib/Control/Random.html#Random.randFin","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L82-L84","name":"Random.randBound","kind":"def","docLink":"./Mathlib/Control/Random.html#Random.randBound","doc":"Generate a random value of type `α` between `x` and `y` inclusive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L79-L79","name":"Random.rand","kind":"def","docLink":"./Mathlib/Control/Random.html#Random.rand","doc":"Generate a random value of type `α`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L69-L71","name":"Rand.range","kind":"def","docLink":"./Mathlib/Control/Random.html#Rand.range","doc":"Get the range of Nat that can be generated by the generator `g` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L62-L66","name":"Rand.split","kind":"def","docLink":"./Mathlib/Control/Random.html#Rand.split","doc":"Create a new random number generator distinct from the one stored in the state "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L55-L59","name":"Rand.next","kind":"def","docLink":"./Mathlib/Control/Random.html#Rand.next","doc":"Generate one more `Nat` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L51-L51","name":"BoundedRandom.randomR","kind":"def","docLink":"./Mathlib/Control/Random.html#BoundedRandom.randomR","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L50-L50","name":"BoundedRandom.mk","kind":"ctor","docLink":"./Mathlib/Control/Random.html#BoundedRandom.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L50-L51","name":"BoundedRandom","kind":"class","docLink":"./Mathlib/Control/Random.html#BoundedRandom","doc":"`BoundedRandom α` gives us machinery to generate values of type `α` between certain bounds "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L47-L47","name":"Random.random","kind":"def","docLink":"./Mathlib/Control/Random.html#Random.random","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L46-L46","name":"Random.mk","kind":"ctor","docLink":"./Mathlib/Control/Random.html#Random.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L46-L47","name":"Random","kind":"class","docLink":"./Mathlib/Control/Random.html#Random","doc":"`Random α` gives us machinery to generate values of type `α` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L43-L43","name":"Rand","kind":"def","docLink":"./Mathlib/Control/Random.html#Rand","doc":"A monad to generate random objects using the generator type `Rng` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Control/Random.lean#L40-L40","name":"RandG","kind":"def","docLink":"./Mathlib/Control/Random.html#RandG","doc":"A monad to generate random objects using the generic generator type `g` "}]}