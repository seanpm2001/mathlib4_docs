{"name":"Mathlib.LinearAlgebra.AnnihilatingPolynomial","instances":[],"imports":["Init","Mathlib.FieldTheory.Minpoly.Field","Mathlib.RingTheory.PrincipalIdealDomain"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L174-L181","name":"Polynomial.monic_generator_eq_minpoly","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.monic_generator_eq_minpoly","doc":"If a monic generates the annihilating ideal, it must match our choice\nof the annihilating ideal generator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L160-L169","name":"Polynomial.annIdealGenerator_eq_minpoly","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdealGenerator_eq_minpoly","doc":"The generator of the annihilating ideal is the minimal polynomial. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L152-L154","name":"Polynomial.degree_annIdealGenerator_le_of_mem","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.degree_annIdealGenerator_le_of_mem","doc":"The generator of the annihilating ideal has minimal degree among\nthe non-zero members of the annihilating ideal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L145-L147","name":"Polynomial.mem_iff_annIdealGenerator_dvd","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.mem_iff_annIdealGenerator_dvd","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L139-L140","name":"Polynomial.annIdealGenerator_aeval_eq_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdealGenerator_aeval_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L127-L129","name":"Polynomial.monic_annIdealGenerator","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.monic_annIdealGenerator","doc":"The generator we chose for the annihilating ideal is monic when the ideal is non-zero. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L121-L123","name":"Polynomial.mem_iff_eq_smul_annIdealGenerator","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.mem_iff_eq_smul_annIdealGenerator","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L117-L118","name":"Polynomial.annIdealGenerator_mem","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdealGenerator_mem","doc":"The annihilating ideal generator is a member of the annihilating ideal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L104-L113","name":"Polynomial.span_singleton_annIdealGenerator","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.span_singleton_annIdealGenerator","doc":"`annIdealGenerator ùïú a` is indeed a generator. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L95-L97","name":"Polynomial.annIdealGenerator_eq_zero_iff","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdealGenerator_eq_zero_iff","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L85-L87","name":"Polynomial.annIdealGenerator","kind":"def","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdealGenerator","doc":"`annIdealGenerator ùïú a` is the monic generator of `annIdeal ùïú a`\nif one exists, otherwise `0`.\n\nSince `ùïú[X]` is a principal ideal domain there is a polynomial `g` such that\n `span ùïú {g} = annIdeal a`. This picks some generator.\n We prefer the monic generator of the ideal. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L64-L65","name":"Polynomial.mem_annIdeal_iff_aeval_eq_zero","kind":"theorem","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.mem_annIdeal_iff_aeval_eq_zero","doc":"It is useful to refer to ideal membership sometimes\nand the annihilation condition other times. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/LinearAlgebra/AnnihilatingPolynomial.lean#L56-L57","name":"Polynomial.annIdeal","kind":"def","docLink":"./Mathlib/LinearAlgebra/AnnihilatingPolynomial.html#Polynomial.annIdeal","doc":"`annIdeal R a` is the *annihilating ideal* of all `p : R[X]` such that `p(a) = 0`.\n\nThe informal notation `p(a)` stand for `Polynomial.aeval a p`.\nAgain informally, the annihilating ideal of `a` is\n`{ p ‚àà R[X] | p(a) = 0 }`. This is an ideal in `R[X]`.\nThe formal definition uses the kernel of the aeval map. "}]}