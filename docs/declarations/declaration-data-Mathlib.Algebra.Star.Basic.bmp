{"name":"Mathlib.Algebra.Star.Basic","instances":[{"typeNames":["Subtype","Membership.mem","SetLike.instMembership"],"name":"StarMemClass.star","className":"Star"},{"typeNames":["AddCommMonoid.toAddMonoid","NonUnitalNonAssocSemiring.toAddCommMonoid","NonUnitalSemiring.toNonUnitalNonAssocSemiring"],"name":"StarRing.toStarAddMonoid","className":"StarAddMonoid"},{"typeNames":["RingHom","Semiring.toNonAssocSemiring","CommSemiring.toSemiring"],"name":"RingHom.involutiveStar","className":"InvolutiveStar"},{"typeNames":["InvolutiveStar.toStar","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup","CommMonoid.toMonoid","InvolutiveStar.toStar","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup","CommMonoid.toMonoid","MulAction.toSMul","CommMonoid.toMonoid","Monoid.toMulAction"],"name":"StarSemigroup.to_starModule","className":"StarModule"},{"typeNames":["CommSemiring.toSemiring","CommSemiring.toSemiring","starRingEnd","starRingEnd"],"name":"RingHomInvPair.instRingHomInvPairToSemiringStarRingEnd","className":"RingHomInvPair"},{"typeNames":["Units","Monoid.toSemigroup","Units","DivInvMonoid.toMonoid","Group.toDivInvMonoid","Units.instGroupUnits"],"name":"Units.instStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnits","className":"StarSemigroup"},{"typeNames":["Units","InvolutiveStar.toStar","Units","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup","DivInvMonoid.toMonoid","Group.toDivInvMonoid","Units.instGroupUnits","Units.instStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnits","Units.instSMulUnits"],"name":"Units.instStarModuleUnitsToStarToInvolutiveStarToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstSMulUnits","className":"StarModule"},{"typeNames":["MulOneClass.toMul","Monoid.toMulOneClass","Monoid.toOne","Star.star","InvolutiveStar.toStar","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup"],"name":"Invertible.star","className":"Invertible"},{"typeNames":["MulOpposite"],"name":"MulOpposite.instStarMulOpposite","className":"Star"},{"typeNames":["MulOpposite"],"name":"MulOpposite.instInvolutiveStarMulOpposite","className":"InvolutiveStar"},{"typeNames":["MulOpposite","MulOpposite.semigroup","Monoid.toSemigroup"],"name":"MulOpposite.instStarSemigroupMulOppositeSemigroupToSemigroup","className":"StarSemigroup"},{"typeNames":["MulOpposite","MulOpposite.addMonoid"],"name":"MulOpposite.instStarAddMonoidMulOppositeAddMonoid","className":"StarAddMonoid"},{"typeNames":["MulOpposite","MulOpposite.nonUnitalSemiring","Semiring.toNonUnitalSemiring"],"name":"MulOpposite.instStarRingMulOppositeNonUnitalSemiringToNonUnitalSemiring","className":"StarRing"},{"typeNames":["MulOpposite","MulOpposite.instStarMulOpposite","InvolutiveStar.toStar","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup","CommMonoid.toMonoid","InvolutiveStar.toStar","StarSemigroup.toInvolutiveStar","Monoid.toSemigroup","CommMonoid.toMonoid","Mul.toHasOppositeSMul","MulOneClass.toMul","Monoid.toMulOneClass","CommMonoid.toMonoid"],"name":"StarSemigroup.toOpposite_starModule","className":"StarModule"}],"imports":["Init","Mathlib.Algebra.Ring.Aut","Mathlib.Algebra.Ring.CompTypeclasses","Mathlib.Data.Rat.Cast","Mathlib.GroupTheory.GroupAction.Opposite","Mathlib.Data.SetLike.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L621-L623","name":"StarSemigroup.toOpposite_starModule","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#StarSemigroup.toOpposite_starModule","doc":"A commutative star monoid is a star module over its opposite via\n`Monoid.toOppositeMulAction`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L614-L615","name":"MulOpposite.instStarRingMulOppositeNonUnitalSemiringToNonUnitalSemiring","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.instStarRingMulOppositeNonUnitalSemiringToNonUnitalSemiring","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L611-L612","name":"MulOpposite.instStarAddMonoidMulOppositeAddMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.instStarAddMonoidMulOppositeAddMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L608-L609","name":"MulOpposite.instStarSemigroupMulOppositeSemigroupToSemigroup","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.instStarSemigroupMulOppositeSemigroupToSemigroup","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L605-L606","name":"MulOpposite.instInvolutiveStarMulOpposite","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.instInvolutiveStarMulOpposite","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L601-L602","name":"MulOpposite.op_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.op_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L596-L597","name":"MulOpposite.unop_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.unop_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L593-L593","name":"MulOpposite.instStarMulOpposite","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#MulOpposite.instStarMulOpposite","doc":"The opposite type carries the same star operation. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L581-L587","name":"star_invOf","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_invOf","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L574-L578","name":"Invertible.star","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#Invertible.star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L566-L571","name":"Ring.inverse_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#Ring.inverse_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L562-L563","name":"isUnit_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#isUnit_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L557-L558","name":"IsUnit.star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#IsUnit.star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L552-L553","name":"Units.instStarModuleUnitsToStarToInvolutiveStarToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstSMulUnits","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#Units.instStarModuleUnitsToStarToInvolutiveStarToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnitsInstSMulUnits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L548-L549","name":"Units.coe_star_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#Units.coe_star_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L543-L544","name":"Units.coe_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#Units.coe_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L532-L540","name":"Units.instStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnits","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#Units.instStarSemigroupUnitsToSemigroupToMonoidToDivInvMonoidInstGroupUnits","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L518-L518","name":"StarHomClass.map_star","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarHomClass.map_star","doc":"the maps preserve star "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L515-L515","name":"StarHomClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarHomClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L515-L518","name":"StarHomClass","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarHomClass","doc":"`StarHomClass F R S` states that `F` is a type of `star`-preserving maps from `R` to `S`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L507-L508","name":"RingHomInvPair.instRingHomInvPairToSemiringStarRingEnd","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#RingHomInvPair.instRingHomInvPairToSemiringStarRingEnd","doc":"Instance needed to define star-linear maps over a commutative star ring\n(ex: conjugate-linear maps when R = ℂ).  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L499-L500","name":"StarSemigroup.to_starModule","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#StarSemigroup.to_starModule","doc":"A commutative star monoid is a star module over itself via `Monoid.toMulAction`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L491-L491","name":"StarModule.star_smul","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarModule.star_smul","doc":"`star` commutes with scalar multiplication "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L489-L489","name":"StarModule.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarModule.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L489-L491","name":"StarModule","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarModule","doc":"A star module `A` over a star ring `R` is a module which is a star add monoid,\nand the two star structures are compatible in the sense\n`star (r • a) = star r • star a`.\n\nNote that it is up to the user of this typeclass to enforce\n`[Semiring R] [StarRing R] [AddCommMonoid A] [StarAddMonoid A] [Module R A]`, and that\nthe statement only requires `[Star R] [Star A] [SMul R A]`.\n\nIf used as `[CommRing R] [StarRing R] [Semiring A] [StarRing A] [Algebra R A]`, this represents a\nstar algebra.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L471-L474","name":"starRingOfComm","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingOfComm","doc":"Any commutative semiring admits the trivial `*`-structure.\n\nSee note [reducible non-instances].\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L460-L461","name":"star_bit1","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_bit1","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L455-L456","name":"star_bit0","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_bit0","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L445-L447","name":"star_div'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_div'","doc":"When multiplication is commutative, `star` preserves division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L439-L440","name":"star_zpow₀","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_zpow₀","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L434-L435","name":"star_inv'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_inv'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L429-L429","name":"IsROrC.conj_conj","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#IsROrC.conj_conj","doc":"**Alias** of `starRingEnd_self_apply`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L426-L426","name":"Complex.conj_conj","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#Complex.conj_conj","doc":"**Alias** of `starRingEnd_self_apply`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L420-L422","name":"RingHom.star_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#RingHom.star_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L415-L417","name":"RingHom.star_def","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#RingHom.star_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L405-L412","name":"RingHom.involutiveStar","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#RingHom.involutiveStar","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L400-L402","name":"starRingEnd_self_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingEnd_self_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L388-L389","name":"starRingEnd_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingEnd_apply","doc":"This is not a simp lemma, since we usually want simp to keep `starRingEnd` bundled.\nFor example, for complex conjugation, we don't want simp to turn `conj x`\ninto the bare function `star x` automatically since most lemmas are about `conj x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L382-L383","name":"ComplexConjugate.termConj","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#ComplexConjugate.termConj","doc":"`star` as a ring endomorphism, for commutative `R`. This is used to denote complex\nconjugation, and is available under the notation `conj` in the locale `ComplexConjugate`.\n\nNote that this is the preferred form (over `starRingAut`, available under the same hypotheses)\nbecause the notation `E →ₗ⋆[R] F` for an `R`-conjugate-linear map (short for\n`E →ₛₗ[starRingEnd R] F`) does not pretty-print if there is a coercion involved, as would be the\ncase for `(↑starRingAut : R →* R)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L375-L376","name":"starRingEnd","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingEnd","doc":"`star` as a ring endomorphism, for commutative `R`. This is used to denote complex\nconjugation, and is available under the notation `conj` in the locale `ComplexConjugate`.\n\nNote that this is the preferred form (over `starRingAut`, available under the same hypotheses)\nbecause the notation `E →ₗ⋆[R] F` for an `R`-conjugate-linear map (short for\n`E →ₛₗ[starRingEnd R] F`) does not pretty-print if there is a coercion involved, as would be the\ncase for `(↑starRingAut : R →* R)`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L361-L362","name":"starRingAut","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingAut","doc":"`star` as a ring automorphism, for commutative `R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L360-L360","name":"starRingAut_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingAut_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L353-L354","name":"star_ratCast","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_ratCast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L348-L349","name":"star_intCast","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_intCast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L341-L343","name":"star_ofNat","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_ofNat","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L335-L336","name":"star_natCast","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_natCast","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L328-L330","name":"starRingEquiv","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingEquiv","doc":"`star` as a `RingEquiv` from `R` to `Rᵐᵒᵖ` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L327-L327","name":"starRingEquiv_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starRingEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L322-L323","name":"StarRing.toStarAddMonoid","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#StarRing.toStarAddMonoid","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L319-L319","name":"StarRing.star_add","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarRing.star_add","doc":"`star` commutes with addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L317-L317","name":"StarRing.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarRing.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L317-L319","name":"StarRing","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarRing","doc":"A `*`-ring `R` is a (semi)ring with an involutive `star` operation which is additive\nwhich makes `R` with its multiplicative structure into a `*`-semigroup\n(i.e. `star (r * s) = star s * star r`).  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L310-L311","name":"star_zsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_zsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L305-L306","name":"star_nsmul","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_nsmul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L300-L301","name":"star_sub","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_sub","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L295-L296","name":"star_neg","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_neg","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L290-L291","name":"star_ne_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_ne_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L286-L287","name":"star_eq_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L279-L280","name":"star_zero","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L267-L272","name":"starAddEquiv","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starAddEquiv","doc":"`star` as an `AddEquiv` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L266-L266","name":"starAddEquiv_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starAddEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L258-L258","name":"StarAddMonoid.star_add","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarAddMonoid.star_add","doc":"`star` commutes with addition "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L256-L256","name":"StarAddMonoid.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarAddMonoid.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L256-L258","name":"StarAddMonoid","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarAddMonoid","doc":"A `*`-additive monoid `R` is an additive monoid with an involutive `star` operation which\npreserves addition.  "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L248-L249","name":"star_id_of_comm","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_id_of_comm","doc":"Note that since `starSemigroupOfComm` is reducible, `simp` can already prove this. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L237-L240","name":"starSemigroupOfComm","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starSemigroupOfComm","doc":"Any commutative monoid admits the trivial `*`-structure.\n\nSee note [reducible non-instances].\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L228-L229","name":"star_div","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_div","doc":"When multiplication is commutative, `star` preserves division. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L221-L223","name":"star_zpow","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_zpow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L216-L217","name":"star_inv","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_inv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L210-L212","name":"star_pow","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_pow","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L203-L204","name":"star_one","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_one","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L191-L196","name":"starMulAut","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starMulAut","doc":"`star` as a `MulAut` for commutative `R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L190-L190","name":"starMulAut_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starMulAut_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L180-L185","name":"starMulEquiv","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#starMulEquiv","doc":"`star` as a `MulEquiv` from `R` to `Rᵐᵒᵖ` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L179-L179","name":"starMulEquiv_apply","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#starMulEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L174-L175","name":"star_mul'","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_mul'","doc":"In a commutative ring, make `simp` prefer leaving the order unchanged. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L166-L167","name":"commute_star_comm","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#commute_star_comm","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L163-L163","name":"Commute.star_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#Commute.star_star","doc":"**Alias** of the reverse direction of `commute_star_star`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L159-L160","name":"commute_star_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#commute_star_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L155-L155","name":"SemiconjBy.star_star_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#SemiconjBy.star_star_star","doc":"**Alias** of the reverse direction of `semiconjBy_star_star_star`."},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L150-L152","name":"semiconjBy_star_star_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#semiconjBy_star_star_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L146-L146","name":"star_mul_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_mul_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L143-L143","name":"star_star_mul","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_star_mul","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L132-L132","name":"StarSemigroup.star_mul","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarSemigroup.star_mul","doc":"`star` skew-distributes over multiplication. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L130-L130","name":"StarSemigroup.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarSemigroup.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L130-L132","name":"StarSemigroup","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarSemigroup","doc":"A `*`-semigroup is a semigroup `R` with an involutive operation `star`\nsuch that `star (r * s) = star s * star r`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L120-L120","name":"TrivialStar.star_trivial","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#TrivialStar.star_trivial","doc":"Condition that star is trivial"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L118-L118","name":"TrivialStar.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#TrivialStar.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L118-L120","name":"TrivialStar","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#TrivialStar","doc":"Typeclass for a trivial star operation. This is mostly meant for `ℝ`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L112-L113","name":"star_eq_iff_star_eq","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_eq_iff_star_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L108-L109","name":"eq_star_iff_eq_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#eq_star_iff_eq_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L104-L105","name":"eq_star_of_eq_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#eq_star_of_eq_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L100-L101","name":"Equiv.star","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#Equiv.star","doc":"`star` as an equivalence when it is involutive. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L95-L96","name":"star_inj","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L90-L91","name":"star_injective","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_injective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L86-L87","name":"star_star","kind":"theorem","docLink":"./Mathlib/Algebra/Star/Basic.html#star_star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L80-L80","name":"InvolutiveStar.star_involutive","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar.star_involutive","doc":"Involutive condition. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L78-L78","name":"InvolutiveStar.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L78-L80","name":"InvolutiveStar","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#InvolutiveStar","doc":"Typeclass for a star operation with is involutive.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L71-L72","name":"StarMemClass.star","kind":"instance","docLink":"./Mathlib/Algebra/Star/Basic.html#StarMemClass.star","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L62-L62","name":"StarMemClass.star_mem","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#StarMemClass.star_mem","doc":"Closure under star. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L60-L60","name":"StarMemClass.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#StarMemClass.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L60-L62","name":"StarMemClass","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#StarMemClass","doc":"`StarMemClass S G` states `S` is a type of subsets `s ⊆ G` closed under star. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L45-L45","name":"Star.star","kind":"def","docLink":"./Mathlib/Algebra/Star/Basic.html#Star.star","doc":"A star operation (e.g. complex conjugate).\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L44-L44","name":"Star.mk","kind":"ctor","docLink":"./Mathlib/Algebra/Star/Basic.html#Star.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Algebra/Star/Basic.lean#L44-L45","name":"Star","kind":"class","docLink":"./Mathlib/Algebra/Star/Basic.html#Star","doc":"Notation typeclass (with no default notation!) for an algebraic structure with a star operation.\n"}]}