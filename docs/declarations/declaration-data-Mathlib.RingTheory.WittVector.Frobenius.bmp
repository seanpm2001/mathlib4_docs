{"name":"Mathlib.RingTheory.WittVector.Frobenius","instances":[{"typeNames":["_builtin_typeu","CommRing","WittVector.frobeniusFun"],"name":"WittVector.frobeniusFun_isPoly","className":"WittVector.IsPoly"},{"typeNames":["_builtin_typeu","CommRing","FunLike.coe","RingHom","WittVector","Semiring.toNonAssocSemiring","CommSemiring.toSemiring","CommRing.toCommSemiring","WittVector.instCommRingWittVector","MulHomClass.toFunLike","NonUnitalNonAssocSemiring.toMul","NonAssocSemiring.toNonUnitalNonAssocSemiring","NonUnitalRingHomClass.toMulHomClass","RingHomClass.toNonUnitalRingHomClass","RingHom.instRingHomClass","WittVector.frobenius"],"name":"WittVector.frobenius_isPoly","className":"WittVector.IsPoly"}],"imports":["Init","Mathlib.Data.Nat.Multiplicity","Mathlib.Data.ZMod.Algebra","Mathlib.RingTheory.WittVector.Basic","Mathlib.RingTheory.WittVector.IsPoly","Mathlib.FieldTheory.PerfectClosure"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L338-L340","name":"WittVector.frobenius_bijective","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius_bijective","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L329-L335","name":"WittVector.frobeniusEquiv","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusEquiv","doc":"`WittVector.frobenius` as an equiv. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L328-L328","name":"WittVector.frobeniusEquiv_symm_apply","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusEquiv_symm_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L328-L328","name":"WittVector.frobeniusEquiv_apply","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusEquiv_apply","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L321-L322","name":"WittVector.frobenius_zmodp","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius_zmodp","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L315-L317","name":"WittVector.frobenius_eq_map_frobenius","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius_eq_map_frobenius","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L299-L312","name":"WittVector.coeff_frobenius_charP","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.coeff_frobenius_charP","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L290-L291","name":"WittVector.frobenius_isPoly","kind":"instance","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius_isPoly","doc":"`frobenius` is tautologically a polynomial function. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L281-L283","name":"WittVector.ghostComponent_frobenius","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.ghostComponent_frobenius","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L275-L277","name":"WittVector.coeff_frobenius","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.coeff_frobenius","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L255-L272","name":"WittVector.frobenius","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius","doc":"If `R` has characteristic `p`, then there is a ring endomorphism\nthat raises `r : R` to the power `p`.\nBy applying `WittVector.map` to this endomorphism,\nwe obtain a ring endomorphism `frobenius R p : ùïé R ‚Üí+* ùïé R`.\n\nThe underlying function of this morphism is `WittVector.frobeniusFun`.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L242-L245","name":"WittVector.ghostComponent_frobeniusFun","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.ghostComponent_frobeniusFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L235-L236","name":"WittVector.frobeniusFun_isPoly","kind":"instance","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusFun_isPoly","doc":"`frobeniusFun` is tautologically a polynomial function.\n\nSee also `frobenius_isPoly`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L224-L226","name":"WittVector.coeff_frobeniusFun","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.coeff_frobeniusFun","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L220-L221","name":"WittVector.frobeniusFun","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusFun","doc":"`frobeniusFun` is the function underlying the ring endomorphism\n`frobenius : ùïé R ‚Üí+* frobenius ùïé R`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L209-L213","name":"WittVector.bind‚ÇÅ_frobeniusPoly_wittPolynomial","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.bind‚ÇÅ_frobeniusPoly_wittPolynomial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L202-L205","name":"WittVector.frobeniusPoly_zMod","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusPoly_zMod","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L148-L199","name":"WittVector.map_frobeniusPoly","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.map_frobeniusPoly","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L136-L145","name":"WittVector.map_frobeniusPoly.key‚ÇÇ","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.map_frobeniusPoly.key‚ÇÇ","doc":"A key numerical identity needed for the proof of `WittVector.map_frobeniusPoly`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L128-L132","name":"WittVector.map_frobeniusPoly.key‚ÇÅ","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.map_frobeniusPoly.key‚ÇÅ","doc":"A key divisibility fact for the proof of `WittVector.map_frobeniusPoly`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L114-L115","name":"WittVector.frobeniusPoly","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusPoly","doc":"The polynomials that give the coefficients of `frobenius x`,\nin terms of the coefficients of `x`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L102-L109","name":"WittVector.frobeniusPolyAux_eq","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusPolyAux_eq","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L93-L99","name":"WittVector.frobeniusPolyAux","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusPolyAux","doc":"An auxiliary polynomial over the integers, that satisfies\n`p * (frobeniusPolyAux p n) + X n ^ p = frobeniusPoly p n`.\nThis makes it easy to show that `frobeniusPoly p n` is congruent to `X n ^ p`\nmodulo `p`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L76-L79","name":"WittVector.bind‚ÇÅ_frobeniusPolyRat_wittPolynomial","kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.bind‚ÇÅ_frobeniusPolyRat_wittPolynomial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/RingTheory/WittVector/Frobenius.lean#L72-L73","name":"WittVector.frobeniusPolyRat","kind":"def","docLink":"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusPolyRat","doc":"The rational polynomials that give the coefficients of `frobenius x`,\nin terms of the coefficients of `x`.\nThese polynomials actually have integral coefficients,\nsee `frobeniusPoly` and `map_frobeniusPoly`. "}]}