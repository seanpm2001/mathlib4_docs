{"name":"Mathlib.Data.PFunctor.Univariate.M","instances":[{"typeNames":["PFunctor.Approx.CofixA"],"name":"PFunctor.Approx.instInhabitedCofixA","className":"Inhabited"},{"typeNames":["PFunctor.Approx.Path"],"name":"PFunctor.Approx.Path.inhabited","className":"Inhabited"},{"typeNames":["PFunctor.Approx.CofixA","OfNat.ofNat","Nat","instOfNatNat"],"name":"PFunctor.Approx.CofixA.instSubsingleton","className":"Subsingleton"},{"typeNames":["PFunctor.M"],"name":"PFunctor.M.inhabited","className":"Inhabited"},{"typeNames":["PFunctor.MIntl"],"name":"PFunctor.MIntl.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Data.PFunctor.Univariate.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L799-L806","name":"PFunctor.M.corec'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corec'","doc":"corecursor where it is possible to return a fully formed value at any point\nof the computation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L792-L793","name":"PFunctor.M.corec₁","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corec₁","doc":"corecursor where the state of the computation can be sent downstream\nin the form of a recursive call "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L775-L786","name":"PFunctor.M.corec_unique","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corec_unique","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L763-L771","name":"PFunctor.M.bisim_equiv","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.bisim_equiv","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L746-L758","name":"PFunctor.M.bisim'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.bisim'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L728-L742","name":"PFunctor.M.bisim","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.bisim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L723-L724","name":"PFunctor.M.dest_corec","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.dest_corec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L716-L717","name":"PFunctor.M.corecOn","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corecOn","doc":"corecursor for `M F` with swapped arguments "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L698-L707","name":"PFunctor.M.eq_of_bisim","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.eq_of_bisim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L666-L694","name":"PFunctor.M.nth_of_bisim","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.nth_of_bisim","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L662-L662","name":"PFunctor.M.IsBisimulation.tail","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsBisimulation.tail","doc":"The tails are equal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L660-L660","name":"PFunctor.M.IsBisimulation.head","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsBisimulation.head","doc":"The head of the trees are equal "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L658-L662","name":"PFunctor.M.IsBisimulation","kind":"structure","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsBisimulation","doc":"Bisimulation is the standard proof technique for equality between\ninfinite tree-like structures "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L631-L646","name":"PFunctor.M.ext","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.ext","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L590-L623","name":"PFunctor.M.ext_aux","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.ext_aux","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L578-L586","name":"PFunctor.M.corec_def","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corec_def","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L573-L574","name":"PFunctor.M.iselect_cons","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.iselect_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L567-L568","name":"PFunctor.M.iselect_nil","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.iselect_nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L560-L562","name":"PFunctor.M.isubtree_cons","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.isubtree_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L552-L555","name":"PFunctor.M.ichildren_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.ichildren_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L546-L547","name":"PFunctor.M.children_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.children_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L537-L541","name":"PFunctor.M.head_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.head_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L515-L532","name":"PFunctor.M.iselect_eq_default","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.iselect_eq_default","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L510-L511","name":"PFunctor.M.iselect","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.iselect","doc":"similar to `isubtree` but returns the data at the end of the path instead\nof the whole subtree "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L495-L503","name":"PFunctor.M.isubtree","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.isubtree","doc":"follow a path through a value of `M F` and return the subtree\nfound at the end of the path if it is a valid path for that value and\nreturn a default tree "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L483-L488","name":"PFunctor.M.isPath_cons'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.isPath_cons'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L474-L479","name":"PFunctor.M.isPath_cons","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.isPath_cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L468-L470","name":"PFunctor.M.IsPath.cons","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsPath.cons","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L467-L467","name":"PFunctor.M.IsPath.nil","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsPath.nil","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L466-L470","name":"PFunctor.M.IsPath","kind":"inductive","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsPath","doc":"`IsPath p x` tells us if `p` is a valid path through `x` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L458-L461","name":"PFunctor.M.casesOn_mk'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.casesOn_mk'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L451-L453","name":"PFunctor.M.casesOn_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.casesOn_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L440-L446","name":"PFunctor.M.cases_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.cases_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L409-L435","name":"PFunctor.M.agree_iff_agree'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.agree_iff_agree'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L401-L405","name":"PFunctor.M.agree'_refl","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.agree'_refl","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L394-L396","name":"PFunctor.M.approx_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.approx_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L389-L390","name":"PFunctor.M.casesOn'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.casesOn'","doc":"destructor for M-types, similar to `casesOn` but also\ngives access directly to the root and subtrees on an M-type "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L382-L383","name":"PFunctor.M.casesOn","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.casesOn","doc":"destructor for M-types "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L373-L377","name":"PFunctor.M.cases","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.cases","doc":"destructor for M-types "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L368-L368","name":"PFunctor.M.mk_inj","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.mk_inj","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L341-L364","name":"PFunctor.M.mk_dest","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.mk_dest","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L336-L336","name":"PFunctor.M.dest_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.dest_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L330-L331","name":"PFunctor.M.Agree'.step","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.Agree'.step","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L329-L329","name":"PFunctor.M.Agree'.trivial","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.Agree'.trivial","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L328-L331","name":"PFunctor.M.Agree'","kind":"inductive","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.Agree'","doc":"`Agree' n` relates two trees of type `M F` that\nare the same up to depth `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L319-L322","name":"PFunctor.M.mk","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.mk","doc":"constructor for M-types "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L307-L312","name":"PFunctor.M.Approx.P_mk","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.Approx.P_mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L301-L303","name":"PFunctor.M.Approx.sMk","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.Approx.sMk","doc":"generates the approximations needed for `M.mk` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L293-L294","name":"PFunctor.M.dest","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.dest","doc":"unfold an M-type "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L287-L288","name":"PFunctor.M.truncate_approx","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.truncate_approx","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L282-L283","name":"PFunctor.M.head'_eq_head","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.head'_eq_head","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L277-L278","name":"PFunctor.M.head_eq_head'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.head_eq_head'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L272-L273","name":"PFunctor.M.head_succ","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.head_succ","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L266-L268","name":"PFunctor.M.ichildren","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.ichildren","doc":"select a subtree using an `i : F.Idx` or return an arbitrary tree if\n`i` designates no subtree of `x` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L250-L260","name":"PFunctor.M.children","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.children","doc":"return all the subtrees of the root of a tree `x : M F` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L244-L245","name":"PFunctor.M.head","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.head","doc":"given a tree generated by `F`, `head` gives us the first piece of data\nit contains "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L236-L238","name":"PFunctor.M.corec","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.corec","doc":"Corecursor for the M-type defined by `F`. "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L221-L225","name":"PFunctor.M.ext'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.ext'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L214-L215","name":"PFunctor.MIntl.inhabited","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.MIntl.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L208-L210","name":"PFunctor.M.inhabited","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L202-L204","name":"PFunctor.M.default_consistent","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.default_consistent","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L197-L198","name":"PFunctor.M","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M","doc":"For polynomial functor `F`, `M F` is its final coalgebra "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L192-L192","name":"PFunctor.MIntl.consistent","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.MIntl.consistent","doc":"Each approximation agrees with the next "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L190-L190","name":"PFunctor.MIntl.approx","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.MIntl.approx","doc":"An `n`-th level approximation, for each depth `n` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L188-L192","name":"PFunctor.MIntl","kind":"structure","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.MIntl","doc":"Internal definition for `M`. It is needed to avoid name clashes\nbetween `M.mk` and `M.cases_on` and the declarations generated for\nthe structure "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L156-L178","name":"PFunctor.Approx.head_succ'","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.head_succ'","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L153-L154","name":"PFunctor.Approx.CofixA.instSubsingleton","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.CofixA.instSubsingleton","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L147-L148","name":"PFunctor.Approx.Path.inhabited","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.Path.inhabited","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L143-L144","name":"PFunctor.Approx.Path","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.Path","doc":"`Path F` provides indices to access internal nodes in `Corec F` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L132-L138","name":"PFunctor.Approx.P_corec","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.P_corec","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L127-L129","name":"PFunctor.Approx.sCorec","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.sCorec","doc":"`sCorec f i n` creates an approximation of height `n`\nof the final coalgebra of `f` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L104-L118","name":"PFunctor.Approx.truncate_eq_of_agree","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.truncate_eq_of_agree","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L99-L101","name":"PFunctor.Approx.truncate","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.truncate","doc":"`truncate a` turns `a` into a more limited approximation "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L92-L95","name":"PFunctor.Approx.agree_children","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.agree_children","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L89-L89","name":"PFunctor.Approx.agree_trival","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.agree_trival","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L84-L85","name":"PFunctor.Approx.AllAgree","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.AllAgree","doc":"Given an infinite series of approximations `approx`,\n`AllAgree approx` states that they are all consistent with each other.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L77-L78","name":"PFunctor.Approx.Agree.intro","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.Agree.intro","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L76-L76","name":"PFunctor.Approx.Agree.continu","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.Agree.continu","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L75-L78","name":"PFunctor.Approx.Agree","kind":"inductive","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.Agree","doc":"Relation between two approximations of the cofix of a pfunctor\nthat state they both contain the same data until one of them is truncated "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L69-L70","name":"PFunctor.Approx.approx_eta","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.approx_eta","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L65-L66","name":"PFunctor.Approx.children'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.children'","doc":"for a non-trivial approximation, return all the subtrees of the root "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L60-L61","name":"PFunctor.Approx.head'","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.head'","doc":"The label of the root of the tree for a non-trivial\napproximation of the cofix of a pfunctor.\n"},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L51-L52","name":"PFunctor.Approx.cofixA_eq_zero","kind":"theorem","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.cofixA_eq_zero","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L48-L49","name":"PFunctor.Approx.instInhabitedCofixA","kind":"instance","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.instInhabitedCofixA","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L43-L45","name":"PFunctor.Approx.CofixA.default","kind":"def","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.CofixA.default","doc":"default inhabitant of `CofixA` "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L39-L39","name":"PFunctor.Approx.CofixA.intro","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.CofixA.intro","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L38-L38","name":"PFunctor.Approx.CofixA.continue","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.CofixA.continue","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L37-L39","name":"PFunctor.Approx.CofixA","kind":"inductive","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.Approx.CofixA","doc":"`CofixA F n` is an `n` level approximation of an M-type "},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L1-L1","name":"PFunctor.MIntl.mk","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.MIntl.mk","doc":""},{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/44c828ca5b12983ef1d4eea5c54f95c2ef52cb36/Mathlib/Data/PFunctor/Univariate/M.lean#L1-L1","name":"PFunctor.M.IsBisimulation.mk","kind":"ctor","docLink":"./Mathlib/Data/PFunctor/Univariate/M.html#PFunctor.M.IsBisimulation.mk","doc":""}]}